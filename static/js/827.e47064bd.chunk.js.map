{"version":3,"file":"static/js/827.e47064bd.chunk.js","mappings":"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","sources":["hooks/useQueryNfts/useQueryUserNfts.ts","utils/format.ts","hooks/useQuerySneakyTokens.ts","components/Dashboard/DisconnectedDashboard.tsx","components/PortfolioStats/StatsBreakdown.tsx","components/PortfolioStats/PortfolioStats.tsx","components/PortfolioStats/portfolioHelpers.ts","components/PortfolioStats/LoadingPortfolioStats.tsx","components/RoughLink/RoughLink.tsx","components/DecoratedCollectionImage/DecoratedCollectionImage.tsx","components/HorizontalCollectionRoll/HorizontalCollectionRoll.tsx","components/Dashboard/Nft/Nft.tsx","components/LargeCollectionDisplay/LargeCollectionDIsplay.tsx","routes/dashboard.lazy.tsx","components/Dashboard/Dashboard.tsx"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\nimport request from \"graphql-request\";\nimport { useAccount } from \"graz\";\nimport { COLLECTION_ADDRS, STARGAZE_ENDPOINT } from \"../../config\";\nimport {\n  NftFragment,\n  UserNftsQueryDocument,\n  UserNftsQueryQuery,\n} from \"../../gql/graphql\";\n\nexport type NftInfo = NonNullable<\n  UserNftsQueryQuery[\"tokens\"]\n>[\"tokens\"][number] &\n  NftFragment;\n\nexport const queryNfts = (address: string) =>\n  request(STARGAZE_ENDPOINT, UserNftsQueryDocument, {\n    tokensOwnerAddrOrName: address,\n    filterByCollectionAddrs: COLLECTION_ADDRS,\n  }).then(({ tokens }) =>\n    // @ts-ignore\n    tokens?.tokens.sort((a, b) => (b?.rarityScore || 0) - (a?.rarityScore || 0))\n  );\n\nexport const useQueryNfts = () => {\n  const { data: account } = useAccount();\n\n  return useQuery({\n    queryKey: [\"user-nfts\", account?.bech32Address],\n    queryFn: () =>\n      account?.bech32Address ? queryNfts(account.bech32Address) : undefined,\n    enabled: !!account?.bech32Address,\n  });\n};\n","import { match, P } from \"ts-pattern\";\n\nexport const formatTokenNumber = (n: number): string =>\n  match(n)\n    .with(P.number.gte(100).or(P.number.int()), (n) => n.toString())\n    .with(P.number.gte(10), (n) => n.toString())\n    .with(P.number.gt(0), (n) => n.toString())\n    .otherwise(() => \"0\");\n\nconst usdFormatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\",\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2,\n  trailingZeroDisplay: \"stripIfInteger\",\n});\n\nexport const formatUsd = usdFormatter.format;\n\nconst tokenFormatter = new Intl.NumberFormat(navigator.languages, {\n  maximumSignificantDigits: 6,\n});\n\nexport const formatTokenAmount = (n: number | string, exponents = 0): string =>\n  tokenFormatter.format(Number(formatTokenNumber(Number(n) / 10 ** exponents)));\n","import { useAccount } from \"graz\";\nimport { SNEAKY_TOKEN_CHAINS } from \"../config\";\nimport { bech32 } from \"bech32\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { formatTokenAmount } from \"../utils/format\";\nimport { useQueryOsmosisToken } from \"./useQueryOsmosisToken\";\nimport { Coin, osmosis } from \"osmojs\";\nimport { coin } from \"@cosmjs/stargate\";\nimport { useQueryStardexSneakyPoolShare } from \"./useQueryStardexPoolPair\";\nimport { match } from \"ts-pattern\";\n\nconst changeHrp = (address: string, hrp: string): string | undefined => {\n  try {\n    const { words } = bech32.decode(address);\n    return bech32.encode(hrp, words);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport type SneakyTokenChain = keyof typeof SNEAKY_TOKEN_CHAINS;\nexport type SneakyTokenDenom = (typeof SNEAKY_TOKEN_CHAINS)[SneakyTokenChain];\n\ntype UserSneakyAddresses = { [ChainId in SneakyTokenChain]: string };\n\ntype SneakyPoolShares = {\n  total: Coin;\n  clPoolShare: Coin;\n  balancerPoolShare: {\n    sneakyTokens: Coin;\n    totalGamms: Coin;\n    locked: {\n      sneakyTokens: Coin;\n      gamms: Coin;\n    };\n    liquid: {\n      sneakyTokens: Coin;\n      gamms: Coin;\n    };\n  };\n};\n\nexport type OsmojsQueryClient = Awaited<\n  ReturnType<typeof osmosis.ClientFactory.createRPCQueryClient>\n>;\n\nconst getUserCLPoolShare = (\n  client: OsmojsQueryClient,\n  address: string,\n  poolId: number,\n  denom: string\n) =>\n  client.osmosis.concentratedliquidity.v1beta1\n    .userPositions({ address, poolId: BigInt(poolId) })\n    .then(({ positions }) =>\n      positions\n        .map(\n          ({ asset0, asset1 }): Coin =>\n            asset0.denom === denom ? asset0 : asset1\n        )\n        .reduce(\n          ({ denom, amount: prevAmount }, { amount: nextAmount }) =>\n            coin(Number(prevAmount) + Number(nextAmount), denom),\n          coin(0, denom)\n        )\n    );\n\nconst getUserBalancerPoolShare = (\n  client: OsmojsQueryClient,\n  address: string,\n  poolId: number,\n  targetDenom: string\n) =>\n  Promise.all([\n    client.osmosis.gamm.v1beta1\n      .pool({ poolId: BigInt(poolId) })\n      .then(({ pool }) =>\n        pool && \"totalShares\" in pool && \"poolAssets\" in pool ? pool : undefined\n      )\n      .then((pool) => ({\n        totalShares: {\n          denom: pool?.totalShares.denom,\n          amount: Number(pool?.totalShares.amount),\n        },\n        asset: pool?.poolAssets\n          .filter(({ token: { denom } }) => denom === targetDenom)\n          .map(({ token, weight }) => ({ token, weight: Number(weight) }))?.[0],\n        totalWeight: Number(pool?.totalWeight),\n      })),\n    client.cosmos.bank.v1beta1\n      .balance({ address, denom: `gamm/pool/${poolId}` })\n      .then(({ balance }) => balance),\n    client.osmosis.lockup\n      .accountLockedCoins({ owner: address })\n      .then(({ coins }) =>\n        coins\n          .filter(({ denom }) => denom === `gamm/pool/${poolId}`)\n          .reduce(\n            ({ denom, amount: prevAmount }, { amount: nextAmount }) =>\n              coin((BigInt(prevAmount) + BigInt(nextAmount)).toString(), denom),\n            coin(0, `gamm/pool/${poolId}`)\n          )\n      ),\n  ]).then(([pool, liquidGamms, lockedGamms]) => {\n    // const sneakyTokenWeight = (pool.asset?.weight || 0) / pool.totalWeight;\n    const lockedSneakyTokens = parseInt(\n      (\n        Number(pool.asset?.token.amount) *\n        (Number(lockedGamms.amount) / pool.totalShares.amount)\n      ).toString(),\n      10\n    );\n    const liquidSneakyTokens = parseInt(\n      (\n        Number(pool.asset?.token.amount) *\n        (Number(liquidGamms?.amount) / pool.totalShares.amount)\n      ).toString(),\n      10\n    );\n\n    return {\n      sneakyTokens: coin(lockedSneakyTokens + liquidSneakyTokens, targetDenom),\n      totalGamms: coin(\n        (\n          BigInt(lockedGamms.amount) + BigInt(liquidGamms?.amount || 0)\n        ).toString(),\n        `gamm/pool/${poolId}`\n      ),\n      locked: {\n        sneakyTokens: coin(lockedSneakyTokens, targetDenom),\n        gamms: lockedGamms,\n      },\n      liquid: {\n        sneakyTokens: coin(liquidSneakyTokens, targetDenom),\n        gamms: liquidGamms || coin(0, `gamm/pool/${poolId}`),\n      },\n    };\n  });\n\nconst getSneakyPoolShares = (\n  client: OsmojsQueryClient,\n  address: string\n): Promise<SneakyPoolShares> =>\n  Promise.all([\n    getUserCLPoolShare(client, address, 1910, SNEAKY_TOKEN_CHAINS[\"osmosis-1\"]),\n    getUserBalancerPoolShare(\n      client,\n      address,\n      1403,\n      SNEAKY_TOKEN_CHAINS[\"osmosis-1\"]\n    ),\n  ]).then(([clPoolShare, balancerPoolShare]) => ({\n    total: coin(\n      Number(clPoolShare.amount) +\n        Number(balancerPoolShare.sneakyTokens.amount),\n      SNEAKY_TOKEN_CHAINS[\"osmosis-1\"]\n    ),\n    clPoolShare,\n    balancerPoolShare,\n  }));\n\nconst useQuerySneakyPools = (address: string | undefined) =>\n  useQuery({\n    queryKey: [\"sneakyPools\", address],\n    queryFn: () =>\n      address\n        ? osmosis.ClientFactory.createRPCQueryClient({\n            rpcEndpoint: \"https://rpc.cosmos.directory/osmosis\",\n          }).then((client) => getSneakyPoolShares(client, address))\n        : undefined,\n    enabled: !!address,\n  });\n\nconst useQuerySkipBalances = (addresses: UserSneakyAddresses | undefined) =>\n  useQuery({\n    queryKey: [\"skipBalances\", addresses],\n    queryFn: () =>\n      fetch(\"https://api.skip.build/v2/info/balances\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          chains: addresses\n            ? Object.fromEntries(\n                Object.entries(addresses).map(([chainId, userAddress]) => [\n                  chainId,\n                  {\n                    denoms:\n                      chainId in SNEAKY_TOKEN_CHAINS\n                        ? [SNEAKY_TOKEN_CHAINS[chainId as SneakyTokenChain]]\n                        : [],\n                    address: userAddress,\n                  },\n                ])\n              )\n            : {},\n        }),\n      })\n        .then((res) => res.json())\n        .then((resp: BalancesResp) => resp.chains),\n    enabled: !!addresses,\n  });\n\nconst getBalancesWithTotals = (\n  balances: BalancesResp[\"chains\"],\n  usdValue: number | undefined,\n  poolBalances: SneakyPoolShares | undefined,\n  stargazePoolBalance = coin(0, SNEAKY_TOKEN_CHAINS[\"stargaze-1\"])\n): BalancesWithTotals => {\n  const condensedBalances = Object.entries(balances).map(\n    ([chainId, chainBalances]): [\n      chainId: SneakyTokenChain,\n      amounts: {\n        amount: bigint;\n        formattedAmount: number;\n        usd?: number;\n        walletBalance: {\n          amount: bigint;\n          formattedAmount: number;\n          usd?: number;\n        };\n      }\n    ] => {\n      const sneakyChainId = chainId as SneakyTokenChain;\n      const { amount, formatted_amount } =\n        chainBalances.denoms[SNEAKY_TOKEN_CHAINS[sneakyChainId]]!;\n      const { formattedAmount, preparedAmount } = match(sneakyChainId)\n        .with(\"osmosis-1\", () => ({\n          formattedAmount:\n            parseFloat(formatted_amount) +\n            Number(poolBalances?.total?.amount || 0) / 10 ** 6,\n          preparedAmount:\n            BigInt(amount) + BigInt(poolBalances?.total?.amount || 0),\n        }))\n        .with(\"stargaze-1\", () => ({\n          formattedAmount:\n            parseFloat(formatted_amount) +\n            Number(stargazePoolBalance.amount) / 10 ** 6,\n          preparedAmount: BigInt(amount) + BigInt(stargazePoolBalance.amount),\n        }))\n        .exhaustive();\n\n      return [\n        sneakyChainId,\n        {\n          amount: preparedAmount,\n          formattedAmount,\n          usd: usdValue !== undefined ? usdValue * formattedAmount : undefined,\n          walletBalance: {\n            amount: BigInt(amount),\n            formattedAmount: parseFloat(formatted_amount),\n            usd:\n              usdValue !== undefined\n                ? usdValue * parseFloat(formatted_amount)\n                : 0,\n          },\n        },\n      ];\n    }\n  );\n\n  const totals = condensedBalances.reduce<{\n    totalAmount: bigint;\n    totalFormattedAmount: number;\n    usd?: number;\n  }>(\n    (\n      { totalAmount, totalFormattedAmount, usd: totalUsd },\n      [\n        _,\n        {\n          amount: chainAmount,\n          formattedAmount: chainFormattedAmount,\n          usd: chainUsd,\n        },\n      ]\n    ) => ({\n      totalAmount: totalAmount + chainAmount,\n      totalFormattedAmount: totalFormattedAmount + chainFormattedAmount,\n      usd: chainUsd !== undefined ? (totalUsd || 0) + chainUsd : undefined,\n    }),\n    { totalAmount: 0n, totalFormattedAmount: 0, usd: undefined }\n  );\n\n  return {\n    usd: totals.usd,\n    totalAmount: totals.totalAmount,\n    totalFormattedAmount: formatTokenAmount(totals.totalFormattedAmount),\n    // TODO: fix this stubborn type to avoid the cast. it's logically right but as is not ideal\n    chainBalances: condensedBalances.reduce(\n      (allChainBals, [chainId, chainBalance]) => ({\n        ...allChainBals,\n        [chainId]: chainBalance,\n      }),\n      {}\n    ) as {\n      [ChainId in SneakyTokenChain]: {\n        amount: bigint;\n        formattedAmount: number;\n        usd?: number;\n        walletBalance: {\n          amount: bigint;\n          formattedAmount: number;\n          usd?: number;\n        };\n      };\n    },\n    osmoPoolBalances: poolBalances,\n    stargazePoolBalance,\n  };\n};\n\nexport const useQuerySneakyTokens = () => {\n  const { data: sneakyTokenData, isLoading: isSneakyTokenDataLoading } =\n    useQueryOsmosisToken(\"SNEAKY\");\n  const { data: account } = useAccount();\n\n  const stargazeAddress = account?.bech32Address;\n  const osmosisAddress = stargazeAddress\n    ? changeHrp(stargazeAddress, \"osmo\")\n    : undefined;\n\n  const sneakyBalanceQuery = useQuerySkipBalances(\n    stargazeAddress && osmosisAddress\n      ? { \"osmosis-1\": osmosisAddress, \"stargaze-1\": stargazeAddress }\n      : undefined\n  );\n  const { isLoading: areSneakyBalancesLoading } = sneakyBalanceQuery;\n  const { data: osmosisPoolTokens, isLoading: areOsmosisPoolsLoading } =\n    useQuerySneakyPools(osmosisAddress);\n\n  const { data: stargazePoolTokens, isLoading: areStargazePoolsLoading } =\n    useQueryStardexSneakyPoolShare();\n\n  return {\n    ...sneakyBalanceQuery,\n    data: sneakyBalanceQuery.data\n      ? getBalancesWithTotals(\n          sneakyBalanceQuery.data,\n          sneakyTokenData?.price,\n          osmosisPoolTokens,\n          stargazePoolTokens\n        )\n      : undefined,\n    areAnyLoading:\n      isSneakyTokenDataLoading ||\n      areSneakyBalancesLoading ||\n      areSneakyBalancesLoading ||\n      areOsmosisPoolsLoading ||\n      areStargazePoolsLoading,\n  };\n};\n\ntype BalancesResp = {\n  chains: Record<\n    SneakyTokenChain,\n    {\n      denoms: Partial<\n        Record<\n          SneakyTokenDenom,\n          {\n            amount: string;\n            decimals: number;\n            formatted_amount: string;\n          }\n        >\n      >;\n    }\n  >;\n};\n\nexport type BalancesWithTotals = {\n  totalAmount: bigint;\n  totalFormattedAmount: string;\n  usd?: number;\n  chainBalances: {\n    [ChainId in SneakyTokenChain]: {\n      amount: bigint;\n      formattedAmount: number;\n      usd?: number;\n      walletBalance: {\n        amount: bigint;\n        formattedAmount: number;\n        usd?: number;\n      };\n    };\n  };\n  osmoPoolBalances: SneakyPoolShares | undefined;\n  stargazePoolBalance: Coin;\n};\n","import { useAccount } from \"graz\";\nimport { useWalletConnectModal } from \"../WalletConnectionModal/ConnectionModalProvider\";\n\nexport const DisconnectedDashboard = () => {\n  const { openModal } = useWalletConnectModal();\n  const { isConnected } = useAccount();\n\n  return (\n    <div\n      className=\"d-flex flex-column justify-content-center align-items-center text-center pt-4 vh-100\">\n      <h2 className=\"text-uppercase display-3 text-nowrap fw-bold mb-0\">\n        <span data-aos=\"fade\" data-aos-delay=\"350\">Sneaky</span> <br />\n        <span data-aos=\"fade\" data-aos-delay=\"400\">Dashboard</span>\n        <br />\n      </h2>\n      <p data-aos=\"fade\" data-aos-delay=\"450\">\n        <strong>All</strong> your Sneaky assets, <br />\n        all in one place.\n      </p>\n      <button\n        data-aos=\"fade\" data-aos-delay=\"500\"\n        type=\"button\"\n        className={`btn ${\n          isConnected ? \"btn-outline-dark\" : \"btn-outline-dark\"\n        }`}\n        onClick={openModal}\n      >\n        {isConnected ? \"Connected\" : \"Connect\"}\n      </button>\n    </div>\n  );\n};\n","import { BalancesWithTotals } from \"../../hooks/useQuerySneakyTokens\";\nimport { formatTokenAmount } from \"../../utils/format\";\n\ntype Props = {\n  stargazePoolSneakyFormatted: string;\n  sneakyTokenUsdFormatted: string;\n  pool1403SneakyFormatted: string;\n  pool1910SneakyFormatted: string;\n  totalNftsCount: number;\n  allNftsUsd: string;\n  osmosisBalance: BalancesWithTotals[\"chainBalances\"][\"osmosis-1\"];\n  stargazeBalance: BalancesWithTotals[\"chainBalances\"][\"stargaze-1\"];\n  totalFormattedAmount: string;\n  tokenFloors: Record<\n    string,\n    {\n      amount: number;\n      amountUsd: number;\n      denom: string;\n      symbol: string;\n    }\n  >;\n};\n\nexport const StatsBreakdown = ({\n  stargazePoolSneakyFormatted,\n  sneakyTokenUsdFormatted,\n  pool1403SneakyFormatted,\n  pool1910SneakyFormatted,\n  totalNftsCount,\n  osmosisBalance,\n  stargazeBalance,\n  totalFormattedAmount,\n  tokenFloors,\n  allNftsUsd,\n}: Props) => {\n  return (\n      <>\n          <h4 className=\"fw-bold\">Sneaky NFTs</h4>\n          <p>Owned: {totalNftsCount}</p>\n          <p>\n            Token Value:{\" \"}\n            {(tokenFloors &&\n              Object.values(tokenFloors)\n                .map(({ amount }) => ` ${formatTokenAmount(amount, 6)}`)\n                .join(\", \")) ||\n              0}{\" \"}\n            STARS\n          </p>\n          <p>USD Value: {allNftsUsd}</p>\n          <h4 className=\"fw-bold\">$SNEAKY Token</h4>\n          <p>\n            Stargaze: {formatTokenAmount(stargazeBalance.formattedAmount)}{\" \"}\n            SNEAKY\n          </p>\n          <p>\n            Osmosis: {formatTokenAmount(osmosisBalance.formattedAmount)} SNEAKY\n          </p>\n          <p>USD Value: {sneakyTokenUsdFormatted}</p>\n      </>\n  );\n};\n","import { BalancesWithTotals } from \"../../hooks/useQuerySneakyTokens\";\nimport { formatUsd } from \"../../utils/format\";\nimport { queryNfts } from \"../../hooks/useQueryNfts/useQueryUserNfts\";\nimport { nftsValueSummary, sneakyTokensSummary } from \"./portfolioHelpers\";\nimport { StatsBreakdown } from \"./StatsBreakdown\";\n/* import { useState } from \"react\"; */\n/* import { useAccount } from \"graz\"; */\nimport { useDisconnect } from \"graz\";\n/* import { useWalletConnectModal } from \"../WalletConnectionModal/ConnectionModalProvider\"; */\n\ntype Props = {\n  tokens: NonNullable<Awaited<ReturnType<typeof queryNfts>>> | undefined;\n  sneakyBalance: BalancesWithTotals;\n};\n\nexport const PortfolioStats = ({ tokens, sneakyBalance }: Props) => {\n\n  const tokenSummary = sneakyTokensSummary(sneakyBalance);\n\n  const totalNftsCount = tokens?.length || 0;\n  const { usdValueFormatted: allNftsUsd, ...allNftsCombinedFloor } =\n    nftsValueSummary(tokens || []);\n\n  const totalPortfolioUsdValue = formatUsd(\n    (allNftsCombinedFloor?.usdValue || 0) + tokenSummary.sneakyTokenUsd\n  );\n\n  const [totalPortfolioDollars, totalPortfolioDecimals = \"00\"] =\n    totalPortfolioUsdValue.split(\".\");\n\n  // Prepare chain-specific balances\n  const osmosisBalance = sneakyBalance?.chainBalances[\"osmosis-1\"];\n  const stargazeBalance = sneakyBalance?.chainBalances[\"stargaze-1\"];\n\n/*   const { openModal } = useWalletConnectModal();\n  const { isConnected } = useAccount(); */\n  const { disconnect } = useDisconnect();\n\n  return (\n    <>\n      <div\n        className=\"d-flex flex-column justify-content-center align-items-center text-center \"\n        style={{ height: \"100vh\" }}\n      >\n        <h3\n          data-aos=\"fade\"\n          data-aos-delay=\"350\"\n          className=\"text-uppercase fw-bold h4 mb-2\"\n        >\n          Portfolio\n        </h3>\n        <p\n          data-aos=\"fade\"\n          data-aos-delay=\"400\"\n          className=\"dokdo display-1 lh-1 mb-2\"\n        >\n          <span className=\"display-6\">\n            <small>&asymp;</small>\n          </span>\n          <span>{totalPortfolioDollars}</span>\n          <span className=\"display-6 link-offset-2\">\n            &nbsp;.&nbsp;<u>{totalPortfolioDecimals}</u>{\" \"}\n          </span>\n          <span className=\"fs-2 bg-dark rounded-3 text-light px-2\">USD</span>\n        </p>\n        <p\n          data-aos=\"fade\"\n          data-aos-delay=\"450\"\n          className=\"dokdo text-uppercase fw-bold fs-4\"\n        >\n          Total Value\n        </p>\n        <p data-aos=\"fade\" data-aos-delay=\"500\">\n          <a\n            className=\"link-dark link-offset-2 link-underline-opacity-0 link-underline-opacity-50-hover\"\n            href=\"/\"\n            onClick={(e) => {\n              e.preventDefault(); // Prevent default link behavior\n              disconnect(); // Call the disconnect function\n            }}\n          >\n            Disconnect\n          </a>\n          <span>&nbsp;|&nbsp;</span>\n          <a\n            className=\"link-dark link-offset-2 link-underline-opacity-0 link-underline-opacity-50-hover\"\n            data-bs-toggle=\"collapse\"\n            href=\"#collapseExample\"\n            role=\"button\"\n            aria-expanded=\"false\"\n            aria-controls=\"collapseExample\"\n          >\n            <span>Breakdown</span>\n          </a>\n        </p>\n        <div className=\"collapse\" id=\"collapseExample\">\n          <StatsBreakdown\n            {...{\n              ...tokenSummary,\n              totalNftsCount,\n              allNftsUsd,\n              tokenFloors: allNftsCombinedFloor.tokenFloors,\n              osmosisBalance,\n              stargazeBalance,\n              totalFormattedAmount: sneakyBalance.totalFormattedAmount,\n            }}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n","import { queryNfts } from \"../../hooks/useQueryNfts/useQueryUserNfts\";\nimport { BalancesWithTotals } from \"../../hooks/useQuerySneakyTokens\";\nimport { formatTokenAmount, formatUsd } from \"../../utils/format\";\n\nexport const sneakyTokensSummary = (balance: BalancesWithTotals) => {\n  const sneakyTokenUsdFormatted = balance?.usd ? formatUsd(balance.usd) : \"-\";\n\n  const sneakyTokenUsd = balance.usd || 0;\n\n  const pool1910SneakyFormatted = formatTokenAmount(\n    balance.osmoPoolBalances?.clPoolShare.amount || 0,\n    6\n  );\n  const pool1403SneakyFormatted = formatTokenAmount(\n    balance.osmoPoolBalances?.balancerPoolShare.sneakyTokens.amount || 0,\n    6\n  );\n\n  const stargazePoolSneakyFormatted = formatTokenAmount(\n    balance.stargazePoolBalance?.amount,\n    6\n  );\n\n  return {\n    stargazePoolSneakyFormatted,\n    sneakyTokenUsdFormatted,\n    sneakyTokenUsd,\n    pool1403SneakyFormatted,\n    pool1910SneakyFormatted,\n  };\n};\n\nexport const nftsValueSummary = (\n  tokens: NonNullable<Awaited<ReturnType<typeof queryNfts>>>\n) => {\n  const combinedFloor = tokens\n    ?.filter(\n      ({ collection }) => collection.floor?.amount && collection.floor.denom\n    )\n    ?.map(({ collection }) => ({\n      amount: Number(collection.floor?.amount) || 0,\n      amountUsd: collection.floor?.amountUsd || 0,\n      denom: collection.floor?.denom || \"\",\n      symbol: collection.floor?.symbol || \"\",\n    }))\n    ?.reduce<{\n      tokenFloors: Record<\n        string,\n        { amount: number; amountUsd: number; denom: string; symbol: string }\n      >;\n      usdValue: number;\n    }>(\n      (\n        { tokenFloors: prevTokenFloors, usdValue: prevUsdValue },\n        { amount, amountUsd, denom, symbol }\n      ) => ({\n        tokenFloors: {\n          ...prevTokenFloors,\n          [denom]: {\n            amount: (prevTokenFloors?.[denom]?.amount || 0) + amount,\n            symbol,\n            denom,\n            amountUsd: (prevTokenFloors?.[denom]?.amountUsd || 0) + amountUsd,\n          },\n        },\n        usdValue: prevUsdValue + amountUsd,\n      }),\n      { tokenFloors: {}, usdValue: 0 }\n    );\n\n  return {\n    ...combinedFloor,\n    usdValueFormatted: formatUsd(combinedFloor.usdValue),\n  };\n};\n","export const LoadingPorfolioStats = () => (\n  <div>\n    <div className=\"d-flex justify-content-end align-items-center py-1 px-3\">\n      <span>&nbsp;</span>\n    </div>\n    <div className=\"d-flex flex-column justify-content-center align-items-center text-center vh-100\">\n      <div className=\"spinner-border\" role=\"status\">\n        <span className=\"visually-hidden\">Loading...</span>\n      </div>\n      <h3 className=\"text-uppercase fw-bold h4 mt-4\">\n        <span>Loading Portfolio...</span>\n      </h3>\n    </div>\n  </div>\n);\n","import React, { useRef, useEffect, useState } from \"react\";\nimport { annotate } from \"rough-notation\";\nimport { RoughAnnotation } from \"rough-notation/lib/model\";\n\nexport const RoughLink = ({\n  href,\n  children,\n}: {\n  href: string;\n  children: JSX.Element;\n}) => {\n  const linkRef = useRef(null);\n  const [annotation, setAnnotation] = useState<RoughAnnotation>();\n\n  useEffect(() => {\n    if (linkRef.current && !annotation) {\n      const roughNotation = annotate(linkRef.current, {\n        type: \"circle\",\n        color: \"#3048c1\",\n        animationDuration: 400,\n        padding: 8,\n        iterations: 1.5,\n        strokeWidth: 3,\n      });\n      setAnnotation(roughNotation);\n    }\n\n    return () => {\n      if (annotation) {\n        annotation.remove();\n      }\n    };\n  }, [annotation]);\n\n  const handleMouseEnter = () => {\n    if (annotation) {\n      annotation.show();\n    }\n  };\n\n  const handleMouseLeave = () => {\n    if (annotation) {\n      annotation.hide();\n    }\n  };\n\n  return (\n    <a\n      ref={linkRef}\n      className=\"inline-block link-offset-2 link-dark link-underline-opacity-0\"\n      target=\"_blank\"\n      referrerPolicy=\"no-referrer\"\n      rel=\"noreferrer\"\n      href={href}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n      onTouchStart={handleMouseEnter}\n      onTouchEnd={handleMouseLeave}\n    >\n      {children}\n    </a>\n  );\n};\n","import { match, P } from \"ts-pattern\";\nimport { CollectionInfo } from \"../../hooks/useQueryCollections/useQueryCollections\";\nimport { formatTokenAmount } from \"../../utils/format\";\nimport { CollectionMintStatus } from \"../../gql/graphql\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip, { TooltipProps } from \"react-bootstrap/Tooltip\";\n\nimport { useMemo } from \"react\";\nimport { isOECollectionAddress, OE_ASSET_URLS } from \"../../config\";\nimport { RoughLink } from \"../RoughLink/RoughLink\";\n\ntype Props = {\n  collection: CollectionInfo;\n  ownedCount: number | false;\n  makeCollectionImageSquare?: boolean;\n  showCollectionTitle?: boolean;\n  descriptionTooltip?: boolean;\n};\n\nexport const DecoratedCollectionImage = ({\n  collection,\n  ownedCount,\n  makeCollectionImageSquare = false,\n\n  descriptionTooltip = true,\n  showCollectionTitle = true,\n}: Props) => {\n  const collectionFloor =\n    collection.floor &&\n    collection.floor.symbol &&\n    `${formatTokenAmount(collection.floor.amount, 6)} ${\n      collection.floor.symbol\n    }`;\n  // const collectionFloorUsd =\n  //   collection.floor?.amountUsd && formatUsd(collection.floor.amountUsd);\n\n  const MintInfo = match([\n    collection.mintStatus,\n\n    collection.minter?.publicSale?.endTime,\n  ])\n    .with([CollectionMintStatus.FullyMinted, P._], () => undefined)\n    .with([P.nullish, P._], () => undefined)\n    .with(\n      [\n        CollectionMintStatus.Minting,\n        P.string.and(\n          P.when(\n            (endTime) =>\n              new Date(\n                Number((BigInt(endTime as string) / 1000000n).toString())\n              ) < new Date()\n          )\n        ),\n      ],\n      () => undefined\n    )\n    .with([CollectionMintStatus.Minting, P._], () => (\n      // <a\n      //   className=\"link-offset-2 link-underline-opacity-0 link-dark\"\n      //   target=\"_blank\"\n      //   referrerPolicy=\"no-referrer\"\n      //   rel=\"noreferrer\"\n      //   href={`https://www.stargaze.zone/l/${collection.contractAddress}`}\n      // >\n      <RoughLink\n        href={`https://www.stargaze.zone/l/${collection.contractAddress}`}\n      >\n        <span>Mint Now!</span>\n      </RoughLink>\n\n      // </a>\n    ))\n    .with([CollectionMintStatus.Upcoming, P._], () => \"Coming Soon\")\n    .exhaustive();\n\n  const renderTooltip = (props: TooltipProps) => (\n    <Tooltip id=\"button-tooltip\" {...props}>\n      <p>\n        <strong>{collection.name}</strong> - {collection.description}\n      </p>\n      {isOECollectionAddress(collection.contractAddress) && (\n        <img\n          alt={`${collection.name} nft art asset`}\n          width=\"100px\"\n          className=\"mb-1\"\n          src={OE_ASSET_URLS[collection.contractAddress]}\n        />\n      )}\n    </Tooltip>\n  );\n\n  // Generate random number for Collection title rotation class.\n  const randomNumber = useMemo(() => Math.floor(Math.random() * 4) + 1, []);\n\n  return (\n    <div style={{ width: \"auto\" }}>\n      <OverlayTrigger\n        placement=\"top\"\n        delay={{ show: 250, hide: 400 }}\n        overlay={renderTooltip}\n        {...(descriptionTooltip ? {} : { show: false })}\n      >\n        <div\n          className={`d-flex flex-column align-items-center mt-md-${randomNumber}`}\n        >\n          {showCollectionTitle && (\n            <h3\n              className={`h5 bg-white bg-opacity-75 fw-bold text-dark border border-dark custom-border custom-border-width text-nowrap test p-1 px-2 z-3 title-rotate-${randomNumber}`}\n            >\n              {collection.name}\n            </h3>\n          )}\n          <div className={`mb-4 rotate-${randomNumber}`}>\n            <div className=\"position-relative d-inline-block\">\n              {\n                <img\n                  style={{\n                    ...(makeCollectionImageSquare\n                      ? { objectFit: \"cover\", height: \"260px\" }\n                      : {}),\n                    width: \"260px\",\n                  }}\n                  className=\"img-fluid custom-border custom-border-width\"\n                  alt={\"\"}\n                  src={\n                    collection.media?.visualAssets?.sm?.webpUrl ||\n                    collection.media?.fallbackUrl ||\n                    \"\"\n                  }\n                />\n              }\n              {MintInfo && (\n                <p className=\"position-absolute top-0 end-0 bg-white bg-opacity-75 small fw-bold text-dark border-dark custom-border custom-border-width-2 px-2 py-1 shadow-sm mt-3 me-3\">\n                  {MintInfo}\n                </p>\n              )}\n              {ownedCount !== false && (\n                <p className=\"position-absolute bottom-0 start-0 bg-white bg-opacity-75 small fw-bold text-dark border-dark custom-border custom-border-width-2 px-2 py-1 shadow-sm mb-3 ms-3\">\n                  <span>Owned: {ownedCount}</span>\n                </p>\n              )}\n              {collectionFloor && (\n                <p className=\"position-absolute bottom-0 end-0 bg-white bg-opacity-75 small fw-bold text-dark border-dark custom-border custom-border-width-2 px-2 py-1 shadow-sm mb-3 me-3\">\n                  {collectionFloor}\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </OverlayTrigger>\n    </div>\n  );\n};\n","import { CollectionInfo } from \"../../hooks/useQueryCollections/useQueryCollections\";\nimport { NftInfo } from \"../../hooks/useQueryNfts/useQueryUserNfts\";\nimport { DecoratedCollectionImage } from \"../DecoratedCollectionImage/DecoratedCollectionImage\";\n\ntype Props = {\n  title: string;\n  collections: { collectionInfo: CollectionInfo; nfts: NftInfo[] }[];\n  makeCollectionImagesSquare?: boolean;\n  showCollectionTitles?: boolean;\n};\n\nexport const HorizontalCollectionRoll = ({\n  title,\n  collections,\n\n  makeCollectionImagesSquare = false,\n  showCollectionTitles = true,\n}: Props) => {\n  return (\n    <div>\n      <h2 className=\"h3\">{title}</h2>\n\n      <div className=\"row flex-nowrap overflow-auto py-1\">\n        {collections.map(({ collectionInfo, nfts }) => (\n          <DecoratedCollectionImage\n            key={collectionInfo.contractAddress}\n            collection={collectionInfo}\n            ownedCount={nfts.length}\n            makeCollectionImageSquare={makeCollectionImagesSquare}\n            showCollectionTitle={showCollectionTitles}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import { NftFragment } from \"../../../gql/graphql\";\n\ntype Props = {\n  token: NftFragment & { count: number };\n};\n\nexport const Nft = ({ token: { name, metadata } }: Props) => {\n  return (\n    <div className=\"col-10 col-xxl-9 col-xl-9 col-lg-10 col-md-11 col-sm-12\">\n      <h4>{name}</h4>\n      <img\n        className=\"img-fluid custom-border custom-border-width mb-2\"\n        alt={name || \"\"}\n        src={\"https://ipfs.io/ipfs/\" + metadata?.image?.replace(\"ipfs://\", \"\")}\n        width={296}\n      />\n    </div>\n  );\n};\n","import { CollectionInfo } from \"../../hooks/useQueryCollections/useQueryCollections\";\nimport { NftInfo } from \"../../hooks/useQueryNfts/useQueryUserNfts\";\nimport { DecoratedCollectionImage } from \"../DecoratedCollectionImage/DecoratedCollectionImage\";\nimport { Nft } from \"../Dashboard/Nft/Nft\";\n\ntype Props = {\n  collection: CollectionInfo;\n  nfts: NftInfo[];\n};\n\nexport const LargeCollectionDisplay = ({ collection, nfts }: Props) => {\n  console.log({ nfts });\n  return (\n    <div className=\"row\">\n      <div className=\"col-12 col-xxl-3 col-xl-3 col-lg-3 col-md-5 col-sm-6 col-xs-12\">\n        <DecoratedCollectionImage\n          collection={collection}\n          ownedCount={false}\n          showCollectionTitle={false}\n        />\n      </div>\n\n      <div className=\"row col-12 col-xxl-9 col-xl-9 col-lg-9 col-md-7 col-sm-6 col-xs-12 mb-2 border-bottom gx-1 \">\n        {nfts.length > 0 ? (\n          nfts.map((nft) => (\n            <div\n              key={nft.tokenId}\n              className=\"d-flex flex-column align-items-center col-4 col-xxl-3 col-lg-4 col-md-6 col-sm-6\"\n            >\n              <Nft\n                // @ts-ignore\n                token={nft}\n              />\n            </div>\n          ))\n        ) : (\n          <div\n            style={{\n              width: \"100%\",\n              border: \"5px dashed gray\",\n              borderRadius: \"15px\",\n              maxHeight: \"97%\",\n              color: \"gray\",\n              fontWeight: \"bold\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              display: \"flex\",\n              flexDirection: \"column\",\n            }}\n            className=\"border-4 border-gray-400 border-dashed rounded-lg p-8 max-w-sm mx-auto text-center flex flex-col items-center gap-2\"\n          >\n            <div>You don't own any</div>\n            <div>{collection.name?.toUpperCase()}</div>\n            <div>:&apos;&#40;</div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n","import { createLazyFileRoute } from \"@tanstack/react-router\";\nimport { Dashboard } from \"../components/Dashboard/Dashboard\";\n\nexport const Route = createLazyFileRoute(\"/dashboard\")({\n  component: Dashboard,\n  // head: () => ({\n  //   meta: [\n  //     {\n  //       title: 'Sneaky Dash',\n  //       description:\n  //         \"Sneaky Productions Dashboard - All your Sneaky Productions' assets in one place.\",\n  //       // image: `${process.env.PUBLIC_URL}/wenmoon.png`,\n  //     },\n  //   ],\n  // }),\n});\n","import {\n  COLLECTION_ADDRS,\n  isOECollectionAddress,\n  MAIN_COLLECTION_ADDRS,\n  PLUSHIE_COLLECTION_ADDRS,\n} from \"../../config\";\nimport { useAccount } from \"graz\";\nimport { useQueryNfts } from \"../../hooks/useQueryNfts/useQueryUserNfts\";\nimport { useQuerySneakyTokens } from \"../../hooks/useQuerySneakyTokens\";\nimport { useQueryCollections } from \"../../hooks/useQueryCollections/useQueryCollections\";\n\nimport { ConnectionModal } from \"../WalletConnectionModal/ConnectionModal\";\nimport { DisconnectedDashboard } from \"../Dashboard/DisconnectedDashboard\";\n\nimport { PortfolioStats } from \"../PortfolioStats/PortfolioStats\";\nimport { LoadingPorfolioStats } from \"../PortfolioStats/LoadingPortfolioStats\";\nimport { HorizontalCollectionRoll } from \"../HorizontalCollectionRoll/HorizontalCollectionRoll\";\nimport { LargeCollectionDisplay } from \"../LargeCollectionDisplay/LargeCollectionDIsplay\";\n\nimport { CollectionInfo } from \"../../hooks/useQueryCollections/useQueryCollections\";\nimport { NftInfo } from \"../../hooks/useQueryNfts/useQueryUserNfts\";\n\ntype Props = {\n  collection: CollectionInfo;\n  nfts: NftInfo[];\n};\n\nexport const Dashboard = ({ collection, nfts }: Props) => {\n\n  // Wallet Connection\n  const { isDisconnected, isConnected } = useAccount();\n\n  // User Asset Data\n  const { data: userNfts } = useQueryNfts();\n  const { data: sneakyBalance, areAnyLoading: isSneakyBalanceLoading } = useQuerySneakyTokens();\n  const { data: collectionsData } = useQueryCollections();\n\n  const collections =\n    userNfts &&\n    COLLECTION_ADDRS.flatMap((collectionAddr) => {\n      const collectionInfo = collectionsData?.find(\n        ({ contractAddress }) => contractAddress === collectionAddr\n      );\n      const nfts =\n        userNfts?.filter(\n          ({ collection }) => collection?.contractAddress === collectionAddr\n        ) || [];\n\n      return collectionInfo ? [{ collectionInfo, nfts }] : [];\n    }).sort(\n      (a, b) =>\n        (b.collectionInfo.floor?.amountUsd || 0) -\n        (a.collectionInfo.floor?.amountUsd || 0)\n    );\n\n  const mainCollections = (collections || []).filter(\n    ({ collectionInfo: { contractAddress } }) =>\n      MAIN_COLLECTION_ADDRS.includes(contractAddress)\n  );\n\n  const oeCollections = (collections || []).filter(\n    ({ collectionInfo: { contractAddress } }) =>\n      isOECollectionAddress(contractAddress)\n  );\n\n  const plushieCollections = (collections || []).filter(\n    ({ collectionInfo: { contractAddress } }) =>\n      PLUSHIE_COLLECTION_ADDRS.includes(contractAddress)\n  );\n\n  // Debugging\n  console.log(\"userNfts: \", userNfts);\n  console.log(\"collections: \", collections);\n  console.log(\"collectionsData: \", collectionsData);\n  console.log(\"sneakyBalance: \", sneakyBalance);\n\n  return (\n    <main>\n      <ConnectionModal />\n      {isConnected && userNfts && !isSneakyBalanceLoading && sneakyBalance ? (\n        <PortfolioStats tokens={userNfts} sneakyBalance={sneakyBalance} />\n      ) : (\n        isConnected && <LoadingPorfolioStats />\n      )}\n      {userNfts && collections ? (\n        <>\n          {mainCollections.map(({ collectionInfo, nfts }) => (\n            <LargeCollectionDisplay\n              key={collectionInfo.contractAddress}\n              collection={collectionInfo}\n              nfts={nfts}\n            />\n          ))}\n          <HorizontalCollectionRoll\n            title=\"Open Editions\"\n            collections={oeCollections}\n            showCollectionTitles={false}\n          />\n          <HorizontalCollectionRoll\n            title=\"Plushies\"\n            collections={plushieCollections}\n            makeCollectionImagesSquare\n          />\n          {/* <pre>{JSON.stringify(userNfts, null, 2)}</pre> */}\n        </>\n      ) : isDisconnected ? (\n        <DisconnectedDashboard />\n      ) : (\n        <div className=\"d-flex flex-column justify-content-center align-items-center text-center vh-100\">\n          <div className=\"spinner-border\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </div>\n        </div>\n      )}\n    </main>\n  );\n};\n"],"names":["useQueryNfts","data","account","useAccount","useQuery","queryKey","bech32Address","queryFn","address","request","STARGAZE_ENDPOINT","UserNftsQueryDocument","tokensOwnerAddrOrName","filterByCollectionAddrs","COLLECTION_ADDRS","then","_ref","tokens","sort","a","b","rarityScore","undefined","enabled","formatUsd","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","trailingZeroDisplay","format","tokenFormatter","navigator","languages","maximumSignificantDigits","formatTokenAmount","n","exponents","arguments","length","Number","match","with","P","number","gte","or","int","toString","gt","otherwise","formatTokenNumber","getUserCLPoolShare","client","poolId","denom","osmosis","concentratedliquidity","v1beta1","userPositions","BigInt","positions","map","_ref2","asset0","asset1","reduce","_ref3","_ref4","amount","prevAmount","nextAmount","coin","getUserBalancerPoolShare","targetDenom","Promise","all","gamm","pool","_ref5","_pool$poolAssets$filt","totalShares","asset","poolAssets","filter","_ref6","token","_ref7","weight","totalWeight","cosmos","bank","balance","_ref8","lockup","accountLockedCoins","owner","_ref9","coins","_ref10","_ref11","_ref12","_ref13","_pool$asset","_pool$asset2","liquidGamms","lockedGamms","lockedSneakyTokens","parseInt","liquidSneakyTokens","sneakyTokens","totalGamms","locked","gamms","liquid","useQuerySneakyPools","ClientFactory","createRPCQueryClient","rpcEndpoint","getSneakyPoolShares","SNEAKY_TOKEN_CHAINS","_ref14","clPoolShare","balancerPoolShare","total","getBalancesWithTotals","balances","usdValue","poolBalances","stargazePoolBalance","condensedBalances","Object","entries","_ref16","chainId","chainBalances","sneakyChainId","formatted_amount","denoms","formattedAmount","preparedAmount","_poolBalances$total","_poolBalances$total2","parseFloat","exhaustive","usd","walletBalance","totals","_ref17","_ref18","totalAmount","totalFormattedAmount","totalUsd","_","chainAmount","chainFormattedAmount","chainUsd","allChainBals","_ref19","chainBalance","osmoPoolBalances","useQuerySneakyTokens","sneakyTokenData","isLoading","isSneakyTokenDataLoading","useQueryOsmosisToken","stargazeAddress","osmosisAddress","changeHrp","hrp","words","bech32","decode","encode","error","console","sneakyBalanceQuery","addresses","fetch","method","body","JSON","stringify","chains","fromEntries","_ref15","userAddress","res","json","resp","areSneakyBalancesLoading","osmosisPoolTokens","areOsmosisPoolsLoading","stargazePoolTokens","areStargazePoolsLoading","useQueryStardexSneakyPoolShare","price","areAnyLoading","DisconnectedDashboard","openModal","useWalletConnectModal","isConnected","_jsxs","className","children","_jsx","type","onClick","StatsBreakdown","stargazePoolSneakyFormatted","sneakyTokenUsdFormatted","pool1403SneakyFormatted","pool1910SneakyFormatted","totalNftsCount","osmosisBalance","stargazeBalance","tokenFloors","allNftsUsd","_Fragment","values","join","PortfolioStats","sneakyBalance","tokenSummary","_balance$osmoPoolBala","_balance$osmoPoolBala2","_balance$stargazePool","sneakyTokenUsd","sneakyTokensSummary","usdValueFormatted","allNftsCombinedFloor","_tokens$filter","_tokens$filter$map","combinedFloor","_collection$floor","collection","floor","_collection$floor2","_collection$floor3","_collection$floor4","_collection$floor5","amountUsd","symbol","_prevTokenFloors$deno","_prevTokenFloors$deno2","prevTokenFloors","prevUsdValue","nftsValueSummary","totalPortfolioUsdValue","totalPortfolioDollars","totalPortfolioDecimals","split","disconnect","useDisconnect","height","href","e","preventDefault","role","id","LoadingPorfolioStats","RoughLink","linkRef","useRef","annotation","setAnnotation","useState","useEffect","current","roughNotation","annotate","color","animationDuration","padding","iterations","strokeWidth","remove","handleMouseEnter","show","handleMouseLeave","hide","ref","target","referrerPolicy","rel","onMouseEnter","onMouseLeave","onTouchStart","onTouchEnd","DecoratedCollectionImage","_collection$minter","_collection$minter$pu","_collection$media","_collection$media$vis","_collection$media$vis2","_collection$media2","ownedCount","makeCollectionImageSquare","descriptionTooltip","showCollectionTitle","collectionFloor","MintInfo","mintStatus","minter","publicSale","endTime","CollectionMintStatus","FullyMinted","nullish","Minting","string","and","when","Date","contractAddress","Upcoming","randomNumber","useMemo","Math","random","width","OverlayTrigger","placement","delay","overlay","props","Tooltip","name","description","isOECollectionAddress","alt","src","OE_ASSET_URLS","objectFit","media","visualAssets","sm","webpUrl","fallbackUrl","HorizontalCollectionRoll","title","collections","makeCollectionImagesSquare","showCollectionTitles","collectionInfo","nfts","Nft","_metadata$image","metadata","image","replace","LargeCollectionDisplay","_collection$name","log","nft","tokenId","border","borderRadius","maxHeight","fontWeight","alignItems","justifyContent","display","flexDirection","toUpperCase","Route","createLazyFileRoute","component","isDisconnected","userNfts","isSneakyBalanceLoading","collectionsData","useQueryCollections","flatMap","collectionAddr","find","_b$collectionInfo$flo","_a$collectionInfo$flo","mainCollections","MAIN_COLLECTION_ADDRS","includes","oeCollections","plushieCollections","PLUSHIE_COLLECTION_ADDRS","ConnectionModal"],"sourceRoot":""}