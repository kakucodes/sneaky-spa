{"version":3,"file":"static/js/829.ccbca34a.chunk.js","mappings":"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MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,KAAK,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,KAAK,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,KAAK,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,KAAK,KAAK,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,KAAK,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,MAAM,IAAM,CAAC,OAAO,UAAY,CAAC,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","sources":["../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/helpers/bind.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/utils.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/core/AxiosError.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/helpers/toFormData.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/helpers/AxiosURLSearchParams.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/helpers/buildURL.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/core/InterceptorManager.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/defaults/transitional.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/platform/browser/index.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/platform/browser/classes/URLSearchParams.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/platform/browser/classes/FormData.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/platform/browser/classes/Blob.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/platform/common/utils.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/platform/index.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/helpers/formDataToJSON.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/defaults/index.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/helpers/toURLEncodedForm.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/helpers/parseHeaders.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/core/AxiosHeaders.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/core/transformData.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/cancel/isCancel.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/cancel/CanceledError.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/core/settle.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/helpers/speedometer.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/helpers/throttle.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/helpers/progressEventReducer.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/helpers/isURLSameOrigin.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/helpers/cookies.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/core/buildFullPath.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/helpers/isAbsoluteURL.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/helpers/combineURLs.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/core/mergeConfig.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/helpers/resolveConfig.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/adapters/xhr.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/helpers/parseProtocol.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/helpers/composeSignals.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/helpers/trackStream.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/adapters/fetch.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/adapters/adapters.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/helpers/null.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/core/dispatchRequest.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/env/data.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/helpers/validator.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/core/Axios.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/cancel/CancelToken.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/helpers/HttpStatusCode.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/axios.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/helpers/spread.js","../node_modules/@usecapsule/web-sdk/node_modules/axios/lib/helpers/isAxiosError.js","../node_modules/@usecapsule/web-sdk/node_modules/@usecapsule/user-management-client/dist/esm/client.js","../node_modules/@usecapsule/web-sdk/node_modules/@usecapsule/core-sdk/dist/esm/definitions.js","../node_modules/@usecapsule/web-sdk/node_modules/@usecapsule/core-sdk/dist/esm/cryptography/utils.js","../node_modules/@usecapsule/web-sdk/node_modules/@usecapsule/user-management-client/dist/esm/index.js","../node_modules/@usecapsule/web-sdk/node_modules/@usecapsule/core-sdk/dist/esm/external/capsuleClient.js","../node_modules/@usecapsule/web-sdk/node_modules/@usecapsule/core-sdk/dist/esm/external/mpcComputationClient.js","../node_modules/@usecapsule/web-sdk/node_modules/@usecapsule/core-sdk/dist/esm/shares/KeyContainer.js","../node_modules/@usecapsule/web-sdk/node_modules/@usecapsule/core-sdk/dist/esm/shares/recovery.js","../node_modules/@usecapsule/web-sdk/node_modules/@usecapsule/core-sdk/dist/esm/shares/shareDistribution.js","../node_modules/@usecapsule/web-sdk/node_modules/@usecapsule/core-sdk/dist/esm/transmission/transmissionUtils.js","../node_modules/libphonenumber-js/metadata.min.json.js","../node_modules/libphonenumber-js/source/helpers/isObject.js","../node_modules/libphonenumber-js/source/normalizeArguments.js","../node_modules/libphonenumber-js/source/constants.js","../node_modules/libphonenumber-js/source/ParseError.js","../node_modules/libphonenumber-js/source/tools/semver-compare.js","../node_modules/libphonenumber-js/source/metadata.js","../node_modules/libphonenumber-js/source/helpers/extension/createExtensionPattern.js","../node_modules/libphonenumber-js/source/helpers/isViablePhoneNumber.js","../node_modules/libphonenumber-js/source/helpers/extension/extractExtension.js","../node_modules/libphonenumber-js/source/helpers/parseDigits.js","../node_modules/libphonenumber-js/source/parseIncompletePhoneNumber.js","../node_modules/libphonenumber-js/source/helpers/checkNumberLength.js","../node_modules/libphonenumber-js/source/helpers/mergeArrays.js","../node_modules/libphonenumber-js/source/isPossible.js","../node_modules/libphonenumber-js/source/helpers/matchesEntirely.js","../node_modules/libphonenumber-js/source/helpers/getNumberType.js","../node_modules/libphonenumber-js/source/helpers/getPossibleCountriesForNumber.js","../node_modules/libphonenumber-js/source/helpers/formatNationalNumberUsingFormat.js","../node_modules/libphonenumber-js/source/helpers/applyInternationalSeparatorStyle.js","../node_modules/libphonenumber-js/source/helpers/getIddPrefix.js","../node_modules/libphonenumber-js/source/format.js","../node_modules/libphonenumber-js/source/helpers/RFC3966.js","../node_modules/libphonenumber-js/source/PhoneNumber.js","../node_modules/libphonenumber-js/source/isValid.js","../node_modules/libphonenumber-js/source/helpers/stripIddPrefix.js","../node_modules/libphonenumber-js/source/helpers/extractNationalNumber.js","../node_modules/libphonenumber-js/source/helpers/extractNationalNumberFromPossiblyIncompleteNumber.js","../node_modules/libphonenumber-js/source/helpers/extractCountryCallingCode.js","../node_modules/libphonenumber-js/source/helpers/extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js","../node_modules/libphonenumber-js/source/helpers/getCountryByCallingCode.js","../node_modules/libphonenumber-js/source/helpers/getCountryByNationalNumber.js","../node_modules/libphonenumber-js/source/helpers/extractPhoneContext.js","../node_modules/libphonenumber-js/source/helpers/extractFormattedPhoneNumberFromPossibleRfc3966NumberUri.js","../node_modules/libphonenumber-js/source/parse.js","../node_modules/libphonenumber-js/source/parsePhoneNumber_.js","../node_modules/libphonenumber-js/source/parsePhoneNumberWithError_.js","../node_modules/libphonenumber-js/source/parsePhoneNumber.js","../node_modules/libphonenumber-js/min/exports/parsePhoneNumber.js","../node_modules/libphonenumber-js/min/exports/withMetadataArgument.js","../node_modules/@usecapsule/web-sdk/node_modules/@usecapsule/core-sdk/dist/esm/CoreCapsule.js","../node_modules/@usecapsule/web-sdk/node_modules/@usecapsule/core-sdk/dist/esm/index.js","../node_modules/@usecapsule/web-sdk/dist/LocalStorage.js","../node_modules/@usecapsule/web-sdk/dist/SessionStorage.js","../node_modules/@usecapsule/web-sdk/dist/wasm/wasm_exec.js","../node_modules/@usecapsule/web-sdk/dist/workers/walletUtils.js","../node_modules/@usecapsule/web-sdk/dist/workers/worker.js","../node_modules/@usecapsule/web-sdk/dist/workers/workerWrapper.js","../node_modules/@usecapsule/web-sdk/node_modules/@usecapsule/core-sdk/dist/esm/utils/pollingUtils.js","../node_modules/@usecapsule/web-sdk/dist/wallet/keygen.js","../node_modules/@usecapsule/web-sdk/dist/wallet/signing.js","../node_modules/@usecapsule/web-sdk/dist/wallet/privateKey.js","../node_modules/@usecapsule/web-sdk/dist/WebUtils.js","../node_modules/@usecapsule/web-sdk/dist/index.js","../node_modules/@usecapsule/web-sdk/dist/CapsuleWeb.js","../node_modules/@usecapsule/user-management-client/dist/esm/client.js","../node_modules/@noble/hashes/src/_assert.ts","../node_modules/@noble/hashes/src/utils.ts","../node_modules/@noble/hashes/src/_md.ts","../node_modules/@noble/hashes/src/sha256.ts","../node_modules/@noble/hashes/src/ripemd160.ts","../node_modules/@usecapsule/core-sdk/dist/esm/utils/formattingUtils.js","../node_modules/@usecapsule/cosmjs-v0-integration/dist/esm/cosmosSigners.js","../node_modules/@leapwallet/cosmos-social-login-capsule-provider/dist/capsuleConnector.js","../node_modules/@leapwallet/cosmos-social-login-capsule-provider/dist/offlineSigner.js","../node_modules/@leapwallet/cosmos-social-login-capsule-provider/dist/registry.js","../node_modules/@leapwallet/cosmos-social-login-capsule-provider/dist/index.js","../../src/ascii.ts","../../src/base64.ts","../../src/bech32.ts","../../src/hex.ts","../../src/index.ts","../../src/rfc3339.ts","../../src/utf8.ts","../node_modules/@usecapsule/core-sdk/node_modules/bech32/index.js","../../src/ecies.ts","../node_modules/assert/build/assert.js","../node_modules/assert/build/internal/assert/assertion_error.js","../node_modules/assert/build/internal/errors.js","../node_modules/assert/build/internal/util/comparisons.js","../node_modules/base64url/dist/base64url.js","../node_modules/base64url/dist/pad-string.js","../node_modules/base64url/index.js","../node_modules/call-bind/callBound.js","../node_modules/call-bind/index.js","../node_modules/ethereumjs-util/src/account.ts","../node_modules/ethereumjs-util/src/address.ts","../node_modules/ethereumjs-util/src/bytes.ts","../node_modules/ethereumjs-util/src/constants.ts","../node_modules/ethereumjs-util/src/externals.ts","../node_modules/ethereumjs-util/src/hash.ts","../node_modules/ethereumjs-util/src/helpers.ts","../node_modules/ethereumjs-util/src/index.ts","../node_modules/ethereumjs-util/src/internal.ts","../node_modules/ethereumjs-util/src/object.ts","../node_modules/ethereumjs-util/src/signature.ts","../node_modules/ethereumjs-util/src/types.ts","../node_modules/ethereumjs-util/node_modules/ethereum-cryptography/src/hash-utils.ts","../node_modules/ethereumjs-util/node_modules/ethereum-cryptography/src/keccak.ts","../node_modules/ethereumjs-util/node_modules/ethereum-cryptography/src/random.ts","../node_modules/ethereumjs-util/node_modules/ethereum-cryptography/src/secp256k1.ts","../node_modules/for-each/index.js","../node_modules/has-tostringtag/shams.js","../node_modules/is-arguments/index.js","../node_modules/is-callable/index.js","../node_modules/is-generator-function/index.js","../node_modules/is-nan/implementation.js","../node_modules/is-nan/index.js","../node_modules/is-nan/polyfill.js","../node_modules/is-nan/shim.js","../node_modules/is-typed-array/index.js","../node_modules/keccak/js.js","../node_modules/keccak/lib/api/index.js","../node_modules/keccak/lib/api/keccak.js","../node_modules/keccak/lib/api/shake.js","../node_modules/keccak/lib/keccak-state-unroll.js","../node_modules/keccak/lib/keccak.js","../node_modules/keccak/node_modules/readable-stream/errors-browser.js","../node_modules/keccak/node_modules/readable-stream/lib/_stream_duplex.js","../node_modules/keccak/node_modules/readable-stream/lib/_stream_passthrough.js","../node_modules/keccak/node_modules/readable-stream/lib/_stream_readable.js","../node_modules/keccak/node_modules/readable-stream/lib/_stream_transform.js","../node_modules/keccak/node_modules/readable-stream/lib/_stream_writable.js","../node_modules/keccak/node_modules/readable-stream/lib/internal/streams/async_iterator.js","../node_modules/keccak/node_modules/readable-stream/lib/internal/streams/buffer_list.js","../node_modules/keccak/node_modules/readable-stream/lib/internal/streams/destroy.js","../node_modules/keccak/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","../node_modules/keccak/node_modules/readable-stream/lib/internal/streams/from-browser.js","../node_modules/keccak/node_modules/readable-stream/lib/internal/streams/pipeline.js","../node_modules/keccak/node_modules/readable-stream/lib/internal/streams/state.js","../node_modules/keccak/node_modules/readable-stream/lib/internal/streams/stream-browser.js","../node_modules/keccak/node_modules/readable-stream/readable-browser.js","../node_modules/node-forge/lib/aes.js","../node_modules/node-forge/lib/aesCipherSuites.js","../node_modules/node-forge/lib/asn1-validator.js","../node_modules/node-forge/lib/asn1.js","../node_modules/node-forge/lib/baseN.js","../node_modules/node-forge/lib/cipher.js","../node_modules/node-forge/lib/cipherModes.js","../node_modules/node-forge/lib/des.js","../node_modules/node-forge/lib/ed25519.js","../node_modules/node-forge/lib/forge.js","../node_modules/node-forge/lib/hmac.js","../node_modules/node-forge/lib/index.js","../node_modules/node-forge/lib/jsbn.js","../node_modules/node-forge/lib/kem.js","../node_modules/node-forge/lib/log.js","../node_modules/node-forge/lib/md.all.js","../node_modules/node-forge/lib/md.js","../node_modules/node-forge/lib/md5.js","../node_modules/node-forge/lib/mgf.js","../node_modules/node-forge/lib/mgf1.js","../node_modules/node-forge/lib/oids.js","../node_modules/node-forge/lib/pbe.js","../node_modules/node-forge/lib/pbkdf2.js","../node_modules/node-forge/lib/pem.js","../node_modules/node-forge/lib/pkcs1.js","../node_modules/node-forge/lib/pkcs12.js","../node_modules/node-forge/lib/pkcs7.js","../node_modules/node-forge/lib/pkcs7asn1.js","../node_modules/node-forge/lib/pki.js","../node_modules/node-forge/lib/prime.js","../node_modules/node-forge/lib/prng.js","../node_modules/node-forge/lib/pss.js","../node_modules/node-forge/lib/random.js","../node_modules/node-forge/lib/rc2.js","../node_modules/node-forge/lib/rsa.js","../node_modules/node-forge/lib/sha1.js","../node_modules/node-forge/lib/sha256.js","../node_modules/node-forge/lib/sha512.js","../node_modules/node-forge/lib/ssh.js","../node_modules/node-forge/lib/tls.js","../node_modules/node-forge/lib/util.js","../node_modules/node-forge/lib/x509.js","../node_modules/object-inspect/index.js","../node_modules/object-is/implementation.js","../node_modules/object-is/index.js","../node_modules/object-is/polyfill.js","../node_modules/object-is/shim.js","../node_modules/object.assign/implementation.js","../node_modules/object.assign/polyfill.js","../node_modules/possible-typed-array-names/index.js","../node_modules/qs/lib/formats.js","../node_modules/qs/lib/index.js","../node_modules/qs/lib/parse.js","../node_modules/qs/lib/stringify.js","../node_modules/qs/lib/utils.js","../node_modules/rlp/src/index.ts","../node_modules/secp256k1/elliptic.js","../node_modules/secp256k1/lib/elliptic.js","../node_modules/secp256k1/lib/index.js","../node_modules/set-function-length/index.js","../node_modules/side-channel/index.js","../node_modules/util/support/isBufferBrowser.js","../node_modules/util/support/types.js","../node_modules/util/util.js","../node_modules/which-typed-array/index.js","../node_modules/available-typed-arrays/index.js"],"sourcesContent":["'use strict';\n\nexport default function bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n","'use strict';\n\nimport bind from './helpers/bind.js';\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n}\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in val) && !(Symbol.iterator in val);\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : global)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  }\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n}\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n}\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n}\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n}\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[Symbol.iterator];\n\n  const iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n}\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n}\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n}\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n}\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  }\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n}\n\nconst noop = () => {}\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n}\n\nconst ALPHA = 'abcdefghijklmnopqrstuvwxyz'\n\nconst DIGIT = '0123456789';\n\nconst ALPHABET = {\n  DIGIT,\n  ALPHA,\n  ALPHA_DIGIT: ALPHA + ALPHA.toUpperCase() + DIGIT\n}\n\nconst generateString = (size = 16, alphabet = ALPHABET.ALPHA_DIGIT) => {\n  let str = '';\n  const {length} = alphabet;\n  while (size--) {\n    str += alphabet[Math.random() * length|0]\n  }\n\n  return str;\n}\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[Symbol.toStringTag] === 'FormData' && thing[Symbol.iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  }\n\n  return visit(obj, 0);\n}\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\nexport default {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  ALPHABET,\n  generateString,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap\n};\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype);\n\n  utils.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\nexport default AxiosError;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\n// temporary hotfix to avoid circular references until AxiosURLSearchParams is refactored\nimport PlatformFormData from '../platform/node/classes/FormData.js';\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils.isPlainObject(thing) || utils.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils.toFlatObject(utils, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (PlatformFormData || FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils.isSpecCompliantForm(formData);\n\n  if (!utils.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (!useBlob && utils.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils.isArrayBuffer(value) || utils.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils.isArray(value) && isFlatArray(value)) ||\n        ((utils.isFileList(value) || utils.endsWith(key, '[]')) && (arr = utils.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils.forEach(value, function each(el, key) {\n      const result = !(utils.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\nexport default toFormData;\n","'use strict';\n\nimport toFormData from './toFormData.js';\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode);\n  } : encode;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\nexport default AxiosURLSearchParams;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosURLSearchParams from '../helpers/AxiosURLSearchParams.js';\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?object} options\n *\n * @returns {string} The formatted url\n */\nexport default function buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nexport default InterceptorManager;\n","'use strict';\n\nexport default {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n","import URLSearchParams from './classes/URLSearchParams.js'\nimport FormData from './classes/FormData.js'\nimport Blob from './classes/Blob.js'\n\nexport default {\n  isBrowser: true,\n  classes: {\n    URLSearchParams,\n    FormData,\n    Blob\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n","'use strict';\n\nimport AxiosURLSearchParams from '../../../helpers/AxiosURLSearchParams.js';\nexport default typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n","'use strict';\n\nexport default typeof FormData !== 'undefined' ? FormData : null;\n","'use strict'\n\nexport default typeof Blob !== 'undefined' ? Blob : null\n","const hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nexport {\n  hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv,\n  _navigator as navigator,\n  origin\n}\n","import platform from './node/index.js';\nimport * as utils from './common/utils.js';\n\nexport default {\n  ...utils,\n  ...platform\n}\n","'use strict';\n\nimport utils from '../utils.js';\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils.isFormData(formData) && utils.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\nexport default formDataToJSON;\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosError from '../core/AxiosError.js';\nimport transitionalDefaults from './transitional.js';\nimport toFormData from '../helpers/toFormData.js';\nimport toURLEncodedForm from '../helpers/toURLEncodedForm.js';\nimport platform from '../platform/index.js';\nimport formDataToJSON from '../helpers/formDataToJSON.js';\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils.isObject(data);\n\n    if (isObjectPayload && utils.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data) ||\n      utils.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils.isResponse(data) || utils.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nexport default defaults;\n","'use strict';\n\nimport utils from '../utils.js';\nimport toFormData from './toFormData.js';\nimport platform from '../platform/index.js';\n\nexport default function toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), Object.assign({\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    }\n  }, options));\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nexport default rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nimport utils from '../utils.js';\nimport parseHeaders from '../helpers/parseHeaders.js';\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils.isString(value)) return;\n\n  if (utils.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite)\n    } else if(utils.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils.isHeaders(header)) {\n      for (const [key, value] of header.entries()) {\n        setHeader(value, key, rewrite);\n      }\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils.forEach(this, (value, header) => {\n      const key = utils.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils.freezeMethods(AxiosHeaders);\n\nexport default AxiosHeaders;\n","'use strict';\n\nimport utils from './../utils.js';\nimport defaults from '../defaults/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nexport default function transformData(fns, response) {\n  const config = this || defaults;\n  const context = response || config;\n  const headers = AxiosHeaders.from(context.headers);\n  let data = context.data;\n\n  utils.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n","'use strict';\n\nexport default function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n","'use strict';\n\nimport AxiosError from '../core/AxiosError.js';\nimport utils from '../utils.js';\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\nexport default CanceledError;\n","'use strict';\n\nimport AxiosError from './AxiosError.js';\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nexport default function settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n","'use strict';\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\nexport default speedometer;\n","/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn.apply(null, args);\n  }\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs)\n        }, threshold - passed);\n      }\n    }\n  }\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nexport default throttle;\n","import speedometer from \"./speedometer.js\";\nimport throttle from \"./throttle.js\";\nimport utils from \"../utils.js\";\n\nexport const progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n}\n\nexport const progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n}\n\nexport const asyncDecorator = (fn) => (...args) => utils.asap(() => fn(...args));\n","'use strict';\n\nimport utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n// Standard browser envs have full support of the APIs needed to test\n// whether the request URL is of the same origin as current location.\n  (function standardBrowserEnv() {\n    const msie = platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent);\n    const urlParsingNode = document.createElement('a');\n    let originURL;\n\n    /**\n    * Parse a URL to discover its components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n    function resolveURL(url) {\n      let href = url;\n\n      if (msie) {\n        // IE needs attribute set twice to normalize properties\n        urlParsingNode.setAttribute('href', href);\n        href = urlParsingNode.href;\n      }\n\n      urlParsingNode.setAttribute('href', href);\n\n      // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n      return {\n        href: urlParsingNode.href,\n        protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n        host: urlParsingNode.host,\n        search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n        hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n        hostname: urlParsingNode.hostname,\n        port: urlParsingNode.port,\n        pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n          urlParsingNode.pathname :\n          '/' + urlParsingNode.pathname\n      };\n    }\n\n    originURL = resolveURL(window.location.href);\n\n    /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n    return function isURLSameOrigin(requestURL) {\n      const parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n      return (parsed.protocol === originURL.protocol &&\n          parsed.host === originURL.host);\n    };\n  })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n  (function nonStandardBrowserEnv() {\n    return function isURLSameOrigin() {\n      return true;\n    };\n  })();\n","import utils from './../utils.js';\nimport platform from '../platform/index.js';\n\nexport default platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils.isString(path) && cookie.push('path=' + path);\n\n      utils.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n","'use strict';\n\nimport isAbsoluteURL from '../helpers/isAbsoluteURL.js';\nimport combineURLs from '../helpers/combineURLs.js';\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nexport default function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nexport default function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nexport default function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n","'use strict';\n\nimport utils from '../utils.js';\nimport AxiosHeaders from \"./AxiosHeaders.js\";\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nexport default function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, caseless) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge.call({caseless}, target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, caseless) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(a, b, caseless);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a, caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b) => mergeDeepProperties(headersToObject(a), headersToObject(b), true)\n  };\n\n  utils.forEach(Object.keys(Object.assign({}, config1, config2)), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport isURLSameOrigin from \"./isURLSameOrigin.js\";\nimport cookies from \"./cookies.js\";\nimport buildFullPath from \"../core/buildFullPath.js\";\nimport mergeConfig from \"../core/mergeConfig.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport buildURL from \"./buildURL.js\";\n\nexport default (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n}\n\n","import utils from './../utils.js';\nimport settle from './../core/settle.js';\nimport transitionalDefaults from '../defaults/transitional.js';\nimport AxiosError from '../core/AxiosError.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport parseProtocol from '../helpers/parseProtocol.js';\nimport platform from '../platform/index.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport {progressEventReducer} from '../helpers/progressEventReducer.js';\nimport resolveConfig from \"../helpers/resolveConfig.js\";\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nexport default isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n}\n","'use strict';\n\nexport default function parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n","import CanceledError from \"../cancel/CanceledError.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport utils from '../utils.js';\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    }\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT))\n    }, timeout)\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    }\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils.asap(unsubscribe);\n\n    return signal;\n  }\n}\n\nexport default composeSignals;\n","\nexport const streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n}\n\nexport const readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n}\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n}\n\nexport const trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  }\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n}\n","import platform from \"../platform/index.js\";\nimport utils from \"../utils.js\";\nimport AxiosError from \"../core/AxiosError.js\";\nimport composeSignals from \"../helpers/composeSignals.js\";\nimport {trackStream} from \"../helpers/trackStream.js\";\nimport AxiosHeaders from \"../core/AxiosHeaders.js\";\nimport {progressEventReducer, progressEventDecorator, asyncDecorator} from \"../helpers/progressEventReducer.js\";\nimport resolveConfig from \"../helpers/resolveConfig.js\";\nimport settle from \"../core/settle.js\";\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n}\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      })\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils.isArrayBufferView(body) || utils.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n}\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n}\n\nexport default isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader)\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      })\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\n\n","import utils from '../utils.js';\nimport httpAdapter from './http.js';\nimport xhrAdapter from './xhr.js';\nimport fetchAdapter from './fetch.js';\nimport AxiosError from \"../core/AxiosError.js\";\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n}\n\nutils.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils.isFunction(adapter) || adapter === null || adapter === false;\n\nexport default {\n  getAdapter: (adapters) => {\n    adapters = utils.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n}\n","// eslint-disable-next-line strict\nexport default null;\n","'use strict';\n\nimport transformData from './transformData.js';\nimport isCancel from '../cancel/isCancel.js';\nimport defaults from '../defaults/index.js';\nimport CanceledError from '../cancel/CanceledError.js';\nimport AxiosHeaders from '../core/AxiosHeaders.js';\nimport adapters from \"../adapters/adapters.js\";\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nexport default function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n","export const VERSION = \"1.7.7\";","'use strict';\n\nimport {VERSION} from '../env/data.js';\nimport AxiosError from '../core/AxiosError.js';\n\nconst validators = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nexport default {\n  assertOptions,\n  validators\n};\n","'use strict';\n\nimport utils from './../utils.js';\nimport buildURL from '../helpers/buildURL.js';\nimport InterceptorManager from './InterceptorManager.js';\nimport dispatchRequest from './dispatchRequest.js';\nimport mergeConfig from './mergeConfig.js';\nimport buildFullPath from './buildFullPath.js';\nimport validator from '../helpers/validator.js';\nimport AxiosHeaders from './AxiosHeaders.js';\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig;\n    this.interceptors = {\n      request: new InterceptorManager(),\n      response: new InterceptorManager()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy;\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy = {}) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        }\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift.apply(chain, requestInterceptorChain);\n      chain.push.apply(chain, responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nexport default Axios;\n","'use strict';\n\nimport CanceledError from './CanceledError.js';\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nexport default CancelToken;\n","const HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nexport default HttpStatusCode;\n","'use strict';\n\nimport utils from './utils.js';\nimport bind from './helpers/bind.js';\nimport Axios from './core/Axios.js';\nimport mergeConfig from './core/mergeConfig.js';\nimport defaults from './defaults/index.js';\nimport formDataToJSON from './helpers/formDataToJSON.js';\nimport CanceledError from './cancel/CanceledError.js';\nimport CancelToken from './cancel/CancelToken.js';\nimport isCancel from './cancel/isCancel.js';\nimport {VERSION} from './env/data.js';\nimport toFormData from './helpers/toFormData.js';\nimport AxiosError from './core/AxiosError.js';\nimport spread from './helpers/spread.js';\nimport isAxiosError from './helpers/isAxiosError.js';\nimport AxiosHeaders from \"./core/AxiosHeaders.js\";\nimport adapters from './adapters/adapters.js';\nimport HttpStatusCode from './helpers/HttpStatusCode.js';\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios(defaultConfig);\n  const instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders;\n\naxios.formToJSON = thing => formDataToJSON(utils.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode;\n\naxios.default = axios;\n\n// this module should only have a default export\nexport default axios\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nexport default function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n","'use strict';\n\nimport utils from './../utils.js';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nexport default function isAxiosError(payload) {\n  return utils.isObject(payload) && (payload.isAxiosError === true);\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport axios from 'axios';\nimport qs from 'qs';\nexport const USER_NOT_VERIFIED = 'user must verify biometrics';\nexport const USER_NOT_AUTHENTICATED_ERROR = 'user must be authenticated';\nexport const USER_NOT_MATCHING_ERROR = 'route param userId must match session userId';\nexport var EmailTheme;\n(function (EmailTheme) {\n    EmailTheme[\"LIGHT\"] = \"light\";\n    EmailTheme[\"DARK\"] = \"dark\";\n})(EmailTheme || (EmailTheme = {}));\nexport var PublicKeyStatus;\n(function (PublicKeyStatus) {\n    PublicKeyStatus[\"PENDING\"] = \"PENDING\";\n    PublicKeyStatus[\"COMPLETE\"] = \"COMPLETE\";\n})(PublicKeyStatus || (PublicKeyStatus = {}));\nexport var PublicKeyType;\n(function (PublicKeyType) {\n    PublicKeyType[\"MOBILE\"] = \"MOBILE\";\n    PublicKeyType[\"WEB\"] = \"WEB\";\n})(PublicKeyType || (PublicKeyType = {}));\nexport var SignatureScheme;\n(function (SignatureScheme) {\n    SignatureScheme[\"DKLS\"] = \"DKLS\";\n    SignatureScheme[\"CGGMP\"] = \"CGGMP\";\n    SignatureScheme[\"ED25519\"] = \"ED25519\";\n})(SignatureScheme || (SignatureScheme = {}));\nexport var Chain;\n(function (Chain) {\n    Chain[\"ETH\"] = \"ETH\";\n    Chain[\"CELO\"] = \"CELO\";\n    Chain[\"MATIC\"] = \"MATIC\";\n})(Chain || (Chain = {}));\nexport var EncryptorType;\n(function (EncryptorType) {\n    EncryptorType[\"USER\"] = \"USER\";\n    EncryptorType[\"RECOVERY\"] = \"RECOVERY\";\n    EncryptorType[\"BIOMETRICS\"] = \"BIOMETRICS\";\n})(EncryptorType || (EncryptorType = {}));\nexport const KeyType = {\n    USER: 'USER',\n    RECOVERY: 'RECOVERY',\n};\nexport var Network;\n(function (Network) {\n    Network[\"ETHEREUM\"] = \"ETHEREUM\";\n    Network[\"ARBITRUM\"] = \"ARBITRUM\";\n    Network[\"BASE\"] = \"BASE\";\n    Network[\"OPTIMISM\"] = \"OPTIMISM\";\n    Network[\"POLYGON\"] = \"POLYGON\";\n})(Network || (Network = {}));\nexport var OnRampProvider;\n(function (OnRampProvider) {\n    OnRampProvider[\"RAMP\"] = \"RAMP\";\n    OnRampProvider[\"STRIPE\"] = \"STRIPE\";\n})(OnRampProvider || (OnRampProvider = {}));\nexport var OnRampAsset;\n(function (OnRampAsset) {\n    OnRampAsset[\"ETHEREUM\"] = \"ETHEREUM\";\n    OnRampAsset[\"USDC\"] = \"USDC\";\n    OnRampAsset[\"POLYGON\"] = \"POLYGON\";\n})(OnRampAsset || (OnRampAsset = {}));\nexport var OnRampPurchaseStatus;\n(function (OnRampPurchaseStatus) {\n    OnRampPurchaseStatus[\"INITIATED\"] = \"INITIATED\";\n    OnRampPurchaseStatus[\"FINISHED\"] = \"FINISHED\";\n    OnRampPurchaseStatus[\"CANCELLED\"] = \"CANCELLED\";\n})(OnRampPurchaseStatus || (OnRampPurchaseStatus = {}));\nconst SESSION_COOKIE_HEADER_NAME = 'x-capsule-sid';\nclass Client {\n    constructor({ userManagementHost, apiKey, opts, retrieveSessionCookie, persistSessionCookie }) {\n        this.createUser = (body) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users`, body);\n            return res.data;\n        });\n        this.checkUserExists = (email, phone, countryCode) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/exists?email=${encodeURIComponent(email)}&phone=${encodeURIComponent(phone)}&countryCode=${encodeURIComponent(countryCode)}`);\n            return res;\n        });\n        // POST /users/:userId/verify-email\n        this.verifyEmail = (userId, body) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/verify-email`, body);\n            return res;\n        });\n        this.verifyPhone = (userId, body) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/verify-identifier`, body);\n            return res;\n        });\n        // POST /users/:userId/biometrics/key\n        this.addSessionPublicKey = (userId, body) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/biometrics/key`, body);\n            return res;\n        });\n        // GET /users/:userId/biometrics/keys\n        this.getSessionPublicKeys = (userId) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/${userId}/biometrics/keys`);\n            return res;\n        });\n        // GET /users/:userId/biometrics/:biometricId\n        this.getSessionPublicKey = (userId, biometricId) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/${userId}/biometrics/${biometricId}`);\n            return res;\n        });\n        // PATCH /users/:userId/biometrics/:biometricId\n        this.patchSessionPublicKey = (partnerId, userId, biometricId, body) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.patch(`/users/${userId}/biometrics/${biometricId}`, body, {\n                headers: {\n                    'X-Partner-ID': partnerId,\n                },\n            });\n            return res;\n        });\n        // GET /biometrics/challenge?email&publicKey\n        this.getWebChallenge = (email, phone, countryCode, farcasterUsername, publicKey) => __awaiter(this, void 0, void 0, function* () {\n            const queryParams = {};\n            if (email) {\n                queryParams['email'] = email;\n            }\n            if (phone) {\n                queryParams['phone'] = phone;\n            }\n            if (countryCode) {\n                queryParams['countryCode'] = countryCode;\n            }\n            if (farcasterUsername) {\n                queryParams['farcasterUsername'] = farcasterUsername;\n            }\n            if (publicKey) {\n                queryParams['publicKey'] = publicKey;\n            }\n            const query = qs.stringify(queryParams);\n            const res = yield this.baseRequest.get(`/biometrics/challenge${query === '' ? '' : `?${query}`}`);\n            return res.data;\n        });\n        // POST /touch\n        this.touchSession = (regenerate) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/touch?regenerate=${!!regenerate}`);\n            return res;\n        });\n        // POST /biometrics/verify\n        this.verifyWebChallenge = (partnerId, body) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/biometrics/verify`, body, {\n                headers: {\n                    'X-Partner-ID': partnerId,\n                },\n            });\n            return res;\n        });\n        // GET /users/:userId/biometrics/challenge\n        this.getSessionChallenge = (userId) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/${userId}/biometrics/challenge`);\n            return res;\n        });\n        // POST /users/:userId/biometrics/verify\n        this.verifySessionChallenge = (userId, body) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/biometrics/verify`, body);\n            return res;\n        });\n        // POST /users/:userId/wallets\n        this.createWallet = (userId, body) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/wallets`, body);\n            return res.data;\n        });\n        // POST /wallets/pregen\n        this.createPregenWallet = (body) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/wallets/pregen`, body);\n            return res.data;\n        });\n        // GET /wallets/pregen?pregenIdentifier={pregenIdentifier}&pregenIdentifierType={pregenIdentifierType}\n        this.getPregenWallets = (pregenIdentifier, pregenIdentifierType) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/wallets/pregen?pregenIdentifier=${encodeURIComponent(pregenIdentifier)}&pregenIdentifierType=${encodeURIComponent(pregenIdentifierType)}`);\n            return res.data;\n        });\n        // POST /wallets/pregen/claim\n        this.claimPregenWallet = (body) => __awaiter(this, void 0, void 0, function* () {\n            yield this.baseRequest.post(`/wallets/pregen/claim`, body);\n        });\n        // POST /users/:userId/wallets/:walletId/transactions/send\n        this.sendTransaction = (userId, walletId, body) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/wallets/${walletId}/transactions/send`, body);\n            return res;\n        });\n        // functionality changed to only sign transactions and not send them\n        // POST /users/:userId/wallets/:walletId/transactions/sign\n        this.signTransaction = (userId, walletId, body) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/wallets/${walletId}/transactions/sign`, body);\n            return res;\n        });\n        // POST /users/:userId/wallets/:walletId/refresh\n        this.refreshKeys = (userId, walletId) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/wallets/${walletId}/refresh`);\n            return res;\n        });\n        // PATCH /wallets/pregen/:walletId\n        this.updatePregenWallet = (walletId, body) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.patch(`wallets/pregen/${walletId}`, body);\n            return res.data;\n        });\n        // GET /users/:userId/wallets\n        this.getWallets = (userId) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/${userId}/wallets`);\n            return res;\n        });\n        // POST /login\n        this.login = (props) => __awaiter(this, void 0, void 0, function* () {\n            const body = props;\n            const res = yield this.baseRequest.post('/login', body);\n            return res;\n        });\n        // POST /login\n        this.verifyLogin = (verificationCode) => __awaiter(this, void 0, void 0, function* () {\n            const body = { verificationCode };\n            const res = yield this.baseRequest.post('/login/verify-email', body);\n            return res;\n        });\n        // GET /logout\n        this.logout = () => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get('/logout');\n            return res;\n        });\n        // POST /recovery/verification\n        this.recoveryVerification = (email, verificationCode) => __awaiter(this, void 0, void 0, function* () {\n            const body = { email, verificationCode };\n            const res = yield this.baseRequest.post('/recovery/verification', body);\n            return res;\n        });\n        // POST /recovery\n        this.recoveryInit = (email) => __awaiter(this, void 0, void 0, function* () {\n            const body = { email };\n            const res = yield this.baseRequest.post('/recovery', body);\n            return res;\n        });\n        this.preSignMessage = (userId, walletId, message, scheme) => __awaiter(this, void 0, void 0, function* () {\n            const body = { message, scheme };\n            const res = yield this.baseRequest.post(`/users/${userId}/wallets/${walletId}/messages/sign`, body);\n            return res.data;\n        });\n        //DELETE /users/:userId\n        this.deleteSelf = (userId) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.delete(`/users/${userId}`);\n            return res;\n        });\n        // GET /users/:userId/wallets/:walletId/capsule-share\n        this.getCapsuleShare = (userId, walletId) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/${userId}/wallets/${walletId}/capsule-share`);\n            return res.data.share;\n        });\n        // GET /download-backup-kit/:userId\n        this.getBackupKit = (userId) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/download-backup-kit/${userId}`, { responseType: 'blob' });\n            return res;\n        });\n        // TODO remove after this is not optional anymore\n        const headers = apiKey ? { 'X-External-API-Key': apiKey } : undefined;\n        const axiosConfig = {\n            baseURL: userManagementHost,\n            withCredentials: true,\n            headers,\n        };\n        if (retrieveSessionCookie) {\n            const defaultTransformRequest = Array.isArray(axios.defaults.transformRequest)\n                ? axios.defaults.transformRequest\n                : [axios.defaults.transformRequest];\n            axiosConfig.transformRequest = [\n                function (data, headers) {\n                    const currentSessionCookie = retrieveSessionCookie();\n                    if (currentSessionCookie) {\n                        headers[SESSION_COOKIE_HEADER_NAME] = currentSessionCookie;\n                    }\n                    return data;\n                },\n                ...defaultTransformRequest,\n            ];\n        }\n        if (persistSessionCookie) {\n            const defaultTransformResponse = Array.isArray(axios.defaults.transformResponse)\n                ? axios.defaults.transformResponse\n                : [axios.defaults.transformResponse];\n            axiosConfig.transformResponse = [\n                ...defaultTransformResponse,\n                function (data, headers, _status) {\n                    if (headers === null || headers === void 0 ? void 0 : headers[SESSION_COOKIE_HEADER_NAME]) {\n                        persistSessionCookie(headers[SESSION_COOKIE_HEADER_NAME]);\n                    }\n                    return data;\n                },\n            ];\n        }\n        this.baseRequest = axios.create(axiosConfig);\n        if (opts === null || opts === void 0 ? void 0 : opts.useFetchAdapter) {\n            axios.defaults.adapter = function (config) {\n                return fetch(config.baseURL + config.url.substring(1), {\n                    method: config.method,\n                    headers: config.headers,\n                    body: config.data,\n                    credentials: config.withCredentials ? 'include' : undefined,\n                })\n                    .then((response) => response.text().then((text) => ({\n                    data: text,\n                    status: response.status,\n                    statusText: response.statusText,\n                    headers: response.headers,\n                    config: config,\n                    request: fetch,\n                })))\n                    .catch(function (reason) {\n                    throw reason;\n                });\n            };\n        }\n    }\n    // DEPRECATED: use uploadUserKeyShares instead\n    // POST /users/:userId/wallets/:walletId/key-shares\n    uploadKeyshares(userId, walletId, encryptedKeyshares) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const body = { keyShares: encryptedKeyshares };\n            const res = yield this.baseRequest.post(`/users/${userId}/wallets/${walletId}/key-shares`, body);\n            return res;\n        });\n    }\n    // POST /users/:userId/wallets/:walletId/key-shares\n    uploadUserKeyShares(userId, encryptedKeyshares) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const body = { keyShares: encryptedKeyshares };\n            const res = yield this.baseRequest.post(`/users/${userId}/key-shares`, body);\n            return res;\n        });\n    }\n    // GET /users/:userId/wallets/:walletId/key-shares\n    getKeyshare(userId, walletId, type, encryptor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/${userId}/wallets/${walletId}/key-shares?type=${type}${encryptor ? `&encryptor=${encryptor}` : ''}`);\n            return res;\n        });\n    }\n    // GET /users/:userId/biometrics/key-shares\n    getBiometricKeyshares(userId, biometricPublicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/${userId}/biometrics/key-shares?publicKey=${biometricPublicKey}`);\n            return res;\n        });\n    }\n    // POST '/users/:userId/temporary-shares',\n    uploadTransmissionKeyshares(userId, shares) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const body = { shares };\n            const res = yield this.baseRequest.post(`/users/${userId}/temporary-shares`, body);\n            return res;\n        });\n    }\n    // GET /users/:userId/temporary-shares returns { temporaryShares: { userId: string, walletId: string, encryptedShare: string, encryptedKey?: string }[] }\n    getTransmissionKeyshares(userId, sessionLookupId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/${userId}/temporary-shares?sessionLookupId=${sessionLookupId}`);\n            return res;\n        });\n    }\n    // POST '/users/:userId/resend-verification-code\n    resendVerificationCode(_a) {\n        var { userId } = _a, rest = __rest(_a, [\"userId\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/resend-verification-code`, rest);\n            return res;\n        });\n    }\n    // POST '/users/:userId/resend-verification-code-by-phone\n    resendVerificationCodeByPhone(_a) {\n        var { userId } = _a, rest = __rest(_a, [\"userId\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/resend-verification-code-by-phone`, rest);\n            return res;\n        });\n    }\n    // POST recovery/cancel\n    cancelRecoveryAttempt(email) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`recovery/cancel`, { email });\n            return res;\n        });\n    }\n    // GET '/2fa/users/:userId/check-status'\n    check2FAStatus(userId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/2fa/users/${userId}/check-status`);\n            return res;\n        });\n    }\n    // POST '/2fa/users/:userId/enable'\n    enable2FA(userId, verificationCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/2fa/users/${userId}/enable`, { verificationCode });\n            return res;\n        });\n    }\n    // POST '/2fa/users/:userId/setup'\n    setup2FA(userId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/2fa/users/${userId}/setup`);\n            return res;\n        });\n    }\n    // POST /recovery/init\n    initializeRecovery(email) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/recovery/init`, { email });\n            return res;\n        });\n    }\n    // POST /auth/farcaster/init\n    initializeFarcasterLogin() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/auth/farcaster/init`);\n            return res;\n        });\n    }\n    // POST /auth/farcaster/status\n    getFarcasterAuthStatus() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/auth/farcaster/status`);\n            return res;\n        });\n    }\n    // POST /recovery/init\n    initializeRecoveryForPhone(phone, countryCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/recovery/init`, { phone, countryCode });\n            return res;\n        });\n    }\n    // POST /recovery/users/:userId/wallets/:walletId/finish\n    finalizeRecovery(userId, walletId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/recovery/users/${userId}/wallets/${walletId}/finish`);\n            return res;\n        });\n    }\n    // GET /recovery/users/:userId/wallets/:walletId/key-shares\n    recoverUserShares(userId, walletId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/recovery/users/${userId}/wallets/${walletId}/key-shares?type=USER&encryptor=RECOVERY`);\n            return res;\n        });\n    }\n    // POST /recovery/verify-email\n    verifyEmailForRecovery(email, verificationCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const body = { email, verificationCode };\n            const res = yield this.baseRequest.post(`/recovery/verify-email`, body);\n            return res;\n        });\n    }\n    // POST /recovery/verify-identifier\n    verifyPhoneForRecovery(phone, countryCode, verificationCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const body = { phone, countryCode, verificationCode };\n            const res = yield this.baseRequest.post(`/recovery/verify-identifier`, body);\n            return res;\n        });\n    }\n    // POST /2fa/verify\n    verify2FA(email, verificationCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const body = { email, verificationCode };\n            const res = yield this.baseRequest.post('/2fa/verify', body);\n            return res;\n        });\n    }\n    // POST /2fa/phone/verify\n    verify2FAForPhone(phone, countryCode, verificationCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const body = { phone, countryCode, verificationCode };\n            const res = yield this.baseRequest.post('/2fa/verify', body);\n            return res;\n        });\n    }\n    tempTrasmissionInit(message, userId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const body = { message, userId };\n            const res = yield this.baseRequest.post('/temporary-transmissions', body);\n            return res;\n        });\n    }\n    tempTrasmission(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/temporary-transmissions/${id}`);\n            return res;\n        });\n    }\n    getPartner(partnerId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/partners/${partnerId}`);\n            return res;\n        });\n    }\n    acceptScopes(userId, body) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/scopes/accept`, body);\n            return res;\n        });\n    }\n    getPendingTransaction(userId, pendingTransactionid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/${userId}/pending-transactions/${pendingTransactionid}`);\n            return res;\n        });\n    }\n    acceptPendingTransaction(userId, pendingTransactionId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/pending-transactions/${pendingTransactionId}/accept`);\n            return res;\n        });\n    }\n    getPolicyPermissions(userId, policyId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/${userId}/policies/${policyId}/permissions`);\n            return res;\n        });\n    }\n    createOnRampPurchase(userId, walletId, provider, network, asset, testMode = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/wallets/${walletId}/purchases`, {\n                provider,\n                network,\n                asset,\n                testMode,\n            });\n            return res;\n        });\n    }\n    updateOnRampPurchase(userId, walletId, purchaseId, updates) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.patch(`/users/${userId}/wallets/${walletId}/purchases/${purchaseId}`, updates);\n            return res;\n        });\n    }\n    getOnRampPurchase(userId, walletId, purchaseId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/${userId}/wallets/${walletId}/purchases/${purchaseId}`);\n            return res;\n        });\n    }\n    distributeCapsuleShare(_a) {\n        var { userId, walletId } = _a, rest = __rest(_a, [\"userId\", \"walletId\"]);\n        return __awaiter(this, void 0, void 0, function* () {\n            const body = rest;\n            const res = yield this.baseRequest.post(`/users/${userId}/wallets/${walletId}/capsule-share/distribute`, body);\n            return res;\n        });\n    }\n    keepSessionAlive(userId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/session/keep-alive`);\n            return res.data;\n        });\n    }\n    persistRecoveryPublicKeys(userId, publicKeys) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/recovery-public-keys`, { publicKeys });\n            return res.data;\n        });\n    }\n    getRecoveryPublicKeys(userId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/${userId}/recovery-public-keys`);\n            return res.data;\n        });\n    }\n    uploadEncryptedWalletPrivateKey(userId, encryptedWalletPrivateKey, encryptionKeyHash, biometricPublicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const body = { encryptedWalletPrivateKey, encryptionKeyHash, biometricPublicKey };\n            const res = yield this.baseRequest.post(`/users/${userId}/encrypted-wallet-private-keys`, body);\n            return res.data;\n        });\n    }\n    getEncryptedWalletPrivateKeys(userId, encryptionKeyHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/${userId}/encrypted-wallet-private-keys/${encryptionKeyHash}`);\n            return res.data;\n        });\n    }\n}\nexport default Client;\n// GET /users/:userId/wallets/:walletId/send (NOTE: endpoint not found in server)\n// NOT USED IN DEMO\n// POST /users/:userId/wallets/:walletId/presign\n// POST /users/:userId/wallets/:walletId/presign-online\n// POST /auth/signup/web\n// GET /logout\n// POST /users/:userId/wallets/:walletId/key\n// GET /users/:userId/wallets/:walletId/key\n// GET /users/:userId/configurations\n// POST /users/:userId/permissions\n// GET /\n","import { Buffer as NodeBuffer } from 'buffer';\nif (typeof global !== 'undefined') {\n    global.Buffer = global.Buffer || NodeBuffer;\n}\nelse if (typeof window !== 'undefined') {\n    window.Buffer = window.Buffer || NodeBuffer;\n    window.global = window.global || window;\n}\nelse {\n    self.Buffer = self.Buffer || NodeBuffer;\n    self.global = self.global || self;\n}\nimport { Network, OnRampAsset, OnRampProvider, OnRampPurchaseStatus, } from '@usecapsule/user-management-client';\nexport { Network, OnRampAsset, OnRampProvider, OnRampPurchaseStatus };\nexport const is2FAEnabled = false;\nexport var Environment;\n(function (Environment) {\n    // Internal Environments\n    Environment[\"DEV\"] = \"DEV\";\n    Environment[\"SANDBOX\"] = \"SANDBOX\";\n    Environment[\"BETA\"] = \"BETA\";\n    Environment[\"PROD\"] = \"PROD\";\n    // Customer-Facing Environments\n    // NOTE: these resolve to the corresponding internal environments for convenience\n    Environment[\"DEVELOPMENT\"] = \"BETA\";\n    Environment[\"PRODUCTION\"] = \"PROD\";\n})(Environment || (Environment = {}));\nexport var OAuthMethod;\n(function (OAuthMethod) {\n    OAuthMethod[\"GOOGLE\"] = \"GOOGLE\";\n    OAuthMethod[\"TWITTER\"] = \"TWITTER\";\n    OAuthMethod[\"APPLE\"] = \"APPLE\";\n    OAuthMethod[\"DISCORD\"] = \"DISCORD\";\n    OAuthMethod[\"FACEBOOK\"] = \"FACEBOOK\";\n    OAuthMethod[\"FARCASTER\"] = \"FARCASTER\";\n})(OAuthMethod || (OAuthMethod = {}));\nexport const NetworkMap = {\n    ethereum: Network.ETHEREUM,\n    ETHEREUM: Network.ETHEREUM,\n    arbitrum: Network.ARBITRUM,\n    ARBITRUM: Network.ARBITRUM,\n    base: Network.BASE,\n    BASE: Network.BASE,\n    optimism: Network.OPTIMISM,\n    OPTIMISM: Network.OPTIMISM,\n    POLYGON: Network.POLYGON,\n    polygon: Network.POLYGON,\n};\nexport const SupportedOnRamps = {\n    [Network.ETHEREUM]: {\n        [OnRampAsset.ETHEREUM]: {\n            [OnRampProvider.RAMP]: true,\n            [OnRampProvider.STRIPE]: true,\n        },\n        [OnRampAsset.USDC]: {\n            [OnRampProvider.RAMP]: true,\n            [OnRampProvider.STRIPE]: true,\n        },\n    },\n    [Network.ARBITRUM]: {\n        [OnRampAsset.ETHEREUM]: {\n            [OnRampProvider.RAMP]: true,\n        },\n        [OnRampAsset.USDC]: {\n            [OnRampProvider.RAMP]: true,\n        },\n    },\n    [Network.BASE]: {\n        [OnRampAsset.ETHEREUM]: {\n            [OnRampProvider.RAMP]: true,\n        },\n        [OnRampAsset.USDC]: {\n            [OnRampProvider.RAMP]: true,\n        },\n    },\n    [Network.OPTIMISM]: {\n        [OnRampAsset.ETHEREUM]: {\n            [OnRampProvider.RAMP]: true,\n        },\n        [OnRampAsset.USDC]: {\n            [OnRampProvider.RAMP]: true,\n        },\n    },\n    [Network.POLYGON]: {\n        [OnRampAsset.POLYGON]: {\n            [OnRampProvider.RAMP]: true,\n            [OnRampProvider.STRIPE]: true,\n        },\n        [OnRampAsset.USDC]: {\n            [OnRampProvider.RAMP]: true,\n            [OnRampProvider.STRIPE]: true,\n        },\n    },\n};\nexport const OnRampProviderMap = {\n    STRIPE: OnRampProvider.STRIPE,\n    stripe: OnRampProvider.STRIPE,\n    RAMP: OnRampProvider.RAMP,\n    ramp: OnRampProvider.RAMP,\n};\nexport const OnRampAssetMap = {\n    eth: OnRampAsset.ETHEREUM,\n    ETH: OnRampAsset.ETHEREUM,\n    ethereum: OnRampAsset.ETHEREUM,\n    ETHEREUM: OnRampAsset.ETHEREUM,\n    usdc: OnRampAsset.USDC,\n    USDC: OnRampAsset.USDC,\n    polygon: OnRampAsset.POLYGON,\n    POLYGON: OnRampAsset.POLYGON,\n    matic: OnRampAsset.POLYGON,\n    MATIC: OnRampAsset.POLYGON,\n};\nexport const OnRampProviderNetworkMap = {\n    [OnRampProvider.RAMP]: {\n        [Network.ETHEREUM]: 'ETH',\n        [Network.ARBITRUM]: 'ARBITRUM',\n        [Network.BASE]: 'BASE',\n        [Network.OPTIMISM]: 'OPTIMISM',\n        [Network.POLYGON]: 'MATIC',\n    },\n    [OnRampProvider.STRIPE]: {\n        [Network.ETHEREUM]: 'ethereum',\n        [Network.POLYGON]: 'polygon',\n    },\n};\nexport const OnRampProviderAssetMap = {\n    [OnRampProvider.RAMP]: {\n        [OnRampAsset.ETHEREUM]: 'ETH',\n        [OnRampAsset.USDC]: 'USDC',\n        [OnRampAsset.POLYGON]: 'MATIC',\n    },\n    [OnRampProvider.STRIPE]: {\n        [OnRampAsset.ETHEREUM]: 'eth',\n        [OnRampAsset.USDC]: 'usdc',\n        [OnRampAsset.POLYGON]: 'matic',\n    },\n};\nexport var OnRampMethod;\n(function (OnRampMethod) {\n    OnRampMethod[\"ACH\"] = \"ACH\";\n    OnRampMethod[\"DEBIT\"] = \"Debit\";\n    OnRampMethod[\"CREDIT\"] = \"Credit\";\n    OnRampMethod[\"APPLE_PAY\"] = \"Apple Pay\";\n})(OnRampMethod || (OnRampMethod = {}));\nexport function getProvider(key) {\n    return OnRampProviderMap[key];\n}\nexport function getAsset(key) {\n    return OnRampAssetMap[key];\n}\nexport const getProviderNetworkAndAssetCode = (networkProp, assetProp, providerProp, testMode = false) => {\n    const [network, asset, provider] = [getNetwork(networkProp), getAsset(assetProp), getProvider(providerProp)];\n    if (!SupportedOnRamps[network][asset][provider]) {\n        throw new Error(`Provider ${provider} does not support asset ${asset} on ${network}`);\n    }\n    switch (provider) {\n        case OnRampProvider.RAMP:\n            if (testMode) {\n                return ['SEPOLIA_ETH'];\n            }\n            return [`${OnRampProviderNetworkMap[provider][network]}_${OnRampProviderAssetMap[provider][asset]}`];\n        default:\n            return [OnRampProviderNetworkMap[provider][network], OnRampProviderAssetMap[provider][asset]];\n    }\n};\nexport function getProviderAssetInverse(provider, asset) {\n    const match = Object.entries(OnRampProviderAssetMap[getProvider(provider)]).find(([, theirAssetCode]) => asset === theirAssetCode);\n    return match ? match[0] : undefined;\n}\nexport function getNetwork(networkProp) {\n    return NetworkMap[networkProp];\n}\nexport function getPortalDomain(env) {\n    switch (env) {\n        case Environment.DEV:\n            return 'localhost';\n        case Environment.SANDBOX:\n            return 'app.sandbox.usecapsule.com';\n        case Environment.BETA:\n            return 'app.beta.usecapsule.com';\n        case Environment.PROD:\n            return 'app.usecapsule.com';\n        default:\n            throw new Error(`env: ${env} not supported`);\n    }\n}\nexport function getPortalBaseURL({ env }, useLocalIp) {\n    const domain = getPortalDomain(env);\n    if (env === Environment.DEV) {\n        if (useLocalIp) {\n            return `http://127.0.0.1:3003`;\n        }\n        return `http://${domain}:3003`;\n    }\n    return `https://${domain}`;\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport base64url from 'base64url';\nimport forge from 'node-forge';\nimport { getPortalBaseURL } from '../definitions.js';\nconst rsa = forge.pki.rsa;\nconst RSA_ENCRYPTION_SCHEME = 'RSA-OAEP';\n// ivs can be constant only because every key is only ever used to encrypt one message\nconst CONSTANT_IV = '794241bc819a125a7b78ea313decc0bc';\nconst CONSTANT_IV_AES = new Uint8Array([23, 66, 157, 146, 179, 158, 117, 120, 184, 73, 123, 81]);\nexport function getSHA256HashHex(str) {\n    const md = forge.md.sha256.create();\n    md.update(str);\n    return md.digest().toHex();\n}\nexport function getPublicKeyHex(keyPair) {\n    const pem = forge.pki.publicKeyToRSAPublicKeyPem(keyPair.publicKey);\n    return Buffer.from(pem, 'utf-8').toString('hex');\n}\nexport function publicKeyHexToPem(publicKeyHex) {\n    return Buffer.from(publicKeyHex, 'hex').toString('utf-8');\n}\nexport function encodePrivateKeyToPemHex(keyPair) {\n    const pem = forge.pki.privateKeyToPem(keyPair.privateKey);\n    return Buffer.from(pem, 'utf-8').toString('hex');\n}\nexport function decodePrivateKeyPemHex(privateKeyPemHex) {\n    const pem = Buffer.from(privateKeyPemHex, 'hex').toString('utf-8');\n    return forge.pki.privateKeyFromPem(pem);\n}\nexport function encryptPrivateKey(keyPair, key) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const privateKeyPemHex = encodePrivateKeyToPemHex(keyPair);\n        const cryptoKey = yield window.crypto.subtle.importKey('raw', Buffer.from(key, 'base64'), {\n            name: 'AES-GCM',\n            length: 256,\n        }, true, ['encrypt', 'decrypt']);\n        const encodedPlaintext = new TextEncoder().encode(privateKeyPemHex);\n        const ciphertext = yield window.crypto.subtle.encrypt({ name: 'AES-GCM', iv: CONSTANT_IV_AES }, cryptoKey, encodedPlaintext);\n        return Buffer.from(ciphertext).toString('base64');\n    });\n}\nexport function decryptPrivateKey(encryptedPrivateKeyPemHex, key) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const secretKey = yield crypto.subtle.importKey('raw', Buffer.from(key, 'base64'), {\n            name: 'AES-GCM',\n            length: 256,\n        }, true, ['encrypt', 'decrypt']);\n        const cleartext = yield crypto.subtle.decrypt({ name: 'AES-GCM', iv: CONSTANT_IV_AES }, secretKey, Buffer.from(encryptedPrivateKeyPemHex, 'base64'));\n        const privateKeyPemHex = new TextDecoder().decode(cleartext);\n        const privateKey = decodePrivateKeyPemHex(privateKeyPemHex);\n        return privateKey;\n    });\n}\nexport function getAsymmetricKeyPair(ctx, seedValue) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const prng = forge.random.createInstance();\n        if (seedValue) {\n            prng.seedFileSync = (_n) => seedValue;\n            prng.seedFile = (_n, cb) => {\n                cb(null, seedValue);\n            };\n        }\n        const options = {\n            bits: 2048,\n            e: 65537,\n            prng,\n        };\n        if (!ctx.disableWorkers) {\n            options.workLoad = 100;\n            // only using 1 web worker as more makes the call non-deterministic\n            // -1 uses optimal amount of web workers\n            options.workers = seedValue ? 1 : -1;\n            const workerRes = yield fetch(`${getPortalBaseURL(ctx)}/static/js/prime.worker.min.js`);\n            const workerBlob = new Blob([yield workerRes.text()], { type: 'application/javascript' });\n            options.workerScript = URL.createObjectURL(workerBlob);\n        }\n        return new Promise((resolve, reject) => rsa.generateKeyPair(options, (err, keypair) => {\n            if (err) {\n                reject(err);\n            }\n            resolve(keypair);\n        }));\n    });\n}\nexport function getPublicKeyFromSignature(ctx, userHandle) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const encodedUserHandle = base64url.encode(userHandle);\n        const keyPair = yield getAsymmetricKeyPair(ctx, encodedUserHandle);\n        return getPublicKeyHex(keyPair);\n    });\n}\n// only use for one time key encryptions as iv is constant\nexport function symmetricKeyEncryptMessage(message) {\n    const key = forge.random.getBytesSync(16);\n    const cipher = forge.cipher.createCipher('AES-CBC', key);\n    // iv can be constant only because every key is only ever used to encrypt one message\n    cipher.start({ iv: CONSTANT_IV });\n    cipher.update(forge.util.createBuffer(message));\n    cipher.finish();\n    const encryptedMessageHex = cipher.output.toHex();\n    return { key, encryptedMessageHex };\n}\nfunction decipherEncryptedMessageHex(key, encryptedMessageHex) {\n    const decipher = forge.cipher.createDecipher('AES-CBC', key);\n    // iv can be constant only because every key is only ever used to encrypt one message\n    decipher.start({ iv: CONSTANT_IV });\n    decipher.update(forge.util.createBuffer(forge.util.hexToBytes(encryptedMessageHex)));\n    decipher.finish();\n    return decipher.output.toString();\n}\n// Deprecated in favor of decryptWithPrivateKey\nexport function decryptWithKeyPair(keyPair, encryptedMessageHex, encryptedKeyHex) {\n    const encryptedKey = Buffer.from(encryptedKeyHex, 'hex').toString('utf-8');\n    const key = keyPair.privateKey.decrypt(encryptedKey, RSA_ENCRYPTION_SCHEME);\n    return decipherEncryptedMessageHex(key, encryptedMessageHex);\n}\nexport function decryptWithPrivateKey(privateKey, encryptedMessageHex, encryptedKeyHex) {\n    const encryptedKey = Buffer.from(encryptedKeyHex, 'hex').toString('utf-8');\n    const key = privateKey.decrypt(encryptedKey, RSA_ENCRYPTION_SCHEME);\n    return decipherEncryptedMessageHex(key, encryptedMessageHex);\n}\nfunction decryptWithDerivedPrivateKey(ctx, seedValue, encryptedMessageHex, encryptedKeyHex) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const keyPair = yield getAsymmetricKeyPair(ctx, seedValue);\n        return decryptWithPrivateKey(keyPair.privateKey, encryptedMessageHex, encryptedKeyHex);\n    });\n}\nexport function getDerivedPrivateKeyAndDecrypt(ctx, seedValue, encryptedShares) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return Promise.all(encryptedShares.map((share) => __awaiter(this, void 0, void 0, function* () {\n            return ({\n                walletId: share.walletId,\n                signer: yield decryptWithDerivedPrivateKey(ctx, seedValue, share.encryptedShare, share.encryptedKey),\n            });\n        })));\n    });\n}\nexport function decryptPrivateKeyAndDecryptShare(encryptionKey, encryptedShares, encryptedPrivateKey) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const privateKey = yield decryptPrivateKey(encryptedPrivateKey, encryptionKey);\n        return encryptedShares.map((share) => ({\n            walletId: share.walletId,\n            signer: decryptWithPrivateKey(privateKey, share.encryptedShare, share.encryptedKey),\n        }));\n    });\n}\nexport function encryptWithDerivedPublicKey(publicKeyHex, message) {\n    const { key, encryptedMessageHex } = symmetricKeyEncryptMessage(message);\n    const publicKeyPem = publicKeyHexToPem(publicKeyHex);\n    const publicKey = forge.pki.publicKeyFromPem(publicKeyPem);\n    const encryptedKey = publicKey.encrypt(key, RSA_ENCRYPTION_SCHEME);\n    const encryptedKeyHex = Buffer.from(encryptedKey, 'utf-8').toString('hex');\n    return { encryptedMessageHex, encryptedKeyHex };\n}\n","export * from './client.js';\nimport Client from './client.js';\nexport default Client;\n","import Client from '@usecapsule/user-management-client';\nimport { Environment } from '../definitions.js';\nexport function getBaseUrl(env) {\n    switch (env) {\n        case Environment.DEV:\n            return 'http://localhost:8080/';\n        case Environment.SANDBOX:\n            return 'https://api.sandbox.usecapsule.com/';\n        case Environment.BETA:\n            return 'https://api.beta.usecapsule.com/';\n        case Environment.PROD:\n            return 'https://api.usecapsule.com/';\n        default:\n            throw new Error(`unsupported env: ${env}`);\n    }\n}\nexport function getBaseMPCNetworkUrl(env, useWebsocket) {\n    const prefix = useWebsocket ? 'ws' : 'http';\n    switch (env) {\n        case Environment.DEV:\n            return `${prefix}://localhost:3000`;\n        case Environment.SANDBOX:\n            return `${prefix}s://mpc-network.sandbox.usecapsule.com`;\n        case Environment.BETA:\n            return `${prefix}s://mpc-network.beta.usecapsule.com`;\n        case Environment.PROD:\n            return `${prefix}s://mpc-network.prod.usecapsule.com`;\n        default:\n            throw new Error(`unsupported env: ${env}`);\n    }\n}\nexport function initClient(env, apiKey, useFetchAdapter, retrieveSessionCookie, persistSessionCookie) {\n    return new Client({\n        userManagementHost: getBaseUrl(env),\n        apiKey: apiKey,\n        opts: { useFetchAdapter },\n        retrieveSessionCookie,\n        persistSessionCookie,\n    });\n}\n","import axios from 'axios';\nexport function initClient(baseURL, useAdapter) {\n    const client = axios.create({ baseURL });\n    if (useAdapter) {\n        client.defaults.adapter = function (config) {\n            return fetch(config.baseURL + config.url, {\n                method: config.method,\n                headers: config.headers,\n                body: config.data,\n                credentials: config.withCredentials ? 'include' : undefined,\n            })\n                .then((response) => response.text().then((text) => ({\n                data: text,\n                status: response.status,\n                statusText: response.statusText,\n                headers: response.headers,\n                config: config,\n                request: fetch,\n            })))\n                .catch(function (reason) {\n                throw reason;\n            });\n        };\n    }\n    return client;\n}\n","import { Encrypt as ECIESEncrypt, Decrypt as ECIESDecrypt } from '@celo/utils/lib/ecies.js';\nimport * as eutil from 'ethereumjs-util';\nimport * as forge from 'node-forge';\nexport class KeyContainer {\n    constructor(walletId, keyshare, address) {\n        this.walletId = walletId;\n        this.keyshare = keyshare;\n        this.address = address;\n        this.backupDecryptionKey = Buffer.from(forge.random.getBytesSync(32), 'binary').toString('hex');\n    }\n    static buildFrom(serializedContainer) {\n        try {\n            const parsedObject = JSON.parse(serializedContainer);\n            return Object.assign(new KeyContainer('', '', ''), parsedObject);\n        }\n        catch (e) {\n            const container = new KeyContainer('', '', '');\n            container.backupDecryptionKey = serializedContainer.split('|')[0];\n            return container;\n        }\n    }\n    getPublicEncryptionKey() {\n        return Buffer.from(eutil.privateToPublic(Buffer.from(this.backupDecryptionKey, 'hex')));\n    }\n    getPublicEncryptionKeyHex() {\n        return this.getPublicEncryptionKey().toString('hex');\n    }\n    encryptForSelf(backup) {\n        try {\n            const pubkey = this.getPublicEncryptionKey();\n            const data = ECIESEncrypt(pubkey, Buffer.from(backup, 'ucs2')).toString('base64');\n            return data;\n        }\n        catch (error) {\n            throw Error('Error encrypting backup');\n        }\n    }\n    static encryptWithPublicKey(publicKey, backup) {\n        try {\n            const data = ECIESEncrypt(publicKey, Buffer.from(backup, 'ucs2')).toString('base64');\n            return data;\n        }\n        catch (error) {\n            throw Error('Error encrypting backup');\n        }\n    }\n    decrypt(encryptedBackup) {\n        try {\n            const buf = Buffer.from(encryptedBackup, 'base64');\n            const data = ECIESDecrypt(Buffer.from(this.backupDecryptionKey, 'hex'), buf);\n            return data.toString('ucs2');\n        }\n        catch (error) {\n            throw Error('Error decrypting backup');\n        }\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { EncryptorType, KeyType } from '@usecapsule/user-management-client';\nimport { KeyContainer } from './KeyContainer.js';\nexport function sendRecoveryForShare(ctx, userId, walletId, otherEncryptedShares, userSigner, ignoreRedistributingBackupEncryptedShare = false, emailProps) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let userBackupKeyShareOptsArr;\n        let recoveryPrivateKeyContainer;\n        const { recoveryPublicKeys } = yield ctx.capsuleClient.getRecoveryPublicKeys(userId);\n        if (!(recoveryPublicKeys === null || recoveryPublicKeys === void 0 ? void 0 : recoveryPublicKeys.length)) {\n            recoveryPrivateKeyContainer = new KeyContainer(walletId, '', '');\n            const { recoveryPublicKeys } = yield ctx.capsuleClient.persistRecoveryPublicKeys(userId, [\n                recoveryPrivateKeyContainer.getPublicEncryptionKeyHex(),\n            ]);\n            const encryptedUserBackup = recoveryPrivateKeyContainer.encryptForSelf(userSigner);\n            userBackupKeyShareOptsArr = [\n                {\n                    walletId,\n                    encryptedShare: encryptedUserBackup,\n                    type: KeyType.USER,\n                    encryptor: EncryptorType.RECOVERY,\n                    recoveryPublicKeyId: recoveryPublicKeys[0].id,\n                },\n            ];\n        }\n        else {\n            userBackupKeyShareOptsArr = recoveryPublicKeys.map((recoveryPublicKey) => {\n                const { id: recoveryPublicKeyId, publicKey } = recoveryPublicKey;\n                const encryptedUserBackup = KeyContainer.encryptWithPublicKey(Buffer.from(publicKey, 'hex'), userSigner);\n                return {\n                    walletId,\n                    encryptedShare: encryptedUserBackup,\n                    type: KeyType.USER,\n                    encryptor: EncryptorType.RECOVERY,\n                    recoveryPublicKeyId,\n                };\n            });\n        }\n        yield ctx.capsuleClient.uploadUserKeyShares(userId, [\n            ...otherEncryptedShares.map((share) => (Object.assign({ walletId }, share))),\n            ...(ignoreRedistributingBackupEncryptedShare ? [] : userBackupKeyShareOptsArr),\n        ]);\n        if (!ignoreRedistributingBackupEncryptedShare) {\n            yield ctx.capsuleClient.distributeCapsuleShare(Object.assign({ userId,\n                walletId, useDKLS: ctx.useDKLS }, emailProps));\n        }\n        return recoveryPrivateKeyContainer ? JSON.stringify(recoveryPrivateKeyContainer) : '';\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { EncryptorType, KeyType } from '@usecapsule/user-management-client';\nimport { encryptWithDerivedPublicKey } from '../cryptography/utils.js';\nimport { sendRecoveryForShare } from './recovery.js';\n// function to call on new user share to perform all necessary distribution\nexport function distributeNewShare(ctx, userId, walletId, userShare, ignoreRedistributingBackupEncryptedShare = false, emailProps) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const publicKeysRes = yield ctx.capsuleClient.getSessionPublicKeys(userId);\n        const biometricEncryptedShares = publicKeysRes.data.keys\n            .map((key) => {\n            if (!key.publicKey) {\n                return;\n            }\n            const { encryptedMessageHex, encryptedKeyHex } = encryptWithDerivedPublicKey(key.sigDerivedPublicKey, userShare);\n            return {\n                encryptedShare: encryptedMessageHex,\n                encryptedKey: encryptedKeyHex,\n                type: KeyType.USER,\n                encryptor: EncryptorType.BIOMETRICS,\n                biometricPublicKey: key.sigDerivedPublicKey,\n            };\n        })\n            .filter(Boolean);\n        return yield sendRecoveryForShare(ctx, userId, walletId, biometricEncryptedShares, userShare, ignoreRedistributingBackupEncryptedShare, emailProps);\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { randomBytes } from 'crypto';\nimport { Encrypt as ECIESEncrypt, Decrypt as ECIESDecrypt } from '@celo/utils/lib/ecies.js';\nimport { Buffer } from 'buffer';\nimport * as eutil from 'ethereumjs-util';\nexport function upload(message, userManagementClient) {\n    return __awaiter(this, void 0, void 0, function* () {\n        let secret;\n        let publicKeyUint8Array;\n        while (true) {\n            try {\n                secret = randomBytes(32).toString('hex');\n                // privateToPublic throws error when private key is larger than group order\n                // so we want to keep trying until we get a valid private key\n                publicKeyUint8Array = eutil.privateToPublic(Buffer.from(secret, 'hex'));\n                break;\n            }\n            catch (e) {\n                continue;\n            }\n        }\n        const pubkey = Buffer.from(publicKeyUint8Array);\n        const data = ECIESEncrypt(pubkey, Buffer.from(message, 'ucs2')).toString('base64');\n        const { data: { id }, } = yield userManagementClient.tempTrasmissionInit(data);\n        return encodeURIComponent(id + '|' + secret);\n    });\n}\nexport function retrieve(uriEncodedMessage, userManagementClient) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [id, secret] = decodeURIComponent(uriEncodedMessage).split('|');\n        const response = yield userManagementClient.tempTrasmission(id);\n        const data = response.data.message;\n        const buf = Buffer.from(data, 'base64');\n        const res = ECIESDecrypt(Buffer.from(secret, 'hex'), buf).toString('ucs2');\n        return res;\n    });\n}\n","// This file is a workaround for a bug in web browsers' \"native\"\n// ES6 importing system which is uncapable of importing \"*.json\" files.\n// https://github.com/catamphetamine/libphonenumber-js/issues/239\nexport default {\"version\":4,\"country_calling_codes\":{\"1\":[\"US\",\"AG\",\"AI\",\"AS\",\"BB\",\"BM\",\"BS\",\"CA\",\"DM\",\"DO\",\"GD\",\"GU\",\"JM\",\"KN\",\"KY\",\"LC\",\"MP\",\"MS\",\"PR\",\"SX\",\"TC\",\"TT\",\"VC\",\"VG\",\"VI\"],\"7\":[\"RU\",\"KZ\"],\"20\":[\"EG\"],\"27\":[\"ZA\"],\"30\":[\"GR\"],\"31\":[\"NL\"],\"32\":[\"BE\"],\"33\":[\"FR\"],\"34\":[\"ES\"],\"36\":[\"HU\"],\"39\":[\"IT\",\"VA\"],\"40\":[\"RO\"],\"41\":[\"CH\"],\"43\":[\"AT\"],\"44\":[\"GB\",\"GG\",\"IM\",\"JE\"],\"45\":[\"DK\"],\"46\":[\"SE\"],\"47\":[\"NO\",\"SJ\"],\"48\":[\"PL\"],\"49\":[\"DE\"],\"51\":[\"PE\"],\"52\":[\"MX\"],\"53\":[\"CU\"],\"54\":[\"AR\"],\"55\":[\"BR\"],\"56\":[\"CL\"],\"57\":[\"CO\"],\"58\":[\"VE\"],\"60\":[\"MY\"],\"61\":[\"AU\",\"CC\",\"CX\"],\"62\":[\"ID\"],\"63\":[\"PH\"],\"64\":[\"NZ\"],\"65\":[\"SG\"],\"66\":[\"TH\"],\"81\":[\"JP\"],\"82\":[\"KR\"],\"84\":[\"VN\"],\"86\":[\"CN\"],\"90\":[\"TR\"],\"91\":[\"IN\"],\"92\":[\"PK\"],\"93\":[\"AF\"],\"94\":[\"LK\"],\"95\":[\"MM\"],\"98\":[\"IR\"],\"211\":[\"SS\"],\"212\":[\"MA\",\"EH\"],\"213\":[\"DZ\"],\"216\":[\"TN\"],\"218\":[\"LY\"],\"220\":[\"GM\"],\"221\":[\"SN\"],\"222\":[\"MR\"],\"223\":[\"ML\"],\"224\":[\"GN\"],\"225\":[\"CI\"],\"226\":[\"BF\"],\"227\":[\"NE\"],\"228\":[\"TG\"],\"229\":[\"BJ\"],\"230\":[\"MU\"],\"231\":[\"LR\"],\"232\":[\"SL\"],\"233\":[\"GH\"],\"234\":[\"NG\"],\"235\":[\"TD\"],\"236\":[\"CF\"],\"237\":[\"CM\"],\"238\":[\"CV\"],\"239\":[\"ST\"],\"240\":[\"GQ\"],\"241\":[\"GA\"],\"242\":[\"CG\"],\"243\":[\"CD\"],\"244\":[\"AO\"],\"245\":[\"GW\"],\"246\":[\"IO\"],\"247\":[\"AC\"],\"248\":[\"SC\"],\"249\":[\"SD\"],\"250\":[\"RW\"],\"251\":[\"ET\"],\"252\":[\"SO\"],\"253\":[\"DJ\"],\"254\":[\"KE\"],\"255\":[\"TZ\"],\"256\":[\"UG\"],\"257\":[\"BI\"],\"258\":[\"MZ\"],\"260\":[\"ZM\"],\"261\":[\"MG\"],\"262\":[\"RE\",\"YT\"],\"263\":[\"ZW\"],\"264\":[\"NA\"],\"265\":[\"MW\"],\"266\":[\"LS\"],\"267\":[\"BW\"],\"268\":[\"SZ\"],\"269\":[\"KM\"],\"290\":[\"SH\",\"TA\"],\"291\":[\"ER\"],\"297\":[\"AW\"],\"298\":[\"FO\"],\"299\":[\"GL\"],\"350\":[\"GI\"],\"351\":[\"PT\"],\"352\":[\"LU\"],\"353\":[\"IE\"],\"354\":[\"IS\"],\"355\":[\"AL\"],\"356\":[\"MT\"],\"357\":[\"CY\"],\"358\":[\"FI\",\"AX\"],\"359\":[\"BG\"],\"370\":[\"LT\"],\"371\":[\"LV\"],\"372\":[\"EE\"],\"373\":[\"MD\"],\"374\":[\"AM\"],\"375\":[\"BY\"],\"376\":[\"AD\"],\"377\":[\"MC\"],\"378\":[\"SM\"],\"380\":[\"UA\"],\"381\":[\"RS\"],\"382\":[\"ME\"],\"383\":[\"XK\"],\"385\":[\"HR\"],\"386\":[\"SI\"],\"387\":[\"BA\"],\"389\":[\"MK\"],\"420\":[\"CZ\"],\"421\":[\"SK\"],\"423\":[\"LI\"],\"500\":[\"FK\"],\"501\":[\"BZ\"],\"502\":[\"GT\"],\"503\":[\"SV\"],\"504\":[\"HN\"],\"505\":[\"NI\"],\"506\":[\"CR\"],\"507\":[\"PA\"],\"508\":[\"PM\"],\"509\":[\"HT\"],\"590\":[\"GP\",\"BL\",\"MF\"],\"591\":[\"BO\"],\"592\":[\"GY\"],\"593\":[\"EC\"],\"594\":[\"GF\"],\"595\":[\"PY\"],\"596\":[\"MQ\"],\"597\":[\"SR\"],\"598\":[\"UY\"],\"599\":[\"CW\",\"BQ\"],\"670\":[\"TL\"],\"672\":[\"NF\"],\"673\":[\"BN\"],\"674\":[\"NR\"],\"675\":[\"PG\"],\"676\":[\"TO\"],\"677\":[\"SB\"],\"678\":[\"VU\"],\"679\":[\"FJ\"],\"680\":[\"PW\"],\"681\":[\"WF\"],\"682\":[\"CK\"],\"683\":[\"NU\"],\"685\":[\"WS\"],\"686\":[\"KI\"],\"687\":[\"NC\"],\"688\":[\"TV\"],\"689\":[\"PF\"],\"690\":[\"TK\"],\"691\":[\"FM\"],\"692\":[\"MH\"],\"850\":[\"KP\"],\"852\":[\"HK\"],\"853\":[\"MO\"],\"855\":[\"KH\"],\"856\":[\"LA\"],\"880\":[\"BD\"],\"886\":[\"TW\"],\"960\":[\"MV\"],\"961\":[\"LB\"],\"962\":[\"JO\"],\"963\":[\"SY\"],\"964\":[\"IQ\"],\"965\":[\"KW\"],\"966\":[\"SA\"],\"967\":[\"YE\"],\"968\":[\"OM\"],\"970\":[\"PS\"],\"971\":[\"AE\"],\"972\":[\"IL\"],\"973\":[\"BH\"],\"974\":[\"QA\"],\"975\":[\"BT\"],\"976\":[\"MN\"],\"977\":[\"NP\"],\"992\":[\"TJ\"],\"993\":[\"TM\"],\"994\":[\"AZ\"],\"995\":[\"GE\"],\"996\":[\"KG\"],\"998\":[\"UZ\"]},\"countries\":{\"AC\":[\"247\",\"00\",\"(?:[01589]\\\\d|[46])\\\\d{4}\",[5,6]],\"AD\":[\"376\",\"00\",\"(?:1|6\\\\d)\\\\d{7}|[135-9]\\\\d{5}\",[6,8,9],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"[135-9]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"1\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]]]],\"AE\":[\"971\",\"00\",\"(?:[4-7]\\\\d|9[0-689])\\\\d{7}|800\\\\d{2,9}|[2-4679]\\\\d{7}\",[5,6,7,8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{2,9})\",\"$1 $2\",[\"60|8\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[236]|[479][2-8]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{5})\",\"$1 $2 $3\",[\"[479]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"]],\"0\"],\"AF\":[\"93\",\"00\",\"[2-7]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-7]\"],\"0$1\"]],\"0\"],\"AG\":[\"1\",\"011\",\"(?:268|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([457]\\\\d{6})$|1\",\"268$1\",0,\"268\"],\"AI\":[\"1\",\"011\",\"(?:264|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2457]\\\\d{6})$|1\",\"264$1\",0,\"264\"],\"AL\":[\"355\",\"00\",\"(?:700\\\\d\\\\d|900)\\\\d{3}|8\\\\d{5,7}|(?:[2-5]|6\\\\d)\\\\d{7}\",[6,7,8,9],[[\"(\\\\d{3})(\\\\d{3,4})\",\"$1 $2\",[\"80|9\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"4[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2358][2-5]|4\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[23578]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"6\"],\"0$1\"]],\"0\"],\"AM\":[\"374\",\"00\",\"(?:[1-489]\\\\d|55|60|77)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]0\"],\"0 $1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"2|3[12]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"1|47\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[3-9]\"],\"0$1\"]],\"0\"],\"AO\":[\"244\",\"00\",\"[29]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[29]\"]]]],\"AR\":[\"54\",\"00\",\"(?:11|[89]\\\\d\\\\d)\\\\d{8}|[2368]\\\\d{9}\",[10,11],[[\"(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$1 $2-$3\",[\"2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9])\",\"2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8]))|2(?:2[24-9]|3[1-59]|47)\",\"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5[56][46]|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\",\"2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|58|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|54(?:4|5[13-7]|6[89])|86[3-6]))|2(?:2[24-9]|3[1-59]|47)|38(?:[58][78]|7[378])|3(?:454|85[56])[46]|3(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"],\"0$1\",1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2-$3\",[\"1\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[68]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2-$3\",[\"[23]\"],\"0$1\",1],[\"(\\\\d)(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$2 15-$3-$4\",[\"9(?:2[2-469]|3[3-578])\",\"9(?:2(?:2[024-9]|3[0-59]|47|6[245]|9[02-8])|3(?:3[28]|4[03-9]|5[2-46-8]|7[1-578]|8[2-9]))\",\"9(?:2(?:[23]02|6(?:[25]|4[6-8])|9(?:[02356]|4[02568]|72|8[23]))|3(?:3[28]|4(?:[04679]|3[5-8]|5[4-68]|8[2379])|5(?:[2467]|3[237]|8[2-5])|7[1-578]|8(?:[2469]|3[2578]|5[4-8]|7[36-8]|8[5-8])))|92(?:2[24-9]|3[1-59]|47)\",\"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3[78]|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8[23])|7[1-578]|8(?:[2469]|3[278]|5(?:[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4[35][56]|58[45]|8(?:[38]5|54|76))[4-6]\",\"9(?:2(?:[23]02|6(?:[25]|4(?:64|[78]))|9(?:[02356]|4(?:[0268]|5[2-6])|72|8[23]))|3(?:3[28]|4(?:[04679]|3(?:5(?:4[0-25689]|[56])|[78])|5(?:4[46]|8)|8[2379])|5(?:[2467]|3[237]|8(?:[23]|4(?:[45]|60)|5(?:4[0-39]|5|64)))|7[1-578]|8(?:[2469]|3[278]|5(?:4(?:4|5[13-7]|6[89])|[56][46]|[78])|7[378]|8(?:6[3-6]|[78]))))|92(?:2[24-9]|3[1-59]|47)|93(?:4(?:36|5[56])|8(?:[38]5|76))[4-6]\"],\"0$1\",0,\"$1 $2 $3-$4\"],[\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$2 15-$3-$4\",[\"91\"],\"0$1\",0,\"$1 $2 $3-$4\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1-$2-$3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$2 15-$3-$4\",[\"9\"],\"0$1\",0,\"$1 $2 $3-$4\"]],\"0\",0,\"0?(?:(11|2(?:2(?:02?|[13]|2[13-79]|4[1-6]|5[2457]|6[124-8]|7[1-4]|8[13-6]|9[1267])|3(?:02?|1[467]|2[03-6]|3[13-8]|[49][2-6]|5[2-8]|[67])|4(?:7[3-578]|9)|6(?:[0136]|2[24-6]|4[6-8]?|5[15-8])|80|9(?:0[1-3]|[19]|2\\\\d|3[1-6]|4[02568]?|5[2-4]|6[2-46]|72?|8[23]?))|3(?:3(?:2[79]|6|8[2578])|4(?:0[0-24-9]|[12]|3[5-8]?|4[24-7]|5[4-68]?|6[02-9]|7[126]|8[2379]?|9[1-36-8])|5(?:1|2[1245]|3[237]?|4[1-46-9]|6[2-4]|7[1-6]|8[2-5]?)|6[24]|7(?:[069]|1[1568]|2[15]|3[145]|4[13]|5[14-8]|7[2-57]|8[126])|8(?:[01]|2[15-7]|3[2578]?|4[13-6]|5[4-8]?|6[1-357-9]|7[36-8]?|8[5-8]?|9[124])))15)?\",\"9$1\"],\"AS\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|684|900)\\\\d{7}\",[10],0,\"1\",0,\"([267]\\\\d{6})$|1\",\"684$1\",0,\"684\"],\"AT\":[\"43\",\"00\",\"1\\\\d{3,12}|2\\\\d{6,12}|43(?:(?:0\\\\d|5[02-9])\\\\d{3,9}|2\\\\d{4,5}|[3467]\\\\d{4}|8\\\\d{4,6}|9\\\\d{4,7})|5\\\\d{4,12}|8\\\\d{7,12}|9\\\\d{8,12}|(?:[367]\\\\d|4[0-24-9])\\\\d{4,11}\",[4,5,6,7,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{3,12})\",\"$1 $2\",[\"1(?:11|[2-9])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})\",\"$1 $2\",[\"517\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,5})\",\"$1 $2\",[\"5[079]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,10})\",\"$1 $2\",[\"(?:31|4)6|51|6(?:5[0-3579]|[6-9])|7(?:20|32|8)|[89]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,9})\",\"$1 $2\",[\"[2-467]|5[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4,7})\",\"$1 $2 $3\",[\"5\"],\"0$1\"]],\"0\"],\"AU\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{7}(?:\\\\d(?:\\\\d{2})?)?|8[0-24-9]\\\\d{7})|[2-478]\\\\d{8}|1\\\\d{4,7}\",[5,6,7,8,9,10,12],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1 $2\",[\"16\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"16\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"14|4\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[2378]\"],\"(0$1)\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1(?:30|[89])\"]]],\"0\",0,\"(183[12])|0\",0,0,0,[[\"(?:(?:(?:2(?:[0-26-9]\\\\d|3[0-8]|4[02-9]|5[0135-9])|7(?:[013-57-9]\\\\d|2[0-8]))\\\\d|3(?:(?:[0-3589]\\\\d|6[1-9]|7[0-35-9])\\\\d|4(?:[0-578]\\\\d|90)))\\\\d\\\\d|8(?:51(?:0(?:0[03-9]|[12479]\\\\d|3[2-9]|5[0-8]|6[1-9]|8[0-7])|1(?:[0235689]\\\\d|1[0-69]|4[0-589]|7[0-47-9])|2(?:0[0-79]|[18][13579]|2[14-9]|3[0-46-9]|[4-6]\\\\d|7[89]|9[0-4])|3\\\\d\\\\d)|(?:6[0-8]|[78]\\\\d)\\\\d{3}|9(?:[02-9]\\\\d{3}|1(?:(?:[0-58]\\\\d|6[0135-9])\\\\d|7(?:0[0-24-9]|[1-9]\\\\d)|9(?:[0-46-9]\\\\d|5[0-79])))))\\\\d{3}\",[9]],[\"4(?:79[01]|83[0-389]|94[0-4])\\\\d{5}|4(?:[0-36]\\\\d|4[047-9]|5[0-25-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,[\"163\\\\d{2,6}\",[5,6,7,8,9]],[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"AW\":[\"297\",\"00\",\"(?:[25-79]\\\\d\\\\d|800)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[25-9]\"]]]],\"AX\":[\"358\",\"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\",\"2\\\\d{4,9}|35\\\\d{4,5}|(?:60\\\\d\\\\d|800)\\\\d{4,6}|7\\\\d{5,11}|(?:[14]\\\\d|3[0-46-9]|50)\\\\d{4,8}\",[5,6,7,8,9,10,11,12],0,\"0\",0,0,0,0,\"18\",0,\"00\"],\"AZ\":[\"994\",\"00\",\"365\\\\d{6}|(?:[124579]\\\\d|60|88)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[28]|2|365|46\",\"1[28]|2|365[45]|46\",\"1[28]|2|365(?:4|5[02])|46\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[13-9]\"],\"0$1\"]],\"0\"],\"BA\":[\"387\",\"00\",\"6\\\\d{8}|(?:[35689]\\\\d|49|70)\\\\d{6}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6[1-3]|[7-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2-$3\",[\"[3-5]|6[56]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"6\"],\"0$1\"]],\"0\"],\"BB\":[\"1\",\"011\",\"(?:246|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"246$1\",0,\"246\"],\"BD\":[\"880\",\"00\",\"[1-469]\\\\d{9}|8[0-79]\\\\d{7,8}|[2-79]\\\\d{8}|[2-9]\\\\d{7}|[3-9]\\\\d{6}|[57-9]\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1-$2\",[\"31[5-8]|[459]1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1-$2\",[\"3(?:[67]|8[013-9])|4(?:6[168]|7|[89][18])|5(?:6[128]|9)|6(?:[15]|28|4[14])|7[2-589]|8(?:0[014-9]|[12])|9[358]|(?:3[2-5]|4[235]|5[2-578]|6[0389]|76|8[3-7]|9[24])1|(?:44|66)[01346-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,6})\",\"$1-$2\",[\"[13-9]|22\"],\"0$1\"],[\"(\\\\d)(\\\\d{7,8})\",\"$1-$2\",[\"2\"],\"0$1\"]],\"0\"],\"BE\":[\"32\",\"00\",\"4\\\\d{8}|[1-9]\\\\d{7}\",[8,9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:80|9)0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[239]|4[23]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[15-8]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"4\"],\"0$1\"]],\"0\"],\"BF\":[\"226\",\"00\",\"[025-7]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[025-7]\"]]]],\"BG\":[\"359\",\"00\",\"00800\\\\d{7}|[2-7]\\\\d{6,7}|[89]\\\\d{6,8}|2\\\\d{5}\",[6,7,8,9,12],[[\"(\\\\d)(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"43[1-6]|70[1-9]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[356]|4[124-7]|7[1-9]|8[1-6]|9[1-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:70|8)0\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3\",[\"43[1-7]|7\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[48]|9[08]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"BH\":[\"973\",\"00\",\"[136-9]\\\\d{7}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[13679]|8[02-4679]\"]]]],\"BI\":[\"257\",\"00\",\"(?:[267]\\\\d|31)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2367]\"]]]],\"BJ\":[\"229\",\"00\",\"[24-689]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24-689]\"]]]],\"BL\":[\"590\",\"00\",\"590\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\",[9],0,\"0\",0,0,0,0,0,[[\"590(?:2[7-9]|3[3-7]|5[12]|87)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\\\d)|6(?:1[016-9]|5[0-4]|[67]\\\\d))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"9(?:(?:39[5-7]|76[018])\\\\d|475[0-5])\\\\d{4}\"]]],\"BM\":[\"1\",\"011\",\"(?:441|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"441$1\",0,\"441\"],\"BN\":[\"673\",\"00\",\"[2-578]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-578]\"]]]],\"BO\":[\"591\",\"00(?:1\\\\d)?\",\"(?:[2-467]\\\\d\\\\d|8001)\\\\d{5}\",[8,9],[[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"[23]|4[46]\"]],[\"(\\\\d{8})\",\"$1\",[\"[67]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]],\"0\",0,\"0(1\\\\d)?\"],\"BQ\":[\"599\",\"00\",\"(?:[34]1|7\\\\d)\\\\d{5}\",[7],0,0,0,0,0,0,\"[347]\"],\"BR\":[\"55\",\"00(?:1[245]|2[1-35]|31|4[13]|[56]5|99)\",\"(?:[1-46-9]\\\\d\\\\d|5(?:[0-46-9]\\\\d|5[0-46-9]))\\\\d{8}|[1-9]\\\\d{9}|[3589]\\\\d{8}|[34]\\\\d{7}\",[8,9,10,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"300|4(?:0[02]|37)\",\"4(?:02|37)0|[34]00\"]],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{4})\",\"$1 $2 $3\",[\"(?:[358]|90)0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2-$3\",[\"(?:[14689][1-9]|2[12478]|3[1-578]|5[13-5]|7[13-579])[2-57]\"],\"($1)\"],[\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\",\"$1 $2-$3\",[\"[16][1-9]|[2-57-9]\"],\"($1)\"]],\"0\",0,\"(?:0|90)(?:(1[245]|2[1-35]|31|4[13]|[56]5|99)(\\\\d{10,11}))?\",\"$2\"],\"BS\":[\"1\",\"011\",\"(?:242|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([3-8]\\\\d{6})$|1\",\"242$1\",0,\"242\"],\"BT\":[\"975\",\"00\",\"[17]\\\\d{7}|[2-8]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-68]|7[246]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[67]|7\"]]]],\"BW\":[\"267\",\"00\",\"(?:0800|(?:[37]|800)\\\\d)\\\\d{6}|(?:[2-6]\\\\d|90)\\\\d{5}\",[7,8,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"90\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[24-6]|3[15-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[37]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"BY\":[\"375\",\"810\",\"(?:[12]\\\\d|33|44|902)\\\\d{7}|8(?:0[0-79]\\\\d{5,7}|[1-7]\\\\d{9})|8(?:1[0-489]|[5-79]\\\\d)\\\\d{7}|8[1-79]\\\\d{6,7}|8[0-79]\\\\d{5}|8\\\\d{5}\",[6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"800\"],\"8 $1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,4})\",\"$1 $2 $3\",[\"800\"],\"8 $1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{3})\",\"$1 $2-$3\",[\"1(?:5[169]|6[3-5]|7[179])|2(?:1[35]|2[34]|3[3-5])\",\"1(?:5[169]|6(?:3[1-3]|4|5[125])|7(?:1[3-9]|7[0-24-6]|9[2-7]))|2(?:1[35]|2[34]|3[3-5])\"],\"8 0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"1(?:[56]|7[467])|2[1-3]\"],\"8 0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[1-4]\"],\"8 0$1\"],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"8 $1\"]],\"8\",0,\"0|80?\",0,0,0,0,\"8~10\"],\"BZ\":[\"501\",\"00\",\"(?:0800\\\\d|[2-8])\\\\d{6}\",[7,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[2-8]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1-$2-$3-$4\",[\"0\"]]]],\"CA\":[\"1\",\"011\",\"(?:[2-8]\\\\d|90)\\\\d{8}|3\\\\d{6}\",[7,10],0,\"1\",0,0,0,0,0,[[\"(?:2(?:04|[23]6|[48]9|50|63)|3(?:06|43|54|6[578]|82)|4(?:03|1[68]|[26]8|3[178]|50|74)|5(?:06|1[49]|48|79|8[147])|6(?:04|[18]3|39|47|72)|7(?:0[59]|42|53|78|8[02])|8(?:[06]7|19|25|7[39])|90[25])[2-9]\\\\d{6}\",[10]],[\"\",[10]],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\",[10]],[\"900[2-9]\\\\d{6}\",[10]],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|(?:5(?:00|2[125-9]|33|44|66|77|88)|622)[2-9]\\\\d{6}\",[10]],0,[\"310\\\\d{4}\",[7]],0,[\"600[2-9]\\\\d{6}\",[10]]]],\"CC\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\",[6,7,8,9,10,12],0,\"0\",0,\"([59]\\\\d{7})$|0\",\"8$1\",0,0,[[\"8(?:51(?:0(?:02|31|60|89)|1(?:18|76)|223)|91(?:0(?:1[0-2]|29)|1(?:[28]2|50|79)|2(?:10|64)|3(?:[06]8|22)|4[29]8|62\\\\d|70[23]|959))\\\\d{3}\",[9]],[\"4(?:79[01]|83[0-389]|94[0-4])\\\\d{5}|4(?:[0-36]\\\\d|4[047-9]|5[0-25-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,0,[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"CD\":[\"243\",\"00\",\"[189]\\\\d{8}|[1-68]\\\\d{6}\",[7,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"88\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[1-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\"],\"CF\":[\"236\",\"00\",\"(?:[27]\\\\d{3}|8776)\\\\d{4}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[278]\"]]]],\"CG\":[\"242\",\"00\",\"222\\\\d{6}|(?:0\\\\d|80)\\\\d{7}\",[9],[[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[02]\"]]]],\"CH\":[\"41\",\"00\",\"8\\\\d{11}|[2-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8[047]|90\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-79]|81\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"8\"],\"0$1\"]],\"0\"],\"CI\":[\"225\",\"00\",\"[02]\\\\d{9}\",[10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d)(\\\\d{5})\",\"$1 $2 $3 $4\",[\"2\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"0\"]]]],\"CK\":[\"682\",\"00\",\"[2-578]\\\\d{4}\",[5],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"[2-578]\"]]]],\"CL\":[\"56\",\"(?:0|1(?:1[0-69]|2[02-5]|5[13-58]|69|7[0167]|8[018]))0\",\"12300\\\\d{6}|6\\\\d{9,10}|[2-9]\\\\d{8}\",[9,10,11],[[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"219\",\"2196\"],\"($1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"44\"]],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[1-36]\"],\"($1)\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"9[2-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"3[2-5]|[47]|5[1-3578]|6[13-57]|8(?:0[1-9]|[1-9])\"],\"($1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"60|8\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"60\"]]]],\"CM\":[\"237\",\"00\",\"[26]\\\\d{8}|88\\\\d{6,7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"88\"]],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"[26]|88\"]]]],\"CN\":[\"86\",\"00|1(?:[12]\\\\d|79)\\\\d\\\\d00\",\"1[127]\\\\d{8,9}|2\\\\d{9}(?:\\\\d{2})?|[12]\\\\d{6,7}|86\\\\d{6}|(?:1[03-689]\\\\d|6)\\\\d{7,9}|(?:[3-579]\\\\d|8[0-57-9])\\\\d{6,9}\",[7,8,9,10,11,12],[[\"(\\\\d{2})(\\\\d{5,6})\",\"$1 $2\",[\"(?:10|2[0-57-9])[19]\",\"(?:10|2[0-57-9])(?:10|9[56])\",\"10(?:10|9[56])|2[0-57-9](?:100|9[56])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"3(?:[157]|35|49|9[1-68])|4(?:[17]|2[179]|6[47-9]|8[23])|5(?:[1357]|2[37]|4[36]|6[1-46]|80)|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]|4[13]|5[1-5])|(?:4[35]|59|85)[1-9]\",\"(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[1-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))[19]\",\"85[23](?:10|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:10|9[56])\",\"85[23](?:100|95)|(?:3(?:[157]\\\\d|35|49|9[1-68])|4(?:[17]\\\\d|2[179]|[35][1-9]|6[47-9]|8[23])|5(?:[1357]\\\\d|2[37]|4[36]|6[1-46]|80|9[1-9])|6(?:3[1-5]|6[0238]|9[12])|7(?:01|[1579]\\\\d|2[248]|3[014-9]|4[3-6]|6[023689])|8(?:1[236-8]|2[5-7]|[37]\\\\d|5[14-9]|8[36-8]|9[1-8])|9(?:0[1-3689]|1[1-79]|[379]\\\\d|4[13]|5[1-5]))(?:100|9[56])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"(?:4|80)0\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"10|2(?:[02-57-9]|1[1-9])\",\"10|2(?:[02-57-9]|1[1-9])\",\"10[0-79]|2(?:[02-57-9]|1[1-79])|(?:10|21)8(?:0[1-9]|[1-9])\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"3(?:[3-59]|7[02-68])|4(?:[26-8]|3[3-9]|5[2-9])|5(?:3[03-9]|[468]|7[028]|9[2-46-9])|6|7(?:[0-247]|3[04-9]|5[0-4689]|6[2368])|8(?:[1-358]|9[1-7])|9(?:[013479]|5[1-5])|(?:[34]1|55|79|87)[02-9]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{7,8})\",\"$1 $2\",[\"9\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"80\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-578]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"1[3-9]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"[12]\"],\"0$1\",1]],\"0\",0,\"(1(?:[12]\\\\d|79)\\\\d\\\\d)|0\",0,0,0,0,\"00\"],\"CO\":[\"57\",\"00(?:4(?:[14]4|56)|[579])\",\"(?:60\\\\d\\\\d|9101)\\\\d{6}|(?:1\\\\d|3)\\\\d{9}\",[10,11],[[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"6\"],\"($1)\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"3[0-357]|91\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{7})\",\"$1-$2-$3\",[\"1\"],\"0$1\",0,\"$1 $2 $3\"]],\"0\",0,\"0([3579]|4(?:[14]4|56))?\"],\"CR\":[\"506\",\"00\",\"(?:8\\\\d|90)\\\\d{8}|(?:[24-8]\\\\d{3}|3005)\\\\d{4}\",[8,10],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]|8[3-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[89]\"]]],0,0,\"(19(?:0[0-2468]|1[09]|20|66|77|99))\"],\"CU\":[\"53\",\"119\",\"(?:[2-7]|8\\\\d\\\\d)\\\\d{7}|[2-47]\\\\d{6}|[34]\\\\d{5}\",[6,7,8,10],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1 $2\",[\"2[1-4]|[34]\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{6,7})\",\"$1 $2\",[\"7\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"[56]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"8\"],\"0$1\"]],\"0\"],\"CV\":[\"238\",\"0\",\"(?:[2-59]\\\\d\\\\d|800)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[2-589]\"]]]],\"CW\":[\"599\",\"00\",\"(?:[34]1|60|(?:7|9\\\\d)\\\\d)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[3467]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9[4-8]\"]]],0,0,0,0,0,\"[69]\"],\"CX\":[\"61\",\"001[14-689]|14(?:1[14]|34|4[17]|[56]6|7[47]|88)0011\",\"1(?:[0-79]\\\\d{8}(?:\\\\d{2})?|8[0-24-9]\\\\d{7})|[148]\\\\d{8}|1\\\\d{5,7}\",[6,7,8,9,10,12],0,\"0\",0,\"([59]\\\\d{7})$|0\",\"8$1\",0,0,[[\"8(?:51(?:0(?:01|30|59|88)|1(?:17|46|75)|2(?:22|35))|91(?:00[6-9]|1(?:[28]1|49|78)|2(?:09|63)|3(?:12|26|75)|4(?:56|97)|64\\\\d|7(?:0[01]|1[0-2])|958))\\\\d{3}\",[9]],[\"4(?:79[01]|83[0-389]|94[0-4])\\\\d{5}|4(?:[0-36]\\\\d|4[047-9]|5[0-25-9]|7[02-8]|8[0-24-9]|9[0-37-9])\\\\d{6}\",[9]],[\"180(?:0\\\\d{3}|2)\\\\d{3}\",[7,10]],[\"190[0-26]\\\\d{6}\",[10]],0,0,0,0,[\"14(?:5(?:1[0458]|[23][458])|71\\\\d)\\\\d{4}\",[9]],[\"13(?:00\\\\d{6}(?:\\\\d{2})?|45[0-4]\\\\d{3})|13\\\\d{4}\",[6,8,10,12]]],\"0011\"],\"CY\":[\"357\",\"00\",\"(?:[279]\\\\d|[58]0)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[257-9]\"]]]],\"CZ\":[\"420\",\"00\",\"(?:[2-578]\\\\d|60)\\\\d{7}|9\\\\d{8,11}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-8]|9[015-7]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"96\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]]]],\"DE\":[\"49\",\"00\",\"[2579]\\\\d{5,14}|49(?:[34]0|69|8\\\\d)\\\\d\\\\d?|49(?:37|49|60|7[089]|9\\\\d)\\\\d{1,3}|49(?:2[024-9]|3[2-689]|7[1-7])\\\\d{1,8}|(?:1|[368]\\\\d|4[0-8])\\\\d{3,13}|49(?:[015]\\\\d|2[13]|31|[46][1-8])\\\\d{1,9}\",[4,5,6,7,8,9,10,11,12,13,14,15],[[\"(\\\\d{2})(\\\\d{3,13})\",\"$1 $2\",[\"3[02]|40|[68]9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,12})\",\"$1 $2\",[\"2(?:0[1-389]|1[124]|2[18]|3[14])|3(?:[35-9][15]|4[015])|906|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\",\"2(?:0[1-389]|12[0-8])|3(?:[35-9][15]|4[015])|906|2(?:[13][14]|2[18])|(?:2[4-9]|4[2-9]|[579][1-9]|[68][1-8])1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{2,11})\",\"$1 $2\",[\"[24-6]|3(?:[3569][02-46-9]|4[2-4679]|7[2-467]|8[2-46-8])|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]\",\"[24-6]|3(?:3(?:0[1-467]|2[127-9]|3[124578]|7[1257-9]|8[1256]|9[145])|4(?:2[135]|4[13578]|9[1346])|5(?:0[14]|2[1-3589]|6[1-4]|7[13468]|8[13568])|6(?:2[1-489]|3[124-6]|6[13]|7[12579]|8[1-356]|9[135])|7(?:2[1-7]|4[145]|6[1-5]|7[1-4])|8(?:21|3[1468]|6|7[1467]|8[136])|9(?:0[12479]|2[1358]|4[134679]|6[1-9]|7[136]|8[147]|9[1468]))|70[2-8]|8(?:0[2-9]|[1-8])|90[7-9]|[79][1-9]|3[68]4[1347]|3(?:47|60)[1356]|3(?:3[46]|46|5[49])[1246]|3[4579]3[1357]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"138\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{2,10})\",\"$1 $2\",[\"3\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,11})\",\"$1 $2\",[\"181\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{4,10})\",\"$1 $2 $3\",[\"1(?:3|80)|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7,8})\",\"$1 $2\",[\"1[67]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7,12})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{6})\",\"$1 $2\",[\"185\",\"1850\",\"18500\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{7})\",\"$1 $2\",[\"18[68]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{7})\",\"$1 $2\",[\"15[1279]\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{6})\",\"$1 $2\",[\"15[03568]\",\"15(?:[0568]|31)\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{8})\",\"$1 $2\",[\"18\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{7,8})\",\"$1 $2 $3\",[\"1(?:6[023]|7)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{7})\",\"$1 $2 $3\",[\"15[279]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{8})\",\"$1 $2 $3\",[\"15\"],\"0$1\"]],\"0\"],\"DJ\":[\"253\",\"00\",\"(?:2\\\\d|77)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[27]\"]]]],\"DK\":[\"45\",\"00\",\"[2-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-9]\"]]]],\"DM\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|767|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-7]\\\\d{6})$|1\",\"767$1\",0,\"767\"],\"DO\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"8001|8[024]9\"],\"DZ\":[\"213\",\"00\",\"(?:[1-4]|[5-79]\\\\d|80)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[1-4]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-8]\"],\"0$1\"]],\"0\"],\"EC\":[\"593\",\"00\",\"1\\\\d{9,10}|(?:[2-7]|9\\\\d)\\\\d{7}\",[8,9,10,11],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2-$3\",[\"[2-7]\"],\"(0$1)\",0,\"$1-$2-$3\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"EE\":[\"372\",\"00\",\"8\\\\d{9}|[4578]\\\\d{7}|(?:[3-8]\\\\d|90)\\\\d{5}\",[7,8,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[369]|4[3-8]|5(?:[0-2]|5[0-478]|6[45])|7[1-9]|88\",\"[369]|4[3-8]|5(?:[02]|1(?:[0-8]|95)|5[0-478]|6(?:4[0-4]|5[1-589]))|7[1-9]|88\"]],[\"(\\\\d{4})(\\\\d{3,4})\",\"$1 $2\",[\"[45]|8(?:00|[1-49])\",\"[45]|8(?:00[1-9]|[1-49])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"EG\":[\"20\",\"00\",\"[189]\\\\d{8,9}|[24-6]\\\\d{8}|[135]\\\\d{7}\",[8,9,10],[[\"(\\\\d)(\\\\d{7,8})\",\"$1 $2\",[\"[23]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6,7})\",\"$1 $2\",[\"1[35]|[4-6]|8[2468]|9[235-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{8})\",\"$1 $2\",[\"1\"],\"0$1\"]],\"0\"],\"EH\":[\"212\",\"00\",\"[5-8]\\\\d{8}\",[9],0,\"0\",0,0,0,0,\"528[89]\"],\"ER\":[\"291\",\"00\",\"[178]\\\\d{6}\",[7],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[178]\"],\"0$1\"]],\"0\"],\"ES\":[\"34\",\"00\",\"[5-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[89]00\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-9]\"]]]],\"ET\":[\"251\",\"00\",\"(?:11|[2-579]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-579]\"],\"0$1\"]],\"0\"],\"FI\":[\"358\",\"00|99(?:[01469]|5(?:[14]1|3[23]|5[59]|77|88|9[09]))\",\"[1-35689]\\\\d{4}|7\\\\d{10,11}|(?:[124-7]\\\\d|3[0-46-9])\\\\d{8}|[1-9]\\\\d{5,8}\",[5,6,7,8,9,10,11,12],[[\"(\\\\d{5})\",\"$1\",[\"20[2-59]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1 $2\",[\"(?:[1-3]0|[68])0|70[07-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4,8})\",\"$1 $2\",[\"[14]|2[09]|50|7[135]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6,10})\",\"$1 $2\",[\"7\"],\"0$1\"],[\"(\\\\d)(\\\\d{4,9})\",\"$1 $2\",[\"(?:1[3-79]|[2568])[1-8]|3(?:0[1-9]|[1-9])|9\"],\"0$1\"]],\"0\",0,0,0,0,\"1[03-79]|[2-9]\",0,\"00\"],\"FJ\":[\"679\",\"0(?:0|52)\",\"45\\\\d{5}|(?:0800\\\\d|[235-9])\\\\d{6}\",[7,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[235-9]|45\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0\"]]],0,0,0,0,0,0,0,\"00\"],\"FK\":[\"500\",\"00\",\"[2-7]\\\\d{4}\",[5]],\"FM\":[\"691\",\"00\",\"(?:[39]\\\\d\\\\d|820)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[389]\"]]]],\"FO\":[\"298\",\"00\",\"[2-9]\\\\d{5}\",[6],[[\"(\\\\d{6})\",\"$1\",[\"[2-9]\"]]],0,0,\"(10(?:01|[12]0|88))\"],\"FR\":[\"33\",\"00\",\"[1-9]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0 $1\"],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"[1-79]\"],\"0$1\"]],\"0\"],\"GA\":[\"241\",\"00\",\"(?:[067]\\\\d|11)\\\\d{6}|[2-7]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-7]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"0\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"11|[67]\"],\"0$1\"]],0,0,\"0(11\\\\d{6}|60\\\\d{6}|61\\\\d{6}|6[256]\\\\d{6}|7[467]\\\\d{6})\",\"$1\"],\"GB\":[\"44\",\"00\",\"[1-357-9]\\\\d{9}|[18]\\\\d{8}|8\\\\d{6}\",[7,9,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"800\",\"8001\",\"80011\",\"800111\",\"8001111\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"845\",\"8454\",\"84546\",\"845464\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"800\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"1(?:38|5[23]|69|76|94)\",\"1(?:(?:38|69)7|5(?:24|39)|768|946)\",\"1(?:3873|5(?:242|39[4-6])|(?:697|768)[347]|9467)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5,6})\",\"$1 $2\",[\"1(?:[2-69][02-9]|[78])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[25]|7(?:0|6[02-9])\",\"[25]|7(?:0|6(?:[03-9]|2[356]))\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1389]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"(?:1(?:1(?:3(?:[0-58]\\\\d\\\\d|73[0235])|4(?:(?:[0-5]\\\\d|70)\\\\d|69[7-9])|(?:(?:5[0-26-9]|[78][0-49])\\\\d|6(?:[0-4]\\\\d|50))\\\\d)|(?:2(?:(?:0[024-9]|2[3-9]|3[3-79]|4[1-689]|[58][02-9]|6[0-47-9]|7[013-9]|9\\\\d)\\\\d|1(?:[0-7]\\\\d|8[0-2]))|(?:3(?:0\\\\d|1[0-8]|[25][02-9]|3[02-579]|[468][0-46-9]|7[1-35-79]|9[2-578])|4(?:0[03-9]|[137]\\\\d|[28][02-57-9]|4[02-69]|5[0-8]|[69][0-79])|5(?:0[1-35-9]|[16]\\\\d|2[024-9]|3[015689]|4[02-9]|5[03-9]|7[0-35-9]|8[0-468]|9[0-57-9])|6(?:0[034689]|1\\\\d|2[0-35689]|[38][013-9]|4[1-467]|5[0-69]|6[13-9]|7[0-8]|9[0-24578])|7(?:0[0246-9]|2\\\\d|3[0236-8]|4[03-9]|5[0-46-9]|6[013-9]|7[0-35-9]|8[024-9]|9[02-9])|8(?:0[35-9]|2[1-57-9]|3[02-578]|4[0-578]|5[124-9]|6[2-69]|7\\\\d|8[02-9]|9[02569])|9(?:0[02-589]|[18]\\\\d|2[02-689]|3[1-57-9]|4[2-9]|5[0-579]|6[2-47-9]|7[0-24578]|9[2-57]))\\\\d)\\\\d)|2(?:0[013478]|3[0189]|4[017]|8[0-46-9]|9[0-2])\\\\d{3})\\\\d{4}|1(?:2(?:0(?:46[1-4]|87[2-9])|545[1-79]|76(?:2\\\\d|3[1-8]|6[1-6])|9(?:7(?:2[0-4]|3[2-5])|8(?:2[2-8]|7[0-47-9]|8[3-5])))|3(?:6(?:38[2-5]|47[23])|8(?:47[04-9]|64[0157-9]))|4(?:044[1-7]|20(?:2[23]|8\\\\d)|6(?:0(?:30|5[2-57]|6[1-8]|7[2-8])|140)|8(?:052|87[1-3]))|5(?:2(?:4(?:3[2-79]|6\\\\d)|76\\\\d)|6(?:26[06-9]|686))|6(?:06(?:4\\\\d|7[4-79])|295[5-7]|35[34]\\\\d|47(?:24|61)|59(?:5[08]|6[67]|74)|9(?:55[0-4]|77[23]))|7(?:26(?:6[13-9]|7[0-7])|(?:442|688)\\\\d|50(?:2[0-3]|[3-68]2|76))|8(?:27[56]\\\\d|37(?:5[2-5]|8[239])|843[2-58])|9(?:0(?:0(?:6[1-8]|85)|52\\\\d)|3583|4(?:66[1-8]|9(?:2[01]|81))|63(?:23|3[1-4])|9561))\\\\d{3}\",[9,10]],[\"7(?:457[0-57-9]|700[01]|911[028])\\\\d{5}|7(?:[1-3]\\\\d\\\\d|4(?:[0-46-9]\\\\d|5[0-689])|5(?:0[0-8]|[13-9]\\\\d|2[0-35-9])|7(?:0[1-9]|[1-7]\\\\d|8[02-9]|9[0-689])|8(?:[014-9]\\\\d|[23][0-8])|9(?:[024-9]\\\\d|1[02-9]|3[0-689]))\\\\d{6}\",[10]],[\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"],[\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[2-49]))\\\\d{7}|845464\\\\d\",[7,10]],[\"70\\\\d{8}\",[10]],0,[\"(?:3[0347]|55)\\\\d{8}\",[10]],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\",[10]],[\"56\\\\d{8}\",[10]]],0,\" x\"],\"GD\":[\"1\",\"011\",\"(?:473|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"473$1\",0,\"473\"],\"GE\":[\"995\",\"00\",\"(?:[3-57]\\\\d\\\\d|800)\\\\d{6}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"70\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"32\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[57]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[348]\"],\"0$1\"]],\"0\"],\"GF\":[\"594\",\"00\",\"[56]94\\\\d{6}|(?:80|9\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[56]|9[47]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[89]\"],\"0$1\"]],\"0\"],\"GG\":[\"44\",\"00\",\"(?:1481|[357-9]\\\\d{3})\\\\d{6}|8\\\\d{6}(?:\\\\d{2})?\",[7,9,10],0,\"0\",0,\"([25-9]\\\\d{5})$|0\",\"1481$1\",0,0,[[\"1481[25-9]\\\\d{5}\",[10]],[\"7(?:(?:781|839)\\\\d|911[17])\\\\d{5}\",[10]],[\"80[08]\\\\d{7}|800\\\\d{6}|8001111\"],[\"(?:8(?:4[2-5]|7[0-3])|9(?:[01]\\\\d|8[0-3]))\\\\d{7}|845464\\\\d\",[7,10]],[\"70\\\\d{8}\",[10]],0,[\"(?:3[0347]|55)\\\\d{8}\",[10]],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\",[10]],[\"56\\\\d{8}\",[10]]]],\"GH\":[\"233\",\"00\",\"(?:[235]\\\\d{3}|800)\\\\d{5}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[235]\"],\"0$1\"]],\"0\"],\"GI\":[\"350\",\"00\",\"(?:[25]\\\\d|60)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"2\"]]]],\"GL\":[\"299\",\"00\",\"(?:19|[2-689]\\\\d|70)\\\\d{4}\",[6],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"19|[2-9]\"]]]],\"GM\":[\"220\",\"00\",\"[2-9]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]]]],\"GN\":[\"224\",\"00\",\"722\\\\d{6}|(?:3|6\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"3\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[67]\"]]]],\"GP\":[\"590\",\"00\",\"590\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[569]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"590(?:0[1-68]|[14][0-24-9]|2[0-68]|3[1-9]|5[3-579]|[68][0-689]|7[08]|9\\\\d)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\\\d)|6(?:1[016-9]|5[0-4]|[67]\\\\d))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"9(?:(?:39[5-7]|76[018])\\\\d|475[0-5])\\\\d{4}\"]]],\"GQ\":[\"240\",\"00\",\"222\\\\d{6}|(?:3\\\\d|55|[89]0)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[235]\"]],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[89]\"]]]],\"GR\":[\"30\",\"00\",\"5005000\\\\d{3}|8\\\\d{9,11}|(?:[269]\\\\d|70)\\\\d{8}\",[10,11,12],[[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"21|7\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"2(?:2|3[2-57-9]|4[2-469]|5[2-59]|6[2-9]|7[2-69]|8[2-49])|5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2689]\"]],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{5})\",\"$1 $2 $3\",[\"8\"]]]],\"GT\":[\"502\",\"00\",\"80\\\\d{6}|(?:1\\\\d{3}|[2-7])\\\\d{7}\",[8,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-8]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]]]],\"GU\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|671|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"671$1\",0,\"671\"],\"GW\":[\"245\",\"00\",\"[49]\\\\d{8}|4\\\\d{6}\",[7,9],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"40\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[49]\"]]]],\"GY\":[\"592\",\"001\",\"(?:[2-8]\\\\d{3}|9008)\\\\d{3}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]]]],\"HK\":[\"852\",\"00(?:30|5[09]|[126-9]?)\",\"8[0-46-9]\\\\d{6,7}|9\\\\d{4,7}|(?:[2-7]|9\\\\d{3})\\\\d{7}\",[5,6,7,8,9,11],[[\"(\\\\d{3})(\\\\d{2,5})\",\"$1 $2\",[\"900\",\"9003\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2-7]|8[1-4]|9(?:0[1-9]|[1-8])\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"9\"]]],0,0,0,0,0,0,0,\"00\"],\"HN\":[\"504\",\"00\",\"8\\\\d{10}|[237-9]\\\\d{7}\",[8,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"[237-9]\"]]]],\"HR\":[\"385\",\"00\",\"(?:[24-69]\\\\d|3[0-79])\\\\d{7}|80\\\\d{5,7}|[1-79]\\\\d{7}|6\\\\d{5,6}\",[6,7,8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"6[01]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"6|7[245]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-57]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"HT\":[\"509\",\"00\",\"(?:[2-489]\\\\d|55)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-589]\"]]]],\"HU\":[\"36\",\"00\",\"[235-7]\\\\d{8}|[1-9]\\\\d{7}\",[8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"(06 $1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[27][2-9]|3[2-7]|4[24-9]|5[2-79]|6|8[2-57-9]|9[2-69]\"],\"(06 $1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-9]\"],\"06 $1\"]],\"06\"],\"ID\":[\"62\",\"00[89]\",\"(?:(?:00[1-9]|8\\\\d)\\\\d{4}|[1-36])\\\\d{6}|00\\\\d{10}|[1-9]\\\\d{8,10}|[2-9]\\\\d{7}\",[7,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"15\"]],[\"(\\\\d{2})(\\\\d{5,9})\",\"$1 $2\",[\"2[124]|[36]1\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5,7})\",\"$1 $2\",[\"800\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5,8})\",\"$1 $2\",[\"[2-79]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{3})\",\"$1-$2-$3\",[\"8[1-35-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6,8})\",\"$1 $2\",[\"1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"804\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"80\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1-$2-$3\",[\"8\"],\"0$1\"]],\"0\"],\"IE\":[\"353\",\"00\",\"(?:1\\\\d|[2569])\\\\d{6,8}|4\\\\d{6,9}|7\\\\d{8}|8\\\\d{8,9}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"2[24-9]|47|58|6[237-9]|9[35-9]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[45]0\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2569]|4[1-69]|7[14]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"70\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"81\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"4\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"IL\":[\"972\",\"0(?:0|1[2-9])\",\"1\\\\d{6}(?:\\\\d{3,5})?|[57]\\\\d{8}|[1-489]\\\\d{7}\",[7,8,9,10,11,12],[[\"(\\\\d{4})(\\\\d{3})\",\"$1-$2\",[\"125\"]],[\"(\\\\d{4})(\\\\d{2})(\\\\d{2})\",\"$1-$2-$3\",[\"121\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[2-489]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"[57]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3\",[\"12\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1-$2\",[\"159\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3-$4\",[\"1[7-9]\"]],[\"(\\\\d{3})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3-$4\",[\"15\"]]],\"0\"],\"IM\":[\"44\",\"00\",\"1624\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\",[10],0,\"0\",0,\"([25-8]\\\\d{5})$|0\",\"1624$1\",0,\"74576|(?:16|7[56])24\"],\"IN\":[\"91\",\"00\",\"(?:000800|[2-9]\\\\d\\\\d)\\\\d{7}|1\\\\d{7,12}\",[8,9,10,11,12,13],[[\"(\\\\d{8})\",\"$1\",[\"5(?:0|2[23]|3[03]|[67]1|88)\",\"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|888)\",\"5(?:0|2(?:21|3)|3(?:0|3[23])|616|717|8888)\"],0,1],[\"(\\\\d{4})(\\\\d{4,5})\",\"$1 $2\",[\"180\",\"1800\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"140\"],0,1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"11|2[02]|33|4[04]|79[1-7]|80[2-46]\",\"11|2[02]|33|4[04]|79(?:[1-6]|7[19])|80(?:[2-4]|6[0-589])\",\"11|2[02]|33|4[04]|79(?:[124-6]|3(?:[02-9]|1[0-24-9])|7(?:1|9[1-6]))|80(?:[2-4]|6[0-589])\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:2[0-249]|3[0-25]|4[145]|[68]|7[1257])|2(?:1[257]|3[013]|4[01]|5[0137]|6[0158]|78|8[1568])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|5[12]|[78]1)|6(?:12|[2-4]1|5[17]|6[13]|80)|7(?:12|3[134]|4[47]|61|88)|8(?:16|2[014]|3[126]|6[136]|7[078]|8[34]|91)|(?:43|59|75)[15]|(?:1[59]|29|67|72)[14]\",\"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|674|7(?:(?:2[14]|3[34]|5[15])[2-6]|61[346]|88[0-8])|8(?:70[2-6]|84[235-7]|91[3-7])|(?:1(?:29|60|8[06])|261|552|6(?:12|[2-47]1|5[17]|6[13]|80)|7(?:12|31|4[47])|8(?:16|2[014]|3[126]|6[136]|7[78]|83))[2-7]\",\"1(?:2[0-24]|3[0-25]|4[145]|[59][14]|6[1-9]|7[1257]|8[1-57-9])|2(?:1[257]|3[013]|4[01]|5[0137]|6[058]|78|8[1568]|9[14])|3(?:26|4[1-3]|5[34]|6[01489]|7[02-46]|8[159])|4(?:1[36]|2[1-47]|3[15]|5[12]|6[0-26-9]|7[0-24-9]|8[013-57]|9[014-7])|5(?:1[025]|22|[36][25]|4[28]|[578]1|9[15])|6(?:12(?:[2-6]|7[0-8])|74[2-7])|7(?:(?:2[14]|5[15])[2-6]|3171|61[346]|88(?:[2-7]|82))|8(?:70[2-6]|84(?:[2356]|7[19])|91(?:[3-6]|7[19]))|73[134][2-6]|(?:74[47]|8(?:16|2[014]|3[126]|6[136]|7[78]|83))(?:[2-6]|7[19])|(?:1(?:29|60|8[06])|261|552|6(?:[2-4]1|5[17]|6[13]|7(?:1|4[0189])|80)|7(?:12|88[01]))[2-7]\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2[2457-9]|3[2-5]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1[013-9]|28|3[129]|4[1-35689]|5[29]|6[02-5]|70)|807\",\"1(?:[2-479]|5[0235-9])|[2-5]|6(?:1[1358]|2(?:[2457]|84|95)|3(?:[2-4]|55)|4[235-7]|5[2-689]|6[24578]|7[235689]|8[1-6])|7(?:1(?:[013-8]|9[6-9])|28[6-8]|3(?:17|2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4|5[0-367])|70[13-7])|807[19]\",\"1(?:[2-479]|5(?:[0236-9]|5[013-9]))|[2-5]|6(?:2(?:84|95)|355|83)|73179|807(?:1|9[1-3])|(?:1552|6(?:1[1358]|2[2457]|3[2-4]|4[235-7]|5[2-689]|6[24578]|7[235689]|8[124-6])\\\\d|7(?:1(?:[013-8]\\\\d|9[6-9])|28[6-8]|3(?:2[0-49]|9[2-57])|4(?:1[2-4]|[29][0-7]|3[0-8]|[56]\\\\d|8[0-24-7])|5(?:2[1-3]|9[0-6])|6(?:0[5689]|2[5-9]|3[02-8]|4\\\\d|5[0-367])|70[13-7]))[2-7]\"],\"0$1\",1],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"[6-9]\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{2,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1(?:6|8[06])\",\"1(?:6|8[06]0)\"],0,1],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"18\"],0,1]],\"0\"],\"IO\":[\"246\",\"00\",\"3\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"3\"]]]],\"IQ\":[\"964\",\"00\",\"(?:1|7\\\\d\\\\d)\\\\d{7}|[2-6]\\\\d{7,8}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-6]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"IR\":[\"98\",\"00\",\"[1-9]\\\\d{9}|(?:[1-8]\\\\d\\\\d|9)\\\\d{3,4}\",[4,5,6,7,10],[[\"(\\\\d{4,5})\",\"$1\",[\"96\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4,5})\",\"$1 $2\",[\"(?:1[137]|2[13-68]|3[1458]|4[145]|5[1468]|6[16]|7[1467]|8[13467])[12689]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-8]\"],\"0$1\"]],\"0\"],\"IS\":[\"354\",\"00|1(?:0(?:01|[12]0)|100)\",\"(?:38\\\\d|[4-9])\\\\d{6}\",[7,9],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[4-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"3\"]]],0,0,0,0,0,0,0,\"00\"],\"IT\":[\"39\",\"00\",\"0\\\\d{5,10}|1\\\\d{8,10}|3(?:[0-8]\\\\d{7,10}|9\\\\d{7,8})|(?:43|55|70)\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?\",[6,7,8,9,10,11],[[\"(\\\\d{2})(\\\\d{4,6})\",\"$1 $2\",[\"0[26]\"]],[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"0[13-57-9][0159]|8(?:03|4[17]|9[2-5])\",\"0[13-57-9][0159]|8(?:03|4[17]|9(?:2|3[04]|[45][0-4]))\"]],[\"(\\\\d{4})(\\\\d{2,6})\",\"$1 $2\",[\"0(?:[13-579][2-46-8]|8[236-8])\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"894\"]],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[26]|5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"1(?:44|[679])|[378]|43\"]],[\"(\\\\d{3})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"0[13-57-9][0159]|14\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{5})\",\"$1 $2 $3\",[\"0[26]\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"3\"]]],0,0,0,0,0,0,[[\"0669[0-79]\\\\d{1,6}|0(?:1(?:[0159]\\\\d|[27][1-5]|31|4[1-4]|6[1356]|8[2-57])|2\\\\d\\\\d|3(?:[0159]\\\\d|2[1-4]|3[12]|[48][1-6]|6[2-59]|7[1-7])|4(?:[0159]\\\\d|[23][1-9]|4[245]|6[1-5]|7[1-4]|81)|5(?:[0159]\\\\d|2[1-5]|3[2-6]|4[1-79]|6[4-6]|7[1-578]|8[3-8])|6(?:[0-57-9]\\\\d|6[0-8])|7(?:[0159]\\\\d|2[12]|3[1-7]|4[2-46]|6[13569]|7[13-6]|8[1-59])|8(?:[0159]\\\\d|2[3-578]|3[1-356]|[6-8][1-5])|9(?:[0159]\\\\d|[238][1-5]|4[12]|6[1-8]|7[1-6]))\\\\d{2,7}\"],[\"3[2-9]\\\\d{7,8}|(?:31|43)\\\\d{8}\",[9,10]],[\"80(?:0\\\\d{3}|3)\\\\d{3}\",[6,9]],[\"(?:0878\\\\d{3}|89(?:2\\\\d|3[04]|4(?:[0-4]|[5-9]\\\\d\\\\d)|5[0-4]))\\\\d\\\\d|(?:1(?:44|6[346])|89(?:38|5[5-9]|9))\\\\d{6}\",[6,8,9,10]],[\"1(?:78\\\\d|99)\\\\d{6}\",[9,10]],0,0,0,[\"55\\\\d{8}\",[10]],[\"84(?:[08]\\\\d{3}|[17])\\\\d{3}\",[6,9]]]],\"JE\":[\"44\",\"00\",\"1534\\\\d{6}|(?:[3578]\\\\d|90)\\\\d{8}\",[10],0,\"0\",0,\"([0-24-8]\\\\d{5})$|0\",\"1534$1\",0,0,[[\"1534[0-24-8]\\\\d{5}\"],[\"7(?:(?:(?:50|82)9|937)\\\\d|7(?:00[378]|97\\\\d))\\\\d{5}\"],[\"80(?:07(?:35|81)|8901)\\\\d{4}\"],[\"(?:8(?:4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|90(?:066[59]|1810|71(?:07|55)))\\\\d{4}\"],[\"701511\\\\d{4}\"],0,[\"(?:3(?:0(?:07(?:35|81)|8901)|3\\\\d{4}|4(?:4(?:4(?:05|42|69)|703)|5(?:041|800))|7(?:0002|1206))|55\\\\d{4})\\\\d{4}\"],[\"76(?:464|652)\\\\d{5}|76(?:0[0-28]|2[356]|34|4[01347]|5[49]|6[0-369]|77|8[14]|9[139])\\\\d{6}\"],[\"56\\\\d{8}\"]]],\"JM\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|658|900)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"658|876\"],\"JO\":[\"962\",\"00\",\"(?:(?:[2689]|7\\\\d)\\\\d|32|53)\\\\d{6}\",[8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2356]|87\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"70\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"JP\":[\"81\",\"010\",\"00[1-9]\\\\d{6,14}|[257-9]\\\\d{9}|(?:00|[1-9]\\\\d\\\\d)\\\\d{6}\",[8,9,10,11,12,13,14,15,16,17],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1-$2-$3\",[\"(?:12|57|99)0\"],\"0$1\"],[\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\"$1-$2-$3\",[\"1(?:26|3[79]|4[56]|5[4-68]|6[3-5])|499|5(?:76|97)|746|8(?:3[89]|47|51)|9(?:80|9[16])\",\"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:76|97)9|7468|8(?:3(?:8[7-9]|96)|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\",\"1(?:267|3(?:7[247]|9[278])|466|5(?:47|58|64)|6(?:3[245]|48|5[4-68]))|499[2468]|5(?:769|979[2-69])|7468|8(?:3(?:8[7-9]|96[2457-9])|477|51[2-9])|9(?:802|9(?:1[23]|69))|1(?:45|58)[67]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"60\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[36]|4(?:2[09]|7[01])\",\"[36]|4(?:2(?:0|9[02-69])|7(?:0[019]|1))\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"1(?:1|5[45]|77|88|9[69])|2(?:2[1-37]|3[0-269]|4[59]|5|6[24]|7[1-358]|8[1369]|9[0-38])|4(?:[28][1-9]|3[0-57]|[45]|6[248]|7[2-579]|9[29])|5(?:2|3[0459]|4[0-369]|5[29]|8[02389]|9[0-389])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9[2-6])|8(?:2[124589]|3[26-9]|49|51|6|7[0-468]|8[68]|9[019])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9[1-489])\",\"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2(?:[127]|3[014-9])|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9[19])|62|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|8[1-9]|9[29])|5(?:2|3(?:[045]|9[0-8])|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0-2469])|3(?:[29]|60)|49|51|6(?:[0-24]|36|5[0-3589]|7[23]|9[01459])|7[0-468]|8[68])|9(?:[23][1-9]|4[15]|5[138]|6[1-3]|7[156]|8[189]|9(?:[1289]|3[34]|4[0178]))|(?:264|837)[016-9]|2(?:57|93)[015-9]|(?:25[0468]|422|838)[01]|(?:47[59]|59[89]|8(?:6[68]|9))[019]\",\"1(?:1|5(?:4[018]|5[017])|77|88|9[69])|2(?:2[127]|3[0-269]|4[59]|5(?:[1-3]|5[0-69]|9(?:17|99))|6(?:2|4[016-9])|7(?:[1-35]|8[0189])|8(?:[16]|3[0134]|9[0-5])|9(?:[028]|17))|4(?:2(?:[13-79]|8[014-6])|3[0-57]|[45]|6[248]|7[2-47]|9[29])|5(?:2|3(?:[045]|9(?:[0-58]|6[4-9]|7[0-35689]))|4[0-369]|5[29]|8[02389]|9[0-3])|7(?:2[02-46-9]|34|[58]|6[0249]|7[57]|9(?:[23]|4[0-59]|5[01569]|6[0167]))|8(?:2(?:[1258]|4[0-39]|9[0169])|3(?:[29]|60|7(?:[017-9]|6[6-8]))|49|51|6(?:[0-24]|36[2-57-9]|5(?:[0-389]|5[23])|6(?:[01]|9[178])|7(?:2[2-468]|3[78])|9[0145])|7[0-468]|8[68])|9(?:4[15]|5[138]|7[156]|8[189]|9(?:[1289]|3(?:31|4[357])|4[0178]))|(?:8294|96)[1-3]|2(?:57|93)[015-9]|(?:223|8699)[014-9]|(?:25[0468]|422|838)[01]|(?:48|8292|9[23])[1-9]|(?:47[59]|59[89]|8(?:68|9))[019]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3\",[\"[14]|[289][2-9]|5[3-9]|7[2-4679]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"800\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[257-9]\"],\"0$1\"]],\"0\",0,\"(000[259]\\\\d{6})$|(?:(?:003768)0?)|0\",\"$1\"],\"KE\":[\"254\",\"000\",\"(?:[17]\\\\d\\\\d|900)\\\\d{6}|(?:2|80)0\\\\d{6,7}|[4-6]\\\\d{6,8}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5,7})\",\"$1 $2\",[\"[24-6]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[17]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\"],\"KG\":[\"996\",\"00\",\"8\\\\d{9}|[235-9]\\\\d{8}\",[9,10],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"3(?:1[346]|[24-79])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[235-79]|88\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d)(\\\\d{2,3})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"KH\":[\"855\",\"00[14-9]\",\"1\\\\d{9}|[1-9]\\\\d{7,8}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"KI\":[\"686\",\"00\",\"(?:[37]\\\\d|6[0-79])\\\\d{6}|(?:[2-48]\\\\d|50)\\\\d{3}\",[5,8],0,\"0\"],\"KM\":[\"269\",\"00\",\"[3478]\\\\d{6}\",[7],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[3478]\"]]]],\"KN\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-7]\\\\d{6})$|1\",\"869$1\",0,\"869\"],\"KP\":[\"850\",\"00|99\",\"85\\\\d{6}|(?:19\\\\d|[2-7])\\\\d{7}\",[8,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-7]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"]],\"0\"],\"KR\":[\"82\",\"00(?:[125689]|3(?:[46]5|91)|7(?:00|27|3|55|6[126]))\",\"00[1-9]\\\\d{8,11}|(?:[12]|5\\\\d{3})\\\\d{7}|[13-6]\\\\d{9}|(?:[1-6]\\\\d|80)\\\\d{7}|[3-6]\\\\d{4,5}|(?:00|7)0\\\\d{8}\",[5,6,8,9,10,11,12,13,14],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1-$2\",[\"(?:3[1-3]|[46][1-4]|5[1-5])1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"1\"]],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1-$2-$3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1-$2-$3\",[\"60|8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1-$2-$3\",[\"[1346]|5[1-5]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2-$3\",[\"[57]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})(\\\\d{4})\",\"$1-$2-$3\",[\"5\"],\"0$1\"]],\"0\",0,\"0(8(?:[1-46-8]|5\\\\d\\\\d))?\"],\"KW\":[\"965\",\"00\",\"18\\\\d{5}|(?:[2569]\\\\d|41)\\\\d{6}\",[7,8],[[\"(\\\\d{4})(\\\\d{3,4})\",\"$1 $2\",[\"[169]|2(?:[235]|4[1-35-9])|52\"]],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[245]\"]]]],\"KY\":[\"1\",\"011\",\"(?:345|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"345$1\",0,\"345\"],\"KZ\":[\"7\",\"810\",\"(?:33622|8\\\\d{8})\\\\d{5}|[78]\\\\d{9}\",[10,14],0,\"8\",0,0,0,0,\"33|7\",0,\"8~10\"],\"LA\":[\"856\",\"00\",\"[23]\\\\d{9}|3\\\\d{8}|(?:[235-8]\\\\d|41)\\\\d{6}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2[13]|3[14]|[4-8]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"30[013-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[23]\"],\"0$1\"]],\"0\"],\"LB\":[\"961\",\"00\",\"[27-9]\\\\d{7}|[13-9]\\\\d{6}\",[7,8],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[13-69]|7(?:[2-57]|62|8[0-7]|9[04-9])|8[02-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[27-9]\"]]],\"0\"],\"LC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|758|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-8]\\\\d{6})$|1\",\"758$1\",0,\"758\"],\"LI\":[\"423\",\"00\",\"[68]\\\\d{8}|(?:[2378]\\\\d|90)\\\\d{5}\",[7,9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[2379]|8(?:0[09]|7)\",\"[2379]|8(?:0(?:02|9)|7)\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"69\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]]],\"0\",0,\"(1001)|0\"],\"LK\":[\"94\",\"00\",\"[1-9]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[1-689]\"],\"0$1\"]],\"0\"],\"LR\":[\"231\",\"00\",\"(?:[245]\\\\d|33|77|88)\\\\d{7}|(?:2\\\\d|[4-6])\\\\d{6}\",[7,8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"4[67]|[56]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-578]\"],\"0$1\"]],\"0\"],\"LS\":[\"266\",\"00\",\"(?:[256]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2568]\"]]]],\"LT\":[\"370\",\"00\",\"(?:[3469]\\\\d|52|[78]0)\\\\d{6}\",[8],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"52[0-7]\"],\"(0-$1)\",1],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[7-9]\"],\"0 $1\",1],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"37|4(?:[15]|6[1-8])\"],\"(0-$1)\",1],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[3-6]\"],\"(0-$1)\",1]],\"0\",0,\"[08]\"],\"LU\":[\"352\",\"00\",\"35[013-9]\\\\d{4,8}|6\\\\d{8}|35\\\\d{2,4}|(?:[2457-9]\\\\d|3[0-46-9])\\\\d{2,9}\",[4,5,6,7,8,9,10,11],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"2(?:0[2-689]|[2-9])|[3-57]|8(?:0[2-9]|[13-9])|9(?:0[89]|[2-579])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"20[2-689]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\"$1 $2 $3 $4\",[\"2(?:[0367]|4[3-8])\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"80[01]|90[015]\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"20\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,2})\",\"$1 $2 $3 $4 $5\",[\"2(?:[0367]|4[3-8])\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{1,5})\",\"$1 $2 $3 $4\",[\"[3-57]|8[13-9]|9(?:0[89]|[2-579])|(?:2|80)[2-9]\"]]],0,0,\"(15(?:0[06]|1[12]|[35]5|4[04]|6[26]|77|88|99)\\\\d)\"],\"LV\":[\"371\",\"00\",\"(?:[268]\\\\d|90)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[269]|8[01]\"]]]],\"LY\":[\"218\",\"00\",\"[2-9]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{7})\",\"$1-$2\",[\"[2-9]\"],\"0$1\"]],\"0\"],\"MA\":[\"212\",\"00\",\"[5-8]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5[45]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1-$2\",[\"5(?:2[2-46-9]|3[3-9]|9)|8(?:0[89]|92)\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1-$2\",[\"8\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1-$2\",[\"[5-7]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"5(?:2(?:[0-25-79]\\\\d|3[1-578]|4[02-46-8]|8[0235-7])|3(?:[0-47]\\\\d|5[02-9]|6[02-8]|8[014-9]|9[3-9])|(?:4[067]|5[03])\\\\d)\\\\d{5}\"],[\"(?:6(?:[0-79]\\\\d|8[0-247-9])|7(?:[0167]\\\\d|2[0-4]|5[01]|8[0-3]))\\\\d{6}\"],[\"80[0-7]\\\\d{6}\"],[\"89\\\\d{7}\"],0,0,0,0,[\"(?:592(?:4[0-2]|93)|80[89]\\\\d\\\\d)\\\\d{4}\"]]],\"MC\":[\"377\",\"00\",\"(?:[3489]|6\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"4\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[389]\"]],[\"(\\\\d)(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4 $5\",[\"6\"],\"0$1\"]],\"0\"],\"MD\":[\"373\",\"00\",\"(?:[235-7]\\\\d|[89]0)\\\\d{6}\",[8],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"22|3\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[25-7]\"],\"0$1\"]],\"0\"],\"ME\":[\"382\",\"00\",\"(?:20|[3-79]\\\\d)\\\\d{6}|80\\\\d{6,7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[2-9]\"],\"0$1\"]],\"0\"],\"MF\":[\"590\",\"00\",\"590\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\",[9],0,\"0\",0,0,0,0,0,[[\"590(?:0[079]|[14]3|[27][79]|3[03-7]|5[0-268]|87)\\\\d{4}\"],[\"69(?:0\\\\d\\\\d|1(?:2[2-9]|3[0-5])|4(?:0[89]|1[2-6]|9\\\\d)|6(?:1[016-9]|5[0-4]|[67]\\\\d))\\\\d{4}\"],[\"80[0-5]\\\\d{6}\"],0,0,0,0,0,[\"9(?:(?:39[5-7]|76[018])\\\\d|475[0-5])\\\\d{4}\"]]],\"MG\":[\"261\",\"00\",\"[23]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[23]\"],\"0$1\"]],\"0\",0,\"([24-9]\\\\d{6})$|0\",\"20$1\"],\"MH\":[\"692\",\"011\",\"329\\\\d{4}|(?:[256]\\\\d|45)\\\\d{5}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[2-6]\"]]],\"1\"],\"MK\":[\"389\",\"00\",\"[2-578]\\\\d{7}\",[8],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2|34[47]|4(?:[37]7|5[47]|64)\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[347]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[58]\"],\"0$1\"]],\"0\"],\"ML\":[\"223\",\"00\",\"[24-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24-9]\"]]]],\"MM\":[\"95\",\"00\",\"1\\\\d{5,7}|95\\\\d{6}|(?:[4-7]|9[0-46-9])\\\\d{6,8}|(?:2|8\\\\d)\\\\d{5,8}\",[6,7,8,9,10],[[\"(\\\\d)(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"16|2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"[45]|6(?:0[23]|[1-689]|7[235-7])|7(?:[0-4]|5[2-7])|8[1-6]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[12]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[4-7]|8[1-35]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4,6})\",\"$1 $2 $3\",[\"9(?:2[0-4]|[35-9]|4[137-9])\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"92\"],\"0$1\"],[\"(\\\\d)(\\\\d{5})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"MN\":[\"976\",\"001\",\"[12]\\\\d{7,9}|[5-9]\\\\d{7}\",[8,9,10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[12]1\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[5-9]\"]],[\"(\\\\d{3})(\\\\d{5,6})\",\"$1 $2\",[\"[12]2[1-3]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5,6})\",\"$1 $2\",[\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])\",\"[12](?:27|3[2-8]|4[2-68]|5[1-4689])[0-3]\"],\"0$1\"],[\"(\\\\d{5})(\\\\d{4,5})\",\"$1 $2\",[\"[12]\"],\"0$1\"]],\"0\"],\"MO\":[\"853\",\"00\",\"0800\\\\d{3}|(?:28|[68]\\\\d)\\\\d{6}\",[7,8],[[\"(\\\\d{4})(\\\\d{3})\",\"$1 $2\",[\"0\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[268]\"]]]],\"MP\":[\"1\",\"011\",\"[58]\\\\d{9}|(?:67|90)0\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"670$1\",0,\"670\"],\"MQ\":[\"596\",\"00\",\"596\\\\d{6}|(?:69|80|9\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[569]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"MR\":[\"222\",\"00\",\"(?:[2-4]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-48]\"]]]],\"MS\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|664|900)\\\\d{7}\",[10],0,\"1\",0,\"([34]\\\\d{6})$|1\",\"664$1\",0,\"664\"],\"MT\":[\"356\",\"00\",\"3550\\\\d{4}|(?:[2579]\\\\d\\\\d|800)\\\\d{5}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[2357-9]\"]]]],\"MU\":[\"230\",\"0(?:0|[24-7]0|3[03])\",\"(?:[57]|8\\\\d\\\\d)\\\\d{7}|[2-468]\\\\d{6}\",[7,8,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-46]|8[013]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[57]\"]],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"8\"]]],0,0,0,0,0,0,0,\"020\"],\"MV\":[\"960\",\"0(?:0|19)\",\"(?:800|9[0-57-9]\\\\d)\\\\d{7}|[34679]\\\\d{6}\",[7,10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[34679]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"]]],0,0,0,0,0,0,0,\"00\"],\"MW\":[\"265\",\"00\",\"(?:[1289]\\\\d|31|77)\\\\d{7}|1\\\\d{6}\",[7,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[137-9]\"],\"0$1\"]],\"0\"],\"MX\":[\"52\",\"0[09]\",\"1(?:(?:22|44|7[27]|87|9[69])[1-9]|65[0-689])\\\\d{7}|(?:1(?:[01]\\\\d|2[13-9]|[35][1-9]|4[0-35-9]|6[0-46-9]|7[013-689]|8[1-69]|9[1-578])|[2-9]\\\\d)\\\\d{8}\",[10,11],[[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"33|5[56]|81\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2-9]\"],0,1],[\"(\\\\d)(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$2 $3 $4\",[\"1(?:33|5[56]|81)\"],0,1],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$2 $3 $4\",[\"1\"],0,1]],\"01\",0,\"0(?:[12]|4[45])|1\",0,0,0,0,\"00\"],\"MY\":[\"60\",\"00\",\"1\\\\d{8,9}|(?:3\\\\d|[4-9])\\\\d{7}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"[4-79]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1-$2 $3\",[\"1(?:[02469]|[378][1-9]|53)|8\",\"1(?:[02469]|[37][1-9]|53|8(?:[1-46-9]|5[7-9]))|8\"],\"0$1\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1-$2 $3\",[\"3\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1-$2-$3-$4\",[\"1(?:[367]|80)\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1-$2 $3\",[\"15\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1-$2 $3\",[\"1\"],\"0$1\"]],\"0\"],\"MZ\":[\"258\",\"00\",\"(?:2|8\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2|8[2-79]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]]]],\"NA\":[\"264\",\"00\",\"[68]\\\\d{7,8}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"88\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"6\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"87\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"NC\":[\"687\",\"00\",\"(?:050|[2-57-9]\\\\d\\\\d)\\\\d{3}\",[6],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1.$2.$3\",[\"[02-57-9]\"]]]],\"NE\":[\"227\",\"00\",\"[027-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"08\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[089]|2[013]|7[0467]\"]]]],\"NF\":[\"672\",\"00\",\"[13]\\\\d{5}\",[6],[[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"1[0-3]\"]],[\"(\\\\d)(\\\\d{5})\",\"$1 $2\",[\"[13]\"]]],0,0,\"([0-258]\\\\d{4})$\",\"3$1\"],\"NG\":[\"234\",\"009\",\"2[0-24-9]\\\\d{8}|[78]\\\\d{10,13}|[7-9]\\\\d{9}|[1-9]\\\\d{7}|[124-7]\\\\d{6}\",[7,8,10,11,12,13,14],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"78\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[12]|9(?:0[3-9]|[1-9])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[3-6]|7(?:0[0-689]|[1-79])|8[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[7-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"20[129]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})(\\\\d{5,6})\",\"$1 $2 $3\",[\"[78]\"],\"0$1\"]],\"0\"],\"NI\":[\"505\",\"00\",\"(?:1800|[25-8]\\\\d{3})\\\\d{4}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[125-8]\"]]]],\"NL\":[\"31\",\"00\",\"(?:[124-7]\\\\d\\\\d|3(?:[02-9]\\\\d|1[0-8]))\\\\d{6}|8\\\\d{6,9}|9\\\\d{6,10}|1\\\\d{4,5}\",[5,6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{4,7})\",\"$1 $2\",[\"[89]0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"66\"],\"0$1\"],[\"(\\\\d)(\\\\d{8})\",\"$1 $2\",[\"6\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1[16-8]|2[259]|3[124]|4[17-9]|5[124679]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-578]|91\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\",[\"9\"],\"0$1\"]],\"0\"],\"NO\":[\"47\",\"00\",\"(?:0|[2-9]\\\\d{3})\\\\d{4}\",[5,8],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2-79]\"]]],0,0,0,0,0,\"[02-689]|7[0-8]\"],\"NP\":[\"977\",\"00\",\"(?:1\\\\d|9)\\\\d{9}|[1-9]\\\\d{7}\",[8,10,11],[[\"(\\\\d)(\\\\d{7})\",\"$1-$2\",[\"1[2-6]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1-$2\",[\"1[01]|[2-8]|9(?:[1-59]|[67][2-6])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1-$2\",[\"9\"]]],\"0\"],\"NR\":[\"674\",\"00\",\"(?:444|(?:55|8\\\\d)\\\\d|666)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[4-68]\"]]]],\"NU\":[\"683\",\"00\",\"(?:[4-7]|888\\\\d)\\\\d{3}\",[4,7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"8\"]]]],\"NZ\":[\"64\",\"0(?:0|161)\",\"[1289]\\\\d{9}|50\\\\d{5}(?:\\\\d{2,3})?|[27-9]\\\\d{7,8}|(?:[34]\\\\d|6[0-35-9])\\\\d{6}|8\\\\d{4,6}\",[5,6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{3,8})\",\"$1 $2\",[\"8[1-79]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"50[036-8]|8|90\",\"50(?:[0367]|88)|8|90\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"24|[346]|7[2-57-9]|9[2-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2(?:10|74)|[589]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"1|2[028]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,5})\",\"$1 $2 $3\",[\"2(?:[169]|7[0-35-9])|7\"],\"0$1\"]],\"0\",0,0,0,0,0,0,\"00\"],\"OM\":[\"968\",\"00\",\"(?:1505|[279]\\\\d{3}|500)\\\\d{4}|800\\\\d{5,6}\",[7,8,9],[[\"(\\\\d{3})(\\\\d{4,6})\",\"$1 $2\",[\"[58]\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"2\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[179]\"]]]],\"PA\":[\"507\",\"00\",\"(?:00800|8\\\\d{3})\\\\d{6}|[68]\\\\d{7}|[1-57-9]\\\\d{6}\",[7,8,10,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[1-57-9]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1-$2\",[\"[68]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]]],\"PE\":[\"51\",\"00|19(?:1[124]|77|90)00\",\"(?:[14-8]|9\\\\d)\\\\d{7}\",[8,9],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"80\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"1\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[4-8]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"]]],\"0\",0,0,0,0,0,0,\"00\",\" Anexo \"],\"PF\":[\"689\",\"00\",\"4\\\\d{5}(?:\\\\d{2})?|8\\\\d{7,8}\",[6,8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"44\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"4|8[7-9]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]]]],\"PG\":[\"675\",\"00|140[1-3]\",\"(?:180|[78]\\\\d{3})\\\\d{4}|(?:[2-589]\\\\d|64)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"18|[2-69]|85\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[78]\"]]],0,0,0,0,0,0,0,\"00\"],\"PH\":[\"63\",\"00\",\"(?:[2-7]|9\\\\d)\\\\d{8}|2\\\\d{5}|(?:1800|8)\\\\d{7,9}\",[6,8,9,10,11,12,13],[[\"(\\\\d)(\\\\d{5})\",\"$1 $2\",[\"2\"],\"(0$1)\"],[\"(\\\\d{4})(\\\\d{4,6})\",\"$1 $2\",[\"3(?:23|39|46)|4(?:2[3-6]|[35]9|4[26]|76)|544|88[245]|(?:52|64|86)2\",\"3(?:230|397|461)|4(?:2(?:35|[46]4|51)|396|4(?:22|63)|59[347]|76[15])|5(?:221|446)|642[23]|8(?:622|8(?:[24]2|5[13]))\"],\"(0$1)\"],[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"346|4(?:27|9[35])|883\",\"3469|4(?:279|9(?:30|56))|8834\"],\"(0$1)\"],[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-7]|8[2-8]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]],[\"(\\\\d{4})(\\\\d{1,2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3 $4\",[\"1\"]]],\"0\"],\"PK\":[\"92\",\"00\",\"122\\\\d{6}|[24-8]\\\\d{10,11}|9(?:[013-9]\\\\d{8,10}|2(?:[01]\\\\d\\\\d|2(?:[06-8]\\\\d|1[01]))\\\\d{7})|(?:[2-8]\\\\d{3}|92(?:[0-7]\\\\d|8[1-9]))\\\\d{6}|[24-9]\\\\d{8}|[89]\\\\d{7}\",[8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,7})\",\"$1 $2 $3\",[\"[89]0\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"1\"]],[\"(\\\\d{3})(\\\\d{6,7})\",\"$1 $2\",[\"2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:2[2-8]|3[27-9]|4[2-6]|6[3569]|9[25-8])\",\"9(?:2[3-8]|98)|(?:2(?:3[2358]|4[2-4]|9[2-8])|45[3479]|54[2-467]|60[468]|72[236]|8(?:2[2-689]|3[23578]|4[3478]|5[2356])|9(?:22|3[27-9]|4[2-6]|6[3569]|9[25-7]))[2-9]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{7,8})\",\"$1 $2\",[\"(?:2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91)[2-9]\"],\"(0$1)\"],[\"(\\\\d{5})(\\\\d{5})\",\"$1 $2\",[\"58\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{7})\",\"$1 $2\",[\"3\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"2[125]|4[0-246-9]|5[1-35-7]|6[1-8]|7[14]|8[16]|91\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[24-9]\"],\"(0$1)\"]],\"0\"],\"PL\":[\"48\",\"00\",\"(?:6|8\\\\d\\\\d)\\\\d{7}|[1-9]\\\\d{6}(?:\\\\d{2})?|[26]\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{5})\",\"$1\",[\"19\"]],[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"11|20|64\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1 $2 $3\",[\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])1\",\"(?:1[2-8]|2[2-69]|3[2-4]|4[1-468]|5[24-689]|6[1-3578]|7[14-7]|8[1-79]|9[145])19\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"64\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"21|39|45|5[0137]|6[0469]|7[02389]|8(?:0[14]|8)\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"1[2-8]|[2-7]|8[1-79]|9[145]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"8\"]]]],\"PM\":[\"508\",\"00\",\"[45]\\\\d{5}|(?:708|80\\\\d)\\\\d{6}\",[6,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[45]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"],\"0$1\"]],\"0\"],\"PR\":[\"1\",\"011\",\"(?:[589]\\\\d\\\\d|787)\\\\d{7}\",[10],0,\"1\",0,0,0,0,\"787|939\"],\"PS\":[\"970\",\"00\",\"[2489]2\\\\d{6}|(?:1\\\\d|5)\\\\d{8}\",[8,9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[2489]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"PT\":[\"351\",\"00\",\"1693\\\\d{5}|(?:[26-9]\\\\d|30)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2[12]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"16|[236-9]\"]]]],\"PW\":[\"680\",\"01[12]\",\"(?:[24-8]\\\\d\\\\d|345|900)\\\\d{4}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-9]\"]]]],\"PY\":[\"595\",\"00\",\"59\\\\d{4,6}|9\\\\d{5,10}|(?:[2-46-8]\\\\d|5[0-8])\\\\d{4,7}\",[6,7,8,9,10,11],[[\"(\\\\d{3})(\\\\d{3,6})\",\"$1 $2\",[\"[2-9]0\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"[26]1|3[289]|4[1246-8]|7[1-3]|8[1-36]\"],\"(0$1)\"],[\"(\\\\d{3})(\\\\d{4,5})\",\"$1 $2\",[\"2[279]|3[13-5]|4[359]|5|6(?:[34]|7[1-46-8])|7[46-8]|85\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2[14-68]|3[26-9]|4[1246-8]|6(?:1|75)|7[1-35]|8[1-36]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"87\"]],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"9(?:[5-79]|8[1-7])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-8]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"9\"]]],\"0\"],\"QA\":[\"974\",\"00\",\"800\\\\d{4}|(?:2|800)\\\\d{6}|(?:0080|[3-7])\\\\d{7}\",[7,8,9,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"2[16]|8\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[3-7]\"]]]],\"RE\":[\"262\",\"00\",\"(?:26|[689]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2689]\"],\"0$1\"]],\"0\",0,0,0,0,0,[[\"26(?:2\\\\d\\\\d|3(?:0\\\\d|1[0-6]))\\\\d{4}\"],[\"69(?:2\\\\d\\\\d|3(?:[06][0-6]|1[013]|2[0-2]|3[0-39]|4\\\\d|5[0-5]|7[0-37]|8[0-8]|9[0-479]))\\\\d{4}\"],[\"80\\\\d{7}\"],[\"89[1-37-9]\\\\d{6}\"],0,0,0,0,[\"9(?:399[0-3]|479[0-5]|76(?:2[278]|3[0-37]))\\\\d{4}\"],[\"8(?:1[019]|2[0156]|84|90)\\\\d{6}\"]]],\"RO\":[\"40\",\"00\",\"(?:[236-8]\\\\d|90)\\\\d{7}|[23]\\\\d{5}\",[6,9],[[\"(\\\\d{3})(\\\\d{3})\",\"$1 $2\",[\"2[3-6]\",\"2[3-6]\\\\d9\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"219|31\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[23]1\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[236-9]\"],\"0$1\"]],\"0\",0,0,0,0,0,0,0,\" int \"],\"RS\":[\"381\",\"00\",\"38[02-9]\\\\d{6,9}|6\\\\d{7,9}|90\\\\d{4,8}|38\\\\d{5,6}|(?:7\\\\d\\\\d|800)\\\\d{3,9}|(?:[12]\\\\d|3[0-79])\\\\d{5,10}\",[6,7,8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3,9})\",\"$1 $2\",[\"(?:2[389]|39)0|[7-9]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{5,10})\",\"$1 $2\",[\"[1-36]\"],\"0$1\"]],\"0\"],\"RU\":[\"7\",\"810\",\"8\\\\d{13}|[347-9]\\\\d{9}\",[10,14],[[\"(\\\\d{4})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"7(?:1[0-8]|2[1-9])\",\"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:1[23]|[2-9]2))\",\"7(?:1(?:[0-356]2|4[29]|7|8[27])|2(?:13[03-69]|62[013-9]))|72[1-57-9]2\"],\"8 ($1)\",1],[\"(\\\\d{5})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"7(?:1[0-68]|2[1-9])\",\"7(?:1(?:[06][3-6]|[18]|2[35]|[3-5][3-5])|2(?:[13][3-5]|[24-689]|7[457]))\",\"7(?:1(?:0(?:[356]|4[023])|[18]|2(?:3[013-9]|5)|3[45]|43[013-79]|5(?:3[1-8]|4[1-7]|5)|6(?:3[0-35-9]|[4-6]))|2(?:1(?:3[178]|[45])|[24-689]|3[35]|7[457]))|7(?:14|23)4[0-8]|71(?:33|45)[1-79]\"],\"8 ($1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"8 ($1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[349]|8(?:[02-7]|1[1-8])\"],\"8 ($1)\",1],[\"(\\\\d{4})(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"8\"],\"8 ($1)\"]],\"8\",0,0,0,0,\"3[04-689]|[489]\",0,\"8~10\"],\"RW\":[\"250\",\"00\",\"(?:06|[27]\\\\d\\\\d|[89]00)\\\\d{6}\",[8,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"0\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[7-9]\"],\"0$1\"]],\"0\"],\"SA\":[\"966\",\"00\",\"92\\\\d{7}|(?:[15]|8\\\\d)\\\\d{8}\",[9,10],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"9\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"5\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"81\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]]],\"0\"],\"SB\":[\"677\",\"0[01]\",\"[6-9]\\\\d{6}|[1-6]\\\\d{4}\",[5,7],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"6[89]|7|8[4-9]|9(?:[1-8]|9[0-8])\"]]]],\"SC\":[\"248\",\"010|0[0-2]\",\"800\\\\d{4}|(?:[249]\\\\d|64)\\\\d{5}\",[7],[[\"(\\\\d)(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[246]|9[57]\"]]],0,0,0,0,0,0,0,\"00\"],\"SD\":[\"249\",\"00\",\"[19]\\\\d{8}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[19]\"],\"0$1\"]],\"0\"],\"SE\":[\"46\",\"00\",\"(?:[26]\\\\d\\\\d|9)\\\\d{9}|[1-9]\\\\d{8}|[1-689]\\\\d{7}|[1-4689]\\\\d{6}|2\\\\d{5}\",[6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3\",[\"20\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"9(?:00|39|44|9)\"],\"0$1\",0,\"$1 $2\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})\",\"$1-$2 $3\",[\"[12][136]|3[356]|4[0246]|6[03]|90[1-9]\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d)(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"8\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{2})\",\"$1-$2 $3\",[\"1[2457]|2(?:[247-9]|5[0138])|3[0247-9]|4[1357-9]|5[0-35-9]|6(?:[125689]|4[02-57]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{3})(\\\\d{2,3})(\\\\d{3})\",\"$1-$2 $3\",[\"9(?:00|39|44)\"],\"0$1\",0,\"$1 $2 $3\"],[\"(\\\\d{2})(\\\\d{2,3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"1[13689]|2[0136]|3[1356]|4[0246]|54|6[03]|90[1-9]\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"10|7\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"8\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4\",[\"[13-5]|2(?:[247-9]|5[0138])|6(?:[124-689]|7[0-2])|9(?:[125-8]|3[02-5]|4[0-3])\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{3})\",\"$1-$2 $3 $4\",[\"9\"],\"0$1\",0,\"$1 $2 $3 $4\"],[\"(\\\\d{3})(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1-$2 $3 $4 $5\",[\"[26]\"],\"0$1\",0,\"$1 $2 $3 $4 $5\"]],\"0\"],\"SG\":[\"65\",\"0[0-3]\\\\d\",\"(?:(?:1\\\\d|8)\\\\d\\\\d|7000)\\\\d{7}|[3689]\\\\d{7}\",[8,10,11],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[369]|8(?:0[1-9]|[1-9])\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"]],[\"(\\\\d{4})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"]],[\"(\\\\d{4})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"1\"]]]],\"SH\":[\"290\",\"00\",\"(?:[256]\\\\d|8)\\\\d{3}\",[4,5],0,0,0,0,0,0,\"[256]\"],\"SI\":[\"386\",\"00|10(?:22|66|88|99)\",\"[1-7]\\\\d{7}|8\\\\d{4,7}|90\\\\d{4,6}\",[5,6,7,8],[[\"(\\\\d{2})(\\\\d{3,6})\",\"$1 $2\",[\"8[09]|9\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"59|8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[37][01]|4[0139]|51|6\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[1-57]\"],\"(0$1)\"]],\"0\",0,0,0,0,0,0,\"00\"],\"SJ\":[\"47\",\"00\",\"0\\\\d{4}|(?:[489]\\\\d|79)\\\\d{6}\",[5,8],0,0,0,0,0,0,\"79\"],\"SK\":[\"421\",\"00\",\"[2-689]\\\\d{8}|[2-59]\\\\d{6}|[2-5]\\\\d{5}\",[6,7,9],[[\"(\\\\d)(\\\\d{2})(\\\\d{3,4})\",\"$1 $2 $3\",[\"21\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{2})(\\\\d{2,3})\",\"$1 $2 $3\",[\"[3-5][1-8]1\",\"[3-5][1-8]1[67]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{3})(\\\\d{2})\",\"$1/$2 $3 $4\",[\"2\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[689]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1/$2 $3 $4\",[\"[3-5]\"],\"0$1\"]],\"0\"],\"SL\":[\"232\",\"00\",\"(?:[237-9]\\\\d|66)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[236-9]\"],\"(0$1)\"]],\"0\"],\"SM\":[\"378\",\"00\",\"(?:0549|[5-7]\\\\d)\\\\d{6}\",[8,10],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[5-7]\"]],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"0\"]]],0,0,\"([89]\\\\d{5})$\",\"0549$1\"],\"SN\":[\"221\",\"00\",\"(?:[378]\\\\d|93)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[379]\"]]]],\"SO\":[\"252\",\"00\",\"[346-9]\\\\d{8}|[12679]\\\\d{7}|[1-5]\\\\d{6}|[1348]\\\\d{5}\",[6,7,8,9],[[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"8[125]\"]],[\"(\\\\d{6})\",\"$1\",[\"[134]\"]],[\"(\\\\d)(\\\\d{6})\",\"$1 $2\",[\"[15]|2[0-79]|3[0-46-8]|4[0-7]\"]],[\"(\\\\d)(\\\\d{7})\",\"$1 $2\",[\"(?:2|90)4|[67]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[348]|64|79|90\"]],[\"(\\\\d{2})(\\\\d{5,7})\",\"$1 $2\",[\"1|28|6[0-35-9]|77|9[2-9]\"]]],\"0\"],\"SR\":[\"597\",\"00\",\"(?:[2-5]|68|[78]\\\\d)\\\\d{5}\",[6,7],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1-$2-$3\",[\"56\"]],[\"(\\\\d{3})(\\\\d{3})\",\"$1-$2\",[\"[2-5]\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"[6-8]\"]]]],\"SS\":[\"211\",\"00\",\"[19]\\\\d{8}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[19]\"],\"0$1\"]],\"0\"],\"ST\":[\"239\",\"00\",\"(?:22|9\\\\d)\\\\d{5}\",[7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[29]\"]]]],\"SV\":[\"503\",\"00\",\"[267]\\\\d{7}|(?:80\\\\d|900)\\\\d{4}(?:\\\\d{4})?\",[7,8,11],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[89]\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[267]\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"]]]],\"SX\":[\"1\",\"011\",\"7215\\\\d{6}|(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"(5\\\\d{6})$|1\",\"721$1\",0,\"721\"],\"SY\":[\"963\",\"00\",\"[1-39]\\\\d{8}|[1-5]\\\\d{7}\",[8,9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-5]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\",1]],\"0\"],\"SZ\":[\"268\",\"00\",\"0800\\\\d{4}|(?:[237]\\\\d|900)\\\\d{6}\",[8,9],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[0237]\"]],[\"(\\\\d{5})(\\\\d{4})\",\"$1 $2\",[\"9\"]]]],\"TA\":[\"290\",\"00\",\"8\\\\d{3}\",[4],0,0,0,0,0,0,\"8\"],\"TC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|649|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-479]\\\\d{6})$|1\",\"649$1\",0,\"649\"],\"TD\":[\"235\",\"00|16\",\"(?:22|[69]\\\\d|77)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[2679]\"]]],0,0,0,0,0,0,0,\"00\"],\"TG\":[\"228\",\"00\",\"[279]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[279]\"]]]],\"TH\":[\"66\",\"00[1-9]\",\"(?:001800|[2-57]|[689]\\\\d)\\\\d{7}|1\\\\d{7,9}\",[8,9,10,13],[[\"(\\\\d)(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"2\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[13-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"1\"]]],\"0\"],\"TJ\":[\"992\",\"810\",\"[0-57-9]\\\\d{8}\",[9],[[\"(\\\\d{6})(\\\\d)(\\\\d{2})\",\"$1 $2 $3\",[\"331\",\"3317\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"44[02-479]|[34]7\"]],[\"(\\\\d{4})(\\\\d)(\\\\d{4})\",\"$1 $2 $3\",[\"3[1-5]\"]],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[0-57-9]\"]]],0,0,0,0,0,0,0,\"8~10\"],\"TK\":[\"690\",\"00\",\"[2-47]\\\\d{3,6}\",[4,5,6,7]],\"TL\":[\"670\",\"00\",\"7\\\\d{7}|(?:[2-47]\\\\d|[89]0)\\\\d{5}\",[7,8],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[2-489]|70\"]],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"7\"]]]],\"TM\":[\"993\",\"810\",\"(?:[1-6]\\\\d|71)\\\\d{6}\",[8],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"12\"],\"(8 $1)\"],[\"(\\\\d{3})(\\\\d)(\\\\d{2})(\\\\d{2})\",\"$1 $2-$3-$4\",[\"[1-5]\"],\"(8 $1)\"],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"[67]\"],\"8 $1\"]],\"8\",0,0,0,0,0,0,\"8~10\"],\"TN\":[\"216\",\"00\",\"[2-57-9]\\\\d{7}\",[8],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-57-9]\"]]]],\"TO\":[\"676\",\"00\",\"(?:0800|(?:[5-8]\\\\d\\\\d|999)\\\\d)\\\\d{3}|[2-8]\\\\d{4}\",[5,7],[[\"(\\\\d{2})(\\\\d{3})\",\"$1-$2\",[\"[2-4]|50|6[09]|7[0-24-69]|8[05]\"]],[\"(\\\\d{4})(\\\\d{3})\",\"$1 $2\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[5-9]\"]]]],\"TR\":[\"90\",\"00\",\"4\\\\d{6}|8\\\\d{11,12}|(?:[2-58]\\\\d\\\\d|900)\\\\d{7}\",[7,10,12,13],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"512|8[01589]|90\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"5(?:[0-59]|61)\",\"5(?:[0-59]|61[06])\",\"5(?:[0-59]|61[06]1)\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[24][1-8]|3[1-9]\"],\"(0$1)\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{6,7})\",\"$1 $2 $3\",[\"80\"],\"0$1\",1]],\"0\"],\"TT\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-46-8]\\\\d{6})$|1\",\"868$1\",0,\"868\"],\"TV\":[\"688\",\"00\",\"(?:2|7\\\\d\\\\d|90)\\\\d{4}\",[5,6,7],[[\"(\\\\d{2})(\\\\d{3})\",\"$1 $2\",[\"2\"]],[\"(\\\\d{2})(\\\\d{4})\",\"$1 $2\",[\"90\"]],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7\"]]]],\"TW\":[\"886\",\"0(?:0[25-79]|19)\",\"[2-689]\\\\d{8}|7\\\\d{9,10}|[2-8]\\\\d{7}|2\\\\d{6}\",[7,8,9,10,11],[[\"(\\\\d{2})(\\\\d)(\\\\d{4})\",\"$1 $2 $3\",[\"202\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[258]0\"],\"0$1\"],[\"(\\\\d)(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"[23568]|4(?:0[02-48]|[1-47-9])|7[1-9]\",\"[23568]|4(?:0[2-48]|[1-47-9])|(?:400|7)[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[49]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4,5})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\",0,0,0,0,0,0,0,\"#\"],\"TZ\":[\"255\",\"00[056]\",\"(?:[25-8]\\\\d|41|90)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[24]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"5\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[67]\"],\"0$1\"]],\"0\"],\"UA\":[\"380\",\"00\",\"[89]\\\\d{9}|[3-9]\\\\d{8}\",[9,10],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"6[12][29]|(?:3[1-8]|4[136-8]|5[12457]|6[49])2|(?:56|65)[24]\",\"6[12][29]|(?:35|4[1378]|5[12457]|6[49])2|(?:56|65)[24]|(?:3[1-46-8]|46)2[013-9]\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6[0135689]|7[4-6])|6(?:[12][3-7]|[459])\",\"3[1-8]|4(?:[1367]|[45][6-9]|8[4-6])|5(?:[1-5]|6(?:[015689]|3[02389])|7[4-6])|6(?:[12][3-7]|[459])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[3-7]|89|9[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[89]\"],\"0$1\"]],\"0\",0,0,0,0,0,0,\"0~0\"],\"UG\":[\"256\",\"00[057]\",\"800\\\\d{6}|(?:[29]0|[347]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{4})(\\\\d{5})\",\"$1 $2\",[\"202\",\"2024\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{6})\",\"$1 $2\",[\"[27-9]|4(?:6[45]|[7-9])\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"[34]\"],\"0$1\"]],\"0\"],\"US\":[\"1\",\"011\",\"[2-9]\\\\d{9}|3\\\\d{6}\",[10],[[\"(\\\\d{3})(\\\\d{4})\",\"$1-$2\",[\"310\"],0,1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"($1) $2-$3\",[\"[2-9]\"],0,1,\"$1-$2-$3\"]],\"1\",0,0,0,0,0,[[\"(?:5056(?:[0-35-9]\\\\d|4[468])|7302[0-4]\\\\d)\\\\d{4}|(?:472[24]|505[2-57-9]|7306|983[2-47-9])\\\\d{6}|(?:2(?:0[1-35-9]|1[02-9]|2[03-57-9]|3[1459]|4[08]|5[1-46]|6[0279]|7[0269]|8[13])|3(?:0[1-57-9]|1[02-9]|2[013569]|3[0-24679]|4[167]|5[0-2]|6[01349]|8[056])|4(?:0[124-9]|1[02-579]|2[3-5]|3[0245]|4[023578]|58|6[349]|7[0589]|8[04])|5(?:0[1-47-9]|1[0235-8]|20|3[0149]|4[01]|5[179]|6[1-47]|7[0-5]|8[0256])|6(?:0[1-35-9]|1[024-9]|2[03689]|3[016]|4[0156]|5[01679]|6[0-279]|78|8[0-29])|7(?:0[1-46-8]|1[2-9]|2[04-8]|3[1247]|4[037]|5[47]|6[02359]|7[0-59]|8[156])|8(?:0[1-68]|1[02-8]|2[068]|3[0-2589]|4[03578]|5[046-9]|6[02-5]|7[028])|9(?:0[1346-9]|1[02-9]|2[0589]|3[0146-8]|4[01357-9]|5[12469]|7[0-389]|8[04-69]))[2-9]\\\\d{6}\"],[\"\"],[\"8(?:00|33|44|55|66|77|88)[2-9]\\\\d{6}\"],[\"900[2-9]\\\\d{6}\"],[\"52(?:3(?:[2-46-9][02-9]\\\\d|5(?:[02-46-9]\\\\d|5[0-46-9]))|4(?:[2-478][02-9]\\\\d|5(?:[034]\\\\d|2[024-9]|5[0-46-9])|6(?:0[1-9]|[2-9]\\\\d)|9(?:[05-9]\\\\d|2[0-5]|49)))\\\\d{4}|52[34][2-9]1[02-9]\\\\d{4}|5(?:00|2[125-9]|33|44|66|77|88)[2-9]\\\\d{6}\"]]],\"UY\":[\"598\",\"0(?:0|1[3-9]\\\\d)\",\"0004\\\\d{2,9}|[1249]\\\\d{7}|(?:[49]\\\\d|80)\\\\d{5}\",[6,7,8,9,10,11,12,13],[[\"(\\\\d{3})(\\\\d{3,4})\",\"$1 $2\",[\"0\"]],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[49]0|8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"9\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[124]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"0\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3 $4\",[\"0\"]]],\"0\",0,0,0,0,0,0,\"00\",\" int. \"],\"UZ\":[\"998\",\"00\",\"(?:20|33|[5-79]\\\\d|88)\\\\d{7}\",[9],[[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"[235-9]\"]]]],\"VA\":[\"39\",\"00\",\"0\\\\d{5,10}|3[0-8]\\\\d{7,10}|55\\\\d{8}|8\\\\d{5}(?:\\\\d{2,4})?|(?:1\\\\d|39)\\\\d{7,8}\",[6,7,8,9,10,11],0,0,0,0,0,0,\"06698\"],\"VC\":[\"1\",\"011\",\"(?:[58]\\\\d\\\\d|784|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-7]\\\\d{6})$|1\",\"784$1\",0,\"784\"],\"VE\":[\"58\",\"00\",\"[68]00\\\\d{7}|(?:[24]\\\\d|[59]0)\\\\d{8}\",[10],[[\"(\\\\d{3})(\\\\d{7})\",\"$1-$2\",[\"[24-689]\"],\"0$1\"]],\"0\"],\"VG\":[\"1\",\"011\",\"(?:284|[58]\\\\d\\\\d|900)\\\\d{7}\",[10],0,\"1\",0,\"([2-578]\\\\d{6})$|1\",\"284$1\",0,\"284\"],\"VI\":[\"1\",\"011\",\"[58]\\\\d{9}|(?:34|90)0\\\\d{7}\",[10],0,\"1\",0,\"([2-9]\\\\d{6})$|1\",\"340$1\",0,\"340\"],\"VN\":[\"84\",\"00\",\"[12]\\\\d{9}|[135-9]\\\\d{8}|[16]\\\\d{7}|[16-8]\\\\d{6}\",[7,8,9,10],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"80\"],\"0$1\",1],[\"(\\\\d{4})(\\\\d{4,6})\",\"$1 $2\",[\"1\"],0,1],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"6\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[357-9]\"],\"0$1\",1],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"2[48]\"],\"0$1\",1],[\"(\\\\d{3})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"2\"],\"0$1\",1]],\"0\"],\"VU\":[\"678\",\"00\",\"[57-9]\\\\d{6}|(?:[238]\\\\d|48)\\\\d{3}\",[5,7],[[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"[57-9]\"]]]],\"WF\":[\"681\",\"00\",\"(?:40|72)\\\\d{4}|8\\\\d{5}(?:\\\\d{3})?\",[6,9],[[\"(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3\",[\"[478]\"]],[\"(\\\\d{3})(\\\\d{2})(\\\\d{2})(\\\\d{2})\",\"$1 $2 $3 $4\",[\"8\"]]]],\"WS\":[\"685\",\"0\",\"(?:[2-6]|8\\\\d{5})\\\\d{4}|[78]\\\\d{6}|[68]\\\\d{5}\",[5,6,7,10],[[\"(\\\\d{5})\",\"$1\",[\"[2-5]|6[1-9]\"]],[\"(\\\\d{3})(\\\\d{3,7})\",\"$1 $2\",[\"[68]\"]],[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"7\"]]]],\"XK\":[\"383\",\"00\",\"2\\\\d{7,8}|3\\\\d{7,11}|(?:4\\\\d\\\\d|[89]00)\\\\d{5}\",[8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{5})\",\"$1 $2\",[\"[89]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[2-4]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"2|39\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7,10})\",\"$1 $2\",[\"3\"],\"0$1\"]],\"0\"],\"YE\":[\"967\",\"00\",\"(?:1|7\\\\d)\\\\d{7}|[1-7]\\\\d{6}\",[7,8,9],[[\"(\\\\d)(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"[1-6]|7(?:[24-6]|8[0-7])\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"7\"],\"0$1\"]],\"0\"],\"YT\":[\"262\",\"00\",\"(?:80|9\\\\d)\\\\d{7}|(?:26|63)9\\\\d{6}\",[9],0,\"0\",0,0,0,0,0,[[\"269(?:0[0-467]|15|5[0-4]|6\\\\d|[78]0)\\\\d{4}\"],[\"639(?:0[0-79]|1[019]|[267]\\\\d|3[09]|40|5[05-9]|9[04-79])\\\\d{4}\"],[\"80\\\\d{7}\"],0,0,0,0,0,[\"9(?:(?:39|47)8[01]|769\\\\d)\\\\d{4}\"]]],\"ZA\":[\"27\",\"00\",\"[1-79]\\\\d{8}|8\\\\d{4,9}\",[5,6,7,8,9,10],[[\"(\\\\d{2})(\\\\d{3,4})\",\"$1 $2\",[\"8[1-4]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{2,3})\",\"$1 $2 $3\",[\"8[1-4]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"860\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"[1-9]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"8\"],\"0$1\"]],\"0\"],\"ZM\":[\"260\",\"00\",\"800\\\\d{6}|(?:21|63|[79]\\\\d)\\\\d{7}\",[9],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[28]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"[79]\"],\"0$1\"]],\"0\"],\"ZW\":[\"263\",\"00\",\"2(?:[0-57-9]\\\\d{6,8}|6[0-24-9]\\\\d{6,7})|[38]\\\\d{9}|[35-8]\\\\d{8}|[3-6]\\\\d{7}|[1-689]\\\\d{6}|[1-3569]\\\\d{5}|[1356]\\\\d{4}\",[5,6,7,8,9,10],[[\"(\\\\d{3})(\\\\d{3,5})\",\"$1 $2\",[\"2(?:0[45]|2[278]|[49]8)|3(?:[09]8|17)|6(?:[29]8|37|75)|[23][78]|(?:33|5[15]|6[68])[78]\"],\"0$1\"],[\"(\\\\d)(\\\\d{3})(\\\\d{2,4})\",\"$1 $2 $3\",[\"[49]\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{4})\",\"$1 $2\",[\"80\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{7})\",\"$1 $2\",[\"24|8[13-59]|(?:2[05-79]|39|5[45]|6[15-8])2\",\"2(?:02[014]|4|[56]20|[79]2)|392|5(?:42|525)|6(?:[16-8]21|52[013])|8[13-59]\"],\"(0$1)\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"7\"],\"0$1\"],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:12|29)\",\"2(?:1[39]|2[0157]|[378]|[56][14])|3(?:123|29)\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{6})\",\"$1 $2\",[\"8\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3,5})\",\"$1 $2\",[\"1|2(?:0[0-36-9]|12|29|[56])|3(?:1[0-689]|[24-6])|5(?:[0236-9]|1[2-4])|6(?:[013-59]|7[0-46-9])|(?:33|55|6[68])[0-69]|(?:29|3[09]|62)[0-79]\"],\"0$1\"],[\"(\\\\d{2})(\\\\d{3})(\\\\d{3,4})\",\"$1 $2 $3\",[\"29[013-9]|39|54\"],\"0$1\"],[\"(\\\\d{4})(\\\\d{3,5})\",\"$1 $2\",[\"(?:25|54)8\",\"258|5483\"],\"0$1\"]],\"0\"]},\"nonGeographic\":{\"800\":[\"800\",0,\"(?:00|[1-9]\\\\d)\\\\d{6}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"\\\\d\"]]],0,0,0,0,0,0,[0,0,[\"(?:00|[1-9]\\\\d)\\\\d{6}\"]]],\"808\":[\"808\",0,\"[1-9]\\\\d{7}\",[8],[[\"(\\\\d{4})(\\\\d{4})\",\"$1 $2\",[\"[1-9]\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,0,[\"[1-9]\\\\d{7}\"]]],\"870\":[\"870\",0,\"7\\\\d{11}|[35-7]\\\\d{8}\",[9,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"[35-7]\"]]],0,0,0,0,0,0,[0,[\"(?:[356]|774[45])\\\\d{8}|7[6-8]\\\\d{7}\"]]],\"878\":[\"878\",0,\"10\\\\d{10}\",[12],[[\"(\\\\d{2})(\\\\d{5})(\\\\d{5})\",\"$1 $2 $3\",[\"1\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,[\"10\\\\d{10}\"]]],\"881\":[\"881\",0,\"6\\\\d{9}|[0-36-9]\\\\d{8}\",[9,10],[[\"(\\\\d)(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\",[\"[0-37-9]\"]],[\"(\\\\d)(\\\\d{3})(\\\\d{5,6})\",\"$1 $2 $3\",[\"6\"]]],0,0,0,0,0,0,[0,[\"6\\\\d{9}|[0-36-9]\\\\d{8}\"]]],\"882\":[\"882\",0,\"[13]\\\\d{6}(?:\\\\d{2,5})?|[19]\\\\d{7}|(?:[25]\\\\d\\\\d|4)\\\\d{7}(?:\\\\d{2})?\",[7,8,9,10,11,12],[[\"(\\\\d{2})(\\\\d{5})\",\"$1 $2\",[\"16|342\"]],[\"(\\\\d{2})(\\\\d{6})\",\"$1 $2\",[\"49\"]],[\"(\\\\d{2})(\\\\d{2})(\\\\d{4})\",\"$1 $2 $3\",[\"1[36]|9\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{3})\",\"$1 $2 $3\",[\"3[23]\"]],[\"(\\\\d{2})(\\\\d{3,4})(\\\\d{4})\",\"$1 $2 $3\",[\"16\"]],[\"(\\\\d{2})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"10|23|3(?:[15]|4[57])|4|51\"]],[\"(\\\\d{3})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"34\"]],[\"(\\\\d{2})(\\\\d{4,5})(\\\\d{5})\",\"$1 $2 $3\",[\"[1-35]\"]]],0,0,0,0,0,0,[0,[\"342\\\\d{4}|(?:337|49)\\\\d{6}|(?:3(?:2|47|7\\\\d{3})|50\\\\d{3})\\\\d{7}\",[7,8,9,10,12]],0,0,0,0,0,0,[\"1(?:3(?:0[0347]|[13][0139]|2[035]|4[013568]|6[0459]|7[06]|8[15-8]|9[0689])\\\\d{4}|6\\\\d{5,10})|(?:345\\\\d|9[89])\\\\d{6}|(?:10|2(?:3|85\\\\d)|3(?:[15]|[69]\\\\d\\\\d)|4[15-8]|51)\\\\d{8}\"]]],\"883\":[\"883\",0,\"(?:[1-4]\\\\d|51)\\\\d{6,10}\",[8,9,10,11,12],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{2,8})\",\"$1 $2 $3\",[\"[14]|2[24-689]|3[02-689]|51[24-9]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3\",[\"510\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{4})\",\"$1 $2 $3\",[\"21\"]],[\"(\\\\d{4})(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"51[13]\"]],[\"(\\\\d{3})(\\\\d{3})(\\\\d{3})(\\\\d{3})\",\"$1 $2 $3 $4\",[\"[235]\"]]],0,0,0,0,0,0,[0,0,0,0,0,0,0,0,[\"(?:2(?:00\\\\d\\\\d|10)|(?:370[1-9]|51\\\\d0)\\\\d)\\\\d{7}|51(?:00\\\\d{5}|[24-9]0\\\\d{4,7})|(?:1[0-79]|2[24-689]|3[02-689]|4[0-4])0\\\\d{5,9}\"]]],\"888\":[\"888\",0,\"\\\\d{11}\",[11],[[\"(\\\\d{3})(\\\\d{3})(\\\\d{5})\",\"$1 $2 $3\"]],0,0,0,0,0,0,[0,0,0,0,0,0,[\"\\\\d{11}\"]]],\"979\":[\"979\",0,\"[1359]\\\\d{8}\",[9],[[\"(\\\\d)(\\\\d{4})(\\\\d{4})\",\"$1 $2 $3\",[\"[1359]\"]]],0,0,0,0,0,0,[0,0,0,[\"[1359]\\\\d{8}\"]]]}}","const objectConstructor = {}.constructor;\r\n\r\nexport default function isObject(object) {\r\n  return object !== undefined && object !== null && object.constructor === objectConstructor;\r\n}\r\n","import isObject from './helpers/isObject.js'\r\n\r\n// Extracts the following properties from function arguments:\r\n// * input `text`\r\n// * `options` object\r\n// * `metadata` JSON\r\nexport default function normalizeArguments(args) {\r\n\tconst [arg_1, arg_2, arg_3, arg_4] = Array.prototype.slice.call(args)\r\n\r\n\tlet text\r\n\tlet options\r\n\tlet metadata\r\n\r\n\t// If the phone number is passed as a string.\r\n\t// `parsePhoneNumber('88005553535', ...)`.\r\n\tif (typeof arg_1 === 'string') {\r\n\t\ttext = arg_1\r\n\t}\r\n\telse throw new TypeError('A text for parsing must be a string.')\r\n\r\n\t// If \"default country\" argument is being passed then move it to `options`.\r\n\t// `parsePhoneNumber('88005553535', 'RU', [options], metadata)`.\r\n\tif (!arg_2 || typeof arg_2 === 'string')\r\n\t{\r\n\t\tif (arg_4) {\r\n\t\t\toptions = arg_3\r\n\t\t\tmetadata = arg_4\r\n\t\t} else {\r\n\t\t\toptions = undefined\r\n\t\t\tmetadata = arg_3\r\n\t\t}\r\n\r\n\t\tif (arg_2) {\r\n\t\t\toptions = { defaultCountry: arg_2, ...options }\r\n\t\t}\r\n\t}\r\n\t// `defaultCountry` is not passed.\r\n\t// Example: `parsePhoneNumber('+78005553535', [options], metadata)`.\r\n\telse if (isObject(arg_2))\r\n\t{\r\n\t\tif (arg_3) {\r\n\t\t\toptions  = arg_2\r\n\t\t\tmetadata = arg_3\r\n\t\t} else {\r\n\t\t\tmetadata = arg_2\r\n\t\t}\r\n\t}\r\n\telse throw new Error(`Invalid second argument: ${arg_2}`)\r\n\r\n\treturn {\r\n\t\ttext,\r\n\t\toptions,\r\n\t\tmetadata\r\n\t}\r\n}","// The minimum length of the national significant number.\r\nexport const MIN_LENGTH_FOR_NSN = 2\r\n\r\n// The ITU says the maximum length should be 15,\r\n// but one can find longer numbers in Germany.\r\nexport const MAX_LENGTH_FOR_NSN = 17\r\n\r\n// The maximum length of the country calling code.\r\nexport const MAX_LENGTH_COUNTRY_CODE = 3\r\n\r\n// Digits accepted in phone numbers\r\n// (ascii, fullwidth, arabic-indic, and eastern arabic digits).\r\nexport const VALID_DIGITS = '0-9\\uFF10-\\uFF19\\u0660-\\u0669\\u06F0-\\u06F9'\r\n\r\n// `DASHES` will be right after the opening square bracket of the \"character class\"\r\nconst DASHES = '-\\u2010-\\u2015\\u2212\\u30FC\\uFF0D'\r\nconst SLASHES = '\\uFF0F/'\r\nconst DOTS = '\\uFF0E.'\r\nexport const WHITESPACE = ' \\u00A0\\u00AD\\u200B\\u2060\\u3000'\r\nconst BRACKETS = '()\\uFF08\\uFF09\\uFF3B\\uFF3D\\\\[\\\\]'\r\n// export const OPENING_BRACKETS = '(\\uFF08\\uFF3B\\\\\\['\r\nconst TILDES = '~\\u2053\\u223C\\uFF5E'\r\n\r\n// Regular expression of acceptable punctuation found in phone numbers. This\r\n// excludes punctuation found as a leading character only. This consists of dash\r\n// characters, white space characters, full stops, slashes, square brackets,\r\n// parentheses and tildes. Full-width variants are also present.\r\nexport const VALID_PUNCTUATION = `${DASHES}${SLASHES}${DOTS}${WHITESPACE}${BRACKETS}${TILDES}`\r\n\r\nexport const PLUS_CHARS = '+\\uFF0B'\r\n// const LEADING_PLUS_CHARS_PATTERN = new RegExp('^[' + PLUS_CHARS + ']+')","// https://stackoverflow.com/a/46971044/970769\r\n// \"Breaking changes in Typescript 2.1\"\r\n// \"Extending built-ins like Error, Array, and Map may no longer work.\"\r\n// \"As a recommendation, you can manually adjust the prototype immediately after any super(...) calls.\"\r\n// https://github.com/Microsoft/TypeScript-wiki/blob/main/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\r\nexport default class ParseError extends Error {\r\n  constructor(code) {\r\n    super(code)\r\n    // Set the prototype explicitly.\r\n    // Any subclass of FooError will have to manually set the prototype as well.\r\n    Object.setPrototypeOf(this, ParseError.prototype)\r\n    this.name = this.constructor.name\r\n  }\r\n}","// Copy-pasted from:\r\n// https://github.com/substack/semver-compare/blob/master/index.js\r\n//\r\n// Inlining this function because some users reported issues with\r\n// importing from `semver-compare` in a browser with ES6 \"native\" modules.\r\n//\r\n// Fixes `semver-compare` not being able to compare versions with alpha/beta/etc \"tags\".\r\n// https://github.com/catamphetamine/libphonenumber-js/issues/381\r\nexport default function(a, b) {\r\n    a = a.split('-')\r\n    b = b.split('-')\r\n    var pa = a[0].split('.')\r\n    var pb = b[0].split('.')\r\n    for (var i = 0; i < 3; i++) {\r\n        var na = Number(pa[i])\r\n        var nb = Number(pb[i])\r\n        if (na > nb) return 1\r\n        if (nb > na) return -1\r\n        if (!isNaN(na) && isNaN(nb)) return 1\r\n        if (isNaN(na) && !isNaN(nb)) return -1\r\n    }\r\n    if (a[1] && b[1]) {\r\n        return a[1] > b[1] ? 1 : (a[1] < b[1] ? -1 : 0)\r\n    }\r\n    return !a[1] && b[1] ? 1 : (a[1] && !b[1] ? -1 : 0)\r\n}","import compare from './tools/semver-compare.js'\r\nimport isObject from './helpers/isObject.js'\r\n\r\n// Added \"possibleLengths\" and renamed\r\n// \"country_phone_code_to_countries\" to \"country_calling_codes\".\r\nconst V2 = '1.0.18'\r\n\r\n// Added \"idd_prefix\" and \"default_idd_prefix\".\r\nconst V3 = '1.2.0'\r\n\r\n// Moved `001` country code to \"nonGeographic\" section of metadata.\r\nconst V4 = '1.7.35'\r\n\r\nconst DEFAULT_EXT_PREFIX = ' ext. '\r\n\r\nconst CALLING_CODE_REG_EXP = /^\\d+$/\r\n\r\n/**\r\n * See: https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md\r\n */\r\nexport default class Metadata {\r\n\tconstructor(metadata) {\r\n\t\tvalidateMetadata(metadata)\r\n\t\tthis.metadata = metadata\r\n\t\tsetVersion.call(this, metadata)\r\n\t}\r\n\r\n\tgetCountries() {\r\n\t\treturn Object.keys(this.metadata.countries).filter(_ => _ !== '001')\r\n\t}\r\n\r\n\tgetCountryMetadata(countryCode) {\r\n\t\treturn this.metadata.countries[countryCode]\r\n\t}\r\n\r\n\tnonGeographic() {\r\n\t\tif (this.v1 || this.v2 || this.v3) return\r\n\t\t// `nonGeographical` was a typo.\r\n\t\t// It's present in metadata generated from `1.7.35` to `1.7.37`.\r\n\t\t// The test case could be found by searching for \"nonGeographical\".\r\n\t\treturn this.metadata.nonGeographic || this.metadata.nonGeographical\r\n\t}\r\n\r\n\thasCountry(country) {\r\n\t\treturn this.getCountryMetadata(country) !== undefined\r\n\t}\r\n\r\n\thasCallingCode(callingCode) {\r\n\t\tif (this.getCountryCodesForCallingCode(callingCode)) {\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tif (this.nonGeographic()) {\r\n\t\t\tif (this.nonGeographic()[callingCode]) {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// A hacky workaround for old custom metadata (generated before V4).\r\n\t\t\tconst countryCodes = this.countryCallingCodes()[callingCode]\r\n\t\t\tif (countryCodes && countryCodes.length === 1 && countryCodes[0] === '001') {\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tisNonGeographicCallingCode(callingCode) {\r\n\t\tif (this.nonGeographic()) {\r\n\t\t\treturn this.nonGeographic()[callingCode] ? true : false\r\n\t\t} else {\r\n\t\t\treturn this.getCountryCodesForCallingCode(callingCode) ? false : true\r\n\t\t}\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tcountry(countryCode) {\r\n\t\treturn this.selectNumberingPlan(countryCode)\r\n\t}\r\n\r\n\tselectNumberingPlan(countryCode, callingCode) {\r\n\t\t// Supports just passing `callingCode` as the first argument.\r\n\t\tif (countryCode && CALLING_CODE_REG_EXP.test(countryCode)) {\r\n\t\t\tcallingCode = countryCode\r\n\t\t\tcountryCode = null\r\n\t\t}\r\n\t\tif (countryCode && countryCode !== '001') {\r\n\t\t\tif (!this.hasCountry(countryCode)) {\r\n\t\t\t\tthrow new Error(`Unknown country: ${countryCode}`)\r\n\t\t\t}\r\n\t\t\tthis.numberingPlan = new NumberingPlan(this.getCountryMetadata(countryCode), this)\r\n\t\t} else if (callingCode) {\r\n\t\t\tif (!this.hasCallingCode(callingCode)) {\r\n\t\t\t\tthrow new Error(`Unknown calling code: ${callingCode}`)\r\n\t\t\t}\r\n\t\t\tthis.numberingPlan = new NumberingPlan(this.getNumberingPlanMetadata(callingCode), this)\r\n\t\t} else {\r\n\t\t\tthis.numberingPlan = undefined\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\tgetCountryCodesForCallingCode(callingCode) {\r\n\t\tconst countryCodes = this.countryCallingCodes()[callingCode]\r\n\t\tif (countryCodes) {\r\n\t\t\t// Metadata before V4 included \"non-geographic entity\" calling codes\r\n\t\t\t// inside `country_calling_codes` (for example, `\"881\":[\"001\"]`).\r\n\t\t\t// Now the semantics of `country_calling_codes` has changed:\r\n\t\t\t// it's specifically for \"countries\" now.\r\n\t\t\t// Older versions of custom metadata will simply skip parsing\r\n\t\t\t// \"non-geographic entity\" phone numbers with new versions\r\n\t\t\t// of this library: it's not considered a bug,\r\n\t\t\t// because such numbers are extremely rare,\r\n\t\t\t// and developers extremely rarely use custom metadata.\r\n\t\t\tif (countryCodes.length === 1 && countryCodes[0].length === 3) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\treturn countryCodes\r\n\t\t}\r\n\t}\r\n\r\n\tgetCountryCodeForCallingCode(callingCode) {\r\n\t\tconst countryCodes = this.getCountryCodesForCallingCode(callingCode)\r\n\t\tif (countryCodes) {\r\n\t\t\treturn countryCodes[0]\r\n\t\t}\r\n\t}\r\n\r\n\tgetNumberingPlanMetadata(callingCode) {\r\n\t\tconst countryCode = this.getCountryCodeForCallingCode(callingCode)\r\n\t\tif (countryCode) {\r\n\t\t\treturn this.getCountryMetadata(countryCode)\r\n\t\t}\r\n\t\tif (this.nonGeographic()) {\r\n\t\t\tconst metadata = this.nonGeographic()[callingCode]\r\n\t\t\tif (metadata) {\r\n\t\t\t\treturn metadata\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// A hacky workaround for old custom metadata (generated before V4).\r\n\t\t\t// In that metadata, there was no concept of \"non-geographic\" metadata\r\n\t\t\t// so metadata for `001` country code was stored along with other countries.\r\n\t\t\t// The test case can be found by searching for:\r\n\t\t\t// \"should work around `nonGeographic` metadata not existing\".\r\n\t\t\tconst countryCodes = this.countryCallingCodes()[callingCode]\r\n\t\t\tif (countryCodes && countryCodes.length === 1 && countryCodes[0] === '001') {\r\n\t\t\t\treturn this.metadata.countries['001']\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tcountryCallingCode() {\r\n\t\treturn this.numberingPlan.callingCode()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tIDDPrefix() {\r\n\t\treturn this.numberingPlan.IDDPrefix()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tdefaultIDDPrefix() {\r\n\t\treturn this.numberingPlan.defaultIDDPrefix()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tnationalNumberPattern() {\r\n\t\treturn this.numberingPlan.nationalNumberPattern()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tpossibleLengths() {\r\n\t\treturn this.numberingPlan.possibleLengths()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tformats() {\r\n\t\treturn this.numberingPlan.formats()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tnationalPrefixForParsing() {\r\n\t\treturn this.numberingPlan.nationalPrefixForParsing()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tnationalPrefixTransformRule() {\r\n\t\treturn this.numberingPlan.nationalPrefixTransformRule()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tleadingDigits() {\r\n\t\treturn this.numberingPlan.leadingDigits()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\thasTypes() {\r\n\t\treturn this.numberingPlan.hasTypes()\r\n\t}\r\n\r\n\t// Deprecated.\r\n\ttype(type) {\r\n\t\treturn this.numberingPlan.type(type)\r\n\t}\r\n\r\n\t// Deprecated.\r\n\text() {\r\n\t\treturn this.numberingPlan.ext()\r\n\t}\r\n\r\n\tcountryCallingCodes() {\r\n\t\tif (this.v1) return this.metadata.country_phone_code_to_countries\r\n\t\treturn this.metadata.country_calling_codes\r\n\t}\r\n\r\n\t// Deprecated.\r\n\tchooseCountryByCountryCallingCode(callingCode) {\r\n\t\treturn this.selectNumberingPlan(callingCode)\r\n\t}\r\n\r\n\thasSelectedNumberingPlan() {\r\n\t\treturn this.numberingPlan !== undefined\r\n\t}\r\n}\r\n\r\nclass NumberingPlan {\r\n\tconstructor(metadata, globalMetadataObject) {\r\n\t\tthis.globalMetadataObject = globalMetadataObject\r\n\t\tthis.metadata = metadata\r\n\t\tsetVersion.call(this, globalMetadataObject.metadata)\r\n\t}\r\n\r\n\tcallingCode() {\r\n\t\treturn this.metadata[0]\r\n\t}\r\n\r\n\t// Formatting information for regions which share\r\n\t// a country calling code is contained by only one region\r\n\t// for performance reasons. For example, for NANPA region\r\n\t// (\"North American Numbering Plan Administration\",\r\n\t//  which includes USA, Canada, Cayman Islands, Bahamas, etc)\r\n\t// it will be contained in the metadata for `US`.\r\n\tgetDefaultCountryMetadataForRegion() {\r\n\t\treturn this.globalMetadataObject.getNumberingPlanMetadata(this.callingCode())\r\n\t}\r\n\r\n\t// Is always present.\r\n\tIDDPrefix() {\r\n\t\tif (this.v1 || this.v2) return\r\n\t\treturn this.metadata[1]\r\n\t}\r\n\r\n\t// Is only present when a country supports multiple IDD prefixes.\r\n\tdefaultIDDPrefix() {\r\n\t\tif (this.v1 || this.v2) return\r\n\t\treturn this.metadata[12]\r\n\t}\r\n\r\n\tnationalNumberPattern() {\r\n\t\tif (this.v1 || this.v2) return this.metadata[1]\r\n\t\treturn this.metadata[2]\r\n\t}\r\n\r\n\t// \"possible length\" data is always present in Google's metadata.\r\n\tpossibleLengths() {\r\n\t\tif (this.v1) return\r\n\t\treturn this.metadata[this.v2 ? 2 : 3]\r\n\t}\r\n\r\n\t_getFormats(metadata) {\r\n\t\treturn metadata[this.v1 ? 2 : this.v2 ? 3 : 4]\r\n\t}\r\n\r\n\t// For countries of the same region (e.g. NANPA)\r\n\t// formats are all stored in the \"main\" country for that region.\r\n\t// E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\r\n\tformats() {\r\n\t\tconst formats = this._getFormats(this.metadata) || this._getFormats(this.getDefaultCountryMetadataForRegion()) || []\r\n\t\treturn formats.map(_ => new Format(_, this))\r\n\t}\r\n\r\n\tnationalPrefix() {\r\n\t\treturn this.metadata[this.v1 ? 3 : this.v2 ? 4 : 5]\r\n\t}\r\n\r\n\t_getNationalPrefixFormattingRule(metadata) {\r\n\t\treturn metadata[this.v1 ? 4 : this.v2 ? 5 : 6]\r\n\t}\r\n\r\n\t// For countries of the same region (e.g. NANPA)\r\n\t// national prefix formatting rule is stored in the \"main\" country for that region.\r\n\t// E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\r\n\tnationalPrefixFormattingRule() {\r\n\t\treturn this._getNationalPrefixFormattingRule(this.metadata) || this._getNationalPrefixFormattingRule(this.getDefaultCountryMetadataForRegion())\r\n\t}\r\n\r\n\t_nationalPrefixForParsing() {\r\n\t\treturn this.metadata[this.v1 ? 5 : this.v2 ? 6 : 7]\r\n\t}\r\n\r\n\tnationalPrefixForParsing() {\r\n\t\t// If `national_prefix_for_parsing` is not set explicitly,\r\n\t\t// then infer it from `national_prefix` (if any)\r\n\t\treturn this._nationalPrefixForParsing() || this.nationalPrefix()\r\n\t}\r\n\r\n\tnationalPrefixTransformRule() {\r\n\t\treturn this.metadata[this.v1 ? 6 : this.v2 ? 7 : 8]\r\n\t}\r\n\r\n\t_getNationalPrefixIsOptionalWhenFormatting() {\r\n\t\treturn !!this.metadata[this.v1 ? 7 : this.v2 ? 8 : 9]\r\n\t}\r\n\r\n\t// For countries of the same region (e.g. NANPA)\r\n\t// \"national prefix is optional when formatting\" flag is\r\n\t// stored in the \"main\" country for that region.\r\n\t// E.g. \"RU\" and \"KZ\", \"US\" and \"CA\".\r\n\tnationalPrefixIsOptionalWhenFormattingInNationalFormat() {\r\n\t\treturn this._getNationalPrefixIsOptionalWhenFormatting(this.metadata) ||\r\n\t\t\tthis._getNationalPrefixIsOptionalWhenFormatting(this.getDefaultCountryMetadataForRegion())\r\n\t}\r\n\r\n\tleadingDigits() {\r\n\t\treturn this.metadata[this.v1 ? 8 : this.v2 ? 9 : 10]\r\n\t}\r\n\r\n\ttypes() {\r\n\t\treturn this.metadata[this.v1 ? 9 : this.v2 ? 10 : 11]\r\n\t}\r\n\r\n\thasTypes() {\r\n\t\t// Versions 1.2.0 - 1.2.4: can be `[]`.\r\n\t\t/* istanbul ignore next */\r\n\t\tif (this.types() && this.types().length === 0) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\t// Versions <= 1.2.4: can be `undefined`.\r\n\t\t// Version >= 1.2.5: can be `0`.\r\n\t\treturn !!this.types()\r\n\t}\r\n\r\n\ttype(type) {\r\n\t\tif (this.hasTypes() && getType(this.types(), type)) {\r\n\t\t\treturn new Type(getType(this.types(), type), this)\r\n\t\t}\r\n\t}\r\n\r\n\text() {\r\n\t\tif (this.v1 || this.v2) return DEFAULT_EXT_PREFIX\r\n\t\treturn this.metadata[13] || DEFAULT_EXT_PREFIX\r\n\t}\r\n}\r\n\r\nclass Format {\r\n\tconstructor(format, metadata) {\r\n\t\tthis._format = format\r\n\t\tthis.metadata = metadata\r\n\t}\r\n\r\n\tpattern() {\r\n\t\treturn this._format[0]\r\n\t}\r\n\r\n\tformat() {\r\n\t\treturn this._format[1]\r\n\t}\r\n\r\n\tleadingDigitsPatterns() {\r\n\t\treturn this._format[2] || []\r\n\t}\r\n\r\n\tnationalPrefixFormattingRule() {\r\n\t\treturn this._format[3] || this.metadata.nationalPrefixFormattingRule()\r\n\t}\r\n\r\n\tnationalPrefixIsOptionalWhenFormattingInNationalFormat() {\r\n\t\treturn !!this._format[4] || this.metadata.nationalPrefixIsOptionalWhenFormattingInNationalFormat()\r\n\t}\r\n\r\n\tnationalPrefixIsMandatoryWhenFormattingInNationalFormat() {\r\n\t\t// National prefix is omitted if there's no national prefix formatting rule\r\n\t\t// set for this country, or when the national prefix formatting rule\r\n\t\t// contains no national prefix itself, or when this rule is set but\r\n\t\t// national prefix is optional for this phone number format\r\n\t\t// (and it is not enforced explicitly)\r\n\t\treturn this.usesNationalPrefix() && !this.nationalPrefixIsOptionalWhenFormattingInNationalFormat()\r\n\t}\r\n\r\n\t// Checks whether national prefix formatting rule contains national prefix.\r\n\tusesNationalPrefix() {\r\n\t\treturn this.nationalPrefixFormattingRule() &&\r\n\t\t\t// Check that national prefix formatting rule is not a \"dummy\" one.\r\n\t\t\t!FIRST_GROUP_ONLY_PREFIX_PATTERN.test(this.nationalPrefixFormattingRule())\r\n\t\t\t// In compressed metadata, `this.nationalPrefixFormattingRule()` is `0`\r\n\t\t\t// when `national_prefix_formatting_rule` is not present.\r\n\t\t\t// So, `true` or `false` are returned explicitly here, so that\r\n\t\t\t// `0` number isn't returned.\r\n\t\t\t? true\r\n\t\t\t: false\r\n\t}\r\n\r\n\tinternationalFormat() {\r\n\t\treturn this._format[5] || this.format()\r\n\t}\r\n}\r\n\r\n/**\r\n * A pattern that is used to determine if the national prefix formatting rule\r\n * has the first group only, i.e., does not start with the national prefix.\r\n * Note that the pattern explicitly allows for unbalanced parentheses.\r\n */\r\nconst FIRST_GROUP_ONLY_PREFIX_PATTERN = /^\\(?\\$1\\)?$/\r\n\r\nclass Type {\r\n\tconstructor(type, metadata) {\r\n\t\tthis.type = type\r\n\t\tthis.metadata = metadata\r\n\t}\r\n\r\n\tpattern() {\r\n\t\tif (this.metadata.v1) return this.type\r\n\t\treturn this.type[0]\r\n\t}\r\n\r\n\tpossibleLengths() {\r\n\t\tif (this.metadata.v1) return\r\n\t\treturn this.type[1] || this.metadata.possibleLengths()\r\n\t}\r\n}\r\n\r\nfunction getType(types, type) {\r\n\tswitch (type) {\r\n\t\tcase 'FIXED_LINE':\r\n\t\t\treturn types[0]\r\n\t\tcase 'MOBILE':\r\n\t\t\treturn types[1]\r\n\t\tcase 'TOLL_FREE':\r\n\t\t\treturn types[2]\r\n\t\tcase 'PREMIUM_RATE':\r\n\t\t\treturn types[3]\r\n\t\tcase 'PERSONAL_NUMBER':\r\n\t\t\treturn types[4]\r\n\t\tcase 'VOICEMAIL':\r\n\t\t\treturn types[5]\r\n\t\tcase 'UAN':\r\n\t\t\treturn types[6]\r\n\t\tcase 'PAGER':\r\n\t\t\treturn types[7]\r\n\t\tcase 'VOIP':\r\n\t\t\treturn types[8]\r\n\t\tcase 'SHARED_COST':\r\n\t\t\treturn types[9]\r\n\t}\r\n}\r\n\r\nexport function validateMetadata(metadata) {\r\n\tif (!metadata) {\r\n\t\tthrow new Error('[libphonenumber-js] `metadata` argument not passed. Check your arguments.')\r\n\t}\r\n\r\n\t// `country_phone_code_to_countries` was renamed to\r\n\t// `country_calling_codes` in `1.0.18`.\r\n\tif (!isObject(metadata) || !isObject(metadata.countries)) {\r\n\t\tthrow new Error(`[libphonenumber-js] \\`metadata\\` argument was passed but it's not a valid metadata. Must be an object having \\`.countries\\` child object property. Got ${isObject(metadata) ? 'an object of shape: { ' + Object.keys(metadata).join(', ') + ' }' : 'a ' + typeOf(metadata) + ': ' + metadata}.`)\r\n\t}\r\n}\r\n\r\n// Babel transforms `typeof` into some \"branches\"\r\n// so istanbul will show this as \"branch not covered\".\r\n/* istanbul ignore next */\r\nconst typeOf = _ => typeof _\r\n\r\n/**\r\n * Returns extension prefix for a country.\r\n * @param  {string} country\r\n * @param  {object} metadata\r\n * @return {string?}\r\n * @example\r\n * // Returns \" ext. \"\r\n * getExtPrefix(\"US\")\r\n */\r\nexport function getExtPrefix(country, metadata) {\r\n\tmetadata = new Metadata(metadata)\r\n\tif (metadata.hasCountry(country)) {\r\n\t\treturn metadata.country(country).ext()\r\n\t}\r\n\treturn DEFAULT_EXT_PREFIX\r\n}\r\n\r\n/**\r\n * Returns \"country calling code\" for a country.\r\n * Throws an error if the country doesn't exist or isn't supported by this library.\r\n * @param  {string} country\r\n * @param  {object} metadata\r\n * @return {string}\r\n * @example\r\n * // Returns \"44\"\r\n * getCountryCallingCode(\"GB\")\r\n */\r\nexport function getCountryCallingCode(country, metadata) {\r\n\tmetadata = new Metadata(metadata)\r\n\tif (metadata.hasCountry(country)) {\r\n\t\treturn metadata.country(country).countryCallingCode()\r\n\t}\r\n\tthrow new Error(`Unknown country: ${country}`)\r\n}\r\n\r\nexport function isSupportedCountry(country, metadata) {\r\n\t// metadata = new Metadata(metadata)\r\n\t// return metadata.hasCountry(country)\r\n\treturn metadata.countries.hasOwnProperty(country)\r\n}\r\n\r\nfunction setVersion(metadata) {\r\n\tconst { version } = metadata\r\n\tif (typeof version === 'number') {\r\n\t\tthis.v1 = version === 1\r\n\t\tthis.v2 = version === 2\r\n\t\tthis.v3 = version === 3\r\n\t\tthis.v4 = version === 4\r\n\t} else {\r\n\t\tif (!version) {\r\n\t\t\tthis.v1 = true\r\n\t\t} else if (compare(version, V3) === -1) {\r\n\t\t\tthis.v2 = true\r\n\t\t} else if (compare(version, V4) === -1) {\r\n\t\t\tthis.v3 = true\r\n\t\t} else {\r\n\t\t\tthis.v4 = true\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// const ISO_COUNTRY_CODE = /^[A-Z]{2}$/\r\n// function isCountryCode(countryCode) {\r\n// \treturn ISO_COUNTRY_CODE.test(countryCodeOrCountryCallingCode)\r\n// }","import { VALID_DIGITS } from '../../constants.js'\r\n\r\n// The RFC 3966 format for extensions.\r\nconst RFC3966_EXTN_PREFIX = ';ext='\r\n\r\n/**\r\n * Helper method for constructing regular expressions for parsing. Creates\r\n * an expression that captures up to max_length digits.\r\n * @return {string} RegEx pattern to capture extension digits.\r\n */\r\nconst getExtensionDigitsPattern = (maxLength) => `([${VALID_DIGITS}]{1,${maxLength}})`\r\n\r\n/**\r\n * Helper initialiser method to create the regular-expression pattern to match\r\n * extensions.\r\n * Copy-pasted from Google's `libphonenumber`:\r\n * https://github.com/google/libphonenumber/blob/55b2646ec9393f4d3d6661b9c82ef9e258e8b829/javascript/i18n/phonenumbers/phonenumberutil.js#L759-L766\r\n * @return {string} RegEx pattern to capture extensions.\r\n */\r\nexport default function createExtensionPattern(purpose) {\r\n\t// We cap the maximum length of an extension based on the ambiguity of the way\r\n\t// the extension is prefixed. As per ITU, the officially allowed length for\r\n\t// extensions is actually 40, but we don't support this since we haven't seen real\r\n\t// examples and this introduces many false interpretations as the extension labels\r\n\t// are not standardized.\r\n\t/** @type {string} */\r\n\tvar extLimitAfterExplicitLabel = '20';\r\n\t/** @type {string} */\r\n\tvar extLimitAfterLikelyLabel = '15';\r\n\t/** @type {string} */\r\n\tvar extLimitAfterAmbiguousChar = '9';\r\n\t/** @type {string} */\r\n\tvar extLimitWhenNotSure = '6';\r\n\r\n\t/** @type {string} */\r\n\tvar possibleSeparatorsBetweenNumberAndExtLabel = \"[ \\u00A0\\\\t,]*\";\r\n\t// Optional full stop (.) or colon, followed by zero or more spaces/tabs/commas.\r\n\t/** @type {string} */\r\n\tvar possibleCharsAfterExtLabel = \"[:\\\\.\\uFF0E]?[ \\u00A0\\\\t,-]*\";\r\n\t/** @type {string} */\r\n\tvar optionalExtnSuffix = \"#?\";\r\n\r\n\t// Here the extension is called out in more explicit way, i.e mentioning it obvious\r\n\t// patterns like \"ext.\".\r\n\t/** @type {string} */\r\n\tvar explicitExtLabels =\r\n\t  \"(?:e?xt(?:ensi(?:o\\u0301?|\\u00F3))?n?|\\uFF45?\\uFF58\\uFF54\\uFF4E?|\\u0434\\u043E\\u0431|anexo)\";\r\n\t// One-character symbols that can be used to indicate an extension, and less\r\n\t// commonly used or more ambiguous extension labels.\r\n\t/** @type {string} */\r\n\tvar ambiguousExtLabels = \"(?:[x\\uFF58#\\uFF03~\\uFF5E]|int|\\uFF49\\uFF4E\\uFF54)\";\r\n\t// When extension is not separated clearly.\r\n\t/** @type {string} */\r\n\tvar ambiguousSeparator = \"[- ]+\";\r\n\t// This is the same as possibleSeparatorsBetweenNumberAndExtLabel, but not matching\r\n\t// comma as extension label may have it.\r\n\t/** @type {string} */\r\n\tvar possibleSeparatorsNumberExtLabelNoComma = \"[ \\u00A0\\\\t]*\";\r\n\t// \",,\" is commonly used for auto dialling the extension when connected. First\r\n\t// comma is matched through possibleSeparatorsBetweenNumberAndExtLabel, so we do\r\n\t// not repeat it here. Semi-colon works in Iphone and Android also to pop up a\r\n\t// button with the extension number following.\r\n\t/** @type {string} */\r\n\tvar autoDiallingAndExtLabelsFound = \"(?:,{2}|;)\";\r\n\r\n\t/** @type {string} */\r\n\tvar rfcExtn = RFC3966_EXTN_PREFIX\r\n\t     + getExtensionDigitsPattern(extLimitAfterExplicitLabel);\r\n\t/** @type {string} */\r\n\tvar explicitExtn = possibleSeparatorsBetweenNumberAndExtLabel + explicitExtLabels\r\n\t     + possibleCharsAfterExtLabel\r\n\t     + getExtensionDigitsPattern(extLimitAfterExplicitLabel)\r\n\t     + optionalExtnSuffix;\r\n\t/** @type {string} */\r\n\tvar ambiguousExtn = possibleSeparatorsBetweenNumberAndExtLabel + ambiguousExtLabels\r\n\t     + possibleCharsAfterExtLabel\r\n\t+ getExtensionDigitsPattern(extLimitAfterAmbiguousChar)\r\n\t+ optionalExtnSuffix;\r\n\t/** @type {string} */\r\n\tvar americanStyleExtnWithSuffix = ambiguousSeparator\r\n\t+ getExtensionDigitsPattern(extLimitWhenNotSure) + \"#\";\r\n\r\n\t/** @type {string} */\r\n\tvar autoDiallingExtn = possibleSeparatorsNumberExtLabelNoComma\r\n\t     + autoDiallingAndExtLabelsFound + possibleCharsAfterExtLabel\r\n\t     + getExtensionDigitsPattern(extLimitAfterLikelyLabel)\r\n\t+ optionalExtnSuffix;\r\n\t/** @type {string} */\r\n\tvar onlyCommasExtn = possibleSeparatorsNumberExtLabelNoComma\r\n\t    + \"(?:,)+\" + possibleCharsAfterExtLabel\r\n\t    + getExtensionDigitsPattern(extLimitAfterAmbiguousChar)\r\n\t    + optionalExtnSuffix;\r\n\r\n\t// The first regular expression covers RFC 3966 format, where the extension is added\r\n\t// using \";ext=\". The second more generic where extension is mentioned with explicit\r\n\t// labels like \"ext:\". In both the above cases we allow more numbers in extension than\r\n\t// any other extension labels. The third one captures when single character extension\r\n\t// labels or less commonly used labels are used. In such cases we capture fewer\r\n\t// extension digits in order to reduce the chance of falsely interpreting two\r\n\t// numbers beside each other as a number + extension. The fourth one covers the\r\n\t// special case of American numbers where the extension is written with a hash\r\n\t// at the end, such as \"- 503#\". The fifth one is exclusively for extension\r\n\t// autodialling formats which are used when dialling and in this case we accept longer\r\n\t// extensions. The last one is more liberal on the number of commas that acts as\r\n\t// extension labels, so we have a strict cap on the number of digits in such extensions.\r\n\treturn rfcExtn + \"|\"\r\n\t       + explicitExtn + \"|\"\r\n\t       + ambiguousExtn + \"|\"\r\n\t       + americanStyleExtnWithSuffix + \"|\"\r\n\t       + autoDiallingExtn + \"|\"\r\n\t       + onlyCommasExtn;\r\n}","import {\r\n\tMIN_LENGTH_FOR_NSN,\r\n\tVALID_DIGITS,\r\n\tVALID_PUNCTUATION,\r\n\tPLUS_CHARS\r\n} from '../constants.js'\r\n\r\nimport createExtensionPattern from './extension/createExtensionPattern.js'\r\n\r\n//  Regular expression of viable phone numbers. This is location independent.\r\n//  Checks we have at least three leading digits, and only valid punctuation,\r\n//  alpha characters and digits in the phone number. Does not include extension\r\n//  data. The symbol 'x' is allowed here as valid punctuation since it is often\r\n//  used as a placeholder for carrier codes, for example in Brazilian phone\r\n//  numbers. We also allow multiple '+' characters at the start.\r\n//\r\n//  Corresponds to the following:\r\n//  [digits]{minLengthNsn}|\r\n//  plus_sign*\r\n//  (([punctuation]|[star])*[digits]){3,}([punctuation]|[star]|[digits]|[alpha])*\r\n//\r\n//  The first reg-ex is to allow short numbers (two digits long) to be parsed if\r\n//  they are entered as \"15\" etc, but only if there is no punctuation in them.\r\n//  The second expression restricts the number of digits to three or more, but\r\n//  then allows them to be in international form, and to have alpha-characters\r\n//  and punctuation. We split up the two reg-exes here and combine them when\r\n//  creating the reg-ex VALID_PHONE_NUMBER_PATTERN itself so we can prefix it\r\n//  with ^ and append $ to each branch.\r\n//\r\n//  \"Note VALID_PUNCTUATION starts with a -,\r\n//   so must be the first in the range\" (c) Google devs.\r\n//  (wtf did they mean by saying that; probably nothing)\r\n//\r\nconst MIN_LENGTH_PHONE_NUMBER_PATTERN = '[' + VALID_DIGITS + ']{' + MIN_LENGTH_FOR_NSN + '}'\r\n//\r\n// And this is the second reg-exp:\r\n// (see MIN_LENGTH_PHONE_NUMBER_PATTERN for a full description of this reg-exp)\r\n//\r\nexport const VALID_PHONE_NUMBER =\r\n\t'[' + PLUS_CHARS + ']{0,1}' +\r\n\t'(?:' +\r\n\t\t'[' + VALID_PUNCTUATION + ']*' +\r\n\t\t'[' + VALID_DIGITS + ']' +\r\n\t'){3,}' +\r\n\t'[' +\r\n\t\tVALID_PUNCTUATION +\r\n\t\tVALID_DIGITS +\r\n\t']*'\r\n\r\n// This regular expression isn't present in Google's `libphonenumber`\r\n// and is only used to determine whether the phone number being input\r\n// is too short for it to even consider it a \"valid\" number.\r\n// This is just a way to differentiate between a really invalid phone\r\n// number like \"abcde\" and a valid phone number that a user has just\r\n// started inputting, like \"+1\" or \"1\": both these cases would be\r\n// considered `NOT_A_NUMBER` by Google's `libphonenumber`, but this\r\n// library can provide a more detailed error message — whether it's\r\n// really \"not a number\", or is it just a start of a valid phone number.\r\nconst VALID_PHONE_NUMBER_START_REG_EXP = new RegExp(\r\n\t'^' +\r\n\t'[' + PLUS_CHARS + ']{0,1}' +\r\n\t'(?:' +\r\n\t\t'[' + VALID_PUNCTUATION + ']*' +\r\n\t\t'[' + VALID_DIGITS + ']' +\r\n\t'){1,2}' +\r\n\t'$'\r\n, 'i')\r\n\r\nexport const VALID_PHONE_NUMBER_WITH_EXTENSION =\r\n\tVALID_PHONE_NUMBER +\r\n\t// Phone number extensions\r\n\t'(?:' + createExtensionPattern() + ')?'\r\n\r\n// The combined regular expression for valid phone numbers:\r\n//\r\nconst VALID_PHONE_NUMBER_PATTERN = new RegExp(\r\n\t// Either a short two-digit-only phone number\r\n\t'^' +\r\n\t\tMIN_LENGTH_PHONE_NUMBER_PATTERN +\r\n\t'$' +\r\n\t'|' +\r\n\t// Or a longer fully parsed phone number (min 3 characters)\r\n\t'^' +\r\n\t\tVALID_PHONE_NUMBER_WITH_EXTENSION +\r\n\t'$'\r\n, 'i')\r\n\r\n// Checks to see if the string of characters could possibly be a phone number at\r\n// all. At the moment, checks to see that the string begins with at least 2\r\n// digits, ignoring any punctuation commonly found in phone numbers. This method\r\n// does not require the number to be normalized in advance - but does assume\r\n// that leading non-number symbols have been removed, such as by the method\r\n// `extract_possible_number`.\r\n//\r\nexport default function isViablePhoneNumber(number) {\r\n\treturn number.length >= MIN_LENGTH_FOR_NSN &&\r\n\t\tVALID_PHONE_NUMBER_PATTERN.test(number)\r\n}\r\n\r\n// This is just a way to differentiate between a really invalid phone\r\n// number like \"abcde\" and a valid phone number that a user has just\r\n// started inputting, like \"+1\" or \"1\": both these cases would be\r\n// considered `NOT_A_NUMBER` by Google's `libphonenumber`, but this\r\n// library can provide a more detailed error message — whether it's\r\n// really \"not a number\", or is it just a start of a valid phone number.\r\nexport function isViablePhoneNumberStart(number) {\r\n\treturn VALID_PHONE_NUMBER_START_REG_EXP.test(number)\r\n}","import createExtensionPattern from './createExtensionPattern.js'\r\n\r\n// Regexp of all known extension prefixes used by different regions followed by\r\n// 1 or more valid digits, for use when parsing.\r\nconst EXTN_PATTERN = new RegExp('(?:' + createExtensionPattern() + ')$', 'i')\r\n\r\n// Strips any extension (as in, the part of the number dialled after the call is\r\n// connected, usually indicated with extn, ext, x or similar) from the end of\r\n// the number, and returns it.\r\nexport default function extractExtension(number) {\r\n\tconst start = number.search(EXTN_PATTERN)\r\n\tif (start < 0) {\r\n\t\treturn {}\r\n\t}\r\n\t// If we find a potential extension, and the number preceding this is a viable\r\n\t// number, we assume it is an extension.\r\n\tconst numberWithoutExtension = number.slice(0, start)\r\n\tconst matches = number.match(EXTN_PATTERN)\r\n\tlet i = 1\r\n\twhile (i < matches.length) {\r\n\t\tif (matches[i]) {\r\n\t\t\treturn {\r\n\t\t\t\tnumber: numberWithoutExtension,\r\n\t\t\t\text: matches[i]\r\n\t\t\t}\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n}","// These mappings map a character (key) to a specific digit that should\r\n// replace it for normalization purposes. Non-European digits that\r\n// may be used in phone numbers are mapped to a European equivalent.\r\n//\r\n// E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n//\r\nexport const DIGITS = {\r\n\t'0': '0',\r\n\t'1': '1',\r\n\t'2': '2',\r\n\t'3': '3',\r\n\t'4': '4',\r\n\t'5': '5',\r\n\t'6': '6',\r\n\t'7': '7',\r\n\t'8': '8',\r\n\t'9': '9',\r\n\t'\\uFF10': '0', // Fullwidth digit 0\r\n\t'\\uFF11': '1', // Fullwidth digit 1\r\n\t'\\uFF12': '2', // Fullwidth digit 2\r\n\t'\\uFF13': '3', // Fullwidth digit 3\r\n\t'\\uFF14': '4', // Fullwidth digit 4\r\n\t'\\uFF15': '5', // Fullwidth digit 5\r\n\t'\\uFF16': '6', // Fullwidth digit 6\r\n\t'\\uFF17': '7', // Fullwidth digit 7\r\n\t'\\uFF18': '8', // Fullwidth digit 8\r\n\t'\\uFF19': '9', // Fullwidth digit 9\r\n\t'\\u0660': '0', // Arabic-indic digit 0\r\n\t'\\u0661': '1', // Arabic-indic digit 1\r\n\t'\\u0662': '2', // Arabic-indic digit 2\r\n\t'\\u0663': '3', // Arabic-indic digit 3\r\n\t'\\u0664': '4', // Arabic-indic digit 4\r\n\t'\\u0665': '5', // Arabic-indic digit 5\r\n\t'\\u0666': '6', // Arabic-indic digit 6\r\n\t'\\u0667': '7', // Arabic-indic digit 7\r\n\t'\\u0668': '8', // Arabic-indic digit 8\r\n\t'\\u0669': '9', // Arabic-indic digit 9\r\n\t'\\u06F0': '0', // Eastern-Arabic digit 0\r\n\t'\\u06F1': '1', // Eastern-Arabic digit 1\r\n\t'\\u06F2': '2', // Eastern-Arabic digit 2\r\n\t'\\u06F3': '3', // Eastern-Arabic digit 3\r\n\t'\\u06F4': '4', // Eastern-Arabic digit 4\r\n\t'\\u06F5': '5', // Eastern-Arabic digit 5\r\n\t'\\u06F6': '6', // Eastern-Arabic digit 6\r\n\t'\\u06F7': '7', // Eastern-Arabic digit 7\r\n\t'\\u06F8': '8', // Eastern-Arabic digit 8\r\n\t'\\u06F9': '9'  // Eastern-Arabic digit 9\r\n}\r\n\r\nexport function parseDigit(character) {\r\n\treturn DIGITS[character]\r\n}\r\n\r\n/**\r\n * Parses phone number digits from a string.\r\n * Drops all punctuation leaving only digits.\r\n * Also converts wide-ascii and arabic-indic numerals to conventional numerals.\r\n * E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n * @param  {string} string\r\n * @return {string}\r\n * @example\r\n * ```js\r\n * parseDigits('8 (800) 555')\r\n * // Outputs '8800555'.\r\n * ```\r\n */\r\nexport default function parseDigits(string) {\r\n\tlet result = ''\r\n\t// Using `.split('')` here instead of normal `for ... of`\r\n\t// because the importing application doesn't neccessarily include an ES6 polyfill.\r\n\t// The `.split('')` approach discards \"exotic\" UTF-8 characters\r\n\t// (the ones consisting of four bytes) but digits\r\n\t// (including non-European ones) don't fall into that range\r\n\t// so such \"exotic\" characters would be discarded anyway.\r\n\tfor (const character of string.split('')) {\r\n\t\tconst digit = parseDigit(character)\r\n\t\tif (digit) {\r\n\t\t\tresult += digit\r\n\t\t}\r\n\t}\r\n\treturn result\r\n}","import { parseDigit } from './helpers/parseDigits.js'\r\n\r\n/**\r\n * Parses phone number characters from a string.\r\n * Drops all punctuation leaving only digits and the leading `+` sign (if any).\r\n * Also converts wide-ascii and arabic-indic numerals to conventional numerals.\r\n * E.g. in Iraq they don't write `+442323234` but rather `+٤٤٢٣٢٣٢٣٤`.\r\n * @param  {string} string\r\n * @return {string}\r\n * @example\r\n * ```js\r\n * // Outputs '8800555'.\r\n * parseIncompletePhoneNumber('8 (800) 555')\r\n * // Outputs '+7800555'.\r\n * parseIncompletePhoneNumber('+7 800 555')\r\n * ```\r\n */\r\nexport default function parseIncompletePhoneNumber(string) {\r\n\tlet result = ''\r\n\t// Using `.split('')` here instead of normal `for ... of`\r\n\t// because the importing application doesn't neccessarily include an ES6 polyfill.\r\n\t// The `.split('')` approach discards \"exotic\" UTF-8 characters\r\n\t// (the ones consisting of four bytes) but digits\r\n\t// (including non-European ones) don't fall into that range\r\n\t// so such \"exotic\" characters would be discarded anyway.\r\n\tfor (const character of string.split('')) {\r\n\t\tresult += parsePhoneNumberCharacter(character, result) || ''\r\n\t}\r\n\treturn result\r\n}\r\n\r\n/**\r\n * Parses next character while parsing phone number digits (including a `+`)\r\n * from text: discards everything except `+` and digits, and `+` is only allowed\r\n * at the start of a phone number.\r\n * For example, is used in `react-phone-number-input` where it uses\r\n * [`input-format`](https://gitlab.com/catamphetamine/input-format).\r\n * @param  {string} character - Yet another character from raw input string.\r\n * @param  {string?} prevParsedCharacters - Previous parsed characters.\r\n * @param  {function?} emitEvent - An optional \"emit event\" function.\r\n * @return {string?} The parsed character.\r\n */\r\nexport function parsePhoneNumberCharacter(character, prevParsedCharacters, emitEvent) {\r\n\t// Only allow a leading `+`.\r\n\tif (character === '+') {\r\n\t\t// If this `+` is not the first parsed character\r\n\t\t// then discard it.\r\n\t\tif (prevParsedCharacters) {\r\n\t\t\t// `emitEvent` argument was added to this `export`ed function on Dec 26th, 2023.\r\n\t\t\t// Any 3rd-party code that used to `import` and call this function before that\r\n\t\t\t// won't be passing any `emitEvent` argument.\r\n\t\t\t//\r\n\t\t\t// The addition of the `emitEvent` argument was to fix the slightly-weird behavior\r\n\t\t\t// of parsing an input string when the user inputs something like `\"2+7\"\r\n\t\t\t// https://github.com/catamphetamine/react-phone-number-input/issues/437\r\n\t\t\t//\r\n\t\t\t// If the parser encounters an unexpected `+` in a string being parsed\r\n\t\t\t// then it simply discards that out-of-place `+` and any following characters.\r\n\t\t\t//\r\n\t\t\tif (typeof emitEvent === 'function') {\r\n\t\t\t\temitEvent('end')\r\n\t\t\t}\r\n\t\t\treturn\r\n\t\t}\r\n\t\treturn '+'\r\n\t}\r\n\t// Allow digits.\r\n\treturn parseDigit(character)\r\n}","import mergeArrays from './mergeArrays.js'\r\n\r\nexport default function checkNumberLength(nationalNumber, metadata) {\r\n\treturn checkNumberLengthForType(nationalNumber, undefined, metadata)\r\n}\r\n\r\n// Checks whether a number is possible for the country based on its length.\r\n// Should only be called for the \"new\" metadata which has \"possible lengths\".\r\nexport function checkNumberLengthForType(nationalNumber, type, metadata) {\r\n\tconst type_info = metadata.type(type)\r\n\r\n\t// There should always be \"<possiblePengths/>\" set for every type element.\r\n\t// This is declared in the XML schema.\r\n\t// For size efficiency, where a sub-description (e.g. fixed-line)\r\n\t// has the same \"<possiblePengths/>\" as the \"general description\", this is missing,\r\n\t// so we fall back to the \"general description\". Where no numbers of the type\r\n\t// exist at all, there is one possible length (-1) which is guaranteed\r\n\t// not to match the length of any real phone number.\r\n\tlet possible_lengths = type_info && type_info.possibleLengths() || metadata.possibleLengths()\r\n\t// let local_lengths    = type_info && type.possibleLengthsLocal() || metadata.possibleLengthsLocal()\r\n\r\n\t// Metadata before version `1.0.18` didn't contain `possible_lengths`.\r\n\tif (!possible_lengths) {\r\n\t\treturn 'IS_POSSIBLE'\r\n\t}\r\n\r\n\tif (type === 'FIXED_LINE_OR_MOBILE') {\r\n\t\t// No such country in metadata.\r\n\t\t/* istanbul ignore next */\r\n\t\tif (!metadata.type('FIXED_LINE')) {\r\n\t\t\t// The rare case has been encountered where no fixedLine data is available\r\n\t\t\t// (true for some non-geographic entities), so we just check mobile.\r\n\t\t\treturn checkNumberLengthForType(nationalNumber, 'MOBILE', metadata)\r\n\t\t}\r\n\r\n\t\tconst mobile_type = metadata.type('MOBILE')\r\n\t\tif (mobile_type) {\r\n\t\t\t// Merge the mobile data in if there was any. \"Concat\" creates a new\r\n\t\t\t// array, it doesn't edit possible_lengths in place, so we don't need a copy.\r\n\t\t\t// Note that when adding the possible lengths from mobile, we have\r\n\t\t\t// to again check they aren't empty since if they are this indicates\r\n\t\t\t// they are the same as the general desc and should be obtained from there.\r\n\t\t\tpossible_lengths = mergeArrays(possible_lengths, mobile_type.possibleLengths())\r\n\t\t\t// The current list is sorted; we need to merge in the new list and\r\n\t\t\t// re-sort (duplicates are okay). Sorting isn't so expensive because\r\n\t\t\t// the lists are very small.\r\n\r\n\t\t\t// if (local_lengths) {\r\n\t\t\t// \tlocal_lengths = mergeArrays(local_lengths, mobile_type.possibleLengthsLocal())\r\n\t\t\t// } else {\r\n\t\t\t// \tlocal_lengths = mobile_type.possibleLengthsLocal()\r\n\t\t\t// }\r\n\t\t}\r\n\t}\r\n\t// If the type doesn't exist then return 'INVALID_LENGTH'.\r\n\telse if (type && !type_info) {\r\n\t\treturn 'INVALID_LENGTH'\r\n\t}\r\n\r\n\tconst actual_length = nationalNumber.length\r\n\r\n\t// In `libphonenumber-js` all \"local-only\" formats are dropped for simplicity.\r\n\t// // This is safe because there is never an overlap beween the possible lengths\r\n\t// // and the local-only lengths; this is checked at build time.\r\n\t// if (local_lengths && local_lengths.indexOf(nationalNumber.length) >= 0)\r\n\t// {\r\n\t// \treturn 'IS_POSSIBLE_LOCAL_ONLY'\r\n\t// }\r\n\r\n\tconst minimum_length = possible_lengths[0]\r\n\r\n\tif (minimum_length === actual_length) {\r\n\t\treturn 'IS_POSSIBLE'\r\n\t}\r\n\r\n\tif (minimum_length > actual_length) {\r\n\t\treturn 'TOO_SHORT'\r\n\t}\r\n\r\n\tif (possible_lengths[possible_lengths.length - 1] < actual_length) {\r\n\t\treturn 'TOO_LONG'\r\n\t}\r\n\r\n\t// We skip the first element since we've already checked it.\r\n\treturn possible_lengths.indexOf(actual_length, 1) >= 0 ? 'IS_POSSIBLE' : 'INVALID_LENGTH'\r\n}","/**\r\n * Merges two arrays.\r\n * @param  {*} a\r\n * @param  {*} b\r\n * @return {*}\r\n */\r\nexport default function mergeArrays(a, b) {\r\n\tconst merged = a.slice()\r\n\r\n\tfor (const element of b) {\r\n\t\tif (a.indexOf(element) < 0) {\r\n\t\t\tmerged.push(element)\r\n\t\t}\r\n\t}\r\n\r\n\treturn merged.sort((a, b) => a - b)\r\n\r\n\t// ES6 version, requires Set polyfill.\r\n\t// let merged = new Set(a)\r\n\t// for (const element of b) {\r\n\t// \tmerged.add(i)\r\n\t// }\r\n\t// return Array.from(merged).sort((a, b) => a - b)\r\n}","import Metadata from './metadata.js'\r\nimport checkNumberLength from './helpers/checkNumberLength.js'\r\n\r\n/**\r\n * Checks if a phone number is \"possible\" (basically just checks its length).\r\n *\r\n * isPossible(phoneNumberInstance, { ..., v2: true }, metadata)\r\n *\r\n * isPossible({ phone: '8005553535', country: 'RU' }, { ... }, metadata)\r\n * isPossible({ phone: '8005553535', country: 'RU' }, undefined, metadata)\r\n *\r\n * @param  {object|PhoneNumber} input — If `options.v2: true` flag is passed, the `input` should be a `PhoneNumber` instance. Otherwise, it should be an object of shape `{ phone: '...', country: '...' }`.\r\n * @param  {object} [options]\r\n * @param  {object} metadata\r\n * @return {string}\r\n */\r\nexport default function isPossiblePhoneNumber(input, options, metadata) {\r\n\t/* istanbul ignore if */\r\n\tif (options === undefined) {\r\n\t\toptions = {}\r\n\t}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\tif (options.v2) {\r\n\t\tif (!input.countryCallingCode) {\r\n\t\t\tthrow new Error('Invalid phone number object passed')\r\n\t\t}\r\n\t\tmetadata.selectNumberingPlan(input.countryCallingCode)\r\n\t} else {\r\n\t\tif (!input.phone) {\r\n\t\t\treturn false\r\n\t\t}\r\n\t\tif (input.country) {\r\n\t\t\tif (!metadata.hasCountry(input.country)) {\r\n\t\t\t\tthrow new Error(`Unknown country: ${input.country}`)\r\n\t\t\t}\r\n\t\t\tmetadata.country(input.country)\r\n\t\t} else {\r\n\t\t\tif (!input.countryCallingCode) {\r\n\t\t\t\tthrow new Error('Invalid phone number object passed')\r\n\t\t\t}\r\n\t\t\tmetadata.selectNumberingPlan(input.countryCallingCode)\r\n\t\t}\r\n\t}\r\n\r\n\t// Old metadata (< 1.0.18) had no \"possible length\" data.\r\n\tif (metadata.possibleLengths()) {\r\n\t\treturn isPossibleNumber(input.phone || input.nationalNumber, metadata)\r\n\t} else {\r\n\t\t// There was a bug between `1.7.35` and `1.7.37` where \"possible_lengths\"\r\n\t\t// were missing for \"non-geographical\" numbering plans.\r\n\t\t// Just assume the number is possible in such cases:\r\n\t\t// it's unlikely that anyone generated their custom metadata\r\n\t\t// in that short period of time (one day).\r\n\t\t// This code can be removed in some future major version update.\r\n\t\tif (input.countryCallingCode && metadata.isNonGeographicCallingCode(input.countryCallingCode)) {\r\n\t\t\t// \"Non-geographic entities\" did't have `possibleLengths`\r\n\t\t\t// due to a bug in metadata generation process.\r\n\t\t\treturn true\r\n\t\t} else {\r\n\t\t\tthrow new Error('Missing \"possibleLengths\" in metadata. Perhaps the metadata has been generated before v1.0.18.');\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function isPossibleNumber(nationalNumber, metadata) { //, isInternational) {\r\n\tswitch (checkNumberLength(nationalNumber, metadata)) {\r\n\t\tcase 'IS_POSSIBLE':\r\n\t\t\treturn true\r\n\t\t// This library ignores \"local-only\" phone numbers (for simplicity).\r\n\t\t// See the readme for more info on what are \"local-only\" phone numbers.\r\n\t\t// case 'IS_POSSIBLE_LOCAL_ONLY':\r\n\t\t// \treturn !isInternational\r\n\t\tdefault:\r\n\t\t\treturn false\r\n\t}\r\n}","/**\r\n * Checks whether the entire input sequence can be matched\r\n * against the regular expression.\r\n * @return {boolean}\r\n */\r\nexport default function matchesEntirely(text, regular_expression) {\r\n\t// If assigning the `''` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\ttext = text || ''\r\n\treturn new RegExp('^(?:' + regular_expression + ')$').test(text)\r\n}","import Metadata from '../metadata.js'\r\nimport matchesEntirely from './matchesEntirely.js'\r\n\r\nconst NON_FIXED_LINE_PHONE_TYPES = [\r\n\t'MOBILE',\r\n\t'PREMIUM_RATE',\r\n\t'TOLL_FREE',\r\n\t'SHARED_COST',\r\n\t'VOIP',\r\n\t'PERSONAL_NUMBER',\r\n\t'PAGER',\r\n\t'UAN',\r\n\t'VOICEMAIL'\r\n]\r\n\r\n// Finds out national phone number type (fixed line, mobile, etc)\r\nexport default function getNumberType(input, options, metadata)\r\n{\r\n\t// If assigning the `{}` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\toptions = options || {}\r\n\r\n\t// When `parse()` returns an empty object — `{}` —\r\n\t// that means that the phone number is malformed,\r\n\t// so it can't possibly be valid.\r\n\tif (!input.country && !input.countryCallingCode) {\r\n\t\treturn\r\n\t}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\tmetadata.selectNumberingPlan(input.country, input.countryCallingCode)\r\n\r\n\tconst nationalNumber = options.v2 ? input.nationalNumber : input.phone\r\n\r\n\t// The following is copy-pasted from the original function:\r\n\t// https://github.com/googlei18n/libphonenumber/blob/3ea547d4fbaa2d0b67588904dfa5d3f2557c27ff/javascript/i18n/phonenumbers/phonenumberutil.js#L2835\r\n\r\n\t// Is this national number even valid for this country\r\n\tif (!matchesEntirely(nationalNumber, metadata.nationalNumberPattern())) {\r\n\t\treturn\r\n\t}\r\n\r\n\t// Is it fixed line number\r\n\tif (isNumberTypeEqualTo(nationalNumber, 'FIXED_LINE', metadata)) {\r\n\t\t// Because duplicate regular expressions are removed\r\n\t\t// to reduce metadata size, if \"mobile\" pattern is \"\"\r\n\t\t// then it means it was removed due to being a duplicate of the fixed-line pattern.\r\n\t\t//\r\n\t\tif (metadata.type('MOBILE') && metadata.type('MOBILE').pattern() === '') {\r\n\t\t\treturn 'FIXED_LINE_OR_MOBILE'\r\n\t\t}\r\n\r\n\t\t// `MOBILE` type pattern isn't included if it matched `FIXED_LINE` one.\r\n\t\t// For example, for \"US\" country.\r\n\t\t// Old metadata (< `1.0.18`) had a specific \"types\" data structure\r\n\t\t// that happened to be `undefined` for `MOBILE` in that case.\r\n\t\t// Newer metadata (>= `1.0.18`) has another data structure that is\r\n\t\t// not `undefined` for `MOBILE` in that case (it's just an empty array).\r\n\t\t// So this `if` is just for backwards compatibility with old metadata.\r\n\t\tif (!metadata.type('MOBILE')) {\r\n\t\t\treturn 'FIXED_LINE_OR_MOBILE'\r\n\t\t}\r\n\r\n\t\t// Check if the number happens to qualify as both fixed line and mobile.\r\n\t\t// (no such country in the minimal metadata set)\r\n\t\t/* istanbul ignore if */\r\n\t\tif (isNumberTypeEqualTo(nationalNumber, 'MOBILE', metadata)) {\r\n\t\t\treturn 'FIXED_LINE_OR_MOBILE'\r\n\t\t}\r\n\r\n\t\treturn 'FIXED_LINE'\r\n\t}\r\n\r\n\tfor (const type of NON_FIXED_LINE_PHONE_TYPES) {\r\n\t\tif (isNumberTypeEqualTo(nationalNumber, type, metadata)) {\r\n\t\t\treturn type\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport function isNumberTypeEqualTo(nationalNumber, type, metadata) {\r\n\ttype = metadata.type(type)\r\n\tif (!type || !type.pattern()) {\r\n\t\treturn false\r\n\t}\r\n\t// Check if any possible number lengths are present;\r\n\t// if so, we use them to avoid checking\r\n\t// the validation pattern if they don't match.\r\n\t// If they are absent, this means they match\r\n\t// the general description, which we have\r\n\t// already checked before a specific number type.\r\n\tif (type.possibleLengths() &&\r\n\t\ttype.possibleLengths().indexOf(nationalNumber.length) < 0) {\r\n\t\treturn false\r\n\t}\r\n\treturn matchesEntirely(nationalNumber, type.pattern())\r\n}","import Metadata from '../metadata.js'\r\n\r\n/**\r\n * Returns a list of countries that the phone number could potentially belong to.\r\n * @param  {string} callingCode — Calling code.\r\n * @param  {string} nationalNumber — National (significant) number.\r\n * @param  {object} metadata — Metadata.\r\n * @return {string[]} A list of possible countries.\r\n */\r\nexport default function getPossibleCountriesForNumber(callingCode, nationalNumber, metadata) {\r\n\tconst _metadata = new Metadata(metadata)\r\n\tlet possibleCountries = _metadata.getCountryCodesForCallingCode(callingCode)\r\n\tif (!possibleCountries) {\r\n\t\treturn []\r\n\t}\r\n\treturn possibleCountries.filter((country) => {\r\n\t\treturn couldNationalNumberBelongToCountry(nationalNumber, country, metadata)\r\n\t})\r\n}\r\n\r\nfunction couldNationalNumberBelongToCountry(nationalNumber, country, metadata) {\r\n\tconst _metadata = new Metadata(metadata)\r\n\t_metadata.selectNumberingPlan(country)\r\n\tif (_metadata.numberingPlan.possibleLengths().indexOf(nationalNumber.length) >= 0) {\r\n\t\treturn true\r\n\t}\r\n\treturn false\r\n}","import applyInternationalSeparatorStyle from './applyInternationalSeparatorStyle.js'\r\n\r\n// This was originally set to $1 but there are some countries for which the\r\n// first group is not used in the national pattern (e.g. Argentina) so the $1\r\n// group does not match correctly. Therefore, we use `\\d`, so that the first\r\n// group actually used in the pattern will be matched.\r\nexport const FIRST_GROUP_PATTERN = /(\\$\\d)/\r\n\r\nexport default function formatNationalNumberUsingFormat(\r\n\tnumber,\r\n\tformat,\r\n\t{\r\n\t\tuseInternationalFormat,\r\n\t\twithNationalPrefix,\r\n\t\tcarrierCode,\r\n\t\tmetadata\r\n\t}\r\n) {\r\n\tconst formattedNumber = number.replace(\r\n\t\tnew RegExp(format.pattern()),\r\n\t\tuseInternationalFormat\r\n\t\t\t? format.internationalFormat()\r\n\t\t\t: (\r\n\t\t\t\t// This library doesn't use `domestic_carrier_code_formatting_rule`,\r\n\t\t\t\t// because that one is only used when formatting phone numbers\r\n\t\t\t\t// for dialing from a mobile phone, and this is not a dialing library.\r\n\t\t\t\t// carrierCode && format.domesticCarrierCodeFormattingRule()\r\n\t\t\t\t// \t// First, replace the $CC in the formatting rule with the desired carrier code.\r\n\t\t\t\t// \t// Then, replace the $FG in the formatting rule with the first group\r\n\t\t\t\t// \t// and the carrier code combined in the appropriate way.\r\n\t\t\t\t// \t? format.format().replace(FIRST_GROUP_PATTERN, format.domesticCarrierCodeFormattingRule().replace('$CC', carrierCode))\r\n\t\t\t\t// \t: (\r\n\t\t\t\t// \t\twithNationalPrefix && format.nationalPrefixFormattingRule()\r\n\t\t\t\t// \t\t\t? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule())\r\n\t\t\t\t// \t\t\t: format.format()\r\n\t\t\t\t// \t)\r\n\t\t\t\twithNationalPrefix && format.nationalPrefixFormattingRule()\r\n\t\t\t\t\t? format.format().replace(FIRST_GROUP_PATTERN, format.nationalPrefixFormattingRule())\r\n\t\t\t\t\t: format.format()\r\n\t\t\t)\r\n\t)\r\n\tif (useInternationalFormat) {\r\n\t\treturn applyInternationalSeparatorStyle(formattedNumber)\r\n\t}\r\n\treturn formattedNumber\r\n}","import { VALID_PUNCTUATION } from '../constants.js'\r\n\r\n// Removes brackets and replaces dashes with spaces.\r\n//\r\n// E.g. \"(999) 111-22-33\" -> \"999 111 22 33\"\r\n//\r\n// For some reason Google's metadata contains `<intlFormat/>`s with brackets and dashes.\r\n// Meanwhile, there's no single opinion about using punctuation in international phone numbers.\r\n//\r\n// For example, Google's `<intlFormat/>` for USA is `+1 213-373-4253`.\r\n// And here's a quote from WikiPedia's \"North American Numbering Plan\" page:\r\n// https://en.wikipedia.org/wiki/North_American_Numbering_Plan\r\n//\r\n// \"The country calling code for all countries participating in the NANP is 1.\r\n// In international format, an NANP number should be listed as +1 301 555 01 00,\r\n// where 301 is an area code (Maryland).\"\r\n//\r\n// I personally prefer the international format without any punctuation.\r\n// For example, brackets are remnants of the old age, meaning that the\r\n// phone number part in brackets (so called \"area code\") can be omitted\r\n// if dialing within the same \"area\".\r\n// And hyphens were clearly introduced for splitting local numbers into memorizable groups.\r\n// For example, remembering \"5553535\" is difficult but \"555-35-35\" is much simpler.\r\n// Imagine a man taking a bus from home to work and seeing an ad with a phone number.\r\n// He has a couple of seconds to memorize that number until it passes by.\r\n// If it were spaces instead of hyphens the man wouldn't necessarily get it,\r\n// but with hyphens instead of spaces the grouping is more explicit.\r\n// I personally think that hyphens introduce visual clutter,\r\n// so I prefer replacing them with spaces in international numbers.\r\n// In the modern age all output is done on displays where spaces are clearly distinguishable\r\n// so hyphens can be safely replaced with spaces without losing any legibility.\r\n//\r\nexport default function applyInternationalSeparatorStyle(formattedNumber) {\r\n\treturn formattedNumber.replace(new RegExp(`[${VALID_PUNCTUATION}]+`, 'g'), ' ').trim()\r\n}","import Metadata from '../metadata.js'\r\n\r\n/**\r\n * Pattern that makes it easy to distinguish whether a region has a single\r\n * international dialing prefix or not. If a region has a single international\r\n * prefix (e.g. 011 in USA), it will be represented as a string that contains\r\n * a sequence of ASCII digits, and possibly a tilde, which signals waiting for\r\n * the tone. If there are multiple available international prefixes in a\r\n * region, they will be represented as a regex string that always contains one\r\n * or more characters that are not ASCII digits or a tilde.\r\n */\r\nconst SINGLE_IDD_PREFIX_REG_EXP = /^[\\d]+(?:[~\\u2053\\u223C\\uFF5E][\\d]+)?$/\r\n\r\n// For regions that have multiple IDD prefixes\r\n// a preferred IDD prefix is returned.\r\nexport default function getIddPrefix(country, callingCode, metadata) {\r\n\tconst countryMetadata = new Metadata(metadata)\r\n\tcountryMetadata.selectNumberingPlan(country, callingCode)\r\n\tif (countryMetadata.defaultIDDPrefix()) {\r\n\t\treturn countryMetadata.defaultIDDPrefix()\r\n\t}\r\n\tif (SINGLE_IDD_PREFIX_REG_EXP.test(countryMetadata.IDDPrefix())) {\r\n\t\treturn countryMetadata.IDDPrefix()\r\n\t}\r\n}\r\n","// This is a port of Google Android `libphonenumber`'s\r\n// `phonenumberutil.js` of December 31th, 2018.\r\n//\r\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\r\n\r\nimport matchesEntirely from './helpers/matchesEntirely.js'\r\nimport formatNationalNumberUsingFormat from './helpers/formatNationalNumberUsingFormat.js'\r\nimport Metadata, { getCountryCallingCode } from './metadata.js'\r\nimport getIddPrefix from './helpers/getIddPrefix.js'\r\nimport { formatRFC3966 } from './helpers/RFC3966.js'\r\n\r\nconst DEFAULT_OPTIONS = {\r\n\tformatExtension: (formattedNumber, extension, metadata) => `${formattedNumber}${metadata.ext()}${extension}`\r\n}\r\n\r\n/**\r\n * Formats a phone number.\r\n *\r\n * format(phoneNumberInstance, 'INTERNATIONAL', { ..., v2: true }, metadata)\r\n * format(phoneNumberInstance, 'NATIONAL', { ..., v2: true }, metadata)\r\n *\r\n * format({ phone: '8005553535', country: 'RU' }, 'INTERNATIONAL', { ... }, metadata)\r\n * format({ phone: '8005553535', country: 'RU' }, 'NATIONAL', undefined, metadata)\r\n *\r\n * @param  {object|PhoneNumber} input — If `options.v2: true` flag is passed, the `input` should be a `PhoneNumber` instance. Otherwise, it should be an object of shape `{ phone: '...', country: '...' }`.\r\n * @param  {string} format\r\n * @param  {object} [options]\r\n * @param  {object} metadata\r\n * @return {string}\r\n */\r\nexport default function formatNumber(input, format, options, metadata) {\r\n\t// Apply default options.\r\n\tif (options) {\r\n\t\toptions = { ...DEFAULT_OPTIONS, ...options }\r\n\t} else {\r\n\t\toptions = DEFAULT_OPTIONS\r\n\t}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\tif (input.country && input.country !== '001') {\r\n\t\t// Validate `input.country`.\r\n\t\tif (!metadata.hasCountry(input.country)) {\r\n\t\t\tthrow new Error(`Unknown country: ${input.country}`)\r\n\t\t}\r\n\t\tmetadata.country(input.country)\r\n\t}\r\n\telse if (input.countryCallingCode) {\r\n\t\tmetadata.selectNumberingPlan(input.countryCallingCode)\r\n\t}\r\n\telse return input.phone || ''\r\n\r\n\tconst countryCallingCode = metadata.countryCallingCode()\r\n\r\n\tconst nationalNumber = options.v2 ? input.nationalNumber : input.phone\r\n\r\n\t// This variable should have been declared inside `case`s\r\n\t// but Babel has a bug and it says \"duplicate variable declaration\".\r\n\tlet number\r\n\r\n\tswitch (format) {\r\n\t\tcase 'NATIONAL':\r\n\t\t\t// Legacy argument support.\r\n\t\t\t// (`{ country: ..., phone: '' }`)\r\n\t\t\tif (!nationalNumber) {\r\n\t\t\t\treturn ''\r\n\t\t\t}\r\n\t\t\tnumber = formatNationalNumber(nationalNumber, input.carrierCode, 'NATIONAL', metadata, options)\r\n\t\t\treturn addExtension(number, input.ext, metadata, options.formatExtension)\r\n\r\n\t\tcase 'INTERNATIONAL':\r\n\t\t\t// Legacy argument support.\r\n\t\t\t// (`{ country: ..., phone: '' }`)\r\n\t\t\tif (!nationalNumber) {\r\n\t\t\t\treturn `+${countryCallingCode}`\r\n\t\t\t}\r\n\t\t\tnumber = formatNationalNumber(nationalNumber, null, 'INTERNATIONAL', metadata, options)\r\n\t\t\tnumber = `+${countryCallingCode} ${number}`\r\n\t\t\treturn addExtension(number, input.ext, metadata, options.formatExtension)\r\n\r\n\t\tcase 'E.164':\r\n\t\t\t// `E.164` doesn't define \"phone number extensions\".\r\n\t\t\treturn `+${countryCallingCode}${nationalNumber}`\r\n\r\n\t\tcase 'RFC3966':\r\n\t\t\treturn formatRFC3966({\r\n\t\t\t\tnumber: `+${countryCallingCode}${nationalNumber}`,\r\n\t\t\t\text: input.ext\r\n\t\t\t})\r\n\r\n\t\t// For reference, here's Google's IDD formatter:\r\n\t\t// https://github.com/google/libphonenumber/blob/32719cf74e68796788d1ca45abc85dcdc63ba5b9/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L1546\r\n\t\t// Not saying that this IDD formatter replicates it 1:1, but it seems to work.\r\n\t\t// Who would even need to format phone numbers in IDD format anyway?\r\n\t\tcase 'IDD':\r\n\t\t\tif (!options.fromCountry) {\r\n\t\t\t\treturn\r\n\t\t\t\t// throw new Error('`fromCountry` option not passed for IDD-prefixed formatting.')\r\n\t\t\t}\r\n\t\t\tconst formattedNumber = formatIDD(\r\n\t\t\t\tnationalNumber,\r\n\t\t\t\tinput.carrierCode,\r\n\t\t\t\tcountryCallingCode,\r\n\t\t\t\toptions.fromCountry,\r\n\t\t\t\tmetadata\r\n\t\t\t)\r\n\t\t\treturn addExtension(formattedNumber, input.ext, metadata, options.formatExtension)\r\n\r\n\t\tdefault:\r\n\t\t\tthrow new Error(`Unknown \"format\" argument passed to \"formatNumber()\": \"${format}\"`)\r\n\t}\r\n}\r\n\r\nfunction formatNationalNumber(number, carrierCode, formatAs, metadata, options) {\r\n\tconst format = chooseFormatForNumber(metadata.formats(), number)\r\n\tif (!format) {\r\n\t\treturn number\r\n\t}\r\n\treturn formatNationalNumberUsingFormat(\r\n\t\tnumber,\r\n\t\tformat,\r\n\t\t{\r\n\t\t\tuseInternationalFormat: formatAs === 'INTERNATIONAL',\r\n\t\t\twithNationalPrefix: format.nationalPrefixIsOptionalWhenFormattingInNationalFormat() && (options && options.nationalPrefix === false) ? false : true,\r\n\t\t\tcarrierCode,\r\n\t\t\tmetadata\r\n\t\t}\r\n\t)\r\n}\r\n\r\nexport function chooseFormatForNumber(availableFormats, nationalNnumber) {\r\n\tfor (const format of availableFormats) {\r\n\t\t// Validate leading digits.\r\n\t\t// The test case for \"else path\" could be found by searching for\r\n\t\t// \"format.leadingDigitsPatterns().length === 0\".\r\n\t\tif (format.leadingDigitsPatterns().length > 0) {\r\n\t\t\t// The last leading_digits_pattern is used here, as it is the most detailed\r\n\t\t\tconst lastLeadingDigitsPattern = format.leadingDigitsPatterns()[format.leadingDigitsPatterns().length - 1]\r\n\t\t\t// If leading digits don't match then move on to the next phone number format\r\n\t\t\tif (nationalNnumber.search(lastLeadingDigitsPattern) !== 0) {\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Check that the national number matches the phone number format regular expression\r\n\t\tif (matchesEntirely(nationalNnumber, format.pattern())) {\r\n\t\t\treturn format\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction addExtension(formattedNumber, ext, metadata, formatExtension) {\r\n\treturn ext ? formatExtension(formattedNumber, ext, metadata) : formattedNumber\r\n}\r\n\r\nfunction formatIDD(\r\n\tnationalNumber,\r\n\tcarrierCode,\r\n\tcountryCallingCode,\r\n\tfromCountry,\r\n\tmetadata\r\n) {\r\n\tconst fromCountryCallingCode = getCountryCallingCode(fromCountry, metadata.metadata)\r\n\t// When calling within the same country calling code.\r\n\tif (fromCountryCallingCode === countryCallingCode) {\r\n\t\tconst formattedNumber = formatNationalNumber(nationalNumber, carrierCode, 'NATIONAL', metadata)\r\n\t\t// For NANPA regions, return the national format for these regions\r\n\t\t// but prefix it with the country calling code.\r\n\t\tif (countryCallingCode === '1') {\r\n\t\t\treturn countryCallingCode + ' ' + formattedNumber\r\n\t\t}\r\n\t\t// If regions share a country calling code, the country calling code need\r\n\t\t// not be dialled. This also applies when dialling within a region, so this\r\n\t\t// if clause covers both these cases. Technically this is the case for\r\n\t\t// dialling from La Reunion to other overseas departments of France (French\r\n\t\t// Guiana, Martinique, Guadeloupe), but not vice versa - so we don't cover\r\n\t\t// this edge case for now and for those cases return the version including\r\n\t\t// country calling code. Details here:\r\n\t\t// http://www.petitfute.com/voyage/225-info-pratiques-reunion\r\n\t\t//\r\n\t\treturn formattedNumber\r\n\t}\r\n\tconst iddPrefix = getIddPrefix(fromCountry, undefined, metadata.metadata)\r\n\tif (iddPrefix) {\r\n\t\treturn `${iddPrefix} ${countryCallingCode} ${formatNationalNumber(nationalNumber, null, 'INTERNATIONAL', metadata)}`\r\n\t}\r\n}","import isViablePhoneNumber from './isViablePhoneNumber.js'\r\n\r\n// https://www.ietf.org/rfc/rfc3966.txt\r\n\r\n/**\r\n * @param  {string} text - Phone URI (RFC 3966).\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\r\nexport function parseRFC3966(text) {\r\n\tlet number\r\n\tlet ext\r\n\r\n\t// Replace \"tel:\" with \"tel=\" for parsing convenience.\r\n\ttext = text.replace(/^tel:/, 'tel=')\r\n\r\n\tfor (const part of text.split(';')) {\r\n\t\tconst [name, value] = part.split('=')\r\n\t\tswitch (name) {\r\n\t\t\tcase 'tel':\r\n\t\t\t\tnumber = value\r\n\t\t\t\tbreak\r\n\t\t\tcase 'ext':\r\n\t\t\t\text = value\r\n\t\t\t\tbreak\r\n\t\t\tcase 'phone-context':\r\n\t\t\t\t// Only \"country contexts\" are supported.\r\n\t\t\t\t// \"Domain contexts\" are ignored.\r\n\t\t\t\tif (value[0] === '+') {\r\n\t\t\t\t\tnumber = value + number\r\n\t\t\t\t}\r\n\t\t\t\tbreak\r\n\t\t}\r\n\t}\r\n\r\n\t// If the phone number is not viable, then abort.\r\n\tif (!isViablePhoneNumber(number)) {\r\n\t\treturn {}\r\n\t}\r\n\r\n\tconst result = { number }\r\n\tif (ext) {\r\n\t\tresult.ext = ext\r\n\t}\r\n\treturn result\r\n}\r\n\r\n/**\r\n * @param  {object} - `{ ?number, ?extension }`.\r\n * @return {string} Phone URI (RFC 3966).\r\n */\r\nexport function formatRFC3966({ number, ext }) {\r\n\tif (!number) {\r\n\t\treturn ''\r\n\t}\r\n\tif (number[0] !== '+') {\r\n\t\tthrow new Error(`\"formatRFC3966()\" expects \"number\" to be in E.164 format.`)\r\n\t}\r\n\treturn `tel:${number}${ext ? ';ext=' + ext : ''}`\r\n}","import Metadata from './metadata.js'\r\nimport isPossibleNumber from './isPossible.js'\r\nimport isValidNumber from './isValid.js'\r\n// import checkNumberLength from './helpers/checkNumberLength.js'\r\nimport getNumberType from './helpers/getNumberType.js'\r\nimport getPossibleCountriesForNumber from './helpers/getPossibleCountriesForNumber.js'\r\nimport formatNumber from './format.js'\r\n\r\nconst USE_NON_GEOGRAPHIC_COUNTRY_CODE = false\r\n\r\nexport default class PhoneNumber {\r\n\t/**\r\n\t * @param  {string} countryOrCountryCallingCode\r\n\t * @param  {string} nationalNumber\r\n\t * @param  {object} metadata — Metadata JSON\r\n\t * @return {PhoneNumber}\r\n\t */\r\n\tconstructor(countryOrCountryCallingCode, nationalNumber, metadata) {\r\n\t\tif (!countryOrCountryCallingCode) {\r\n\t\t\tthrow new TypeError('`country` or `countryCallingCode` not passed')\r\n\t\t}\r\n\t\tif (!nationalNumber) {\r\n\t\t\tthrow new TypeError('`nationalNumber` not passed')\r\n\t\t}\r\n\t\tif (!metadata) {\r\n\t\t\tthrow new TypeError('`metadata` not passed')\r\n\t\t}\r\n\t\tconst { country, countryCallingCode } = getCountryAndCountryCallingCode(\r\n\t\t\tcountryOrCountryCallingCode,\r\n\t\t\tmetadata\r\n\t\t)\r\n\t\tthis.country = country\r\n\t\tthis.countryCallingCode = countryCallingCode\r\n\t\tthis.nationalNumber = nationalNumber\r\n\t\tthis.number = '+' + this.countryCallingCode + this.nationalNumber\r\n\t\t// Exclude `metadata` property output from `PhoneNumber.toString()`\r\n\t\t// so that it doesn't clutter the console output of Node.js.\r\n\t\t// Previously, when Node.js did `console.log(new PhoneNumber(...))`,\r\n\t\t// it would output the whole internal structure of the `metadata` object.\r\n\t\tthis.getMetadata = () => metadata\r\n\t}\r\n\r\n\tsetExt(ext) {\r\n\t\tthis.ext = ext\r\n\t}\r\n\r\n\tgetPossibleCountries() {\r\n\t\tif (this.country) {\r\n\t\t\treturn [this.country]\r\n\t\t}\r\n\t\treturn getPossibleCountriesForNumber(\r\n\t\t\tthis.countryCallingCode,\r\n\t\t\tthis.nationalNumber,\r\n\t\t\tthis.getMetadata()\r\n\t\t)\r\n\t}\r\n\r\n\tisPossible() {\r\n\t\treturn isPossibleNumber(this, { v2: true }, this.getMetadata())\r\n\t}\r\n\r\n\tisValid() {\r\n\t\treturn isValidNumber(this, { v2: true }, this.getMetadata())\r\n\t}\r\n\r\n\tisNonGeographic() {\r\n\t\tconst metadata = new Metadata(this.getMetadata())\r\n\t\treturn metadata.isNonGeographicCallingCode(this.countryCallingCode)\r\n\t}\r\n\r\n\tisEqual(phoneNumber) {\r\n\t\treturn this.number === phoneNumber.number && this.ext === phoneNumber.ext\r\n\t}\r\n\r\n\t// This function was originally meant to be an equivalent for `validatePhoneNumberLength()`,\r\n\t// but later it was found out that it doesn't include the possible `TOO_SHORT` result\r\n\t// returned from `parsePhoneNumberWithError()` in the original `validatePhoneNumberLength()`,\r\n\t// so eventually I simply commented out this method from the `PhoneNumber` class\r\n\t// and just left the `validatePhoneNumberLength()` function, even though that one would require\r\n\t// and additional step to also validate the actual country / calling code of the phone number.\r\n\t// validateLength() {\r\n\t// \tconst metadata = new Metadata(this.getMetadata())\r\n\t// \tmetadata.selectNumberingPlan(this.countryCallingCode)\r\n\t// \tconst result = checkNumberLength(this.nationalNumber, metadata)\r\n\t// \tif (result !== 'IS_POSSIBLE') {\r\n\t// \t\treturn result\r\n\t// \t}\r\n\t// }\r\n\r\n\tgetType() {\r\n\t\treturn getNumberType(this, { v2: true }, this.getMetadata())\r\n\t}\r\n\r\n\tformat(format, options) {\r\n\t\treturn formatNumber(\r\n\t\t\tthis,\r\n\t\t\tformat,\r\n\t\t\toptions ? { ...options, v2: true } : { v2: true },\r\n\t\t\tthis.getMetadata()\r\n\t\t)\r\n\t}\r\n\r\n\tformatNational(options) {\r\n\t\treturn this.format('NATIONAL', options)\r\n\t}\r\n\r\n\tformatInternational(options) {\r\n\t\treturn this.format('INTERNATIONAL', options)\r\n\t}\r\n\r\n\tgetURI(options) {\r\n\t\treturn this.format('RFC3966', options)\r\n\t}\r\n}\r\n\r\nconst isCountryCode = (value) => /^[A-Z]{2}$/.test(value)\r\n\r\nfunction getCountryAndCountryCallingCode(countryOrCountryCallingCode, metadataJson) {\r\n\tlet country\r\n\tlet countryCallingCode\r\n\r\n\tconst metadata = new Metadata(metadataJson)\r\n\t// If country code is passed then derive `countryCallingCode` from it.\r\n\t// Also store the country code as `.country`.\r\n\tif (isCountryCode(countryOrCountryCallingCode)) {\r\n\t\tcountry = countryOrCountryCallingCode\r\n\t\tmetadata.selectNumberingPlan(country)\r\n\t\tcountryCallingCode = metadata.countryCallingCode()\r\n\t} else {\r\n\t\tcountryCallingCode = countryOrCountryCallingCode\r\n\t\t/* istanbul ignore if */\r\n\t\tif (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\r\n\t\t\tif (metadata.isNonGeographicCallingCode(countryCallingCode)) {\r\n\t\t\t\tcountry = '001'\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tcountry,\r\n\t\tcountryCallingCode\r\n\t}\r\n}","import Metadata from './metadata.js'\r\nimport matchesEntirely from './helpers/matchesEntirely.js'\r\nimport getNumberType from './helpers/getNumberType.js'\r\n\r\n/**\r\n * Checks if a given phone number is valid.\r\n *\r\n * isValid(phoneNumberInstance, { ..., v2: true }, metadata)\r\n *\r\n * isPossible({ phone: '8005553535', country: 'RU' }, { ... }, metadata)\r\n * isPossible({ phone: '8005553535', country: 'RU' }, undefined, metadata)\r\n *\r\n * If the `number` is a string, it will be parsed to an object,\r\n * but only if it contains only valid phone number characters (including punctuation).\r\n * If the `number` is an object, it is used as is.\r\n *\r\n * The optional `defaultCountry` argument is the default country.\r\n * I.e. it does not restrict to just that country,\r\n * e.g. in those cases where several countries share\r\n * the same phone numbering rules (NANPA, Britain, etc).\r\n * For example, even though the number `07624 369230`\r\n * belongs to the Isle of Man (\"IM\" country code)\r\n * calling `isValidNumber('07624369230', 'GB', metadata)`\r\n * still returns `true` because the country is not restricted to `GB`,\r\n * it's just that `GB` is the default one for the phone numbering rules.\r\n * For restricting the country see `isValidNumberForRegion()`\r\n * though restricting a country might not be a good idea.\r\n * https://github.com/googlei18n/libphonenumber/blob/master/FAQ.md#when-should-i-use-isvalidnumberforregion\r\n *\r\n * Examples:\r\n *\r\n * ```js\r\n * isValidNumber('+78005553535', metadata)\r\n * isValidNumber('8005553535', 'RU', metadata)\r\n * isValidNumber('88005553535', 'RU', metadata)\r\n * isValidNumber({ phone: '8005553535', country: 'RU' }, metadata)\r\n * ```\r\n */\r\nexport default function isValidNumber(input, options, metadata)\r\n{\r\n\t// If assigning the `{}` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\toptions = options || {}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\tmetadata.selectNumberingPlan(input.country, input.countryCallingCode)\r\n\r\n\t// By default, countries only have type regexps when it's required for\r\n\t// distinguishing different countries having the same `countryCallingCode`.\r\n\tif (metadata.hasTypes()) {\r\n\t\treturn getNumberType(input, options, metadata.metadata) !== undefined\r\n\t}\r\n\r\n\t// If there are no type regexps for this country in metadata then use\r\n\t// `nationalNumberPattern` as a \"better than nothing\" replacement.\r\n\tconst nationalNumber = options.v2 ? input.nationalNumber : input.phone\r\n\treturn matchesEntirely(nationalNumber, metadata.nationalNumberPattern())\r\n}","import Metadata from '../metadata.js'\r\nimport { VALID_DIGITS } from '../constants.js'\r\n\r\nconst CAPTURING_DIGIT_PATTERN = new RegExp('([' + VALID_DIGITS + '])')\r\n\r\nexport default function stripIddPrefix(number, country, callingCode, metadata) {\r\n\tif (!country) {\r\n\t\treturn\r\n\t}\r\n\t// Check if the number is IDD-prefixed.\r\n\tconst countryMetadata = new Metadata(metadata)\r\n\tcountryMetadata.selectNumberingPlan(country, callingCode)\r\n\tconst IDDPrefixPattern = new RegExp(countryMetadata.IDDPrefix())\r\n\tif (number.search(IDDPrefixPattern) !== 0) {\r\n\t\treturn\r\n\t}\r\n\t// Strip IDD prefix.\r\n\tnumber = number.slice(number.match(IDDPrefixPattern)[0].length)\r\n\t// If there're any digits after an IDD prefix,\r\n\t// then those digits are a country calling code.\r\n\t// Since no country code starts with a `0`,\r\n\t// the code below validates that the next digit (if present) is not `0`.\r\n\tconst matchedGroups = number.match(CAPTURING_DIGIT_PATTERN)\r\n\tif (matchedGroups && matchedGroups[1] != null && matchedGroups[1].length > 0) {\r\n\t\tif (matchedGroups[1] === '0') {\r\n\t\t\treturn\r\n\t\t}\r\n\t}\r\n\treturn number\r\n}","import extractNationalNumberFromPossiblyIncompleteNumber from './extractNationalNumberFromPossiblyIncompleteNumber.js'\r\nimport matchesEntirely from './matchesEntirely.js'\r\nimport checkNumberLength from './checkNumberLength.js'\r\n\r\n/**\r\n * Strips national prefix and carrier code from a complete phone number.\r\n * The difference from the non-\"FromCompleteNumber\" function is that\r\n * it won't extract national prefix if the resultant number is too short\r\n * to be a complete number for the selected phone numbering plan.\r\n * @param  {string} number — Complete phone number digits.\r\n * @param  {Metadata} metadata — Metadata with a phone numbering plan selected.\r\n * @return {object} `{ nationalNumber: string, carrierCode: string? }`.\r\n */\r\nexport default function extractNationalNumber(number, metadata) {\r\n\t// Parsing national prefixes and carrier codes\r\n\t// is only required for local phone numbers\r\n\t// but some people don't understand that\r\n\t// and sometimes write international phone numbers\r\n\t// with national prefixes (or maybe even carrier codes).\r\n\t// http://ucken.blogspot.ru/2016/03/trunk-prefixes-in-skype4b.html\r\n\t// Google's original library forgives such mistakes\r\n\t// and so does this library, because it has been requested:\r\n\t// https://github.com/catamphetamine/libphonenumber-js/issues/127\r\n\tconst {\r\n\t\tcarrierCode,\r\n\t\tnationalNumber\r\n\t} = extractNationalNumberFromPossiblyIncompleteNumber(\r\n\t\tnumber,\r\n\t\tmetadata\r\n\t)\r\n\r\n\tif (nationalNumber !== number) {\r\n\t\tif (!shouldHaveExtractedNationalPrefix(number, nationalNumber, metadata)) {\r\n\t\t\t// Don't strip the national prefix.\r\n\t\t\treturn { nationalNumber: number }\r\n\t\t}\r\n\t\t// Check the national (significant) number length after extracting national prefix and carrier code.\r\n\t\t// Legacy generated metadata (before `1.0.18`) didn't support the \"possible lengths\" feature.\r\n\t\tif (metadata.possibleLengths()) {\r\n\t\t\t// The number remaining after stripping the national prefix and carrier code\r\n\t\t\t// should be long enough to have a possible length for the country.\r\n\t\t\t// Otherwise, don't strip the national prefix and carrier code,\r\n\t\t\t// since the original number could be a valid number.\r\n\t\t\t// This check has been copy-pasted \"as is\" from Google's original library:\r\n\t\t\t// https://github.com/google/libphonenumber/blob/876268eb1ad6cdc1b7b5bef17fc5e43052702d57/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L3236-L3250\r\n\t\t\t// It doesn't check for the \"possibility\" of the original `number`.\r\n\t\t\t// I guess it's fine not checking that one. It works as is anyway.\r\n\t\t\tif (!isPossibleIncompleteNationalNumber(nationalNumber, metadata)) {\r\n\t\t\t\t// Don't strip the national prefix.\r\n\t\t\t\treturn { nationalNumber: number }\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn { nationalNumber, carrierCode }\r\n}\r\n\r\n// In some countries, the same digit could be a national prefix\r\n// or a leading digit of a valid phone number.\r\n// For example, in Russia, national prefix is `8`,\r\n// and also `800 555 35 35` is a valid number\r\n// in which `8` is not a national prefix, but the first digit\r\n// of a national (significant) number.\r\n// Same's with Belarus:\r\n// `82004910060` is a valid national (significant) number,\r\n// but `2004910060` is not.\r\n// To support such cases (to prevent the code from always stripping\r\n// national prefix), a condition is imposed: a national prefix\r\n// is not extracted when the original number is \"viable\" and the\r\n// resultant number is not, a \"viable\" national number being the one\r\n// that matches `national_number_pattern`.\r\nfunction shouldHaveExtractedNationalPrefix(nationalNumberBefore, nationalNumberAfter, metadata) {\r\n\t// The equivalent in Google's code is:\r\n\t// https://github.com/google/libphonenumber/blob/e326fa1fc4283bb05eb35cb3c15c18f98a31af33/java/libphonenumber/src/com/google/i18n/phonenumbers/PhoneNumberUtil.java#L2969-L3004\r\n\tif (matchesEntirely(nationalNumberBefore, metadata.nationalNumberPattern()) &&\r\n\t\t!matchesEntirely(nationalNumberAfter, metadata.nationalNumberPattern())) {\r\n\t\treturn false\r\n\t}\r\n\t// This \"is possible\" national number (length) check has been commented out\r\n\t// because it's superceded by the (effectively) same check done in the\r\n\t// `extractNationalNumber()` function after it calls `shouldHaveExtractedNationalPrefix()`.\r\n\t// In other words, why run the same check twice if it could only be run once.\r\n\t// // Check the national (significant) number length after extracting national prefix and carrier code.\r\n\t// // Fixes a minor \"weird behavior\" bug: https://gitlab.com/catamphetamine/libphonenumber-js/-/issues/57\r\n\t// // (Legacy generated metadata (before `1.0.18`) didn't support the \"possible lengths\" feature).\r\n\t// if (metadata.possibleLengths()) {\r\n\t// \tif (isPossibleIncompleteNationalNumber(nationalNumberBefore, metadata) &&\r\n\t// \t\t!isPossibleIncompleteNationalNumber(nationalNumberAfter, metadata)) {\r\n\t// \t\treturn false\r\n\t// \t}\r\n\t// }\r\n\treturn true\r\n}\r\n\r\nfunction isPossibleIncompleteNationalNumber(nationalNumber, metadata) {\r\n\tswitch (checkNumberLength(nationalNumber, metadata)) {\r\n\t\tcase 'TOO_SHORT':\r\n\t\tcase 'INVALID_LENGTH':\r\n\t\t// This library ignores \"local-only\" phone numbers (for simplicity).\r\n\t\t// See the readme for more info on what are \"local-only\" phone numbers.\r\n\t\t// case 'IS_POSSIBLE_LOCAL_ONLY':\r\n\t\t\treturn false\r\n\t\tdefault:\r\n\t\t\treturn true\r\n\t}\r\n}","/**\r\n * Strips any national prefix (such as 0, 1) present in a\r\n * (possibly incomplete) number provided.\r\n * \"Carrier codes\" are only used  in Colombia and Brazil,\r\n * and only when dialing within those countries from a mobile phone to a fixed line number.\r\n * Sometimes it won't actually strip national prefix\r\n * and will instead prepend some digits to the `number`:\r\n * for example, when number `2345678` is passed with `VI` country selected,\r\n * it will return `{ number: \"3402345678\" }`, because `340` area code is prepended.\r\n * @param {string} number — National number digits.\r\n * @param {object} metadata — Metadata with country selected.\r\n * @return {object} `{ nationalNumber: string, nationalPrefix: string? carrierCode: string? }`. Even if a national prefix was extracted, it's not necessarily present in the returned object, so don't rely on its presence in the returned object in order to find out whether a national prefix has been extracted or not.\r\n */\r\nexport default function extractNationalNumberFromPossiblyIncompleteNumber(number, metadata) {\r\n\tif (number && metadata.numberingPlan.nationalPrefixForParsing()) {\r\n\t\t// See METADATA.md for the description of\r\n\t\t// `national_prefix_for_parsing` and `national_prefix_transform_rule`.\r\n\t\t// Attempt to parse the first digits as a national prefix.\r\n\t\tconst prefixPattern = new RegExp('^(?:' + metadata.numberingPlan.nationalPrefixForParsing() + ')')\r\n\t\tconst prefixMatch = prefixPattern.exec(number)\r\n\t\tif (prefixMatch) {\r\n\t\t\tlet nationalNumber\r\n\t\t\tlet carrierCode\r\n\t\t\t// https://gitlab.com/catamphetamine/libphonenumber-js/-/blob/master/METADATA.md#national_prefix_for_parsing--national_prefix_transform_rule\r\n\t\t\t// If a `national_prefix_for_parsing` has any \"capturing groups\"\r\n\t\t\t// then it means that the national (significant) number is equal to\r\n\t\t\t// those \"capturing groups\" transformed via `national_prefix_transform_rule`,\r\n\t\t\t// and nothing could be said about the actual national prefix:\r\n\t\t\t// what is it and was it even there.\r\n\t\t\t// If a `national_prefix_for_parsing` doesn't have any \"capturing groups\",\r\n\t\t\t// then everything it matches is a national prefix.\r\n\t\t\t// To determine whether `national_prefix_for_parsing` matched any\r\n\t\t\t// \"capturing groups\", the value of the result of calling `.exec()`\r\n\t\t\t// is looked at, and if it has non-undefined values where there're\r\n\t\t\t// \"capturing groups\" in the regular expression, then it means\r\n\t\t\t// that \"capturing groups\" have been matched.\r\n\t\t\t// It's not possible to tell whether there'll be any \"capturing gropus\"\r\n\t\t\t// before the matching process, because a `national_prefix_for_parsing`\r\n\t\t\t// could exhibit both behaviors.\r\n\t\t\tconst capturedGroupsCount = prefixMatch.length - 1\r\n\t\t\tconst hasCapturedGroups = capturedGroupsCount > 0 && prefixMatch[capturedGroupsCount]\r\n\t\t\tif (metadata.nationalPrefixTransformRule() && hasCapturedGroups) {\r\n\t\t\t\tnationalNumber = number.replace(\r\n\t\t\t\t\tprefixPattern,\r\n\t\t\t\t\tmetadata.nationalPrefixTransformRule()\r\n\t\t\t\t)\r\n\t\t\t\t// If there's more than one captured group,\r\n\t\t\t\t// then carrier code is the second one.\r\n\t\t\t\tif (capturedGroupsCount > 1) {\r\n\t\t\t\t\tcarrierCode = prefixMatch[1]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// If there're no \"capturing groups\",\r\n\t\t\t// or if there're \"capturing groups\" but no\r\n\t\t\t// `national_prefix_transform_rule`,\r\n\t\t\t// then just strip the national prefix from the number,\r\n\t\t\t// and possibly a carrier code.\r\n\t\t\t// Seems like there could be more.\r\n\t\t\telse {\r\n\t\t\t\t// `prefixBeforeNationalNumber` is the whole substring matched by\r\n\t\t\t\t// the `national_prefix_for_parsing` regular expression.\r\n\t\t\t\t// There seem to be no guarantees that it's just a national prefix.\r\n\t\t\t\t// For example, if there's a carrier code, it's gonna be a\r\n\t\t\t\t// part of `prefixBeforeNationalNumber` too.\r\n\t\t\t\tconst prefixBeforeNationalNumber = prefixMatch[0]\r\n\t\t\t\tnationalNumber = number.slice(prefixBeforeNationalNumber.length)\r\n\t\t\t\t// If there's at least one captured group,\r\n\t\t\t\t// then carrier code is the first one.\r\n\t\t\t\tif (hasCapturedGroups) {\r\n\t\t\t\t\tcarrierCode = prefixMatch[1]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// Tries to guess whether a national prefix was present in the input.\r\n\t\t\t// This is not something copy-pasted from Google's library:\r\n\t\t\t// they don't seem to have an equivalent for that.\r\n\t\t\t// So this isn't an \"officially approved\" way of doing something like that.\r\n\t\t\t// But since there seems no other existing method, this library uses it.\r\n\t\t\tlet nationalPrefix\r\n\t\t\tif (hasCapturedGroups) {\r\n\t\t\t\tconst possiblePositionOfTheFirstCapturedGroup = number.indexOf(prefixMatch[1])\r\n\t\t\t\tconst possibleNationalPrefix = number.slice(0, possiblePositionOfTheFirstCapturedGroup)\r\n\t\t\t\t// Example: an Argentinian (AR) phone number `0111523456789`.\r\n\t\t\t\t// `prefixMatch[0]` is `01115`, and `$1` is `11`,\r\n\t\t\t\t// and the rest of the phone number is `23456789`.\r\n\t\t\t\t// The national number is transformed via `9$1` to `91123456789`.\r\n\t\t\t\t// National prefix `0` is detected being present at the start.\r\n\t\t\t\t// if (possibleNationalPrefix.indexOf(metadata.numberingPlan.nationalPrefix()) === 0) {\r\n\t\t\t\tif (possibleNationalPrefix === metadata.numberingPlan.nationalPrefix()) {\r\n\t\t\t\t\tnationalPrefix = metadata.numberingPlan.nationalPrefix()\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tnationalPrefix = prefixMatch[0]\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\tnationalNumber,\r\n\t\t\t\tnationalPrefix,\r\n\t\t\t\tcarrierCode\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n   return {\r\n   \tnationalNumber: number\r\n   }\r\n}","import stripIddPrefix from './stripIddPrefix.js'\r\nimport extractCountryCallingCodeFromInternationalNumberWithoutPlusSign from './extractCountryCallingCodeFromInternationalNumberWithoutPlusSign.js'\r\nimport Metadata from '../metadata.js'\r\nimport { MAX_LENGTH_COUNTRY_CODE } from '../constants.js'\r\n\r\n/**\r\n * Converts a phone number digits (possibly with a `+`)\r\n * into a calling code and the rest phone number digits.\r\n * The \"rest phone number digits\" could include\r\n * a national prefix, carrier code, and national\r\n * (significant) number.\r\n * @param  {string} number — Phone number digits (possibly with a `+`).\r\n * @param  {string} [country] — Default country.\r\n * @param  {string} [callingCode] — Default calling code (some phone numbering plans are non-geographic).\r\n * @param  {object} metadata\r\n * @return {object} `{ countryCallingCodeSource: string?, countryCallingCode: string?, number: string }`\r\n * @example\r\n * // Returns `{ countryCallingCode: \"1\", number: \"2133734253\" }`.\r\n * extractCountryCallingCode('2133734253', 'US', null, metadata)\r\n * extractCountryCallingCode('2133734253', null, '1', metadata)\r\n * extractCountryCallingCode('+12133734253', null, null, metadata)\r\n * extractCountryCallingCode('+12133734253', 'RU', null, metadata)\r\n */\r\nexport default function extractCountryCallingCode(\r\n\tnumber,\r\n\tcountry,\r\n\tcallingCode,\r\n\tmetadata\r\n) {\r\n\tif (!number) {\r\n\t\treturn {}\r\n\t}\r\n\r\n\tlet isNumberWithIddPrefix\r\n\r\n\t// If this is not an international phone number,\r\n\t// then either extract an \"IDD\" prefix, or extract a\r\n\t// country calling code from a number by autocorrecting it\r\n\t// by prepending a leading `+` in cases when it starts\r\n\t// with the country calling code.\r\n\t// https://wikitravel.org/en/International_dialling_prefix\r\n\t// https://github.com/catamphetamine/libphonenumber-js/issues/376\r\n\tif (number[0] !== '+') {\r\n\t\t// Convert an \"out-of-country\" dialing phone number\r\n\t\t// to a proper international phone number.\r\n\t\tconst numberWithoutIDD = stripIddPrefix(number, country, callingCode, metadata)\r\n\t\t// If an IDD prefix was stripped then\r\n\t\t// convert the number to international one\r\n\t\t// for subsequent parsing.\r\n\t\tif (numberWithoutIDD && numberWithoutIDD !== number) {\r\n\t\t\tisNumberWithIddPrefix = true\r\n\t\t\tnumber = '+' + numberWithoutIDD\r\n\t\t} else {\r\n\t\t\t// Check to see if the number starts with the country calling code\r\n\t\t\t// for the default country. If so, we remove the country calling code,\r\n\t\t\t// and do some checks on the validity of the number before and after.\r\n\t\t\t// https://github.com/catamphetamine/libphonenumber-js/issues/376\r\n\t\t\tif (country || callingCode) {\r\n\t\t\t\tconst {\r\n\t\t\t\t\tcountryCallingCode,\r\n\t\t\t\t\tnumber: shorterNumber\r\n\t\t\t\t} = extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(\r\n\t\t\t\t\tnumber,\r\n\t\t\t\t\tcountry,\r\n\t\t\t\t\tcallingCode,\r\n\t\t\t\t\tmetadata\r\n\t\t\t\t)\r\n\t\t\t\tif (countryCallingCode) {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tcountryCallingCodeSource: 'FROM_NUMBER_WITHOUT_PLUS_SIGN',\r\n\t\t\t\t\t\tcountryCallingCode,\r\n\t\t\t\t\t\tnumber: shorterNumber\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn {\r\n\t\t\t\t// No need to set it to `UNSPECIFIED`. It can be just `undefined`.\r\n\t\t\t\t// countryCallingCodeSource: 'UNSPECIFIED',\r\n\t\t\t\tnumber\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Fast abortion: country codes do not begin with a '0'\r\n\tif (number[1] === '0') {\r\n\t\treturn {}\r\n\t}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\t// The thing with country phone codes\r\n\t// is that they are orthogonal to each other\r\n\t// i.e. there's no such country phone code A\r\n\t// for which country phone code B exists\r\n\t// where B starts with A.\r\n\t// Therefore, while scanning digits,\r\n\t// if a valid country code is found,\r\n\t// that means that it is the country code.\r\n\t//\r\n\tlet i = 2\r\n\twhile (i - 1 <= MAX_LENGTH_COUNTRY_CODE && i <= number.length) {\r\n\t\tconst countryCallingCode = number.slice(1, i)\r\n\t\tif (metadata.hasCallingCode(countryCallingCode)) {\r\n\t\t\tmetadata.selectNumberingPlan(countryCallingCode)\r\n\t\t\treturn {\r\n\t\t\t\tcountryCallingCodeSource: isNumberWithIddPrefix ? 'FROM_NUMBER_WITH_IDD' : 'FROM_NUMBER_WITH_PLUS_SIGN',\r\n\t\t\t\tcountryCallingCode,\r\n\t\t\t\tnumber: number.slice(i)\r\n\t\t\t}\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n\r\n\treturn {}\r\n}\r\n\r\n// The possible values for the returned `countryCallingCodeSource` are:\r\n//\r\n// Copy-pasted from:\r\n// https://github.com/google/libphonenumber/blob/master/resources/phonenumber.proto\r\n//\r\n// // The source from which the country_code is derived. This is not set in the\r\n// // general parsing method, but in the method that parses and keeps raw_input.\r\n// // New fields could be added upon request.\r\n// enum CountryCodeSource {\r\n//  // Default value returned if this is not set, because the phone number was\r\n//  // created using parse, not parseAndKeepRawInput. hasCountryCodeSource will\r\n//  // return false if this is the case.\r\n//  UNSPECIFIED = 0;\r\n//\r\n//  // The country_code is derived based on a phone number with a leading \"+\",\r\n//  // e.g. the French number \"+33 1 42 68 53 00\".\r\n//  FROM_NUMBER_WITH_PLUS_SIGN = 1;\r\n//\r\n//  // The country_code is derived based on a phone number with a leading IDD,\r\n//  // e.g. the French number \"011 33 1 42 68 53 00\", as it is dialled from US.\r\n//  FROM_NUMBER_WITH_IDD = 5;\r\n//\r\n//  // The country_code is derived based on a phone number without a leading\r\n//  // \"+\", e.g. the French number \"33 1 42 68 53 00\" when defaultCountry is\r\n//  // supplied as France.\r\n//  FROM_NUMBER_WITHOUT_PLUS_SIGN = 10;\r\n//\r\n//  // The country_code is derived NOT based on the phone number itself, but\r\n//  // from the defaultCountry parameter provided in the parsing function by the\r\n//  // clients. This happens mostly for numbers written in the national format\r\n//  // (without country code). For example, this would be set when parsing the\r\n//  // French number \"01 42 68 53 00\", when defaultCountry is supplied as\r\n//  // France.\r\n//  FROM_DEFAULT_COUNTRY = 20;\r\n// }","import Metadata from '../metadata.js'\r\nimport matchesEntirely from './matchesEntirely.js'\r\nimport extractNationalNumber from './extractNationalNumber.js'\r\nimport checkNumberLength from './checkNumberLength.js'\r\nimport getCountryCallingCode from '../getCountryCallingCode.js'\r\n\r\n/**\r\n * Sometimes some people incorrectly input international phone numbers\r\n * without the leading `+`. This function corrects such input.\r\n * @param  {string} number — Phone number digits.\r\n * @param  {string?} country\r\n * @param  {string?} callingCode\r\n * @param  {object} metadata\r\n * @return {object} `{ countryCallingCode: string?, number: string }`.\r\n */\r\nexport default function extractCountryCallingCodeFromInternationalNumberWithoutPlusSign(\r\n\tnumber,\r\n\tcountry,\r\n\tcallingCode,\r\n\tmetadata\r\n) {\r\n\tconst countryCallingCode = country ? getCountryCallingCode(country, metadata) : callingCode\r\n\tif (number.indexOf(countryCallingCode) === 0) {\r\n\t\tmetadata = new Metadata(metadata)\r\n\t\tmetadata.selectNumberingPlan(country, callingCode)\r\n\t\tconst possibleShorterNumber = number.slice(countryCallingCode.length)\r\n\t\tconst {\r\n\t\t\tnationalNumber: possibleShorterNationalNumber,\r\n\t\t} = extractNationalNumber(\r\n\t\t\tpossibleShorterNumber,\r\n\t\t\tmetadata\r\n\t\t)\r\n\t\tconst {\r\n\t\t\tnationalNumber\r\n\t\t} = extractNationalNumber(\r\n\t\t\tnumber,\r\n\t\t\tmetadata\r\n\t\t)\r\n\t\t// If the number was not valid before but is valid now,\r\n\t\t// or if it was too long before, we consider the number\r\n\t\t// with the country calling code stripped to be a better result\r\n\t\t// and keep that instead.\r\n\t\t// For example, in Germany (+49), `49` is a valid area code,\r\n\t\t// so if a number starts with `49`, it could be both a valid\r\n\t\t// national German number or an international number without\r\n\t\t// a leading `+`.\r\n\t\tif (\r\n\t\t\t(\r\n\t\t\t\t!matchesEntirely(nationalNumber, metadata.nationalNumberPattern())\r\n\t\t\t\t&&\r\n\t\t\t\tmatchesEntirely(possibleShorterNationalNumber, metadata.nationalNumberPattern())\r\n\t\t\t)\r\n\t\t\t||\r\n\t\t\tcheckNumberLength(nationalNumber, metadata) === 'TOO_LONG'\r\n\t\t) {\r\n\t\t\treturn {\r\n\t\t\t\tcountryCallingCode,\r\n\t\t\t\tnumber: possibleShorterNumber\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn { number }\r\n}","import getCountryByNationalNumber from './getCountryByNationalNumber.js'\r\n\r\nconst USE_NON_GEOGRAPHIC_COUNTRY_CODE = false\r\n\r\nexport default function getCountryByCallingCode(callingCode, {\r\n\tnationalNumber: nationalPhoneNumber,\r\n\tdefaultCountry,\r\n\tmetadata\r\n}) {\r\n\t/* istanbul ignore if */\r\n\tif (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\r\n\t\tif (metadata.isNonGeographicCallingCode(callingCode)) {\r\n\t\t\treturn '001'\r\n\t\t}\r\n\t}\r\n\tconst possibleCountries = metadata.getCountryCodesForCallingCode(callingCode)\r\n\tif (!possibleCountries) {\r\n\t\treturn\r\n\t}\r\n\t// If there's just one country corresponding to the country code,\r\n\t// then just return it, without further phone number digits validation.\r\n\tif (possibleCountries.length === 1) {\r\n\t\treturn possibleCountries[0]\r\n\t}\r\n\treturn getCountryByNationalNumber(nationalPhoneNumber, {\r\n\t\tcountries: possibleCountries,\r\n\t\tdefaultCountry,\r\n\t\tmetadata: metadata.metadata\r\n\t})\r\n}","import Metadata from '../metadata.js'\r\nimport getNumberType from './getNumberType.js'\r\n\r\nexport default function getCountryByNationalNumber(nationalPhoneNumber, {\r\n\tcountries,\r\n\tdefaultCountry,\r\n\tmetadata\r\n}) {\r\n\t// Re-create `metadata` because it will be selecting a `country`.\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\tconst matchingCountries = []\r\n\r\n\tfor (const country of countries) {\r\n\t\tmetadata.country(country)\r\n\t\t// \"Leading digits\" patterns are only defined for about 20% of all countries.\r\n\t\t// By definition, matching \"leading digits\" is a sufficient but not a necessary\r\n\t\t// condition for a phone number to belong to a country.\r\n\t\t// The point of \"leading digits\" check is that it's the fastest one to get a match.\r\n\t\t// https://gitlab.com/catamphetamine/libphonenumber-js/blob/master/METADATA.md#leading_digits\r\n\t\t// I'd suppose that \"leading digits\" patterns are mutually exclusive for different countries\r\n\t\t// because of the intended use of that feature.\r\n\t\tif (metadata.leadingDigits()) {\r\n\t\t\tif (nationalPhoneNumber &&\r\n\t\t\t\tnationalPhoneNumber.search(metadata.leadingDigits()) === 0) {\r\n\t\t\t\treturn country\r\n\t\t\t}\r\n\t\t}\r\n\t\t// Else perform full validation with all of those\r\n\t\t// fixed-line/mobile/etc regular expressions.\r\n\t\telse if (getNumberType({ phone: nationalPhoneNumber, country }, undefined, metadata.metadata)) {\r\n\t\t\t// If the `defaultCountry` is among the `matchingCountries` then return it.\r\n\t\t\tif (defaultCountry) {\r\n\t\t\t\tif (country === defaultCountry) {\r\n\t\t\t\t\treturn country\r\n\t\t\t\t}\r\n\t\t\t\tmatchingCountries.push(country)\r\n\t\t\t} else {\r\n\t\t\t\treturn country\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Return the first (\"main\") one of the `matchingCountries`.\r\n\tif (matchingCountries.length > 0) {\r\n\t\treturn matchingCountries[0]\r\n\t}\r\n}","// When phone numbers are written in `RFC3966` format — `\"tel:+12133734253\"` —\r\n// they can have their \"calling code\" part written separately in a `phone-context` parameter.\r\n// Example: `\"tel:12133734253;phone-context=+1\"`.\r\n// This function parses the full phone number from the local number and the `phone-context`\r\n// when the `phone-context` contains a `+` sign.\r\n\r\nimport {\r\n  VALID_DIGITS,\r\n  // PLUS_CHARS\r\n} from '../constants.js'\r\n\r\nexport const PLUS_SIGN = '+'\r\n\r\nconst RFC3966_VISUAL_SEPARATOR_ = '[\\\\-\\\\.\\\\(\\\\)]?'\r\n\r\nconst RFC3966_PHONE_DIGIT_ = '(' + '[' + VALID_DIGITS + ']' + '|' + RFC3966_VISUAL_SEPARATOR_ + ')'\r\n\r\nconst RFC3966_GLOBAL_NUMBER_DIGITS_ =\r\n\t'^' +\r\n\t'\\\\' +\r\n\tPLUS_SIGN +\r\n\tRFC3966_PHONE_DIGIT_ +\r\n\t'*' +\r\n\t'[' + VALID_DIGITS +  ']' +\r\n\tRFC3966_PHONE_DIGIT_ +\r\n\t'*' +\r\n\t'$'\r\n\r\n/**\r\n * Regular expression of valid global-number-digits for the phone-context\r\n * parameter, following the syntax defined in RFC3966.\r\n */\r\nconst RFC3966_GLOBAL_NUMBER_DIGITS_PATTERN_ = new RegExp(RFC3966_GLOBAL_NUMBER_DIGITS_, 'g')\r\n\r\n// In this port of Google's library, we don't accept alpha characters in phone numbers.\r\n// const ALPHANUM_ = VALID_ALPHA_ + VALID_DIGITS\r\nconst ALPHANUM_ = VALID_DIGITS\r\n\r\nconst RFC3966_DOMAINLABEL_ = '[' + ALPHANUM_ + ']+((\\\\-)*[' + ALPHANUM_ + '])*'\r\n\r\nconst VALID_ALPHA_ = 'a-zA-Z'\r\nconst RFC3966_TOPLABEL_ = '[' + VALID_ALPHA_ + ']+((\\\\-)*[' + ALPHANUM_ + '])*'\r\n\r\nconst RFC3966_DOMAINNAME_ = '^(' + RFC3966_DOMAINLABEL_ + '\\\\.)*' + RFC3966_TOPLABEL_ + '\\\\.?$'\r\n\r\n/**\r\n * Regular expression of valid domainname for the phone-context parameter,\r\n * following the syntax defined in RFC3966.\r\n */\r\nconst RFC3966_DOMAINNAME_PATTERN_ = new RegExp(RFC3966_DOMAINNAME_, 'g')\r\n\r\nexport const RFC3966_PREFIX_ = 'tel:'\r\nexport const RFC3966_PHONE_CONTEXT_ = ';phone-context='\r\nexport const RFC3966_ISDN_SUBADDRESS_ = ';isub='\r\n\r\n/**\r\n * Extracts the value of the phone-context parameter of `numberToExtractFrom`,\r\n * following the syntax defined in RFC3966.\r\n *\r\n * @param {string} numberToExtractFrom\r\n * @return {string|null} the extracted string (possibly empty), or `null` if no phone-context parameter is found.\r\n */\r\nexport default function extractPhoneContext(numberToExtractFrom) {\r\n\tconst indexOfPhoneContext = numberToExtractFrom.indexOf(RFC3966_PHONE_CONTEXT_)\r\n\t// If no phone-context parameter is present\r\n\tif (indexOfPhoneContext < 0) {\r\n\t\treturn null\r\n\t}\r\n\r\n\tconst phoneContextStart = indexOfPhoneContext + RFC3966_PHONE_CONTEXT_.length\r\n\t// If phone-context parameter is empty\r\n\tif (phoneContextStart >= numberToExtractFrom.length) {\r\n\t\treturn ''\r\n\t}\r\n\r\n\tconst phoneContextEnd = numberToExtractFrom.indexOf(';', phoneContextStart)\r\n\t// If phone-context is not the last parameter\r\n\tif (phoneContextEnd >= 0) {\r\n\t\treturn numberToExtractFrom.substring(phoneContextStart, phoneContextEnd)\r\n\t} else {\r\n\t\treturn numberToExtractFrom.substring(phoneContextStart)\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns whether the value of phoneContext follows the syntax defined in RFC3966.\r\n *\r\n * @param {string|null} phoneContext\r\n * @return {boolean}\r\n */\r\nexport function isPhoneContextValid(phoneContext) {\r\n\tif (phoneContext === null) {\r\n\t\treturn true\r\n\t}\r\n\r\n\tif (phoneContext.length === 0) {\r\n\t\treturn false\r\n\t}\r\n\r\n\t// Does phone-context value match pattern of global-number-digits or domainname.\r\n\treturn RFC3966_GLOBAL_NUMBER_DIGITS_PATTERN_.test(phoneContext) ||\r\n\t\tRFC3966_DOMAINNAME_PATTERN_.test(phoneContext)\r\n}","import extractPhoneContext, {\r\n\tisPhoneContextValid,\r\n\tPLUS_SIGN,\r\n\tRFC3966_PREFIX_,\r\n\tRFC3966_PHONE_CONTEXT_,\r\n\tRFC3966_ISDN_SUBADDRESS_\r\n} from './extractPhoneContext.js'\r\n\r\nimport ParseError from '../ParseError.js'\r\n\r\n/**\r\n * @param  {string} numberToParse\r\n * @param  {string} nationalNumber\r\n * @return {}\r\n */\r\nexport default function extractFormattedPhoneNumberFromPossibleRfc3966NumberUri(numberToParse, {\r\n\textractFormattedPhoneNumber\r\n}) {\r\n\tconst phoneContext = extractPhoneContext(numberToParse)\r\n\tif (!isPhoneContextValid(phoneContext)) {\r\n\t\tthrow new ParseError('NOT_A_NUMBER')\r\n\t}\r\n\r\n\tlet phoneNumberString\r\n\r\n\tif (phoneContext === null) {\r\n\t\t// Extract a possible number from the string passed in.\r\n\t\t// (this strips leading characters that could not be the start of a phone number)\r\n\t\tphoneNumberString = extractFormattedPhoneNumber(numberToParse) || ''\r\n\t} else {\r\n\t\tphoneNumberString = ''\r\n\r\n\t\t// If the phone context contains a phone number prefix, we need to capture\r\n\t\t// it, whereas domains will be ignored.\r\n\t\tif (phoneContext.charAt(0) === PLUS_SIGN) {\r\n\t\t\tphoneNumberString += phoneContext\r\n\t\t}\r\n\r\n\t\t// Now append everything between the \"tel:\" prefix and the phone-context.\r\n\t\t// This should include the national number, an optional extension or\r\n\t\t// isdn-subaddress component. Note we also handle the case when \"tel:\" is\r\n\t\t// missing, as we have seen in some of the phone number inputs.\r\n\t\t// In that case, we append everything from the beginning.\r\n\t\tconst indexOfRfc3966Prefix = numberToParse.indexOf(RFC3966_PREFIX_)\r\n\t\tlet indexOfNationalNumber\r\n\t\t// RFC 3966 \"tel:\" prefix is preset at this stage because\r\n\t\t// `isPhoneContextValid()` requires it to be present.\r\n\t\t/* istanbul ignore else */\r\n\t\tif (indexOfRfc3966Prefix >= 0) {\r\n\t\t\tindexOfNationalNumber = indexOfRfc3966Prefix + RFC3966_PREFIX_.length\r\n\t\t} else {\r\n\t\t\tindexOfNationalNumber = 0\r\n\t\t}\r\n\t\tconst indexOfPhoneContext = numberToParse.indexOf(RFC3966_PHONE_CONTEXT_)\r\n\t\tphoneNumberString += numberToParse.substring(indexOfNationalNumber, indexOfPhoneContext)\r\n\t}\r\n\r\n\t// Delete the isdn-subaddress and everything after it if it is present.\r\n\t// Note extension won't appear at the same time with isdn-subaddress\r\n\t// according to paragraph 5.3 of the RFC3966 spec.\r\n\tconst indexOfIsdn = phoneNumberString.indexOf(RFC3966_ISDN_SUBADDRESS_)\r\n\tif (indexOfIsdn > 0) {\r\n\t\tphoneNumberString = phoneNumberString.substring(0, indexOfIsdn)\r\n\t}\r\n\t// If both phone context and isdn-subaddress are absent but other\r\n\t// parameters are present, the parameters are left in nationalNumber.\r\n\t// This is because we are concerned about deleting content from a potential\r\n\t// number string when there is no strong evidence that the number is\r\n\t// actually written in RFC3966.\r\n\r\n\tif (phoneNumberString !== '') {\r\n\t\treturn phoneNumberString\r\n\t}\r\n}","// This is a port of Google Android `libphonenumber`'s\r\n// `phonenumberutil.js` of December 31th, 2018.\r\n//\r\n// https://github.com/googlei18n/libphonenumber/commits/master/javascript/i18n/phonenumbers/phonenumberutil.js\r\n\r\nimport {\r\n\tVALID_DIGITS,\r\n\tPLUS_CHARS,\r\n\tMIN_LENGTH_FOR_NSN,\r\n\tMAX_LENGTH_FOR_NSN\r\n} from './constants.js'\r\n\r\nimport ParseError from './ParseError.js'\r\nimport Metadata from './metadata.js'\r\nimport isViablePhoneNumber, { isViablePhoneNumberStart } from './helpers/isViablePhoneNumber.js'\r\nimport extractExtension from './helpers/extension/extractExtension.js'\r\nimport parseIncompletePhoneNumber from './parseIncompletePhoneNumber.js'\r\nimport getCountryCallingCode from './getCountryCallingCode.js'\r\nimport { isPossibleNumber } from './isPossible.js'\r\n// import { parseRFC3966 } from './helpers/RFC3966.js'\r\nimport PhoneNumber from './PhoneNumber.js'\r\nimport matchesEntirely from './helpers/matchesEntirely.js'\r\nimport extractCountryCallingCode from './helpers/extractCountryCallingCode.js'\r\nimport extractNationalNumber from './helpers/extractNationalNumber.js'\r\nimport stripIddPrefix from './helpers/stripIddPrefix.js'\r\nimport getCountryByCallingCode from './helpers/getCountryByCallingCode.js'\r\nimport extractFormattedPhoneNumberFromPossibleRfc3966NumberUri from './helpers/extractFormattedPhoneNumberFromPossibleRfc3966NumberUri.js'\r\n\r\n// We don't allow input strings for parsing to be longer than 250 chars.\r\n// This prevents malicious input from consuming CPU.\r\nconst MAX_INPUT_STRING_LENGTH = 250\r\n\r\n// This consists of the plus symbol, digits, and arabic-indic digits.\r\nconst PHONE_NUMBER_START_PATTERN = new RegExp('[' + PLUS_CHARS + VALID_DIGITS + ']')\r\n\r\n// Regular expression of trailing characters that we want to remove.\r\n// A trailing `#` is sometimes used when writing phone numbers with extensions in US.\r\n// Example: \"+1 (645) 123 1234-910#\" number has extension \"910\".\r\nconst AFTER_PHONE_NUMBER_END_PATTERN = new RegExp('[^' + VALID_DIGITS + '#' + ']+$')\r\n\r\nconst USE_NON_GEOGRAPHIC_COUNTRY_CODE = false\r\n\r\n// Examples:\r\n//\r\n// ```js\r\n// parse('8 (800) 555-35-35', 'RU')\r\n// parse('8 (800) 555-35-35', 'RU', metadata)\r\n// parse('8 (800) 555-35-35', { country: { default: 'RU' } })\r\n// parse('8 (800) 555-35-35', { country: { default: 'RU' } }, metadata)\r\n// parse('+7 800 555 35 35')\r\n// parse('+7 800 555 35 35', metadata)\r\n// ```\r\n//\r\n\r\n/**\r\n * Parses a phone number.\r\n *\r\n * parse('123456789', { defaultCountry: 'RU', v2: true }, metadata)\r\n * parse('123456789', { defaultCountry: 'RU' }, metadata)\r\n * parse('123456789', undefined, metadata)\r\n *\r\n * @param  {string} input\r\n * @param  {object} [options]\r\n * @param  {object} metadata\r\n * @return {object|PhoneNumber?} If `options.v2: true` flag is passed, it returns a `PhoneNumber?` instance. Otherwise, returns an object of shape `{ phone: '...', country: '...' }` (or just `{}` if no phone number was parsed).\r\n */\r\nexport default function parse(text, options, metadata) {\r\n\t// If assigning the `{}` default value is moved to the arguments above,\r\n\t// code coverage would decrease for some weird reason.\r\n\toptions = options || {}\r\n\r\n\tmetadata = new Metadata(metadata)\r\n\r\n\t// Validate `defaultCountry`.\r\n\tif (options.defaultCountry && !metadata.hasCountry(options.defaultCountry)) {\r\n\t\tif (options.v2) {\r\n\t\t\tthrow new ParseError('INVALID_COUNTRY')\r\n\t\t}\r\n\t\tthrow new Error(`Unknown country: ${options.defaultCountry}`)\r\n\t}\r\n\r\n\t// Parse the phone number.\r\n\tconst { number: formattedPhoneNumber, ext, error } = parseInput(text, options.v2, options.extract)\r\n\r\n\t// If the phone number is not viable then return nothing.\r\n\tif (!formattedPhoneNumber) {\r\n\t\tif (options.v2) {\r\n\t\t\tif (error === 'TOO_SHORT') {\r\n\t\t\t\tthrow new ParseError('TOO_SHORT')\r\n\t\t\t}\r\n\t\t\tthrow new ParseError('NOT_A_NUMBER')\r\n\t\t}\r\n\t\treturn {}\r\n\t}\r\n\r\n\tconst {\r\n\t\tcountry,\r\n\t\tnationalNumber,\r\n\t\tcountryCallingCode,\r\n\t\tcountryCallingCodeSource,\r\n\t\tcarrierCode\r\n\t} = parsePhoneNumber(\r\n\t\tformattedPhoneNumber,\r\n\t\toptions.defaultCountry,\r\n\t\toptions.defaultCallingCode,\r\n\t\tmetadata\r\n\t)\r\n\r\n\tif (!metadata.hasSelectedNumberingPlan()) {\r\n\t\tif (options.v2) {\r\n\t\t\tthrow new ParseError('INVALID_COUNTRY')\r\n\t\t}\r\n\t\treturn {}\r\n\t}\r\n\r\n\t// Validate national (significant) number length.\r\n\tif (!nationalNumber || nationalNumber.length < MIN_LENGTH_FOR_NSN) {\r\n\t\t// Won't throw here because the regexp already demands length > 1.\r\n\t\t/* istanbul ignore if */\r\n\t\tif (options.v2) {\r\n\t\t\tthrow new ParseError('TOO_SHORT')\r\n\t\t}\r\n\t\t// Google's demo just throws an error in this case.\r\n\t\treturn {}\r\n\t}\r\n\r\n\t// Validate national (significant) number length.\r\n\t//\r\n\t// A sidenote:\r\n\t//\r\n\t// They say that sometimes national (significant) numbers\r\n\t// can be longer than `MAX_LENGTH_FOR_NSN` (e.g. in Germany).\r\n\t// https://github.com/googlei18n/libphonenumber/blob/7e1748645552da39c4e1ba731e47969d97bdb539/resources/phonenumber.proto#L36\r\n\t// Such numbers will just be discarded.\r\n\t//\r\n\tif (nationalNumber.length > MAX_LENGTH_FOR_NSN) {\r\n\t\tif (options.v2) {\r\n\t\t\tthrow new ParseError('TOO_LONG')\r\n\t\t}\r\n\t\t// Google's demo just throws an error in this case.\r\n\t\treturn {}\r\n\t}\r\n\r\n\tif (options.v2) {\r\n\t\tconst phoneNumber = new PhoneNumber(\r\n\t\t\tcountryCallingCode,\r\n\t\t\tnationalNumber,\r\n\t\t\tmetadata.metadata\r\n\t\t)\r\n\t\tif (country) {\r\n\t\t\tphoneNumber.country = country\r\n\t\t}\r\n\t\tif (carrierCode) {\r\n\t\t\tphoneNumber.carrierCode = carrierCode\r\n\t\t}\r\n\t\tif (ext) {\r\n\t\t\tphoneNumber.ext = ext\r\n\t\t}\r\n\t\tphoneNumber.__countryCallingCodeSource = countryCallingCodeSource\r\n\t\treturn phoneNumber\r\n\t}\r\n\r\n\t// Check if national phone number pattern matches the number.\r\n\t// National number pattern is different for each country,\r\n\t// even for those ones which are part of the \"NANPA\" group.\r\n\tconst valid = (options.extended ? metadata.hasSelectedNumberingPlan() : country) ?\r\n\t\tmatchesEntirely(nationalNumber, metadata.nationalNumberPattern()) :\r\n\t\tfalse\r\n\r\n\tif (!options.extended) {\r\n\t\treturn valid ? result(country, nationalNumber, ext) : {}\r\n\t}\r\n\r\n\t// isInternational: countryCallingCode !== undefined\r\n\r\n\treturn {\r\n\t\tcountry,\r\n\t\tcountryCallingCode,\r\n\t\tcarrierCode,\r\n\t\tvalid,\r\n\t\tpossible: valid ? true : (\r\n\t\t\toptions.extended === true &&\r\n\t\t\tmetadata.possibleLengths() &&\r\n\t\t\tisPossibleNumber(nationalNumber, metadata) ? true : false\r\n\t\t),\r\n\t\tphone: nationalNumber,\r\n\t\text\r\n\t}\r\n}\r\n\r\n/**\r\n * Extracts a formatted phone number from text.\r\n * Doesn't guarantee that the extracted phone number\r\n * is a valid phone number (for example, doesn't validate its length).\r\n * @param  {string} text\r\n * @param  {boolean} [extract] — If `false`, then will parse the entire `text` as a phone number.\r\n * @param  {boolean} [throwOnError] — By default, it won't throw if the text is too long.\r\n * @return {string}\r\n * @example\r\n * // Returns \"(213) 373-4253\".\r\n * extractFormattedPhoneNumber(\"Call (213) 373-4253 for assistance.\")\r\n */\r\nfunction extractFormattedPhoneNumber(text, extract, throwOnError) {\r\n\tif (!text) {\r\n\t\treturn\r\n\t}\r\n\tif (text.length > MAX_INPUT_STRING_LENGTH) {\r\n\t\tif (throwOnError) {\r\n\t\t\tthrow new ParseError('TOO_LONG')\r\n\t\t}\r\n\t\treturn\r\n\t}\r\n\tif (extract === false) {\r\n\t\treturn text\r\n\t}\r\n\t// Attempt to extract a possible number from the string passed in\r\n\tconst startsAt = text.search(PHONE_NUMBER_START_PATTERN)\r\n\tif (startsAt < 0) {\r\n\t\treturn\r\n\t}\r\n\treturn text\r\n\t\t// Trim everything to the left of the phone number\r\n\t\t.slice(startsAt)\r\n\t\t// Remove trailing non-numerical characters\r\n\t\t.replace(AFTER_PHONE_NUMBER_END_PATTERN, '')\r\n}\r\n\r\n/**\r\n * @param  {string} text - Input.\r\n * @param  {boolean} v2 - Legacy API functions don't pass `v2: true` flag.\r\n * @param  {boolean} [extract] - Whether to extract a phone number from `text`, or attempt to parse the entire text as a phone number.\r\n * @return {object} `{ ?number, ?ext }`.\r\n */\r\nfunction parseInput(text, v2, extract) {\r\n\t// // Parse RFC 3966 phone number URI.\r\n\t// if (text && text.indexOf('tel:') === 0) {\r\n\t// \treturn parseRFC3966(text)\r\n\t// }\r\n\t// let number = extractFormattedPhoneNumber(text, extract, v2)\r\n\tlet number = extractFormattedPhoneNumberFromPossibleRfc3966NumberUri(text, {\r\n\t\textractFormattedPhoneNumber: (text) => extractFormattedPhoneNumber(text, extract, v2)\r\n\t})\r\n\t// If the phone number is not viable, then abort.\r\n\tif (!number) {\r\n\t\treturn {}\r\n\t}\r\n\tif (!isViablePhoneNumber(number)) {\r\n\t\tif (isViablePhoneNumberStart(number)) {\r\n\t\t\treturn { error: 'TOO_SHORT' }\r\n\t\t}\r\n\t\treturn {}\r\n\t}\r\n\t// Attempt to parse extension first, since it doesn't require region-specific\r\n\t// data and we want to have the non-normalised number here.\r\n\tconst withExtensionStripped = extractExtension(number)\r\n\tif (withExtensionStripped.ext) {\r\n\t\treturn withExtensionStripped\r\n\t}\r\n\treturn { number }\r\n}\r\n\r\n/**\r\n * Creates `parse()` result object.\r\n */\r\nfunction result(country, nationalNumber, ext) {\r\n\tconst result = {\r\n\t\tcountry,\r\n\t\tphone: nationalNumber\r\n\t}\r\n\tif (ext) {\r\n\t\tresult.ext = ext\r\n\t}\r\n\treturn result\r\n}\r\n\r\n/**\r\n * Parses a viable phone number.\r\n * @param {string} formattedPhoneNumber — Example: \"(213) 373-4253\".\r\n * @param {string} [defaultCountry]\r\n * @param {string} [defaultCallingCode]\r\n * @param {Metadata} metadata\r\n * @return {object} Returns `{ country: string?, countryCallingCode: string?, nationalNumber: string? }`.\r\n */\r\nfunction parsePhoneNumber(\r\n\tformattedPhoneNumber,\r\n\tdefaultCountry,\r\n\tdefaultCallingCode,\r\n\tmetadata\r\n) {\r\n\t// Extract calling code from phone number.\r\n\tlet { countryCallingCodeSource, countryCallingCode, number } = extractCountryCallingCode(\r\n\t\tparseIncompletePhoneNumber(formattedPhoneNumber),\r\n\t\tdefaultCountry,\r\n\t\tdefaultCallingCode,\r\n\t\tmetadata.metadata\r\n\t)\r\n\r\n\t// Choose a country by `countryCallingCode`.\r\n\tlet country\r\n\tif (countryCallingCode) {\r\n\t\tmetadata.selectNumberingPlan(countryCallingCode)\r\n\t}\r\n\t// If `formattedPhoneNumber` is passed in \"national\" format\r\n\t// then `number` is defined and `countryCallingCode` is `undefined`.\r\n\telse if (number && (defaultCountry || defaultCallingCode)) {\r\n\t\tmetadata.selectNumberingPlan(defaultCountry, defaultCallingCode)\r\n\t\tif (defaultCountry) {\r\n\t\t\tcountry = defaultCountry\r\n\t\t} else {\r\n\t\t\t/* istanbul ignore if */\r\n\t\t\tif (USE_NON_GEOGRAPHIC_COUNTRY_CODE) {\r\n\t\t\t\tif (metadata.isNonGeographicCallingCode(defaultCallingCode)) {\r\n\t\t\t\t\tcountry = '001'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tcountryCallingCode = defaultCallingCode || getCountryCallingCode(defaultCountry, metadata.metadata)\r\n\t}\r\n\telse return {}\r\n\r\n\tif (!number) {\r\n\t\treturn {\r\n\t\t\tcountryCallingCodeSource,\r\n\t\t\tcountryCallingCode\r\n\t\t}\r\n\t}\r\n\r\n\tconst {\r\n\t\tnationalNumber,\r\n\t\tcarrierCode\r\n\t} = extractNationalNumber(\r\n\t\tparseIncompletePhoneNumber(number),\r\n\t\tmetadata\r\n\t)\r\n\r\n\t// Sometimes there are several countries\r\n\t// corresponding to the same country phone code\r\n\t// (e.g. NANPA countries all having `1` country phone code).\r\n\t// Therefore, to reliably determine the exact country,\r\n\t// national (significant) number should have been parsed first.\r\n\t//\r\n\t// When `metadata.json` is generated, all \"ambiguous\" country phone codes\r\n\t// get their countries populated with the full set of\r\n\t// \"phone number type\" regular expressions.\r\n\t//\r\n\tconst exactCountry = getCountryByCallingCode(countryCallingCode, {\r\n\t\tnationalNumber,\r\n\t\tdefaultCountry,\r\n\t\tmetadata\r\n\t})\r\n\tif (exactCountry) {\r\n\t\tcountry = exactCountry\r\n\t\t/* istanbul ignore if */\r\n\t\tif (exactCountry === '001') {\r\n\t\t\t// Can't happen with `USE_NON_GEOGRAPHIC_COUNTRY_CODE` being `false`.\r\n\t\t\t// If `USE_NON_GEOGRAPHIC_COUNTRY_CODE` is set to `true` for some reason,\r\n\t\t\t// then remove the \"istanbul ignore if\".\r\n\t\t} else {\r\n\t\t\tmetadata.country(country)\r\n\t\t}\r\n\t}\r\n\r\n\treturn {\r\n\t\tcountry,\r\n\t\tcountryCallingCode,\r\n\t\tcountryCallingCodeSource,\r\n\t\tnationalNumber,\r\n\t\tcarrierCode\r\n\t}\r\n}","import parsePhoneNumberWithError from './parsePhoneNumberWithError_.js'\r\nimport ParseError from './ParseError.js'\r\nimport { isSupportedCountry } from './metadata.js'\r\n\r\nexport default function parsePhoneNumber(text, options, metadata) {\r\n\t// Validate `defaultCountry`.\r\n\tif (options && options.defaultCountry && !isSupportedCountry(options.defaultCountry, metadata)) {\r\n\t\toptions = {\r\n\t\t\t...options,\r\n\t\t\tdefaultCountry: undefined\r\n\t\t}\r\n\t}\r\n\t// Parse phone number.\r\n\ttry {\r\n\t\treturn parsePhoneNumberWithError(text, options, metadata)\r\n\t} catch (error) {\r\n\t\t/* istanbul ignore else */\r\n\t\tif (error instanceof ParseError) {\r\n\t\t\t//\r\n\t\t} else {\r\n\t\t\tthrow error\r\n\t\t}\r\n\t}\r\n}\r\n","import parse from './parse.js'\r\n\r\nexport default function parsePhoneNumberWithError(text, options, metadata) {\r\n\treturn parse(text, { ...options, v2: true }, metadata)\r\n}","import normalizeArguments from './normalizeArguments.js'\r\nimport parsePhoneNumber_ from './parsePhoneNumber_.js'\r\n\r\nexport default function parsePhoneNumber() {\r\n\tconst { text, options, metadata } = normalizeArguments(arguments)\r\n\treturn parsePhoneNumber_(text, options, metadata)\r\n}\r\n","import withMetadataArgument from './withMetadataArgument.js'\r\nimport { default as _parsePhoneNumber } from '../../core/index.js'\r\n\r\nexport function parsePhoneNumber() {\r\n\treturn withMetadataArgument(_parsePhoneNumber, arguments)\r\n}","// Importing from a \".js\" file is a workaround for Node.js \"ES Modules\"\r\n// importing system which is even uncapable of importing \"*.json\" files.\r\nimport metadata from '../../metadata.min.json.js'\r\n\r\nexport default function withMetadataArgument(func, _arguments) {\r\n\tvar args = Array.prototype.slice.call(_arguments)\r\n\targs.push(metadata)\r\n\treturn func.apply(this, args)\r\n}","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { PublicKeyStatus, PublicKeyType, } from '@usecapsule/user-management-client';\nimport { pki, jsbn } from 'node-forge';\nimport { decryptWithPrivateKey, getAsymmetricKeyPair, getPublicKeyHex } from './cryptography/utils.js';\nimport { getAsset, getNetwork, getPortalBaseURL, getProvider, } from './definitions.js';\nimport { Environment } from './definitions.js';\nimport { getBaseUrl, initClient } from './external/capsuleClient.js';\nimport * as mpcComputationClient from './external/mpcComputationClient.js';\nimport { distributeNewShare } from './shares/shareDistribution.js';\nimport * as transmissionUtils from './transmission/transmissionUtils.js';\nimport { sendRecoveryForShare } from './shares/recovery.js';\nimport parsePhoneNumberFromString from 'libphonenumber-js';\n// amount of time in ms that a web auth session lasts\nconst BIOMETRIC_VERIFICATION_TIME_MS = 30 * 60 * 1000;\nconst DEV_BIOMETRIC_VERIFICATION_TIME_MS = 60 * 60 * 1000;\nexport var WalletScheme;\n(function (WalletScheme) {\n    WalletScheme[\"CGGMP\"] = \"CGGMP\";\n    WalletScheme[\"DKLS\"] = \"DKLS\";\n    WalletScheme[\"ED25519\"] = \"ED25519\";\n})(WalletScheme || (WalletScheme = {}));\nexport var WalletType;\n(function (WalletType) {\n    WalletType[\"EVM\"] = \"EVM\";\n    WalletType[\"SOLANA\"] = \"SOLANA\";\n})(WalletType || (WalletType = {}));\n// Make sure to keep this in sync with capsule-org/src/entities/recoveryAttemptEntity.ts\nexport var RecoveryStatus;\n(function (RecoveryStatus) {\n    RecoveryStatus[\"INITIATED\"] = \"INITIATED\";\n    RecoveryStatus[\"READY\"] = \"READY\";\n    RecoveryStatus[\"EXPIRED\"] = \"EXPIRED\";\n    RecoveryStatus[\"FINISHED\"] = \"FINISHED\";\n    RecoveryStatus[\"CANCELLED\"] = \"CANCELLED\";\n})(RecoveryStatus || (RecoveryStatus = {}));\n// Keep this consistent with user-management code entities/walletEntity.ts\nexport var PregenIdentifierType;\n(function (PregenIdentifierType) {\n    PregenIdentifierType[\"EMAIL\"] = \"EMAIL\";\n    PregenIdentifierType[\"PHONE\"] = \"PHONE\";\n})(PregenIdentifierType || (PregenIdentifierType = {}));\n// Keep this consistent with user-management code entities/walletEntity.ts\n(function (WalletType) {\n    WalletType[\"USER\"] = \"USER\";\n    WalletType[\"PREGEN\"] = \"PREGEN\";\n})(WalletType || (WalletType = {}));\nexport const PREFIX = '@CAPSULE/';\nconst LOCAL_STORAGE_EMAIL = `${PREFIX}e-mail`;\nconst LOCAL_STORAGE_PHONE = `${PREFIX}phone`;\nconst LOCAL_STORAGE_COUNTRY_CODE = `${PREFIX}countryCode`;\nconst LOCAL_STORAGE_FARCASTER_USERNAME = `${PREFIX}farcasterUsername`;\nconst LOCAL_STORAGE_USER_ID = `${PREFIX}userId`;\nconst LOCAL_STORAGE_WALLETS = `${PREFIX}wallets`;\nconst LOCAL_STORAGE_ED25519_WALLETS = `${PREFIX}ed25519Wallets`;\nconst LOCAL_STORAGE_SESSION_COOKIE = `${PREFIX}sessionCookie`;\nconst SESSION_STORAGE_LOGIN_ENCRYPTION_KEY_PAIR = `${PREFIX}loginEncryptionKeyPair`;\nconst POLLING_INTERVAL_MS = 2000;\nconst SHORT_POLLING_INTERVAL_MS = 1000;\nfunction biometricVerifiedRecently(ctx, verifiedAt) {\n    if (ctx.env !== Environment.PROD) {\n        return Date.now() - verifiedAt <= DEV_BIOMETRIC_VERIFICATION_TIME_MS;\n    }\n    return Date.now() - verifiedAt <= BIOMETRIC_VERIFICATION_TIME_MS;\n}\nexport class CoreCapsule {\n    convertBigInt(bigInt) {\n        const convertedBigInt = new jsbn.BigInteger(null);\n        convertedBigInt.data = bigInt.data;\n        convertedBigInt.s = bigInt.s;\n        convertedBigInt.t = bigInt.t;\n        return convertedBigInt;\n    }\n    convertEncryptionKeyPair(jsonKeyPair) {\n        return {\n            privateKey: pki.setRsaPrivateKey(this.convertBigInt(jsonKeyPair.privateKey.n), this.convertBigInt(jsonKeyPair.privateKey.e), this.convertBigInt(jsonKeyPair.privateKey.d), this.convertBigInt(jsonKeyPair.privateKey.p), this.convertBigInt(jsonKeyPair.privateKey.q), this.convertBigInt(jsonKeyPair.privateKey.dP), this.convertBigInt(jsonKeyPair.privateKey.dQ), this.convertBigInt(jsonKeyPair.privateKey.qInv)),\n            publicKey: pki.setRsaPublicKey(this.convertBigInt(jsonKeyPair.publicKey.n), this.convertBigInt(jsonKeyPair.publicKey.e)),\n        };\n    }\n    requireApiKey() {\n        if (!this.ctx.apiKey) {\n            throw new Error(`in order to create a wallet or user with Capsule, you\n        must provide an API key to the capsule instance`);\n        }\n    }\n    /**\n     * Constructs a new `CoreCapsule` instance.\n     * @param env - `Environment` to use.\n     * @param apiKey - API key to use.\n     * @param opts - Additional constructor options; see `ConstructorOpts`.\n     * @returns - A new CoreCapsule instance.\n     */\n    constructor(env, apiKey, opts) {\n        this.localStorageGetItem = (key) => {\n            return this.platformUtils.localStorage.get(key);\n        };\n        this.localStorageSetItem = (key, value) => {\n            return this.platformUtils.localStorage.set(key, value);\n        };\n        this.sessionStorageGetItem = (key) => {\n            return this.platformUtils.sessionStorage.get(key);\n        };\n        this.sessionStorageSetItem = (key, value) => {\n            return this.platformUtils.sessionStorage.set(key, value);\n        };\n        this.sessionStorageRemoveItem = (key) => {\n            return this.platformUtils.sessionStorage.removeItem(key);\n        };\n        this.retrieveSessionCookie = () => {\n            return this.sessionCookie;\n        };\n        this.persistSessionCookie = (cookie) => {\n            this.sessionCookie = cookie;\n            this.localStorageSetItem(LOCAL_STORAGE_SESSION_COOKIE, cookie);\n        };\n        /**\n         * Remove all local storage and prefixed session storage.\n         */\n        this.clearStorage = () => __awaiter(this, void 0, void 0, function* () {\n            this.platformUtils.localStorage.clear(PREFIX);\n            this.platformUtils.sessionStorage.clear(PREFIX);\n            if (this.platformUtils.secureStorage) {\n                this.platformUtils.secureStorage.clear(PREFIX);\n            }\n        });\n        // TODO: consider using sessionStorage instead of localStorage\n        if (!opts)\n            opts = {};\n        this.emailPrimaryColor = opts.emailPrimaryColor;\n        this.emailTheme = opts.emailTheme;\n        this.homepageUrl = opts.homepageUrl;\n        this.supportUrl = opts.supportUrl;\n        this.xUrl = opts.xUrl;\n        this.githubUrl = opts.githubUrl;\n        this.linkedinUrl = opts.linkedinUrl;\n        this.portalBackgroundColor = opts.portalBackgroundColor;\n        this.portalPrimaryButtonColor = opts.portalPrimaryButtonColor;\n        this.portalTextColor = opts.portalTextColor;\n        this.portalPrimaryButtonTextColor = opts.portalPrimaryButtonTextColor;\n        this.portalTheme = opts.portalTheme;\n        this.platformUtils = this.getPlatformUtils();\n        this.disableProviderModal = this.platformUtils.disableProviderModal;\n        this.supportedWalletTypes = opts.supportedWalletTypes || [WalletType.EVM];\n        if (opts.useStorageOverrides) {\n            this.localStorageGetItem = opts.localStorageGetItemOverride;\n            this.localStorageSetItem = opts.localStorageSetItemOverride;\n            this.sessionStorageGetItem = opts.sessionStorageGetItemOverride;\n            this.sessionStorageSetItem = opts.sessionStorageSetItemOverride;\n            this.sessionStorageRemoveItem = opts.sessionStorageRemoveItemOverride;\n            this.clearStorage = opts.clearStorageOverride;\n        }\n        this.ctx = {\n            env,\n            apiKey,\n            capsuleClient: initClient(env, apiKey, opts.disableWorkers, this.retrieveSessionCookie, this.persistSessionCookie),\n            disableWorkers: opts.disableWorkers,\n            offloadMPCComputationURL: opts.offloadMPCComputationURL,\n            useLocalFiles: opts.useLocalFiles,\n            useDKLS: opts.useDKLSForCreation || !opts.offloadMPCComputationURL,\n            disableWebSockets: !!opts.disableWebSockets,\n            wasmOverride: opts.wasmOverride,\n        };\n        if (opts.offloadMPCComputationURL) {\n            this.ctx.mpcComputationClient = mpcComputationClient.initClient(opts.offloadMPCComputationURL, opts.disableWorkers);\n        }\n        if (!this.platformUtils.isSyncStorage || opts.useStorageOverrides) {\n            return;\n        }\n        this.email = this.localStorageGetItem(LOCAL_STORAGE_EMAIL) || undefined;\n        this.userId = this.localStorageGetItem(LOCAL_STORAGE_USER_ID) || undefined;\n        // TODO: remove sessionStorageGetItem call once new version is being consumed\n        this.sessionCookie =\n            this.localStorageGetItem(LOCAL_STORAGE_SESSION_COOKIE) ||\n                this.sessionStorageGetItem(LOCAL_STORAGE_SESSION_COOKIE) ||\n                undefined;\n        const stringWallets = this.platformUtils.secureStorage\n            ? this.platformUtils.secureStorage.get(LOCAL_STORAGE_WALLETS)\n            : this.localStorageGetItem(LOCAL_STORAGE_WALLETS);\n        this.wallets = JSON.parse(stringWallets || '{}');\n        const stringED25519Wallets = this.platformUtils.secureStorage\n            ? this.platformUtils.secureStorage.get(LOCAL_STORAGE_ED25519_WALLETS)\n            : this.localStorageGetItem(LOCAL_STORAGE_ED25519_WALLETS);\n        this.ed25519Wallets = JSON.parse(stringED25519Wallets || '{}');\n        const loginEncryptionKey = this.sessionStorageGetItem(SESSION_STORAGE_LOGIN_ENCRYPTION_KEY_PAIR);\n        if (loginEncryptionKey && loginEncryptionKey !== 'undefined') {\n            this.loginEncryptionKeyPair = this.convertEncryptionKeyPair(JSON.parse(loginEncryptionKey));\n        }\n    }\n    getVerificationEmailProps() {\n        return {\n            brandColor: this.emailPrimaryColor,\n            theme: this.emailTheme,\n            supportUrl: this.supportUrl,\n            homepageUrl: this.homepageUrl,\n            xUrl: this.xUrl,\n            githubUrl: this.githubUrl,\n            linkedinUrl: this.linkedinUrl,\n        };\n    }\n    getBackupKitEmailProps() {\n        return {\n            brandColor: this.emailPrimaryColor,\n            theme: this.emailTheme,\n            homepageUrl: this.homepageUrl,\n            xUrl: this.xUrl,\n            linkedinUrl: this.linkedinUrl,\n            githubUrl: this.githubUrl,\n            supportUrl: this.supportUrl,\n        };\n    }\n    /**\n     * Initialize storage relating to a `CoreCapsule` instance.\n     *\n     * Init only needs to be called for storage that is async.\n     */\n    init() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.email = (yield this.localStorageGetItem(LOCAL_STORAGE_EMAIL)) || undefined;\n            this.userId = (yield this.localStorageGetItem(LOCAL_STORAGE_USER_ID)) || undefined;\n            // TODO: remove sessionStorageGetItem call once new version is being consumed\n            this.sessionCookie =\n                (yield this.localStorageGetItem(LOCAL_STORAGE_SESSION_COOKIE)) ||\n                    (yield this.sessionStorageGetItem(LOCAL_STORAGE_SESSION_COOKIE)) ||\n                    undefined;\n            const stringWallets = this.platformUtils.secureStorage\n                ? yield this.platformUtils.secureStorage.get(LOCAL_STORAGE_WALLETS)\n                : yield this.localStorageGetItem(LOCAL_STORAGE_WALLETS);\n            this.wallets = JSON.parse(stringWallets || '{}');\n            const stringED25519Wallets = this.platformUtils.secureStorage\n                ? yield this.platformUtils.secureStorage.get(LOCAL_STORAGE_ED25519_WALLETS)\n                : yield this.localStorageGetItem(LOCAL_STORAGE_ED25519_WALLETS);\n            this.ed25519Wallets = JSON.parse(stringED25519Wallets || '{}');\n            const loginEncryptionKey = yield this.sessionStorageGetItem(SESSION_STORAGE_LOGIN_ENCRYPTION_KEY_PAIR);\n            if (loginEncryptionKey && loginEncryptionKey !== 'undefined') {\n                this.loginEncryptionKeyPair = this.convertEncryptionKeyPair(JSON.parse(loginEncryptionKey));\n            }\n        });\n    }\n    /**\n     * Sets the email associated with the `CoreCapsule` instance.\n     * @param email - Email to set.\n     */\n    setEmail(email) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.email = email;\n            yield this.localStorageSetItem(LOCAL_STORAGE_EMAIL, email);\n        });\n    }\n    /**\n     * Sets the phone number associated with the `CoreCapsule` instance.\n     * @param phone - Phone number to set.\n     * @param countryCode - Country Code to set.\n     */\n    setPhoneNumber(phone, countryCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.phone = phone;\n            this.countryCode = countryCode;\n            yield this.localStorageSetItem(LOCAL_STORAGE_PHONE, phone);\n            yield this.localStorageSetItem(LOCAL_STORAGE_COUNTRY_CODE, countryCode);\n        });\n    }\n    /**\n     * Sets the farcaster username associated with the `CoreCapsule` instance.\n     * @param farcasterUsername - Farcaster Username to set.\n     */\n    setFarcasterUsername(farcasterUsername) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.farcasterUsername = farcasterUsername;\n            yield this.localStorageSetItem(LOCAL_STORAGE_FARCASTER_USERNAME, farcasterUsername);\n        });\n    }\n    /**\n     * Sets the user id associated with the `CoreCapsule` instance.\n     * @param userId - User id to set.\n     */\n    setUserId(userId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.userId = userId;\n            yield this.localStorageSetItem(LOCAL_STORAGE_USER_ID, userId);\n        });\n    }\n    /**\n     * Sets the wallets associated with the `CoreCapsule` instance.\n     * @param wallets - Wallets to set.\n     */\n    setWallets(wallets) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.wallets = wallets;\n            if (this.platformUtils.secureStorage) {\n                yield this.platformUtils.secureStorage.set(LOCAL_STORAGE_WALLETS, JSON.stringify(wallets));\n                return;\n            }\n            yield this.localStorageSetItem(LOCAL_STORAGE_WALLETS, JSON.stringify(wallets));\n        });\n    }\n    setEd25519Wallets(wallets) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.ed25519Wallets = wallets;\n            if (this.platformUtils.secureStorage) {\n                yield this.platformUtils.secureStorage.set(LOCAL_STORAGE_ED25519_WALLETS, JSON.stringify(wallets));\n                return;\n            }\n            yield this.localStorageSetItem(LOCAL_STORAGE_ED25519_WALLETS, JSON.stringify(wallets));\n        });\n    }\n    /**\n     * Sets the login encryption key pair associated with the `CoreCapsule` instance.\n     * @param keyPair - Encryption key pair generated from loginEncryptionKey.\n     */\n    setLoginEncryptionKeyPair(keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.loginEncryptionKeyPair = keyPair;\n            yield this.sessionStorageSetItem(SESSION_STORAGE_LOGIN_ENCRYPTION_KEY_PAIR, JSON.stringify(keyPair));\n        });\n    }\n    deleteLoginEncryptionKeyPair() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.loginEncryptionKeyPair = undefined;\n            yield this.sessionStorageRemoveItem(SESSION_STORAGE_LOGIN_ENCRYPTION_KEY_PAIR);\n        });\n    }\n    /**\n     * Gets the userId associated with the `CoreCapsule` instance.\n     * @returns - userId associated with the `CoreCapsule` instance.\n     */\n    getUserId() {\n        return this.userId;\n    }\n    /**\n     * Gets the email associated with the `CoreCapsule` instance.\n     * @returns - email associated with the `CoreCapsule` instance.\n     */\n    getEmail() {\n        return this.email;\n    }\n    /**\n     * Gets the wallets associated with the `CoreCapsule` instance.\n     * @returns - wallets associated with the `CoreCapsule` instance.\n     */\n    getWallets() {\n        return this.wallets;\n    }\n    getED25519Wallets() {\n        return this.ed25519Wallets;\n    }\n    getAddress(walletId) {\n        var _a, _b;\n        return walletId ? this.wallets[walletId].address : (_b = (_a = Object.values(this.wallets)) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.address;\n    }\n    getPartnerURL(partnerId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.ctx.capsuleClient.getPartner(partnerId);\n            return res.data.partner.portalUrl;\n        });\n    }\n    /**\n     * URL of the portal, which can be associated with a partner id\n     * @param partnerId - id of the partner to get the portal URL for\n     * @returns - portal URL\n     */\n    getPortalURL(partnerId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return (partnerId && (yield this.getPartnerURL(partnerId))) || getPortalBaseURL(this.ctx);\n        });\n    }\n    getCommonLoginQueryParams(newDeviceSessionId, newDeviceEncryptionKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const newDeviceSessionIdQueryParam = newDeviceSessionId ? `&newDeviceSessionId=${newDeviceSessionId}` : '';\n            const newDeviceEncryptionKeyQueryParam = newDeviceEncryptionKey\n                ? `&newDeviceEncryptionKey=${newDeviceEncryptionKey}`\n                : '';\n            return `${newDeviceSessionIdQueryParam}${newDeviceEncryptionKeyQueryParam}`;\n        });\n    }\n    getCommonQueryParams(partnerId, isForNewDevice) {\n        var _a, _b, _c, _d, _e, _f;\n        return __awaiter(this, void 0, void 0, function* () {\n            const partner = (yield this.ctx.capsuleClient.getPartner(partnerId)).data;\n            const partnerIdQueryParam = partnerId ? `&partnerId=${partnerId}` : '';\n            const portalFontQueryParam = partner.font ? `&portalFont=${encodeURIComponent(partner.font)}` : '';\n            const portalBorderRadiusQueryParam = ((_a = this.portalTheme) === null || _a === void 0 ? void 0 : _a.borderRadius)\n                ? `&portalBorderRadius=${encodeURIComponent(this.portalTheme.borderRadius)}`\n                : '';\n            const portalForegroundColorQueryParam = partner.foregroundColor || ((_b = this.portalTheme) === null || _b === void 0 ? void 0 : _b.foregroundColor)\n                ? `&portalForegroundColor=${encodeURIComponent((_c = partner.foregroundColor) !== null && _c !== void 0 ? _c : this.portalTheme.foregroundColor)}`\n                : '';\n            const portalBackgroundColorQueryParam = partner.backgroundColor || this.portalBackgroundColor || ((_d = this.portalTheme) === null || _d === void 0 ? void 0 : _d.backgroundColor)\n                ? `&portalBackgroundColor=${encodeURIComponent((_f = (_e = partner.backgroundColor) !== null && _e !== void 0 ? _e : this.portalBackgroundColor) !== null && _f !== void 0 ? _f : this.portalTheme.backgroundColor)}`\n                : '';\n            const portalPrimaryButtonColorQueryParam = this.portalPrimaryButtonColor\n                ? `&portalPrimaryButtonColor=${encodeURIComponent(this.portalPrimaryButtonColor)}`\n                : '';\n            const portalTextColorQueryParam = this.portalTextColor\n                ? `&portalTextColor=${encodeURIComponent(this.portalTextColor)}`\n                : '';\n            const portalPrimaryButtonTextColorQueryParam = this.portalPrimaryButtonTextColor\n                ? `&portalPrimaryButtonTextColor=${encodeURIComponent(this.portalPrimaryButtonTextColor)}`\n                : '';\n            const isForNewDeviceQueryParam = isForNewDevice ? `&isForNewDevice=${isForNewDevice}` : '';\n            return `${partnerIdQueryParam}${portalFontQueryParam}${portalBorderRadiusQueryParam}${portalForegroundColorQueryParam}${portalBackgroundColorQueryParam}${portalPrimaryButtonColorQueryParam}${portalTextColorQueryParam}${portalPrimaryButtonTextColorQueryParam}${isForNewDeviceQueryParam}`;\n        });\n    }\n    getWebAuthURLForCreate(type, webAuthId, partnerId, isForNewDevice) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const commonQueryParams = yield this.getCommonQueryParams(partnerId, isForNewDevice);\n            const userSpecificParams = {\n                email: `email=${encodeURIComponent(this.email)}`,\n                phone: `phone=${encodeURIComponent(this.phone)}&countryCode=${encodeURIComponent(this.countryCode)}`,\n                farcaster: `farcasterUsername=${encodeURIComponent(this.farcasterUsername)}`,\n            }[type];\n            return `${(partnerId && (yield this.getPartnerURL(partnerId))) || getPortalBaseURL(this.ctx)}/web/users/${this.userId}/biometrics/${webAuthId}?${userSpecificParams}${commonQueryParams}`;\n        });\n    }\n    getShortUrl(compressedUrl) {\n        return `${getPortalBaseURL(this.ctx)}/short/${compressedUrl}`;\n    }\n    shortenLoginLink(link) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const url = yield transmissionUtils.upload(link, this.ctx.capsuleClient);\n            return this.getShortUrl(url);\n        });\n    }\n    /**\n     * Generates a URL that can be used to perform web auth\n     * for creating a new credential.\n     * @param sessionId - id of the session to use for web auth\n     * @param loginEncryptionPublicKey - public key to use for encrypting the login encryption key\n     * @param partnerId - id of the partner to get the portal URL for\n     * @param newDeviceSessionId - id of the session to use for web auth for a new device\n     * @param newDeviceEncryptionKey - public key to use for encrypting the login encryption key for a new device\n     * @returns - web auth url\n     */\n    getWebAuthURLForLogin(sessionId, loginEncryptionPublicKey, partnerId, newDeviceSessionId, newDeviceEncryptionKey, type = 'email') {\n        return __awaiter(this, void 0, void 0, function* () {\n            const commonQueryParams = yield this.getCommonQueryParams(partnerId);\n            const commonLoginQueryParams = yield this.getCommonLoginQueryParams(newDeviceSessionId, newDeviceEncryptionKey);\n            const userSpecificParams = {\n                email: `email=${encodeURIComponent(this.email)}`,\n                phone: `phone=${encodeURIComponent(this.phone)}&countryCode=${encodeURIComponent(this.countryCode)}`,\n                farcaster: `farcasterUsername=${encodeURIComponent(this.farcasterUsername)}`,\n            }[type];\n            return `${(partnerId && (yield this.getPartnerURL(partnerId))) || getPortalBaseURL(this.ctx)}/web/biometrics/login?${userSpecificParams}&sessionId=${sessionId}&encryptionKey=${loginEncryptionPublicKey}${commonLoginQueryParams}${commonQueryParams}`;\n        });\n    }\n    /**\n     * Generates a URL that can be used to perform web auth for phone number\n     * for creating a new credential.\n     * @param sessionId - id of the session to use for web auth\n     * @param loginEncryptionPublicKey - public key to use for encrypting the login encryption key\n     * @param partnerId - id of the partner to get the portal URL for\n     * @param newDeviceSessionId - id of the session to use for web auth for a new device\n     * @param newDeviceEncryptionKey - public key to use for encrypting the login encryption key for a new device\n     * @returns - web auth url\n     */\n    getWebAuthURLForLoginForPhone(sessionId, loginEncryptionPublicKey, partnerId, newDeviceSessionId, newDeviceEncryptionKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const commonQueryParams = yield this.getCommonQueryParams(partnerId);\n            const commonLoginQueryParams = yield this.getCommonLoginQueryParams(newDeviceSessionId, newDeviceEncryptionKey);\n            return `${(partnerId && (yield this.getPartnerURL(partnerId))) || getPortalBaseURL(this.ctx)}/web/biometrics/login?phone=${encodeURIComponent(this.phone)}&countryCode=${encodeURIComponent(this.countryCode)}&sessionId=${sessionId}&encryptionKey=${loginEncryptionPublicKey}${commonLoginQueryParams}${commonQueryParams}`;\n        });\n    }\n    /**\n     * Gets the private key for the given wallet.\n     * @param walletId - (optional) id of the wallet to get the private key for. Will default to the first wallet if not provided.\n     * @returns - private key string.\n     */\n    getPrivateKey(walletId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wallets = Object.values(this.wallets);\n            const wallet = walletId ? this.wallets[walletId] : wallets === null || wallets === void 0 ? void 0 : wallets[0];\n            if (!wallet) {\n                throw new Error('wallet not found');\n            }\n            // We can only build the private key for DKLS wallets\n            if (wallet.scheme !== WalletScheme.DKLS) {\n                throw new Error('invalid wallet scheme');\n            }\n            return yield this.platformUtils.getPrivateKey(this.ctx, this.userId, wallet.id, wallet.signer, this.retrieveSessionCookie());\n        });\n    }\n    /**\n     * Fetches the wallets associated with the user.\n     * @returns - wallets that were fetched.\n     */\n    fetchWallets() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.ctx.capsuleClient.getWallets(this.userId);\n            return res.data.wallets;\n        });\n    }\n    populateWalletAddresses() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.ctx.capsuleClient.getWallets(this.userId);\n            const wallets = res.data.wallets;\n            wallets.forEach((wallet) => {\n                if (wallet.scheme === WalletScheme.ED25519 && this.ed25519Wallets[wallet.id]) {\n                    this.ed25519Wallets[wallet.id].address = wallet.address;\n                    this.ed25519Wallets[wallet.id].publicKey = wallet.publicKey;\n                    this.ed25519Wallets[wallet.id].scheme = wallet.scheme;\n                    this.ed25519Wallets[wallet.id].partnerId = wallet.partnerId;\n                    this.ed25519Wallets[wallet.id].userId = wallet.userId;\n                    delete this.wallets[wallet.id];\n                }\n                else if (this.wallets[wallet.id]) {\n                    this.wallets[wallet.id].address = wallet.address;\n                    this.wallets[wallet.id].publicKey = wallet.publicKey;\n                    this.wallets[wallet.id].scheme = wallet.scheme;\n                    this.wallets[wallet.id].partnerId = wallet.partnerId;\n                    this.wallets[wallet.id].userId = wallet.userId;\n                    delete this.ed25519Wallets[wallet.id];\n                }\n            });\n            yield this.setWallets(this.wallets);\n            yield this.setEd25519Wallets(this.ed25519Wallets);\n        });\n    }\n    populatePregenWalletAddresses(pregenIdentifier, pregenIdentifierType) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.ctx.capsuleClient.getPregenWallets(pregenIdentifier, pregenIdentifierType);\n            const wallets = res.wallets;\n            wallets.forEach((wallet) => {\n                if (wallet.scheme === WalletScheme.ED25519 && this.ed25519Wallets[wallet.id]) {\n                    this.ed25519Wallets[wallet.id].address = wallet.address;\n                    this.ed25519Wallets[wallet.id].publicKey = wallet.publicKey;\n                    this.ed25519Wallets[wallet.id].scheme = wallet.scheme;\n                    this.ed25519Wallets[wallet.id].partnerId = wallet.partnerId;\n                    this.ed25519Wallets[wallet.id].userId = wallet.userId;\n                    this.ed25519Wallets[wallet.id].type = wallet.type;\n                    delete this.wallets[wallet.id];\n                }\n                else if (this.wallets[wallet.id]) {\n                    this.wallets[wallet.id].address = wallet.address;\n                    this.wallets[wallet.id].publicKey = wallet.publicKey;\n                    this.wallets[wallet.id].scheme = wallet.scheme;\n                    this.wallets[wallet.id].partnerId = wallet.partnerId;\n                    this.wallets[wallet.id].userId = wallet.userId;\n                    this.wallets[wallet.id].type = wallet.type;\n                    delete this.ed25519Wallets[wallet.id];\n                }\n            });\n            yield this.setWallets(this.wallets);\n            yield this.setEd25519Wallets(this.ed25519Wallets);\n        });\n    }\n    /**\n     * Checks if a user exists.\n     * @returns - true if user exists, false otherwise.\n     */\n    checkIfUserExists(email) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.ctx.capsuleClient.checkUserExists(email, null, null);\n            return res.data.exists;\n        });\n    }\n    /**\n     * Checks if a user exists by their phone number.\n     * @returns - true if user exists, false otherwise.\n     */\n    checkIfUserExistsByPhone(phone, countryCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.ctx.capsuleClient.checkUserExists(null, phone, countryCode);\n            return res.data.exists;\n        });\n    }\n    /**\n     * Creates a new user.\n     * @param email - email to use for creating the user.\n     */\n    createUser(email) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.requireApiKey();\n            yield this.setEmail(email);\n            const { userId } = yield this.ctx.capsuleClient.createUser(Object.assign({ email: this.email }, this.getVerificationEmailProps()));\n            yield this.setUserId(userId);\n        });\n    }\n    /**\n     * Creates a new user with a phone number.\n     * @param phone - phone number to use for creating the user.\n     * @param countryCode - country code to use for creating the user.\n     */\n    createUserByPhone(phone, countryCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.requireApiKey();\n            yield this.setPhoneNumber(phone, countryCode);\n            const { userId } = yield this.ctx.capsuleClient.createUser({\n                phone: this.phone,\n                countryCode: this.countryCode,\n            });\n            yield this.setUserId(userId);\n        });\n    }\n    /**\n     * Passes the email code obtained from the user for verification.\n     * @param verificationCode\n     * @returns - web auth url for creating a new credential\n     */\n    verifyEmail(verificationCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ctx.capsuleClient.verifyEmail(this.userId, { verificationCode });\n            return this.getSetUpBiometricsURL(false);\n        });\n    }\n    /**\n     * Passes the phone code obtained from the user for verification.\n     * @param verificationCode\n     * @returns - web auth url for creating a new credential\n     */\n    verifyPhone(verificationCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ctx.capsuleClient.verifyPhone(this.userId, { verificationCode });\n            return this.getSetUpBiometricsURLForPhone(false);\n        });\n    }\n    /**\n     * Performs 2FA verification.\n     * @param email - email to use for performing a 2FA verification.\n     * @param verificationCode - verification code to received via 2FA.\n     * @returns { address, initiatedAt, status, userId, walletId }\n     */\n    verify2FA(email, verificationCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.ctx.capsuleClient.verify2FA(email, verificationCode);\n            return {\n                address: res.data.address,\n                initiatedAt: res.data.initiatedAt,\n                status: res.data.status,\n                userId: res.data.userId,\n                walletId: res.data.walletId,\n            };\n        });\n    }\n    /**\n     * Performs 2FA verification.\n     * @param phone - phone to use for performing a 2FA verification.\n     * @param verificationCode - verification code to received via 2FA.\n     * @returns { address, initiatedAt, status, userId, walletId }\n     */\n    verify2FAForPhone(phone, countryCode, verificationCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.ctx.capsuleClient.verify2FAForPhone(phone, countryCode, verificationCode);\n            return {\n                address: res.data.address,\n                initiatedAt: res.data.initiatedAt,\n                status: res.data.status,\n                userId: res.data.userId,\n                walletId: res.data.walletId,\n            };\n        });\n    }\n    /**\n     * Sets up 2FA.\n     * @returns uri - uri to use for setting up 2FA\n     * */\n    setup2FA() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.ctx.capsuleClient.setup2FA(this.userId);\n            return {\n                uri: res.data.uri,\n            };\n        });\n    }\n    /**\n     * Enables 2FA.\n     * @param verificationCode - verification code received via 2FA.\n     */\n    enable2FA(verificationCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ctx.capsuleClient.enable2FA(this.userId, verificationCode);\n        });\n    }\n    /**\n     * Determines if 2FA has been set up.\n     * @returns { isSetup } - true if 2FA is setup, false otherwise\n     */\n    check2FAStatus() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.userId) {\n                return { isSetup: false };\n            }\n            const res = yield this.ctx.capsuleClient.check2FAStatus(this.userId);\n            return {\n                isSetup: res.data.isSetup,\n            };\n        });\n    }\n    resendVerificationCode() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ctx.capsuleClient.resendVerificationCode(Object.assign({ userId: this.userId }, this.getVerificationEmailProps()));\n        });\n    }\n    resendVerificationCodeByPhone() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ctx.capsuleClient.resendVerificationCodeByPhone({\n                userId: this.userId,\n            });\n        });\n    }\n    // returns web auth url for creating a new credential\n    getSetUpBiometricsURL(isForNewDevice, type = 'email') {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.ctx.capsuleClient.addSessionPublicKey(this.userId, {\n                status: PublicKeyStatus.PENDING,\n                type: PublicKeyType.WEB,\n            });\n            return this.getWebAuthURLForCreate(type, res.data.id, res.data.partnerId, isForNewDevice);\n        });\n    }\n    // returns web auth url for creating a new credential\n    getSetUpBiometricsURLForPhone(isForNewDevice) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.ctx.capsuleClient.addSessionPublicKey(this.userId, {\n                status: PublicKeyStatus.PENDING,\n                type: PublicKeyType.WEB,\n            });\n            return this.getWebAuthURLForCreate('phone', res.data.id, res.data.partnerId, isForNewDevice);\n        });\n    }\n    // TODO: consider changing this to just hit a new endpoint that returns\n    //   true/false if session is active\n    isSessionActive() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.ctx.capsuleClient.touchSession();\n            return res.data.biometricVerifiedAt && biometricVerifiedRecently(this.ctx, res.data.biometricVerifiedAt);\n        });\n    }\n    /**\n     * Checks if a session is active and a wallet exists.\n     *\n     * @returns - true if session is active and a wallet exists.\n     **/\n    isFullyLoggedIn() {\n        var _a, _b, _c, _d;\n        return __awaiter(this, void 0, void 0, function* () {\n            const isSessionActive = yield this.isSessionActive();\n            const evmWalletAddress = (_b = (_a = Object.values(this.getWallets())) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.address;\n            const solanaAddress = (_d = (_c = Object.values(this.getED25519Wallets())) === null || _c === void 0 ? void 0 : _c[0]) === null || _d === void 0 ? void 0 : _d.address;\n            return isSessionActive && !!(evmWalletAddress || solanaAddress);\n        });\n    }\n    /**\n     * Initiates a login.\n     * @param email - the email to login with\n     * @param useShortURL - whether to shorten the link\n     * @returns - web auth url for logging in\n     **/\n    initiateUserLogin(identifier, useShortURL, type = 'email', countryCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (type === 'email') {\n                yield this.setEmail(identifier);\n            }\n            else if (type === 'phone') {\n                yield this.setPhoneNumber(identifier, countryCode);\n            }\n            else if (type === 'farcaster') {\n                yield this.setFarcasterUsername(identifier);\n            }\n            const res = yield this.ctx.capsuleClient.touchSession(true);\n            if (!this.loginEncryptionKeyPair) {\n                const keyPair = yield getAsymmetricKeyPair(this.ctx);\n                yield this.setLoginEncryptionKeyPair(keyPair);\n            }\n            const webAuthLoginURL = yield this.getWebAuthURLForLogin(res.data.sessionId, getPublicKeyHex(this.loginEncryptionKeyPair), res.data.partnerId, undefined, undefined, type);\n            if (!useShortURL) {\n                return webAuthLoginURL;\n            }\n            return this.shortenLoginLink(webAuthLoginURL);\n        });\n    }\n    /**\n     * Initiates a login.\n     * @param phone - the phone number to login with\n     * @param countryCode\n     * @param useShortURL - whether to shorten the link\n     * @returns - web auth url for logging in\n     **/\n    initiateUserLoginForPhone(phone, countryCode, useShortURL) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.setPhoneNumber(phone, countryCode);\n            const res = yield this.ctx.capsuleClient.touchSession(true);\n            if (!this.loginEncryptionKeyPair) {\n                const keyPair = yield getAsymmetricKeyPair(this.ctx);\n                yield this.setLoginEncryptionKeyPair(keyPair);\n            }\n            const webAuthLoginURL = yield this.getWebAuthURLForLoginForPhone(res.data.sessionId, getPublicKeyHex(this.loginEncryptionKeyPair), res.data.partnerId);\n            if (!useShortURL) {\n                return webAuthLoginURL;\n            }\n            return this.shortenLoginLink(webAuthLoginURL);\n        });\n    }\n    /**\n     * Waits for the session to be active.\n     **/\n    waitForAccountCreation() {\n        return __awaiter(this, void 0, void 0, function* () {\n            while (true) {\n                try {\n                    yield new Promise((resolve) => setTimeout(resolve, POLLING_INTERVAL_MS));\n                    if (yield this.isSessionActive()) {\n                        return;\n                    }\n                }\n                catch (err) {\n                    // want to continue polling on error\n                    console.error(err);\n                }\n            }\n        });\n    }\n    waitForPasskeyAndCreateWallet() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.waitForAccountCreation();\n            // This function gets pregen wallets by an identifier and partnerId\n            let pregenIdentifier;\n            let pregenIdentifierType;\n            if (this.email != null) {\n                pregenIdentifier = this.email;\n                pregenIdentifierType = PregenIdentifierType.EMAIL;\n            }\n            else {\n                pregenIdentifier = parsePhoneNumberFromString(`${this.countryCode}${this.phone}`).formatInternational();\n                pregenIdentifierType = PregenIdentifierType.PHONE;\n            }\n            const res = yield this.ctx.capsuleClient.getPregenWallets(pregenIdentifier, pregenIdentifierType);\n            const wallet = res.wallets[0];\n            if (wallet) {\n                const recovery = yield this.claimPregenWallets(pregenIdentifier, pregenIdentifierType);\n                return recovery;\n            }\n            else {\n                const { recoverySecret } = yield this.createWalletPerMissingType();\n                return recoverySecret;\n            }\n        });\n    }\n    getFarcasterConnectURL() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.logout();\n            yield this.ctx.capsuleClient.touchSession(true);\n            const { data: { connect_uri }, } = yield this.ctx.capsuleClient.initializeFarcasterLogin();\n            return connect_uri;\n        });\n    }\n    waitForFarcasterStatus() {\n        return __awaiter(this, void 0, void 0, function* () {\n            while (true) {\n                try {\n                    yield new Promise((resolve) => setTimeout(resolve, POLLING_INTERVAL_MS));\n                    const res = yield this.ctx.capsuleClient.getFarcasterAuthStatus();\n                    if (res.data.state === 'completed') {\n                        const { userId, userExists, username } = res.data;\n                        yield this.setUserId(userId);\n                        yield this.setFarcasterUsername(username);\n                        return {\n                            userExists,\n                            username,\n                        };\n                    }\n                }\n                catch (err) {\n                    console.error(err);\n                }\n            }\n        });\n    }\n    getOAuthURL(oAuthMethod) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.logout();\n            const res = yield this.ctx.capsuleClient.touchSession(true);\n            return `${getBaseUrl(this.ctx.env)}auth/${oAuthMethod.toLowerCase()}?sessionLookupId=${encodeURIComponent(res.data.sessionLookupId)}`;\n        });\n    }\n    waitForOAuth() {\n        return __awaiter(this, void 0, void 0, function* () {\n            while (true) {\n                try {\n                    yield new Promise((resolve) => setTimeout(resolve, POLLING_INTERVAL_MS));\n                    const res = yield this.ctx.capsuleClient.touchSession();\n                    if (res.data.userId) {\n                        const { userId, email } = res.data;\n                        yield this.setUserId(userId);\n                        yield this.setEmail(email);\n                        const userExists = yield this.checkIfUserExists(email);\n                        return {\n                            userExists,\n                            email,\n                        };\n                    }\n                }\n                catch (err) {\n                    console.error(err);\n                }\n            }\n        });\n    }\n    /**\n     * Waits for the session to be active and sets up the user.\n     * @returns { needsWallet } - whether a wallet needs to be created\n     **/\n    waitForLoginAndSetup(skipSessionRefresh) {\n        return __awaiter(this, void 0, void 0, function* () {\n            while (true) {\n                try {\n                    yield new Promise((resolve) => setTimeout(resolve, POLLING_INTERVAL_MS));\n                    if (!(yield this.isSessionActive())) {\n                        continue;\n                    }\n                    yield this.userSetupAfterLogin();\n                    const fetchedWallets = (yield this.fetchWallets()).filter((wallet) => !!wallet.address);\n                    const tempSharesRes = yield this.getTransmissionKeyShares();\n                    // need this check for the case where user has logged in but temp encrypted shares\n                    // haven't been sent to the backend yet\n                    if (tempSharesRes.data.temporaryShares.length === fetchedWallets.length) {\n                        yield this.setupAfterLogin(tempSharesRes.data.temporaryShares, skipSessionRefresh);\n                        const needsEvm = Object.keys(this.wallets).length === 0 && this.supportedWalletTypes.includes(WalletType.EVM);\n                        const needsSolana = Object.keys(this.ed25519Wallets).length === 0 && this.supportedWalletTypes.includes(WalletType.SOLANA);\n                        return { needsWallet: needsEvm || needsSolana };\n                    }\n                }\n                catch (err) {\n                    // want to continue polling on error\n                    console.error(err);\n                }\n            }\n        });\n    }\n    /**\n     * Updates the session with the user management server, possibly\n     * opening a popup to refresh the session.\n     *\n     * @param shouldOpenPopup - true if you want to open the popup automatically\n     * @returns - web auth url for refreshing session\n     **/\n    refreshSession(shouldOpenPopup) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.ctx.capsuleClient.touchSession(true);\n            if (!this.loginEncryptionKeyPair) {\n                const keyPair = yield getAsymmetricKeyPair(this.ctx);\n                yield this.setLoginEncryptionKeyPair(keyPair);\n            }\n            const link = yield this.getWebAuthURLForLogin(res.data.sessionId, getPublicKeyHex(this.loginEncryptionKeyPair));\n            if (shouldOpenPopup) {\n                this.platformUtils.openPopup(link);\n            }\n            return link;\n        });\n    }\n    /**\n     * Call this method after login to ensure that the user ID is set\n     * internally.\n     **/\n    userSetupAfterLogin() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.ctx.capsuleClient.touchSession();\n            yield this.setUserId(res.data.userId);\n        });\n    }\n    /**\n     * Get transmission shares associated with session.\n     *\n     * @param isForNewDevice - true if this device is registering.\n     * @returns - transmission keyshares.\n     **/\n    getTransmissionKeyShares(isForNewDevice) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.ctx.capsuleClient.touchSession();\n            const sessionLookupId = isForNewDevice ? `${res.data.sessionLookupId}-new-device` : res.data.sessionLookupId;\n            return this.ctx.capsuleClient.getTransmissionKeyshares(this.userId, sessionLookupId);\n        });\n    }\n    /**\n     * Call this method after login to perform setup.\n     *\n     * @param temporaryShares - optional temporary shares to use for decryption.\n     **/\n    setupAfterLogin(temporaryShares, skipSessionRefresh) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!temporaryShares) {\n                temporaryShares = (yield this.getTransmissionKeyShares()).data.temporaryShares;\n            }\n            yield this.setWallets({});\n            yield this.setEd25519Wallets({});\n            temporaryShares.forEach((share) => {\n                const signer = decryptWithPrivateKey(this.loginEncryptionKeyPair.privateKey, share.encryptedShare, share.encryptedKey);\n                this.wallets[share.walletId] = {\n                    id: share.walletId,\n                    signer,\n                };\n                this.ed25519Wallets[share.walletId] = {\n                    id: share.walletId,\n                    signer,\n                };\n            });\n            yield this.deleteLoginEncryptionKeyPair();\n            yield this.populateWalletAddresses();\n            yield this.ctx.capsuleClient.touchSession(!skipSessionRefresh);\n        });\n    }\n    /**\n     * Distributes a new wallet recovery share.\n     *\n     * @param walletId - the wallet to distribute the recovery share for.\n     * @param userShare - optional user share generate the recovery share from. Defaults to the signer from the passed in walletId\n     * @param skipBiometricShareCreation - whether or not to skip biometric share creation. Used when regenerating recovery shares.\n     * @returns - recovery share.\n     **/\n    distributeNewWalletShare(walletId, userShare, skipBiometricShareCreation) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let _userShare = userShare;\n            if (!_userShare) {\n                _userShare = this.wallets[walletId].signer;\n            }\n            const recoveryShare = skipBiometricShareCreation\n                ? yield sendRecoveryForShare(this.ctx, this.userId, walletId, [], _userShare, false, this.getBackupKitEmailProps())\n                : yield distributeNewShare(this.ctx, this.userId, walletId, _userShare, false, this.getBackupKitEmailProps());\n            return recoveryShare;\n        });\n    }\n    waitForWalletAddress(walletId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let maxPolls = 0;\n            while (true) {\n                try {\n                    if (maxPolls === 10) {\n                        break;\n                    }\n                    ++maxPolls;\n                    const res = yield this.ctx.capsuleClient.getWallets(this.userId);\n                    const wallet = res.data.wallets.find((w) => w.id === walletId);\n                    if (wallet && wallet.address) {\n                        return;\n                    }\n                    yield new Promise((resolve) => setTimeout(resolve, SHORT_POLLING_INTERVAL_MS));\n                }\n                catch (err) {\n                    // want to continue polling on error\n                    console.error(err);\n                }\n            }\n            throw new Error('timed out waiting for wallet address');\n        });\n    }\n    /**\n     * Waits for a pregen wallet address to be created.\n     *\n     * @param pregenIdentifier - the identifier of the user the pregen wallet is associated with.\n     * @param walletId - the wallet id\n     * @param pregenIdentifierType - the identifier type of the user the pregen wallet is associated with.\n     * @returns - recovery share.\n     **/\n    waitForPregenWalletAddress(pregenIdentifier, pregenIdentifierType = PregenIdentifierType.EMAIL, walletId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let maxPolls = 0;\n            while (true) {\n                try {\n                    if (maxPolls === 10) {\n                        break;\n                    }\n                    ++maxPolls;\n                    const res = yield this.ctx.capsuleClient.getPregenWallets(pregenIdentifier, pregenIdentifierType);\n                    const wallet = res.wallets.find((w) => w.id === walletId);\n                    if (wallet && wallet.address) {\n                        return;\n                    }\n                    yield new Promise((resolve) => setTimeout(resolve, SHORT_POLLING_INTERVAL_MS));\n                }\n                catch (err) {\n                    // want to continue polling on error\n                    console.error(err);\n                }\n            }\n            throw new Error('timed out waiting for wallet address');\n        });\n    }\n    createWalletPerMissingType(skipDistribute = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wallets = [];\n            let recoverySecret;\n            if (Object.keys(this.wallets).length === 0 && this.supportedWalletTypes.includes(WalletType.EVM)) {\n                const [evmWallet, evmSecret] = yield this.createWallet(skipDistribute);\n                wallets.push(evmWallet);\n                if (evmSecret) {\n                    recoverySecret = evmSecret;\n                }\n            }\n            if (Object.keys(this.ed25519Wallets).length === 0 && this.supportedWalletTypes.includes(WalletType.SOLANA)) {\n                const [ed25519Wallet, ed25519Secret] = yield this.createWallet(skipDistribute, undefined, true);\n                wallets.push(ed25519Wallet);\n                if (ed25519Secret) {\n                    recoverySecret = ed25519Secret;\n                }\n            }\n            return { wallets, recoverySecret };\n        });\n    }\n    /**\n     * Creates a new wallet.\n     *\n     * @param skipDistribute - if true, recovery share will not be distributed.\n     * @param [customFunction] - {deprecated} method called when createWallet is done.\n     * @returns [wallet, recoveryShare]\n     **/\n    createWallet(skipDistribute = false, _customFunction, useED25519) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.requireApiKey();\n            let signer;\n            let wallet;\n            if (useED25519) {\n                const keygenRes = yield this.platformUtils.ed25519Keygen(this.ctx, this.userId, this.retrieveSessionCookie(), this.getBackupKitEmailProps());\n                const walletId = keygenRes.walletId;\n                signer = keygenRes.signer;\n                this.ed25519Wallets[walletId] = {\n                    id: walletId,\n                    signer,\n                };\n                wallet = this.ed25519Wallets[walletId];\n            }\n            else {\n                const keygenRes = yield this.platformUtils.keygen(this.ctx, this.userId, null, this.retrieveSessionCookie(), this.getBackupKitEmailProps());\n                const walletId = keygenRes.walletId;\n                signer = keygenRes.signer;\n                this.wallets[walletId] = {\n                    id: walletId,\n                    signer,\n                };\n                wallet = this.wallets[walletId];\n            }\n            yield this.waitForWalletAddress(wallet.id);\n            yield this.populateWalletAddresses();\n            let recoveryShare = null;\n            if (!skipDistribute) {\n                recoveryShare = yield distributeNewShare(this.ctx, this.userId, wallet.id, signer, false, this.getBackupKitEmailProps());\n            }\n            return [wallet, recoveryShare];\n        });\n    }\n    /**\n     * Creates a new pregenerated wallet.\n     *\n     * @param pregenIdentifier - string\n     * @param pregenIdentifierType - PregenIdentifierType\n     * @returns [wallet, recoveryShare]\n     **/\n    createWalletPreGen(pregenIdentifier, useSolana, pregenIdentifierType = PregenIdentifierType.EMAIL) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.requireApiKey();\n            let walletId;\n            if (useSolana) {\n                const { signer, walletId: newWalletId } = yield this.platformUtils.ed25519PreKeygen(this.ctx, pregenIdentifier, pregenIdentifierType, this.retrieveSessionCookie());\n                walletId = newWalletId;\n                this.ed25519Wallets[walletId] = {\n                    id: walletId,\n                    signer,\n                };\n            }\n            else {\n                const { signer, walletId: newWalletId } = yield this.platformUtils.preKeygen(this.ctx, undefined, pregenIdentifier, pregenIdentifierType, null, this.retrieveSessionCookie());\n                walletId = newWalletId;\n                this.wallets[walletId] = {\n                    id: walletId,\n                    signer,\n                };\n            }\n            yield this.waitForPregenWalletAddress(pregenIdentifier, pregenIdentifierType, walletId);\n            yield this.populatePregenWalletAddresses(pregenIdentifier, pregenIdentifierType);\n            return useSolana ? this.ed25519Wallets[walletId] : this.wallets[walletId];\n        });\n    }\n    /**\n     * Claims a pregenerated wallet.\n     *\n     * @param pregenIdentifier string the identifier of the user claiming the wallet\n     * @param pregenIdentifierType type of the identifier of the user claiming the wallet\n     * @returns [wallet, recoveryShare]\n     **/\n    claimPregenWallets(pregenIdentifier, pregenIdentifierType = PregenIdentifierType.EMAIL) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.requireApiKey();\n            if (pregenIdentifierType === PregenIdentifierType.EMAIL) {\n                const userExist = yield this.checkIfUserExists(pregenIdentifier);\n                if (!userExist) {\n                    throw new Error('user does not exist');\n                }\n            }\n            else {\n                const phoneNumber = parsePhoneNumberFromString(pregenIdentifier);\n                const number = phoneNumber.formatNational();\n                const countryCallingCode = `+${phoneNumber.countryCallingCode}`;\n                const userExist = yield this.checkIfUserExistsByPhone(number, countryCallingCode);\n                if (!userExist) {\n                    throw new Error('user does not exist');\n                }\n            }\n            // This function gets pregen wallets by email and partnerId\n            const res = yield this.ctx.capsuleClient.getPregenWallets(pregenIdentifier, pregenIdentifierType);\n            if (res.wallets.length === 0) {\n                throw new Error('wallets not found');\n            }\n            let recoverySecret;\n            for (const wallet of res.wallets) {\n                yield this.ctx.capsuleClient.claimPregenWallet({ userId: this.userId, walletId: wallet.id });\n                const signer = wallet.scheme === WalletScheme.ED25519 ? this.ed25519Wallets[wallet.id].signer : this.wallets[wallet.id].signer;\n                const recoveryShare = yield distributeNewShare(this.ctx, this.userId, wallet.id, signer, false, this.getBackupKitEmailProps());\n                if (recoveryShare) {\n                    recoverySecret = recoveryShare;\n                }\n                if (wallet.scheme === WalletScheme.ED25519) {\n                    this.ed25519Wallets[wallet.id].userId = this.userId;\n                    yield this.setEd25519Wallets(this.ed25519Wallets);\n                }\n                else {\n                    this.wallets[wallet.id].userId = this.userId;\n                    yield this.setWallets(this.wallets);\n                }\n            }\n            return recoverySecret;\n        });\n    }\n    /**\n     * Updates a pregenerated wallet identifier.\n     *\n     * @param newIdentifier - string\n     * @param walletId - string\n     * @returns Promise<void>\n     **/\n    updateWalletIdentifierPreGen(newIdentifier, walletId, type = PregenIdentifierType.EMAIL) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.requireApiKey();\n            const currentWalletId = walletId || Object.keys(this.wallets)[0];\n            yield this.ctx.capsuleClient.updatePregenWallet(currentWalletId, {\n                pregenIdentifier: newIdentifier,\n                pregenIdentifierType: type,\n            });\n        });\n    }\n    /**\n     * Checks if Pregen Wallet exists for the identifier and partnerId\n     *\n     * @param pregenIdentifier string the identifier of the user claiming the wallet\n     * @param pregenIdentifierType type of the string of the identifier of the user claiming the wallet\n     * @returns Promise<boolean>\n     **/\n    hasPregenWallet(pregenIdentifier, pregenIdentifierType = PregenIdentifierType.EMAIL) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.requireApiKey();\n            // This function gets pregen wallets by identifier and partnerId\n            const res = yield this.ctx.capsuleClient.getPregenWallets(pregenIdentifier, pregenIdentifierType);\n            const wallet = res.wallets[0];\n            if (!wallet) {\n                return false;\n            }\n            return true;\n        });\n    }\n    /**\n     * Get pregen wallets for the identifier\n     *\n     * @param {string} pregenIdentifier - the identifier of the user claiming the wallet\n     * @param {PregenIdentifierType} pregenIdentifierType - type of the identifier of the user claiming the wallet\n     * @returns {Promise<WalletEntity[]>} Promise of pregen wallets\n     **/\n    getPregenWallets(pregenIdentifier, pregenIdentifierType = PregenIdentifierType.EMAIL) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.requireApiKey();\n            const res = yield this.ctx.capsuleClient.getPregenWallets(pregenIdentifier, pregenIdentifierType);\n            return res.wallets;\n        });\n    }\n    encodeWalletBase64(wallet) {\n        const walletJson = JSON.stringify(wallet);\n        const base64Wallet = Buffer.from(walletJson).toString('base64');\n        return base64Wallet;\n    }\n    /**\n     * Returns a base64 encoded wallet\n     *\n     * @returns string base64 encoded wallet\n     **/\n    getUserShare() {\n        const wallet = Object.values(this.wallets)[0];\n        const ed25519Wallet = Object.values(this.ed25519Wallets)[0];\n        if (wallet && ed25519Wallet) {\n            return `${this.encodeWalletBase64(wallet)}-${this.encodeWalletBase64(ed25519Wallet)}`;\n        }\n        else if (wallet || ed25519Wallet) {\n            return this.encodeWalletBase64(wallet || ed25519Wallet);\n        }\n        else {\n            return null;\n        }\n    }\n    /**\n     * Sets a wallet from a base 64 encoded wallet\n     *\n     * @param base64Wallet\n     * @returns Promise<void>\n     **/\n    setUserShare(base64Wallets) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const base64WalletsSplit = base64Wallets.split('-');\n            for (const base64Wallet of base64WalletsSplit) {\n                const walletJson = Buffer.from(base64Wallet, 'base64').toString();\n                const wallet = JSON.parse(walletJson);\n                if (wallet.scheme === WalletScheme.ED25519) {\n                    this.ed25519Wallets[wallet.id] = wallet;\n                    yield this.setEd25519Wallets(this.ed25519Wallets);\n                }\n                else {\n                    this.wallets[wallet.id] = wallet;\n                    yield this.setWallets(this.wallets);\n                }\n            }\n        });\n    }\n    getTransactionReviewUrl(transactionId) {\n        return `${getPortalBaseURL(this.ctx)}/web/users/${this.userId}/transaction-review/${transactionId}?email=${encodeURIComponent(this.email)}`;\n    }\n    /**\n     * Signs a message.\n     *\n     * If you want to sign the keccak256 hash of a message, hash the\n     * message first and then pass in the base64 encoded hash.\n     * @param walletId - id of the wallet to sign with.\n     * @param messageBase64 - base64 encoding of exact message that should be signed\n     **/\n    signMessage(walletId, messageBase64) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wallet = this.wallets[walletId] || this.ed25519Wallets[walletId];\n            let signerId = this.userId;\n            if (wallet.partnerId && !wallet.userId) {\n                signerId = wallet.partnerId;\n            }\n            if (wallet.scheme === WalletScheme.ED25519) {\n                const res = yield this.platformUtils.ed25519Sign(this.ctx, signerId, walletId, wallet.signer, messageBase64, this.retrieveSessionCookie());\n                if (res.pendingTransactionId) {\n                    return Object.assign(Object.assign({}, res), { transactionReviewUrl: this.getTransactionReviewUrl(res.pendingTransactionId) });\n                }\n                return res;\n            }\n            const res = yield this.platformUtils.signMessage(this.ctx, signerId, walletId, this.wallets[walletId].signer, messageBase64, this.retrieveSessionCookie(), wallet.scheme === WalletScheme.DKLS);\n            if (res.pendingTransactionId) {\n                return Object.assign(Object.assign({}, res), { transactionReviewUrl: this.getTransactionReviewUrl(res.pendingTransactionId) });\n            }\n            return res;\n        });\n    }\n    /**\n     * Signs a transaction.\n     * @param walletId - id of the wallet to sign the transaction from.\n     * @param rlpEncodedTxBase64 - rlp encoded tx as base64 string\n     * @param chainId - chain id of the chain the transaction is being sent on.\n     **/\n    signTransaction(walletId, rlpEncodedTxBase64, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wallet = this.wallets[walletId];\n            let signerId = this.userId;\n            if (wallet.partnerId && !wallet.userId) {\n                signerId = wallet.partnerId;\n            }\n            const res = yield this.platformUtils.signTransaction(this.ctx, signerId, walletId, this.wallets[walletId].signer, rlpEncodedTxBase64, chainId, this.retrieveSessionCookie(), wallet.scheme === WalletScheme.DKLS);\n            if (res.pendingTransactionId) {\n                return Object.assign(Object.assign({}, res), { transactionReviewUrl: this.getTransactionReviewUrl(res.pendingTransactionId) });\n            }\n            return res;\n        });\n    }\n    /**\n     * Sends a transaction.\n     * @param walletId - id of the wallet to send the transaction from.\n     * @param rlpEncodedTxBase64 - rlp encoded tx as base64 string\n     * @param chainId - chain id of the chain the transaction is being sent on.\n     **/\n    sendTransaction(walletId, rlpEncodedTxBase64, chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const wallet = this.wallets[walletId];\n            const res = yield this.platformUtils.sendTransaction(this.ctx, this.userId, walletId, this.wallets[walletId].signer, rlpEncodedTxBase64, chainId, this.retrieveSessionCookie(), wallet.scheme === WalletScheme.DKLS);\n            if (res.pendingTransactionId) {\n                return Object.assign(Object.assign({}, res), { transactionReviewUrl: this.getTransactionReviewUrl(res.pendingTransactionId) });\n            }\n            return res;\n        });\n    }\n    isProviderModalDisabled() {\n        return !!this.disableProviderModal;\n    }\n    /**\n     * Initiate a new on-ramp purchase through the Capsule modal.\n     *\n     * @param provider - one of `RAMP` or `STRIPE`.\n     * @param asset - the on-chain asset to purchase, one of `USDC` or `ETH`\n     * @param testMode - if `true`, the purchase involves test-net assets only\n     * @returns - the created purchase object\n     **/\n    createOnRampPurchase(provider, network, asset, testMode = false, walletId = Object.keys(this.wallets)[0]) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.ctx.capsuleClient.createOnRampPurchase(this.getUserId(), walletId, getProvider(provider), getNetwork(network), getAsset(asset), testMode);\n            return res.data;\n        });\n    }\n    /**\n     * Update an on-ramp purchase.\n     *\n     * @param walletId - the uuid of the desired purchase's associated wallet\n     * @param purchaseId - the uuid of the desired purchase\n     * @param updates - the updates to apply, limited to `status`, `fiatCurrency`, `fiatQuantity`, `asset`', `assetQuantity`', and `providerKey``\n     * @returns - the updated purchase object\n     **/\n    updateOnRampPurchase(walletId, purchaseId, updates) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.ctx.capsuleClient.updateOnRampPurchase(this.getUserId(), walletId, purchaseId, updates);\n            return res.data;\n        });\n    }\n    /**\n     * Retrieve a desired on-ramp purchase.\n     *\n     * @param walletId - the ID of the purchase's wallet.\n     * @param purchaseId - the purchase ID to retrieve.\n     * @returns - the purchase object\n     **/\n    getOnRampPurchase(walletId, purchaseId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.ctx.capsuleClient.getOnRampPurchase(this.getUserId(), walletId, purchaseId);\n            return res.data;\n        });\n    }\n    /**\n     * Returns true if session was successfully kept alive, false otherwise.\n     **/\n    keepSessionAlive() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.ctx.capsuleClient.keepSessionAlive(this.userId);\n                return true;\n            }\n            catch (err) {\n                return false;\n            }\n        });\n    }\n    exportSession() {\n        const sessionInfo = {\n            email: this.email,\n            userId: this.userId,\n            wallets: this.wallets,\n            ed25519Wallets: this.ed25519Wallets,\n            sessionCookie: this.sessionCookie,\n        };\n        return Buffer.from(JSON.stringify(sessionInfo)).toString('base64');\n    }\n    importSession(serializedInstanceBase64) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const serializedInstance = Buffer.from(serializedInstanceBase64, 'base64').toString('utf8');\n            const sessionInfo = JSON.parse(serializedInstance);\n            yield this.setEmail(sessionInfo.email);\n            yield this.setUserId(sessionInfo.userId);\n            yield this.setWallets(sessionInfo.wallets);\n            yield this.setEd25519Wallets(sessionInfo.ed25519Wallets);\n            this.persistSessionCookie(sessionInfo.sessionCookie);\n        });\n    }\n    /**\n     * Logs the user out.\n     *\n     * @param preservePregenWallets - preserves the stored pregen wallets in memory after the logout.\n     **/\n    logout(preservePregenWallets) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ctx.capsuleClient.logout();\n            yield this.clearStorage();\n            if (preservePregenWallets) {\n                const allWallets = Object.assign(Object.assign({}, this.wallets), this.ed25519Wallets);\n                Object.entries(allWallets).forEach(([id, wallet]) => {\n                    if (wallet.type !== WalletType.PREGEN) {\n                        wallet.scheme === WalletScheme.ED25519 ? delete this.ed25519Wallets[id] : delete this.wallets[id];\n                    }\n                });\n                yield this.setWallets(this.wallets);\n                yield this.setEd25519Wallets(this.ed25519Wallets);\n            }\n            else {\n                this.wallets = {};\n                this.ed25519Wallets = {};\n            }\n            this.loginEncryptionKeyPair = undefined;\n            this.email = undefined;\n            this.userId = undefined;\n            this.sessionCookie = undefined;\n        });\n    }\n    /**\n     * Converts to a string, removing sensitive data when logging this class.\n     *\n     * Doesn't work for all types of logging.\n     **/\n    toString() {\n        const redactedWallets = Object.keys(this.wallets).reduce((acc, walletId) => (Object.assign(Object.assign({}, acc), { [walletId]: {\n                id: walletId,\n                address: this.wallets[walletId].address,\n                signer: this.wallets[walletId].signer ? '[REDACTED]' : undefined,\n            } })), {});\n        const obj = {\n            email: this.email,\n            userId: this.userId,\n            wallets: redactedWallets,\n            loginEncryptionKeyPair: this.loginEncryptionKeyPair ? '[REDACTED]' : undefined,\n        };\n        return `Capsule ${JSON.stringify(obj)}`;\n    }\n}\n","export * from './definitions.js';\nexport * from './types/index.js';\nexport { distributeNewShare } from './shares/shareDistribution.js';\nexport { KeyContainer } from './shares/KeyContainer.js';\nimport { CoreCapsule, PREFIX as STORAGE_PREFIX, PregenIdentifierType } from './CoreCapsule.js';\nexport { RecoveryStatus, WalletType } from './CoreCapsule.js';\nexport { initClient } from './external/capsuleClient.js';\nimport * as mpcComputationClient_1 from './external/mpcComputationClient.js';\nexport { mpcComputationClient_1 as mpcComputationClient };\nexport { getBaseUrl } from './external/capsuleClient.js';\nexport { decryptWithKeyPair, decryptWithPrivateKey, getAsymmetricKeyPair, getPublicKeyHex, encryptWithDerivedPublicKey, encodePrivateKeyToPemHex, getDerivedPrivateKeyAndDecrypt, getPublicKeyFromSignature, getSHA256HashHex, encryptPrivateKey, decryptPrivateKey, decryptPrivateKeyAndDecryptShare, } from './cryptography/utils.js';\nexport * from './external/capsuleClient.js';\nexport * from './utils/pollingUtils.js';\nexport * from './errors.js';\nexport * from './utils/formattingUtils.js';\nexport { retrieve as transmissionUtilsRetrieve } from './transmission/transmissionUtils.js';\nexport { STORAGE_PREFIX, PregenIdentifierType };\nexport { EmailTheme } from '@usecapsule/user-management-client';\nexport default CoreCapsule;\n","/**\n * Implements `StorageUtils` using `localStorage`.\n */\nexport class LocalStorage {\n    constructor() {\n        this.get = (key) => {\n            if (typeof window !== 'undefined') {\n                return localStorage.getItem(key) || null;\n            }\n            return null;\n        };\n        this.set = (key, value) => {\n            if (typeof window !== 'undefined') {\n                localStorage.setItem(key, value);\n            }\n        };\n        this.removeItem = (key) => {\n            if (typeof window !== 'undefined') {\n                localStorage.removeItem(key);\n            }\n        };\n        this.clear = (prefix) => {\n            if (typeof window !== 'undefined') {\n                for (let i = 0; i < localStorage.length; i++) {\n                    const key = localStorage.key(i);\n                    if (key && key.startsWith(prefix)) {\n                        localStorage.removeItem(key);\n                        i--;\n                    }\n                }\n            }\n        };\n    }\n}\n","/**\n * Implements `StorageUtils` using `sessionStorage`.\n *\n * This class will eventually not be exported and should not be used\n * by consumers of the library.\n * @internal\n */\nexport class SessionStorage {\n    constructor() {\n        this.get = (key) => {\n            if (typeof window !== 'undefined') {\n                return sessionStorage.getItem(key) || null;\n            }\n            return null;\n        };\n        this.set = (key, value) => {\n            if (typeof window !== 'undefined') {\n                sessionStorage.setItem(key, value);\n            }\n        };\n        this.removeItem = (key) => {\n            if (typeof window !== 'undefined') {\n                sessionStorage.removeItem(key);\n            }\n        };\n        this.clear = (prefix) => {\n            if (typeof window !== 'undefined') {\n                for (let i = 0; i < sessionStorage.length; i++) {\n                    const key = sessionStorage.key(i);\n                    if (key && key.startsWith(prefix)) {\n                        sessionStorage.removeItem(key);\n                        i--;\n                    }\n                }\n            }\n        };\n    }\n}\n","// Copyright 2018 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n(() => {\n    const enosys = () => {\n        const err = new Error(\"not implemented\");\n        err.code = \"ENOSYS\";\n        return err;\n    };\n    if (!globalThis.fs) {\n        let outputBuf = \"\";\n        globalThis.fs = {\n            constants: { O_WRONLY: -1, O_RDWR: -1, O_CREAT: -1, O_TRUNC: -1, O_APPEND: -1, O_EXCL: -1 },\n            writeSync(fd, buf) {\n                outputBuf += decoder.decode(buf);\n                const nl = outputBuf.lastIndexOf(\"\\n\");\n                if (nl != -1) {\n                    console.log(outputBuf.substring(0, nl));\n                    outputBuf = outputBuf.substring(nl + 1);\n                }\n                return buf.length;\n            },\n            write(fd, buf, offset, length, position, callback) {\n                if (offset !== 0 || length !== buf.length || position !== null) {\n                    callback(enosys());\n                    return;\n                }\n                const n = this.writeSync(fd, buf);\n                callback(null, n);\n            },\n            chmod(path, mode, callback) { callback(enosys()); },\n            chown(path, uid, gid, callback) { callback(enosys()); },\n            close(fd, callback) { callback(enosys()); },\n            fchmod(fd, mode, callback) { callback(enosys()); },\n            fchown(fd, uid, gid, callback) { callback(enosys()); },\n            fstat(fd, callback) { callback(enosys()); },\n            fsync(fd, callback) { callback(null); },\n            ftruncate(fd, length, callback) { callback(enosys()); },\n            lchown(path, uid, gid, callback) { callback(enosys()); },\n            link(path, link, callback) { callback(enosys()); },\n            lstat(path, callback) { callback(enosys()); },\n            mkdir(path, perm, callback) { callback(enosys()); },\n            open(path, flags, mode, callback) { callback(enosys()); },\n            read(fd, buffer, offset, length, position, callback) { callback(enosys()); },\n            readdir(path, callback) { callback(enosys()); },\n            readlink(path, callback) { callback(enosys()); },\n            rename(from, to, callback) { callback(enosys()); },\n            rmdir(path, callback) { callback(enosys()); },\n            stat(path, callback) { callback(enosys()); },\n            symlink(path, link, callback) { callback(enosys()); },\n            truncate(path, length, callback) { callback(enosys()); },\n            unlink(path, callback) { callback(enosys()); },\n            utimes(path, atime, mtime, callback) { callback(enosys()); },\n        };\n    }\n    if (!globalThis.process) {\n        globalThis.process = {\n            getuid() { return -1; },\n            getgid() { return -1; },\n            geteuid() { return -1; },\n            getegid() { return -1; },\n            getgroups() { throw enosys(); },\n            pid: -1,\n            ppid: -1,\n            umask() { throw enosys(); },\n            cwd() { throw enosys(); },\n            chdir() { throw enosys(); },\n        };\n    }\n    if (!globalThis.crypto) {\n        throw new Error(\"globalThis.crypto is not available, polyfill required (crypto.getRandomValues only)\");\n    }\n    if (!globalThis.performance) {\n        globalThis.performance = Date;\n    }\n    if (!globalThis.TextEncoder) {\n        throw new Error(\"globalThis.TextEncoder is not available, polyfill required\");\n    }\n    if (!globalThis.TextDecoder) {\n        throw new Error(\"globalThis.TextDecoder is not available, polyfill required\");\n    }\n    const encoder = new TextEncoder(\"utf-8\");\n    const decoder = new TextDecoder(\"utf-8\");\n    globalThis.Go = class {\n        constructor() {\n            this.argv = [\"js\"];\n            this.env = {};\n            this.exit = (code) => {\n                if (code !== 0) {\n                    console.warn(\"exit code:\", code);\n                }\n            };\n            this._exitPromise = new Promise((resolve) => {\n                this._resolveExitPromise = resolve;\n            });\n            this._pendingEvent = null;\n            this._scheduledTimeouts = new Map();\n            this._nextCallbackTimeoutID = 1;\n            const setInt64 = (addr, v) => {\n                this.mem.setUint32(addr + 0, v, true);\n                this.mem.setUint32(addr + 4, Math.floor(v / 4294967296), true);\n            };\n            const setInt32 = (addr, v) => {\n                this.mem.setUint32(addr + 0, v, true);\n            };\n            const getInt64 = (addr) => {\n                const low = this.mem.getUint32(addr + 0, true);\n                const high = this.mem.getInt32(addr + 4, true);\n                return low + high * 4294967296;\n            };\n            const loadValue = (addr) => {\n                const f = this.mem.getFloat64(addr, true);\n                if (f === 0) {\n                    return undefined;\n                }\n                if (!isNaN(f)) {\n                    return f;\n                }\n                const id = this.mem.getUint32(addr, true);\n                return this._values[id];\n            };\n            const storeValue = (addr, v) => {\n                const nanHead = 0x7FF80000;\n                if (typeof v === \"number\" && v !== 0) {\n                    if (isNaN(v)) {\n                        this.mem.setUint32(addr + 4, nanHead, true);\n                        this.mem.setUint32(addr, 0, true);\n                        return;\n                    }\n                    this.mem.setFloat64(addr, v, true);\n                    return;\n                }\n                if (v === undefined) {\n                    this.mem.setFloat64(addr, 0, true);\n                    return;\n                }\n                let id = this._ids.get(v);\n                if (id === undefined) {\n                    id = this._idPool.pop();\n                    if (id === undefined) {\n                        id = this._values.length;\n                    }\n                    this._values[id] = v;\n                    this._goRefCounts[id] = 0;\n                    this._ids.set(v, id);\n                }\n                this._goRefCounts[id]++;\n                let typeFlag = 0;\n                switch (typeof v) {\n                    case \"object\":\n                        if (v !== null) {\n                            typeFlag = 1;\n                        }\n                        break;\n                    case \"string\":\n                        typeFlag = 2;\n                        break;\n                    case \"symbol\":\n                        typeFlag = 3;\n                        break;\n                    case \"function\":\n                        typeFlag = 4;\n                        break;\n                }\n                this.mem.setUint32(addr + 4, nanHead | typeFlag, true);\n                this.mem.setUint32(addr, id, true);\n            };\n            const loadSlice = (addr) => {\n                const array = getInt64(addr + 0);\n                const len = getInt64(addr + 8);\n                return new Uint8Array(this._inst.exports.mem.buffer, array, len);\n            };\n            const loadSliceOfValues = (addr) => {\n                const array = getInt64(addr + 0);\n                const len = getInt64(addr + 8);\n                const a = new Array(len);\n                for (let i = 0; i < len; i++) {\n                    a[i] = loadValue(array + i * 8);\n                }\n                return a;\n            };\n            const loadString = (addr) => {\n                const saddr = getInt64(addr + 0);\n                const len = getInt64(addr + 8);\n                return decoder.decode(new DataView(this._inst.exports.mem.buffer, saddr, len));\n            };\n            const timeOrigin = Date.now() - performance.now();\n            this.importObject = {\n                _gotest: {\n                    add: (a, b) => a + b,\n                },\n                gojs: {\n                    // Go's SP does not change as long as no Go code is running. Some operations (e.g. calls, getters and setters)\n                    // may synchronously trigger a Go event handler. This makes Go code get executed in the middle of the imported\n                    // function. A goroutine can switch to a new stack if the current stack is too small (see morestack function).\n                    // This changes the SP, thus we have to update the SP used by the imported function.\n                    // func wasmExit(code int32)\n                    \"runtime.wasmExit\": (sp) => {\n                        sp >>>= 0;\n                        const code = this.mem.getInt32(sp + 8, true);\n                        this.exited = true;\n                        delete this._inst;\n                        delete this._values;\n                        delete this._goRefCounts;\n                        delete this._ids;\n                        delete this._idPool;\n                        this.exit(code);\n                    },\n                    // func wasmWrite(fd uintptr, p unsafe.Pointer, n int32)\n                    \"runtime.wasmWrite\": (sp) => {\n                        sp >>>= 0;\n                        const fd = getInt64(sp + 8);\n                        const p = getInt64(sp + 16);\n                        const n = this.mem.getInt32(sp + 24, true);\n                        fs.writeSync(fd, new Uint8Array(this._inst.exports.mem.buffer, p, n));\n                    },\n                    // func resetMemoryDataView()\n                    \"runtime.resetMemoryDataView\": (sp) => {\n                        sp >>>= 0;\n                        this.mem = new DataView(this._inst.exports.mem.buffer);\n                    },\n                    // func nanotime1() int64\n                    \"runtime.nanotime1\": (sp) => {\n                        sp >>>= 0;\n                        setInt64(sp + 8, (timeOrigin + performance.now()) * 1000000);\n                    },\n                    // func walltime() (sec int64, nsec int32)\n                    \"runtime.walltime\": (sp) => {\n                        sp >>>= 0;\n                        const msec = (new Date).getTime();\n                        setInt64(sp + 8, msec / 1000);\n                        this.mem.setInt32(sp + 16, (msec % 1000) * 1000000, true);\n                    },\n                    // func scheduleTimeoutEvent(delay int64) int32\n                    \"runtime.scheduleTimeoutEvent\": (sp) => {\n                        sp >>>= 0;\n                        const id = this._nextCallbackTimeoutID;\n                        this._nextCallbackTimeoutID++;\n                        this._scheduledTimeouts.set(id, setTimeout(() => {\n                            this._resume();\n                            while (this._scheduledTimeouts.has(id)) {\n                                // for some reason Go failed to register the timeout event, log and try again\n                                // (temporary workaround for https://github.com/golang/go/issues/28975)\n                                console.warn(\"scheduleTimeoutEvent: missed timeout event\");\n                                this._resume();\n                            }\n                        }, getInt64(sp + 8)));\n                        this.mem.setInt32(sp + 16, id, true);\n                    },\n                    // func clearTimeoutEvent(id int32)\n                    \"runtime.clearTimeoutEvent\": (sp) => {\n                        sp >>>= 0;\n                        const id = this.mem.getInt32(sp + 8, true);\n                        clearTimeout(this._scheduledTimeouts.get(id));\n                        this._scheduledTimeouts.delete(id);\n                    },\n                    // func getRandomData(r []byte)\n                    \"runtime.getRandomData\": (sp) => {\n                        sp >>>= 0;\n                        crypto.getRandomValues(loadSlice(sp + 8));\n                    },\n                    // func finalizeRef(v ref)\n                    \"syscall/js.finalizeRef\": (sp) => {\n                        sp >>>= 0;\n                        const id = this.mem.getUint32(sp + 8, true);\n                        this._goRefCounts[id]--;\n                        if (this._goRefCounts[id] === 0) {\n                            const v = this._values[id];\n                            this._values[id] = null;\n                            this._ids.delete(v);\n                            this._idPool.push(id);\n                        }\n                    },\n                    // func stringVal(value string) ref\n                    \"syscall/js.stringVal\": (sp) => {\n                        sp >>>= 0;\n                        storeValue(sp + 24, loadString(sp + 8));\n                    },\n                    // func valueGet(v ref, p string) ref\n                    \"syscall/js.valueGet\": (sp) => {\n                        sp >>>= 0;\n                        const result = Reflect.get(loadValue(sp + 8), loadString(sp + 16));\n                        sp = this._inst.exports.getsp() >>> 0; // see comment above\n                        storeValue(sp + 32, result);\n                    },\n                    // func valueSet(v ref, p string, x ref)\n                    \"syscall/js.valueSet\": (sp) => {\n                        sp >>>= 0;\n                        Reflect.set(loadValue(sp + 8), loadString(sp + 16), loadValue(sp + 32));\n                    },\n                    // func valueDelete(v ref, p string)\n                    \"syscall/js.valueDelete\": (sp) => {\n                        sp >>>= 0;\n                        Reflect.deleteProperty(loadValue(sp + 8), loadString(sp + 16));\n                    },\n                    // func valueIndex(v ref, i int) ref\n                    \"syscall/js.valueIndex\": (sp) => {\n                        sp >>>= 0;\n                        storeValue(sp + 24, Reflect.get(loadValue(sp + 8), getInt64(sp + 16)));\n                    },\n                    // valueSetIndex(v ref, i int, x ref)\n                    \"syscall/js.valueSetIndex\": (sp) => {\n                        sp >>>= 0;\n                        Reflect.set(loadValue(sp + 8), getInt64(sp + 16), loadValue(sp + 24));\n                    },\n                    // func valueCall(v ref, m string, args []ref) (ref, bool)\n                    \"syscall/js.valueCall\": (sp) => {\n                        sp >>>= 0;\n                        try {\n                            const v = loadValue(sp + 8);\n                            const m = Reflect.get(v, loadString(sp + 16));\n                            const args = loadSliceOfValues(sp + 32);\n                            const result = Reflect.apply(m, v, args);\n                            sp = this._inst.exports.getsp() >>> 0; // see comment above\n                            storeValue(sp + 56, result);\n                            this.mem.setUint8(sp + 64, 1);\n                        }\n                        catch (err) {\n                            sp = this._inst.exports.getsp() >>> 0; // see comment above\n                            storeValue(sp + 56, err);\n                            this.mem.setUint8(sp + 64, 0);\n                        }\n                    },\n                    // func valueInvoke(v ref, args []ref) (ref, bool)\n                    \"syscall/js.valueInvoke\": (sp) => {\n                        sp >>>= 0;\n                        try {\n                            const v = loadValue(sp + 8);\n                            const args = loadSliceOfValues(sp + 16);\n                            const result = Reflect.apply(v, undefined, args);\n                            sp = this._inst.exports.getsp() >>> 0; // see comment above\n                            storeValue(sp + 40, result);\n                            this.mem.setUint8(sp + 48, 1);\n                        }\n                        catch (err) {\n                            sp = this._inst.exports.getsp() >>> 0; // see comment above\n                            storeValue(sp + 40, err);\n                            this.mem.setUint8(sp + 48, 0);\n                        }\n                    },\n                    // func valueNew(v ref, args []ref) (ref, bool)\n                    \"syscall/js.valueNew\": (sp) => {\n                        sp >>>= 0;\n                        try {\n                            const v = loadValue(sp + 8);\n                            const args = loadSliceOfValues(sp + 16);\n                            const result = Reflect.construct(v, args);\n                            sp = this._inst.exports.getsp() >>> 0; // see comment above\n                            storeValue(sp + 40, result);\n                            this.mem.setUint8(sp + 48, 1);\n                        }\n                        catch (err) {\n                            sp = this._inst.exports.getsp() >>> 0; // see comment above\n                            storeValue(sp + 40, err);\n                            this.mem.setUint8(sp + 48, 0);\n                        }\n                    },\n                    // func valueLength(v ref) int\n                    \"syscall/js.valueLength\": (sp) => {\n                        sp >>>= 0;\n                        setInt64(sp + 16, parseInt(loadValue(sp + 8).length));\n                    },\n                    // valuePrepareString(v ref) (ref, int)\n                    \"syscall/js.valuePrepareString\": (sp) => {\n                        sp >>>= 0;\n                        const str = encoder.encode(String(loadValue(sp + 8)));\n                        storeValue(sp + 16, str);\n                        setInt64(sp + 24, str.length);\n                    },\n                    // valueLoadString(v ref, b []byte)\n                    \"syscall/js.valueLoadString\": (sp) => {\n                        sp >>>= 0;\n                        const str = loadValue(sp + 8);\n                        loadSlice(sp + 16).set(str);\n                    },\n                    // func valueInstanceOf(v ref, t ref) bool\n                    \"syscall/js.valueInstanceOf\": (sp) => {\n                        sp >>>= 0;\n                        this.mem.setUint8(sp + 24, (loadValue(sp + 8) instanceof loadValue(sp + 16)) ? 1 : 0);\n                    },\n                    // func copyBytesToGo(dst []byte, src ref) (int, bool)\n                    \"syscall/js.copyBytesToGo\": (sp) => {\n                        sp >>>= 0;\n                        const dst = loadSlice(sp + 8);\n                        const src = loadValue(sp + 32);\n                        if (!(src instanceof Uint8Array || src instanceof Uint8ClampedArray)) {\n                            this.mem.setUint8(sp + 48, 0);\n                            return;\n                        }\n                        const toCopy = src.subarray(0, dst.length);\n                        dst.set(toCopy);\n                        setInt64(sp + 40, toCopy.length);\n                        this.mem.setUint8(sp + 48, 1);\n                    },\n                    // func copyBytesToJS(dst ref, src []byte) (int, bool)\n                    \"syscall/js.copyBytesToJS\": (sp) => {\n                        sp >>>= 0;\n                        const dst = loadValue(sp + 8);\n                        const src = loadSlice(sp + 16);\n                        if (!(dst instanceof Uint8Array || dst instanceof Uint8ClampedArray)) {\n                            this.mem.setUint8(sp + 48, 0);\n                            return;\n                        }\n                        const toCopy = src.subarray(0, dst.length);\n                        dst.set(toCopy);\n                        setInt64(sp + 40, toCopy.length);\n                        this.mem.setUint8(sp + 48, 1);\n                    },\n                    \"debug\": (value) => {\n                        console.log(value);\n                    },\n                }\n            };\n        }\n        run(instance) {\n            return __awaiter(this, void 0, void 0, function* () {\n                if (!(instance instanceof WebAssembly.Instance)) {\n                    throw new Error(\"Go.run: WebAssembly.Instance expected\");\n                }\n                this._inst = instance;\n                this.mem = new DataView(this._inst.exports.mem.buffer);\n                this._values = [\n                    NaN,\n                    0,\n                    null,\n                    true,\n                    false,\n                    globalThis,\n                    this,\n                ];\n                this._goRefCounts = new Array(this._values.length).fill(Infinity); // number of references that Go has to a JS value, indexed by reference id\n                this._ids = new Map([\n                    [0, 1],\n                    [null, 2],\n                    [true, 3],\n                    [false, 4],\n                    [globalThis, 5],\n                    [this, 6],\n                ]);\n                this._idPool = []; // unused ids that have been garbage collected\n                this.exited = false; // whether the Go program has exited\n                // Pass command line arguments and environment variables to WebAssembly by writing them to the linear memory.\n                let offset = 4096;\n                const strPtr = (str) => {\n                    const ptr = offset;\n                    const bytes = encoder.encode(str + \"\\0\");\n                    new Uint8Array(this.mem.buffer, offset, bytes.length).set(bytes);\n                    offset += bytes.length;\n                    if (offset % 8 !== 0) {\n                        offset += 8 - (offset % 8);\n                    }\n                    return ptr;\n                };\n                const argc = this.argv.length;\n                const argvPtrs = [];\n                this.argv.forEach((arg) => {\n                    argvPtrs.push(strPtr(arg));\n                });\n                argvPtrs.push(0);\n                const keys = Object.keys(this.env).sort();\n                keys.forEach((key) => {\n                    argvPtrs.push(strPtr(`${key}=${this.env[key]}`));\n                });\n                argvPtrs.push(0);\n                const argv = offset;\n                argvPtrs.forEach((ptr) => {\n                    this.mem.setUint32(offset, ptr, true);\n                    this.mem.setUint32(offset + 4, 0, true);\n                    offset += 8;\n                });\n                // The linker guarantees global data starts from at least wasmMinDataAddr.\n                // Keep in sync with cmd/link/internal/ld/data.go:wasmMinDataAddr.\n                const wasmMinDataAddr = 4096 + 8192;\n                if (offset >= wasmMinDataAddr) {\n                    throw new Error(\"total length of command line and environment variables exceeds limit\");\n                }\n                this._inst.exports.run(argc, argv);\n                if (this.exited) {\n                    this._resolveExitPromise();\n                }\n                yield this._exitPromise;\n            });\n        }\n        _resume() {\n            if (this.exited) {\n                throw new Error(\"Go program has already exited\");\n            }\n            this._inst.exports.resume();\n            if (this.exited) {\n                this._resolveExitPromise();\n            }\n        }\n        _makeFuncWrapper(id) {\n            const go = this;\n            return function () {\n                const event = { id: id, this: this, args: arguments };\n                go._pendingEvent = event;\n                go._resume();\n                return event.result;\n            };\n        }\n    };\n})();\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { SignatureScheme } from '@usecapsule/user-management-client';\nimport { getBaseMPCNetworkUrl } from '@usecapsule/core-sdk';\nconst configCGGMPBase = (serverUrl, walletId, id) => `{\"ServerUrl\":\"${serverUrl}\", \"WalletId\": \"${walletId}\", \"Id\":\"${id}\", \"Ids\":[\"USER\",\"CAPSULE\"], \"Threshold\":1}`;\nconst configDKLSBase = (walletId, id, disableWebSockets) => `{\"walletId\": \"${walletId}\", \"id\":\"${id}\", \"otherId\":\"CAPSULE\", \"isReceiver\": false, \"disableWebSockets\": ${disableWebSockets}}`;\nfunction keygenRequest(ctx, userId, walletId, protocolId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { data } = yield ctx.mpcComputationClient.post('/wallets', {\n            userId,\n            walletId,\n            protocolId,\n        });\n        return data;\n    });\n}\nfunction signMessageRequest(ctx, userId, walletId, protocolId, message, signer) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { data } = yield ctx.mpcComputationClient.post(`/wallets/${walletId}/messages/sign`, {\n            userId,\n            protocolId,\n            message,\n            signer,\n        });\n        return data;\n    });\n}\nfunction sendTransactionRequest(ctx, userId, walletId, protocolId, transaction, signer, chainId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { data } = yield ctx.mpcComputationClient.post(`/wallets/${walletId}/transactions/send`, {\n            userId,\n            protocolId,\n            transaction,\n            signer,\n            chainId,\n        });\n        return data;\n    });\n}\nexport function ed25519Keygen(ctx, userId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { walletId, protocolId } = yield ctx.capsuleClient.createWallet(userId, {\n            scheme: SignatureScheme.ED25519,\n        });\n        const serverUrl = getBaseMPCNetworkUrl(ctx.env, !ctx.disableWebSockets);\n        const newSigner = (yield new Promise((resolve, reject) => global.ed25519CreateAccount(serverUrl, walletId, protocolId, (err, result) => {\n            if (err) {\n                reject(err);\n            }\n            resolve(result);\n        })));\n        return { signer: newSigner, walletId };\n    });\n}\nexport function ed25519PreKeygen(ctx, pregenIdentifier, pregenIdentifierType) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { walletId, protocolId } = yield ctx.capsuleClient.createPregenWallet({\n            pregenIdentifier,\n            pregenIdentifierType,\n            scheme: SignatureScheme.ED25519,\n        });\n        const serverUrl = getBaseMPCNetworkUrl(ctx.env, !ctx.disableWebSockets);\n        const newSigner = (yield new Promise((resolve, reject) => global.ed25519CreateAccount(serverUrl, walletId, protocolId, (err, result) => {\n            if (err) {\n                reject(err);\n            }\n            resolve(result);\n        })));\n        return { signer: newSigner, walletId };\n    });\n}\nexport function ed25519Sign(ctx, share, userId, walletId, base64Bytes) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { protocolId } = yield ctx.capsuleClient.preSignMessage(userId, walletId, base64Bytes, SignatureScheme.ED25519);\n        const base64Sig = (yield new Promise((resolve, reject) => global.ed25519Sign(share, protocolId, base64Bytes, (err, result) => {\n            if (err) {\n                reject(err);\n            }\n            resolve(result);\n        })));\n        return { signature: base64Sig };\n    });\n}\nexport function keygen(ctx, userId, secretKey) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { walletId, protocolId } = yield ctx.capsuleClient.createWallet(userId, {\n            useTwoSigners: true,\n            scheme: ctx.useDKLS ? SignatureScheme.DKLS : SignatureScheme.CGGMP,\n        });\n        if (ctx.offloadMPCComputationURL && !ctx.useDKLS) {\n            return {\n                signer: (yield keygenRequest(ctx, userId, walletId, protocolId)).signer,\n                walletId,\n            };\n        }\n        const serverUrl = getBaseMPCNetworkUrl(ctx.env, !ctx.disableWebSockets);\n        const signerConfigUser = ctx.useDKLS\n            ? configDKLSBase(walletId, 'USER', ctx.disableWebSockets)\n            : configCGGMPBase(serverUrl, walletId, 'USER');\n        const createAccountFn = ctx.useDKLS ? global.dklsCreateAccount : global.createAccountV2;\n        const newSigner = (yield new Promise((resolve, reject) => createAccountFn(signerConfigUser, serverUrl, protocolId, secretKey, () => { }, // no-op for deprecated callback to update progress percentage\n        (err, result) => {\n            if (err) {\n                reject(err);\n            }\n            resolve(result);\n        })));\n        return { signer: newSigner, walletId };\n    });\n}\nexport function preKeygen(ctx, _partnerId, pregenIdentifier, pregenIdentifierType, secretKey) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { walletId, protocolId } = yield ctx.capsuleClient.createPregenWallet({ pregenIdentifier, pregenIdentifierType });\n        const serverUrl = getBaseMPCNetworkUrl(ctx.env, !ctx.disableWebSockets);\n        const signerConfigUser = configDKLSBase(walletId, 'USER', ctx.disableWebSockets);\n        const newSigner = (yield new Promise((resolve, reject) => global.dklsCreateAccount(signerConfigUser, serverUrl, protocolId, secretKey, () => { }, // no-op for deprecated callback to update progress percentage\n        (err, result) => {\n            if (err) {\n                reject(err);\n            }\n            resolve(result);\n        })));\n        return { signer: newSigner, walletId };\n    });\n}\nexport function signMessage(ctx, share, walletId, userId, message) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { protocolId, pendingTransactionId } = yield ctx.capsuleClient.preSignMessage(userId, walletId, message);\n        if (pendingTransactionId) {\n            console.error('sign message denied');\n            return { pendingTransactionId };\n        }\n        if (ctx.offloadMPCComputationURL && !ctx.useDKLS) {\n            return signMessageRequest(ctx, userId, walletId, protocolId, message, share);\n        }\n        const serverUrl = getBaseMPCNetworkUrl(ctx.env, !ctx.disableWebSockets);\n        const signMessageFn = ctx.useDKLS ? global.dklsSignMessage : global.signMessage;\n        const parsedShare = JSON.parse(share);\n        if (!parsedShare.disableWebSockets !== !ctx.disableWebSockets) {\n            parsedShare.disableWebSockets = ctx.disableWebSockets;\n        }\n        share = JSON.stringify(parsedShare);\n        return new Promise((resolve, reject) => signMessageFn(share, serverUrl, message, protocolId, (err, result) => {\n            if (err) {\n                reject(err);\n            }\n            resolve({ signature: result });\n        }));\n    });\n}\nexport function signTransaction(ctx, share, walletId, userId, tx, chainId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { data: { protocolId, pendingTransactionId }, } = yield ctx.capsuleClient.signTransaction(userId, walletId, { transaction: tx, chainId });\n        if (pendingTransactionId) {\n            console.error('send transaction denied');\n            return { pendingTransactionId };\n        }\n        if (ctx.offloadMPCComputationURL && !ctx.useDKLS) {\n            return sendTransactionRequest(ctx, userId, walletId, protocolId, tx, share, chainId);\n        }\n        const serverUrl = getBaseMPCNetworkUrl(ctx.env, !ctx.disableWebSockets);\n        const signTransactionFn = ctx.useDKLS ? global.dklsSendTransaction : global.sendTransaction;\n        const parsedShare = JSON.parse(share);\n        if (!parsedShare.disableWebSockets !== !ctx.disableWebSockets) {\n            parsedShare.disableWebSockets = ctx.disableWebSockets;\n        }\n        share = JSON.stringify(parsedShare);\n        return new Promise((resolve, reject) => signTransactionFn(share, serverUrl, tx, chainId, protocolId, (err, result) => {\n            if (err) {\n                reject(err);\n            }\n            resolve({ signature: result });\n        }));\n    });\n}\nexport function sendTransaction(ctx, share, walletId, userId, tx, chainId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { data: { protocolId, pendingTransactionId }, } = yield ctx.capsuleClient.sendTransaction(userId, walletId, { transaction: tx, chainId });\n        if (pendingTransactionId) {\n            console.error('send transaction denied');\n            return { pendingTransactionId };\n        }\n        if (ctx.offloadMPCComputationURL && !ctx.useDKLS) {\n            return sendTransactionRequest(ctx, userId, walletId, protocolId, tx, share, chainId);\n        }\n        const serverUrl = getBaseMPCNetworkUrl(ctx.env, !ctx.disableWebSockets);\n        const sendTransactionFn = ctx.useDKLS ? global.dklsSendTransaction : global.sendTransaction;\n        const parsedShare = JSON.parse(share);\n        if (!parsedShare.disableWebSockets !== !ctx.disableWebSockets) {\n            parsedShare.disableWebSockets = ctx.disableWebSockets;\n        }\n        share = JSON.stringify(parsedShare);\n        return new Promise((resolve, reject) => sendTransactionFn(share, serverUrl, tx, chainId, protocolId, (err, result) => {\n            if (err) {\n                reject(err);\n            }\n            resolve({ signature: result });\n        }));\n    });\n}\nexport function refresh(ctx, share, walletId, userId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { data: { protocolId }, } = yield ctx.capsuleClient.refreshKeys(userId, walletId);\n        const serverUrl = getBaseMPCNetworkUrl(ctx.env, !ctx.disableWebSockets);\n        const refreshFn = ctx.useDKLS ? global.dklsRefresh : global.refresh;\n        const parsedShare = JSON.parse(share);\n        if (!parsedShare.disableWebSockets !== !ctx.disableWebSockets) {\n            parsedShare.disableWebSockets = ctx.disableWebSockets;\n        }\n        share = JSON.stringify(parsedShare);\n        return new Promise((resolve, reject) => refreshFn(share, serverUrl, protocolId, (err, result) => {\n            if (err) {\n                reject(err);\n            }\n            resolve(result);\n        }));\n    });\n}\nexport function getPrivateKey(ctx, share, walletId, userId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const capsuleShare = yield ctx.capsuleClient.getCapsuleShare(userId, walletId);\n        if (!capsuleShare) {\n            return '';\n        }\n        return new Promise((resolve, reject) => global.getPrivateKey(share, capsuleShare, (err, result) => {\n            if (err) {\n                reject(err);\n            }\n            resolve(result);\n        }));\n    });\n}\n","// ANY CHANGES TO THIS FILE REQUIRE A REBUILD OF THE WORKER\n// FILE IN THE PORTAL!\n// run `yarn build` to rebuild the worker file\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport '../wasm/wasm_exec.js';\nimport * as walletUtils from './walletUtils.js';\nimport { PregenIdentifierType, getPortalBaseURL, initClient, mpcComputationClient, } from '@usecapsule/core-sdk';\nfunction loadWasm(ctx, wasmOverride) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // @ts-ignore\n        const goWasm = new self.Go();\n        let wasmArrayBuffer = wasmOverride;\n        if (!wasmArrayBuffer) {\n            if (process.env.DISABLE_WASM_FETCH === 'true') {\n                throw new Error('fetching wasm file is disabled');\n            }\n            const fetchedWasm = yield fetch(`${getPortalBaseURL(ctx)}/static/js/main.wasm`, { mode: 'cors' });\n            wasmArrayBuffer = yield fetchedWasm.arrayBuffer();\n        }\n        const newRes = yield WebAssembly.instantiate(wasmArrayBuffer, goWasm.importObject);\n        goWasm.run(newRes.instance);\n    });\n}\nfunction executeMessage(ctx, message) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { functionType, params } = message;\n        switch (functionType) {\n            case 'KEYGEN': {\n                const { userId, secretKey } = params;\n                const keygenRes = yield walletUtils.keygen(ctx, userId, secretKey);\n                return keygenRes;\n            }\n            case 'SIGN_TRANSACTION': {\n                const { share, walletId, userId, tx, chainId } = params;\n                return walletUtils.signTransaction(ctx, share, walletId, userId, tx, chainId);\n            }\n            case 'SEND_TRANSACTION': {\n                const { share, walletId, userId, tx, chainId } = params;\n                return walletUtils.sendTransaction(ctx, share, walletId, userId, tx, chainId);\n            }\n            case 'SIGN_MESSAGE': {\n                const { share, walletId, userId, message } = params;\n                return walletUtils.signMessage(ctx, share, walletId, userId, message);\n            }\n            case 'REFRESH': {\n                const { share, walletId, userId } = params;\n                return walletUtils.refresh(ctx, share, walletId, userId);\n            }\n            case 'PREKEYGEN': {\n                const { email, partnerId, secretKey } = params;\n                let { pregenIdentifier, pregenIdentifierType } = params;\n                if (email !== 'null' && email !== 'undefined' && email !== '' && email != null) {\n                    pregenIdentifier = email;\n                    pregenIdentifierType = PregenIdentifierType.EMAIL;\n                }\n                const keygenRes = yield walletUtils.preKeygen(ctx, partnerId, pregenIdentifier, pregenIdentifierType, secretKey);\n                return keygenRes;\n            }\n            case 'GET_PRIVATE_KEY': {\n                const { share, walletId, userId } = params;\n                return yield walletUtils.getPrivateKey(ctx, share, walletId, userId);\n            }\n            case 'ED25519_KEYGEN': {\n                const { userId } = params;\n                return walletUtils.ed25519Keygen(ctx, userId);\n            }\n            case 'ED25519_SIGN': {\n                const { share, walletId, userId, base64Bytes } = params;\n                return walletUtils.ed25519Sign(ctx, share, userId, walletId, base64Bytes);\n            }\n            case 'ED25519_PREKEYGEN': {\n                const { email } = params;\n                let { pregenIdentifier, pregenIdentifierType } = params;\n                if (email !== 'null' && email !== 'undefined' && email !== '' && email != null) {\n                    pregenIdentifier = email;\n                    pregenIdentifierType = PregenIdentifierType.EMAIL;\n                }\n                return walletUtils.ed25519PreKeygen(ctx, pregenIdentifier, pregenIdentifierType);\n            }\n            default: {\n                throw new Error(`functionType: ${functionType} not supported`);\n            }\n        }\n    });\n}\nexport function handleMessage(e, postMessage, useFetchAdapter) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { env, apiKey, offloadMPCComputationURL, disableWorkers, sessionCookie, useDKLS, disableWebSockets, wasmOverride } = e.data;\n        if (!env) {\n            // this means a message we didn't send was received and we want to ignore it\n            return true;\n        }\n        const ctx = {\n            env,\n            apiKey,\n            capsuleClient: initClient(env, apiKey, useFetchAdapter, () => sessionCookie),\n            offloadMPCComputationURL: offloadMPCComputationURL,\n            mpcComputationClient: offloadMPCComputationURL\n                ? mpcComputationClient.initClient(offloadMPCComputationURL, !!disableWorkers)\n                : undefined,\n            useDKLS,\n            disableWebSockets: !!disableWebSockets,\n            wasmOverride,\n        };\n        if (!ctx.offloadMPCComputationURL || ctx.useDKLS) {\n            yield loadWasm(ctx, wasmOverride);\n        }\n        const result = yield executeMessage(ctx, e.data);\n        postMessage(result);\n        return false;\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getPortalBaseURL } from '@usecapsule/core-sdk';\nimport { handleMessage } from './worker.js';\nexport function setupWorker(ctx, resFunction) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const onmessage = (event) => {\n            if (event.data.functionType === 'CUSTOM') {\n                // safe to remove this block once this code is live in prod!\n                return;\n            }\n            resFunction(event.data);\n        };\n        if (ctx.disableWorkers) {\n            const syncWorker = {\n                postMessage: function (message) {\n                    (function () {\n                        return __awaiter(this, void 0, void 0, function* () {\n                            yield handleMessage({ data: message }, (data) => onmessage({ data }), ctx.disableWorkers);\n                        });\n                    })();\n                },\n                terminate: () => {\n                    return;\n                },\n            };\n            return syncWorker;\n        }\n        let worker;\n        if (ctx.useLocalFiles) {\n            // worker = new Worker(new URL('./worker.js', import.meta.url));\n            throw new Error('useLocalFiles only supported locally');\n        }\n        else {\n            const workerRes = yield fetch(`${getPortalBaseURL(ctx)}/static/js/mpcWorker-bundle.js`);\n            const workerBlob = new Blob([yield workerRes.text()], { type: 'application/javascript' });\n            const workerScriptURL = URL.createObjectURL(workerBlob);\n            worker = new Worker(workerScriptURL);\n        }\n        worker.onmessage = onmessage;\n        return worker;\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nexport function waitUntilTrue(condition, timeoutMs, intervalMs) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const start = Date.now();\n        while (Date.now() - start < timeoutMs) {\n            if (yield condition()) {\n                return true;\n            }\n            yield new Promise((resolve) => setTimeout(resolve, intervalMs));\n        }\n        return false;\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { setupWorker } from '../workers/workerWrapper.js';\nimport { PregenIdentifierType } from '@usecapsule/core-sdk';\nimport { distributeNewShare, waitUntilTrue } from '@usecapsule/core-sdk';\nfunction isKeygenComplete(ctx, userId, walletId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const wallets = yield ctx.capsuleClient.getWallets(userId);\n        const wallet = wallets.data.wallets.find((w) => w.id === walletId);\n        return !!wallet.address;\n    });\n}\nfunction isPreKeygenComplete(ctx, pregenIdentifier, pregenIdentifierType, walletId) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const wallets = yield ctx.capsuleClient.getPregenWallets(pregenIdentifier, pregenIdentifierType);\n        const wallet = wallets.wallets.find((w) => w.id === walletId);\n        return !!wallet.address;\n    });\n}\nexport function keygen(ctx, userId, secretKey, skipDistribute = false, sessionCookie, emailProps = {}) {\n    return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n        const worker = yield setupWorker(ctx, (res) => __awaiter(this, void 0, void 0, function* () {\n            yield waitUntilTrue(() => __awaiter(this, void 0, void 0, function* () { return isKeygenComplete(ctx, userId, res.walletId); }), 15000, 1000);\n            if (skipDistribute) {\n                resolve({\n                    signer: res.signer,\n                    walletId: res.walletId,\n                    recoveryShare: null,\n                });\n                worker.terminate();\n                return;\n            }\n            const recoveryShare = yield distributeNewShare(ctx, userId, res.walletId, res.signer, false, emailProps);\n            resolve({\n                signer: res.signer,\n                walletId: res.walletId,\n                recoveryShare,\n            });\n            worker.terminate();\n        }));\n        worker.postMessage({\n            env: ctx.env,\n            apiKey: ctx.apiKey,\n            params: { userId, secretKey },\n            functionType: 'KEYGEN',\n            offloadMPCComputationURL: ctx.offloadMPCComputationURL,\n            disableWorkers: ctx.disableWorkers,\n            sessionCookie,\n            useDKLS: ctx.useDKLS,\n            disableWebSockets: ctx.disableWebSockets,\n            wasmOverride: ctx.wasmOverride,\n        });\n    }));\n}\nexport function preKeygen(ctx, pregenIdentifier, pregenIdentifierType, secretKey, _skipDistribute = false, partnerId, sessionCookie) {\n    return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n        const worker = yield setupWorker(ctx, (res) => __awaiter(this, void 0, void 0, function* () {\n            yield waitUntilTrue(() => __awaiter(this, void 0, void 0, function* () { return isPreKeygenComplete(ctx, pregenIdentifier, pregenIdentifierType, res.walletId); }), 15000, 1000);\n            resolve({\n                signer: res.signer,\n                walletId: res.walletId,\n                recoveryShare: null,\n            });\n            worker.terminate();\n        }));\n        const email = undefined;\n        const params = { pregenIdentifier, pregenIdentifierType, secretKey, partnerId, email };\n        if (pregenIdentifierType === PregenIdentifierType.EMAIL) {\n            params.email = pregenIdentifier;\n        }\n        worker.postMessage({\n            env: ctx.env,\n            apiKey: ctx.apiKey,\n            params: params,\n            functionType: 'PREKEYGEN',\n            offloadMPCComputationURL: ctx.offloadMPCComputationURL,\n            disableWorkers: ctx.disableWorkers,\n            sessionCookie,\n            useDKLS: ctx.useDKLS,\n            disableWebSockets: ctx.disableWebSockets,\n            wasmOverride: ctx.wasmOverride,\n        });\n    }));\n}\nexport function ed25519Keygen(ctx, userId, sessionCookie, _emailProps = {}) {\n    return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n        const worker = yield setupWorker(ctx, (res) => __awaiter(this, void 0, void 0, function* () {\n            yield waitUntilTrue(() => __awaiter(this, void 0, void 0, function* () { return isKeygenComplete(ctx, userId, res.walletId); }), 15000, 1000);\n            resolve({\n                signer: res.signer,\n                walletId: res.walletId,\n                recoveryShare: null,\n            });\n            worker.terminate();\n        }));\n        worker.postMessage({\n            env: ctx.env,\n            apiKey: ctx.apiKey,\n            params: { userId },\n            functionType: 'ED25519_KEYGEN',\n            disableWorkers: ctx.disableWorkers,\n            sessionCookie,\n            disableWebSockets: ctx.disableWebSockets,\n            wasmOverride: ctx.wasmOverride,\n        });\n    }));\n}\nexport function ed25519PreKeygen(ctx, pregenIdentifier, pregenIdentifierType, sessionCookie) {\n    return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n        const worker = yield setupWorker(ctx, (res) => __awaiter(this, void 0, void 0, function* () {\n            yield waitUntilTrue(() => __awaiter(this, void 0, void 0, function* () { return isPreKeygenComplete(ctx, pregenIdentifier, pregenIdentifierType, res.walletId); }), 15000, 1000);\n            resolve({\n                signer: res.signer,\n                walletId: res.walletId,\n                recoveryShare: null,\n            });\n            worker.terminate();\n        }));\n        const email = undefined;\n        const params = { pregenIdentifier, pregenIdentifierType, email };\n        if (pregenIdentifierType === PregenIdentifierType.EMAIL) {\n            params.email = pregenIdentifier;\n        }\n        worker.postMessage({\n            env: ctx.env,\n            apiKey: ctx.apiKey,\n            params: params,\n            functionType: 'ED25519_PREKEYGEN',\n            disableWorkers: ctx.disableWorkers,\n            sessionCookie,\n            disableWebSockets: ctx.disableWebSockets,\n            wasmOverride: ctx.wasmOverride,\n        });\n    }));\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { setupWorker } from '../workers/workerWrapper.js';\nexport function signTransaction(ctx, userId, walletId, share, tx, chainId, sessionCookie, isDKLS) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n            const worker = yield setupWorker(ctx, (sendTransactionRes) => __awaiter(this, void 0, void 0, function* () {\n                resolve(sendTransactionRes);\n                worker.terminate();\n            }));\n            worker.postMessage({\n                env: ctx.env,\n                apiKey: ctx.apiKey,\n                params: { share, walletId, userId, tx, chainId },\n                functionType: 'SIGN_TRANSACTION',\n                offloadMPCComputationURL: ctx.offloadMPCComputationURL,\n                disableWorkers: ctx.disableWorkers,\n                sessionCookie,\n                useDKLS: isDKLS,\n                disableWebSockets: ctx.disableWebSockets,\n                wasmOverride: ctx.wasmOverride,\n            });\n        }));\n    });\n}\nexport function sendTransaction(ctx, userId, walletId, share, tx, chainId, sessionCookie, isDKLS) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n            const worker = yield setupWorker(ctx, (sendTransactionRes) => __awaiter(this, void 0, void 0, function* () {\n                resolve(sendTransactionRes);\n                worker.terminate();\n            }));\n            worker.postMessage({\n                env: ctx.env,\n                apiKey: ctx.apiKey,\n                params: { share, walletId, userId, tx, chainId },\n                functionType: 'SEND_TRANSACTION',\n                offloadMPCComputationURL: ctx.offloadMPCComputationURL,\n                disableWorkers: ctx.disableWorkers,\n                sessionCookie,\n                useDKLS: isDKLS,\n                disableWebSockets: ctx.disableWebSockets,\n                wasmOverride: ctx.wasmOverride,\n            });\n        }));\n    });\n}\nexport function signMessage(ctx, userId, walletId, share, message, sessionCookie, isDKLS) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n            const worker = yield setupWorker(ctx, (signMessageRes) => __awaiter(this, void 0, void 0, function* () {\n                resolve(signMessageRes);\n                worker.terminate();\n            }));\n            worker.postMessage({\n                env: ctx.env,\n                apiKey: ctx.apiKey,\n                params: { share, walletId, userId, message },\n                functionType: 'SIGN_MESSAGE',\n                offloadMPCComputationURL: ctx.offloadMPCComputationURL,\n                disableWorkers: ctx.disableWorkers,\n                sessionCookie,\n                useDKLS: isDKLS,\n                disableWebSockets: ctx.disableWebSockets,\n                wasmOverride: ctx.wasmOverride,\n            });\n        }));\n    });\n}\nexport function ed25519Sign(ctx, userId, walletId, share, base64Bytes, sessionCookie) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n            const worker = yield setupWorker(ctx, (signMessageRes) => __awaiter(this, void 0, void 0, function* () {\n                resolve(signMessageRes);\n                worker.terminate();\n            }));\n            worker.postMessage({\n                env: ctx.env,\n                apiKey: ctx.apiKey,\n                params: { share, walletId, userId, base64Bytes },\n                functionType: 'ED25519_SIGN',\n                disableWorkers: ctx.disableWorkers,\n                sessionCookie,\n                disableWebSockets: ctx.disableWebSockets,\n                wasmOverride: ctx.wasmOverride,\n            });\n        }));\n    });\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { setupWorker } from '../workers/workerWrapper.js';\nexport function getPrivateKey(ctx, userId, walletId, share, sessionCookie) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n            const worker = yield setupWorker(ctx, (res) => __awaiter(this, void 0, void 0, function* () {\n                resolve(res);\n                worker.terminate();\n            }));\n            worker.postMessage({\n                env: ctx.env,\n                apiKey: ctx.apiKey,\n                params: { share, walletId, userId },\n                functionType: 'GET_PRIVATE_KEY',\n                offloadMPCComputationURL: ctx.offloadMPCComputationURL,\n                disableWorkers: ctx.disableWorkers,\n                sessionCookie,\n                useDKLS: ctx.useDKLS,\n                disableWebSockets: ctx.disableWebSockets,\n                wasmOverride: ctx.wasmOverride,\n            });\n        }));\n    });\n}\n","import { LocalStorage } from './LocalStorage.js';\nimport { SessionStorage } from './SessionStorage.js';\nimport { keygen, preKeygen, ed25519Keygen, ed25519PreKeygen } from './wallet/keygen.js';\nimport { signMessage, sendTransaction, signTransaction, ed25519Sign } from './wallet/signing.js';\nimport { getPrivateKey } from './wallet/privateKey.js';\nexport class WebUtils {\n    constructor() {\n        this.localStorage = new LocalStorage();\n        this.sessionStorage = new SessionStorage();\n        this.secureStorage = null;\n        this.isSyncStorage = true;\n        this.disableProviderModal = false;\n    }\n    getPrivateKey(ctx, userId, walletId, share, sessionCookie) {\n        return getPrivateKey(ctx, userId, walletId, share, sessionCookie);\n    }\n    keygen(ctx, userId, secretKey, // should be acceptable as null in RN as we don't pre-gen them\n    sessionCookie, emailProps = {}) {\n        return keygen(ctx, userId, secretKey, true, sessionCookie, emailProps);\n    }\n    preKeygen(ctx, partnerId, pregenIdentifier, pregenIdentifierType, secretKey, // should be acceptable as null in RN as we don't pre-gen them\n    sessionCookie) {\n        return preKeygen(ctx, pregenIdentifier, pregenIdentifierType, secretKey, false, partnerId, sessionCookie);\n    }\n    signMessage(ctx, userId, walletId, share, message, sessionCookie, isDKLS) {\n        return signMessage(ctx, userId, walletId, share, message, sessionCookie, isDKLS);\n    }\n    signTransaction(ctx, userId, walletId, share, tx, chainId, sessionCookie, isDKLS) {\n        return signTransaction(ctx, userId, walletId, share, tx, chainId, sessionCookie, isDKLS);\n    }\n    sendTransaction(ctx, userId, walletId, share, tx, chainId, sessionCookie, isDKLS) {\n        return sendTransaction(ctx, userId, walletId, share, tx, chainId, sessionCookie, isDKLS);\n    }\n    signHash(_address, _hash) {\n        throw new Error('not implemented');\n    }\n    ed25519Keygen(ctx, userId, sessionCookie, emailProps) {\n        return ed25519Keygen(ctx, userId, sessionCookie, emailProps);\n    }\n    ed25519PreKeygen(ctx, pregenIdentifier, pregenIdentifierType, sessionCookie) {\n        return ed25519PreKeygen(ctx, pregenIdentifier, pregenIdentifierType, sessionCookie);\n    }\n    ed25519Sign(ctx, userId, walletId, share, base64Bytes, sessionCookie) {\n        return ed25519Sign(ctx, userId, walletId, share, base64Bytes, sessionCookie);\n    }\n    openPopup(popupUrl) {\n        const popupWindow = window.open(popupUrl, 'popup', 'popup=true,width=400,height=500');\n        if (!popupWindow) {\n            setTimeout(() => {\n                window.open(popupUrl, '_blank');\n            }, 0);\n        }\n    }\n}\n","export * from '@usecapsule/core-sdk';\nimport { Capsule as CapsuleWeb } from './CapsuleWeb.js';\nimport CoreCapsule from '@usecapsule/core-sdk';\nexport { createCredential, generateSignature, parseCredentialCreationRes } from './cryptography/webAuth.js';\nexport { truncateEthAddress } from './utils/truncateEthAddress.js';\nexport { CapsuleWeb, CoreCapsule };\nexport default CapsuleWeb;\n","import CoreCapsule from '@usecapsule/core-sdk';\nimport { WebUtils } from './WebUtils.js';\nexport class Capsule extends CoreCapsule {\n    getPlatformUtils() {\n        return new WebUtils();\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport axios from 'axios';\nimport qs from 'qs';\nexport const USER_NOT_VERIFIED = 'user must verify biometrics';\nexport const USER_NOT_AUTHENTICATED_ERROR = 'user must be authenticated';\nexport const USER_NOT_MATCHING_ERROR = 'route param userId must match session userId';\nexport var EmailTheme;\n(function (EmailTheme) {\n    EmailTheme[\"LIGHT\"] = \"light\";\n    EmailTheme[\"DARK\"] = \"dark\";\n})(EmailTheme || (EmailTheme = {}));\nexport var PublicKeyStatus;\n(function (PublicKeyStatus) {\n    PublicKeyStatus[\"PENDING\"] = \"PENDING\";\n    PublicKeyStatus[\"COMPLETE\"] = \"COMPLETE\";\n})(PublicKeyStatus || (PublicKeyStatus = {}));\nexport var PublicKeyType;\n(function (PublicKeyType) {\n    PublicKeyType[\"MOBILE\"] = \"MOBILE\";\n    PublicKeyType[\"WEB\"] = \"WEB\";\n})(PublicKeyType || (PublicKeyType = {}));\nexport var WalletScheme;\n(function (WalletScheme) {\n    WalletScheme[\"DKLS\"] = \"DKLS\";\n    WalletScheme[\"CGGMP\"] = \"CGGMP\";\n    WalletScheme[\"ED25519\"] = \"ED25519\";\n})(WalletScheme || (WalletScheme = {}));\nexport var WalletType;\n(function (WalletType) {\n    WalletType[\"EVM\"] = \"EVM\";\n    WalletType[\"SOLANA\"] = \"SOLANA\";\n    WalletType[\"COSMOS\"] = \"COSMOS\";\n})(WalletType || (WalletType = {}));\nexport const NON_ED25519 = [WalletScheme.DKLS, WalletScheme.CGGMP];\nexport var Chain;\n(function (Chain) {\n    Chain[\"ETH\"] = \"ETH\";\n    Chain[\"CELO\"] = \"CELO\";\n    Chain[\"MATIC\"] = \"MATIC\";\n})(Chain || (Chain = {}));\nexport var EncryptorType;\n(function (EncryptorType) {\n    EncryptorType[\"USER\"] = \"USER\";\n    EncryptorType[\"RECOVERY\"] = \"RECOVERY\";\n    EncryptorType[\"BIOMETRICS\"] = \"BIOMETRICS\";\n})(EncryptorType || (EncryptorType = {}));\nexport const KeyType = {\n    USER: 'USER',\n    RECOVERY: 'RECOVERY',\n};\nexport var Network;\n(function (Network) {\n    Network[\"ETHEREUM\"] = \"ETHEREUM\";\n    Network[\"ARBITRUM\"] = \"ARBITRUM\";\n    Network[\"BASE\"] = \"BASE\";\n    Network[\"OPTIMISM\"] = \"OPTIMISM\";\n    Network[\"POLYGON\"] = \"POLYGON\";\n})(Network || (Network = {}));\nexport var OnRampProvider;\n(function (OnRampProvider) {\n    OnRampProvider[\"RAMP\"] = \"RAMP\";\n    OnRampProvider[\"STRIPE\"] = \"STRIPE\";\n})(OnRampProvider || (OnRampProvider = {}));\nexport var OnRampAsset;\n(function (OnRampAsset) {\n    OnRampAsset[\"ETHEREUM\"] = \"ETHEREUM\";\n    OnRampAsset[\"USDC\"] = \"USDC\";\n    OnRampAsset[\"POLYGON\"] = \"POLYGON\";\n})(OnRampAsset || (OnRampAsset = {}));\nexport var OnRampPurchaseStatus;\n(function (OnRampPurchaseStatus) {\n    OnRampPurchaseStatus[\"INITIATED\"] = \"INITIATED\";\n    OnRampPurchaseStatus[\"FINISHED\"] = \"FINISHED\";\n    OnRampPurchaseStatus[\"CANCELLED\"] = \"CANCELLED\";\n})(OnRampPurchaseStatus || (OnRampPurchaseStatus = {}));\nconst SESSION_COOKIE_HEADER_NAME = 'x-capsule-sid';\nconst VERSION_HEADER_NAME = 'x-capsule-version';\nclass Client {\n    constructor({ userManagementHost, apiKey, version, opts, retrieveSessionCookie, persistSessionCookie }) {\n        this.createUser = (body) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users`, body);\n            return res.data;\n        });\n        this.checkUserExists = (email, phone, countryCode) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/exists?email=${encodeURIComponent(email)}&phone=${encodeURIComponent(phone)}&countryCode=${encodeURIComponent(countryCode)}`);\n            return res;\n        });\n        this.externalWalletLogin = (body) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/external-wallets/login`, body);\n            return res.data;\n        });\n        // POST /users/:userId/verify-email\n        this.verifyEmail = (userId, body) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/verify-email`, body);\n            return res;\n        });\n        this.verifyPhone = (userId, body) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/verify-identifier`, body);\n            return res;\n        });\n        // POST /users/:userId/biometrics/key\n        this.addSessionPublicKey = (userId, body) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/biometrics/key`, body);\n            return res;\n        });\n        // GET /users/:userId/biometrics/keys\n        this.getSessionPublicKeys = (userId) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/${userId}/biometrics/keys`);\n            return res;\n        });\n        // GET /users/:userId/biometrics/:biometricId\n        this.getSessionPublicKey = (userId, biometricId) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/${userId}/biometrics/${biometricId}`);\n            return res;\n        });\n        // PATCH /users/:userId/biometrics/:biometricId\n        this.patchSessionPublicKey = (partnerId, userId, biometricId, body) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.patch(`/users/${userId}/biometrics/${biometricId}`, body, {\n                headers: {\n                    'X-Partner-ID': partnerId,\n                },\n            });\n            return res;\n        });\n        // GET /biometrics/challenge?email&publicKey\n        this.getWebChallenge = (email, phone, countryCode, farcasterUsername, publicKey) => __awaiter(this, void 0, void 0, function* () {\n            const queryParams = {};\n            if (email) {\n                queryParams['email'] = email;\n            }\n            if (phone) {\n                queryParams['phone'] = phone;\n            }\n            if (countryCode) {\n                queryParams['countryCode'] = countryCode;\n            }\n            if (farcasterUsername) {\n                queryParams['farcasterUsername'] = farcasterUsername;\n            }\n            if (publicKey) {\n                queryParams['publicKey'] = publicKey;\n            }\n            const query = qs.stringify(queryParams);\n            const res = yield this.baseRequest.get(`/biometrics/challenge${query === '' ? '' : `?${query}`}`);\n            return res.data;\n        });\n        // POST /touch\n        this.touchSession = (regenerate) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/touch?regenerate=${!!regenerate}`);\n            return res;\n        });\n        // POST /biometrics/verify\n        this.verifyWebChallenge = (partnerId, body) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/biometrics/verify`, body, {\n                headers: {\n                    'X-Partner-ID': partnerId,\n                },\n            });\n            return res;\n        });\n        // GET /users/:userId/biometrics/challenge\n        this.getSessionChallenge = (userId) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/${userId}/biometrics/challenge`);\n            return res;\n        });\n        // POST /users/:userId/biometrics/verify\n        this.verifySessionChallenge = (userId, body) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/biometrics/verify`, body);\n            return res;\n        });\n        // POST /users/:userId/wallets\n        this.createWallet = (userId, body) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/wallets`, body);\n            return res.data;\n        });\n        // POST /wallets/pregen\n        this.createWalletPreGen = (body) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/wallets/pregen`, body);\n            return res.data;\n        });\n        // GET /wallets/pregen?pregenIdentifier={pregenIdentifier}&pregenIdentifierType={pregenIdentifierType}\n        this.getPregenWallets = (pregenIdentifier_1, pregenIdentifierType_1, ...args_1) => __awaiter(this, [pregenIdentifier_1, pregenIdentifierType_1, ...args_1], void 0, function* (pregenIdentifier, pregenIdentifierType, expand = false) {\n            const res = yield this.baseRequest.get(`/wallets/pregen?pregenIdentifier=${encodeURIComponent(pregenIdentifier)}&pregenIdentifierType=${encodeURIComponent(pregenIdentifierType)}${expand ? '&expand=true' : ''}`);\n            return res.data;\n        });\n        // POST /wallets/pregen/claim\n        this.claimPregenWallet = (body) => __awaiter(this, void 0, void 0, function* () {\n            yield this.baseRequest.post(`/wallets/pregen/claim`, body);\n        });\n        // POST /users/:userId/wallets/:walletId/transactions/send\n        this.sendTransaction = (userId, walletId, body) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/wallets/${walletId}/transactions/send`, body);\n            return res;\n        });\n        // functionality changed to only sign transactions and not send them\n        // POST /users/:userId/wallets/:walletId/transactions/sign\n        this.signTransaction = (userId, walletId, body) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/wallets/${walletId}/transactions/sign`, body);\n            return res;\n        });\n        // POST /users/:userId/wallets/:walletId/refresh\n        this.refreshKeys = (userId, walletId, oldPartnerId, newPartnerId) => __awaiter(this, void 0, void 0, function* () {\n            const body = { oldPartnerId, newPartnerId };\n            const res = yield this.baseRequest.post(`/users/${userId}/wallets/${walletId}/refresh`, body);\n            return res;\n        });\n        // PATCH /wallets/pregen/:walletId\n        this.updatePregenWallet = (walletId, body) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.patch(`wallets/pregen/${walletId}`, body);\n            return res.data;\n        });\n        // GET /users/:userId/wallets\n        this.getWallets = (userId, includePartnerData) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/${userId}/wallets${includePartnerData ? `?includePartnerData=${encodeURIComponent(includePartnerData)}` : ''}`);\n            return res;\n        });\n        // GET /users/:userId/all-wallets\n        this.getAllWallets = (userId) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/${userId}/all-wallets`);\n            return res;\n        });\n        // POST /users/:userId/wallets/set\n        this.setCurrentWalletIds = (userId_1, walletIds_1, ...args_1) => __awaiter(this, [userId_1, walletIds_1, ...args_1], void 0, function* (userId, walletIds, needsWallet = false, sessionLookupId) {\n            const res = yield this.baseRequest.post(`/users/${userId}/wallets/set`, {\n                walletIds,\n                needsWallet,\n                sessionLookupId,\n            });\n            return res;\n        });\n        // POST /login\n        this.login = (props) => __awaiter(this, void 0, void 0, function* () {\n            const body = props;\n            const res = yield this.baseRequest.post('/login', body);\n            return res;\n        });\n        // POST /login\n        this.verifyLogin = (verificationCode) => __awaiter(this, void 0, void 0, function* () {\n            const body = { verificationCode };\n            const res = yield this.baseRequest.post('/login/verify-email', body);\n            return res;\n        });\n        // GET /logout\n        this.logout = () => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get('/logout');\n            return res;\n        });\n        // POST /recovery/verification\n        this.recoveryVerification = (email, verificationCode) => __awaiter(this, void 0, void 0, function* () {\n            const body = { email, verificationCode };\n            const res = yield this.baseRequest.post('/recovery/verification', body);\n            return res;\n        });\n        // POST /recovery\n        this.recoveryInit = (email) => __awaiter(this, void 0, void 0, function* () {\n            const body = { email };\n            const res = yield this.baseRequest.post('/recovery', body);\n            return res;\n        });\n        this.preSignMessage = (userId, walletId, message, scheme) => __awaiter(this, void 0, void 0, function* () {\n            const body = { message, scheme };\n            const res = yield this.baseRequest.post(`/users/${userId}/wallets/${walletId}/messages/sign`, body);\n            return res.data;\n        });\n        //DELETE /users/:userId\n        this.deleteSelf = (userId) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.delete(`/users/${userId}`);\n            return res;\n        });\n        // GET /users/:userId/wallets/:walletId/capsule-share\n        this.getCapsuleShare = (userId, walletId) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/${userId}/wallets/${walletId}/capsule-share`);\n            return res.data.share;\n        });\n        // GET /download-backup-kit/:userId\n        this.getBackupKit = (userId) => __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/download-backup-kit/${userId}`, { responseType: 'blob' });\n            return res;\n        });\n        // TODO remove after this is not optional anymore\n        const headers = apiKey ? { 'X-External-API-Key': apiKey } : undefined;\n        const axiosConfig = {\n            baseURL: userManagementHost,\n            withCredentials: true,\n            headers,\n        };\n        if (retrieveSessionCookie) {\n            const defaultTransformRequest = Array.isArray(axios.defaults.transformRequest)\n                ? axios.defaults.transformRequest\n                : [axios.defaults.transformRequest];\n            axiosConfig.transformRequest = [\n                function (data, headers) {\n                    const currentSessionCookie = retrieveSessionCookie();\n                    if (currentSessionCookie) {\n                        headers[SESSION_COOKIE_HEADER_NAME] = currentSessionCookie;\n                    }\n                    if (version) {\n                        headers[VERSION_HEADER_NAME] = version;\n                    }\n                    return data;\n                },\n                ...defaultTransformRequest,\n            ];\n        }\n        if (persistSessionCookie) {\n            const defaultTransformResponse = Array.isArray(axios.defaults.transformResponse)\n                ? axios.defaults.transformResponse\n                : [axios.defaults.transformResponse];\n            axiosConfig.transformResponse = [\n                ...defaultTransformResponse,\n                function (data, headers, _status) {\n                    if (headers === null || headers === void 0 ? void 0 : headers[SESSION_COOKIE_HEADER_NAME]) {\n                        persistSessionCookie(headers[SESSION_COOKIE_HEADER_NAME]);\n                    }\n                    return data;\n                },\n            ];\n        }\n        this.baseRequest = axios.create(axiosConfig);\n        if (opts === null || opts === void 0 ? void 0 : opts.useFetchAdapter) {\n            axios.defaults.adapter = function (config) {\n                return fetch(config.baseURL + config.url.substring(1), {\n                    method: config.method,\n                    headers: config.headers,\n                    body: config.data,\n                    credentials: config.withCredentials ? 'include' : undefined,\n                })\n                    .then(response => response.text().then(text => ({\n                    data: text,\n                    status: response.status,\n                    statusText: response.statusText,\n                    headers: response.headers,\n                    config: config,\n                    request: fetch,\n                })))\n                    .catch(function (reason) {\n                    throw reason;\n                });\n            };\n        }\n    }\n    // DEPRECATED: use uploadUserKeyShares instead\n    // POST /users/:userId/wallets/:walletId/key-shares\n    uploadKeyshares(userId, walletId, encryptedKeyshares) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const body = { keyShares: encryptedKeyshares };\n            const res = yield this.baseRequest.post(`/users/${userId}/wallets/${walletId}/key-shares`, body);\n            return res;\n        });\n    }\n    // POST /users/:userId/key-shares\n    uploadUserKeyShares(userId, encryptedKeyshares) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const body = { keyShares: encryptedKeyshares };\n            const res = yield this.baseRequest.post(`/users/${userId}/key-shares`, body);\n            return res;\n        });\n    }\n    // GET /users/:userId/wallets/:walletId/key-shares\n    getKeyshare(userId, walletId, type, encryptor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/${userId}/wallets/${walletId}/key-shares?type=${type}${encryptor ? `&encryptor=${encryptor}` : ''}`);\n            return res;\n        });\n    }\n    // GET /users/:userId/biometrics/key-shares\n    getBiometricKeyshares(userId, biometricPublicKey, getAll) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/${userId}/biometrics/key-shares?publicKey=${biometricPublicKey}&all=${!!getAll}`);\n            return res;\n        });\n    }\n    // POST '/users/:userId/temporary-shares',\n    uploadTransmissionKeyshares(userId, shares) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const body = { shares };\n            const res = yield this.baseRequest.post(`/users/${userId}/temporary-shares`, body);\n            return res;\n        });\n    }\n    // GET /users/:userId/temporary-shares returns { temporaryShares: { userId: string, walletId: string, encryptedShare: string, encryptedKey?: string }[] }\n    getTransmissionKeyshares(userId, sessionLookupId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/${userId}/temporary-shares?sessionLookupId=${sessionLookupId}`);\n            return res;\n        });\n    }\n    // POST '/users/:userId/resend-verification-code\n    resendVerificationCode(_a) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var { userId } = _a, rest = __rest(_a, [\"userId\"]);\n            const res = yield this.baseRequest.post(`/users/${userId}/resend-verification-code`, rest);\n            return res;\n        });\n    }\n    // POST '/users/:userId/resend-verification-code-by-phone\n    resendVerificationCodeByPhone(_a) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var { userId } = _a, rest = __rest(_a, [\"userId\"]);\n            const res = yield this.baseRequest.post(`/users/${userId}/resend-verification-code-by-phone`, rest);\n            return res;\n        });\n    }\n    // POST recovery/cancel\n    cancelRecoveryAttempt(email) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`recovery/cancel`, { email });\n            return res;\n        });\n    }\n    // GET '/2fa/users/:userId/check-status'\n    check2FAStatus(userId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/2fa/users/${userId}/check-status`);\n            return res;\n        });\n    }\n    // POST '/2fa/users/:userId/enable'\n    enable2FA(userId, verificationCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/2fa/users/${userId}/enable`, { verificationCode });\n            return res;\n        });\n    }\n    // POST '/2fa/users/:userId/setup'\n    setup2FA(userId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/2fa/users/${userId}/setup`);\n            return res;\n        });\n    }\n    // POST /recovery/init\n    initializeRecovery(email) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/recovery/init`, { email });\n            return res;\n        });\n    }\n    // POST /auth/farcaster/init\n    initializeFarcasterLogin() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/auth/farcaster/init`);\n            return res;\n        });\n    }\n    // POST /auth/farcaster/status\n    getFarcasterAuthStatus() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/auth/farcaster/status`);\n            return res;\n        });\n    }\n    // POST /recovery/init\n    initializeRecoveryForPhone(phone, countryCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/recovery/init`, { phone, countryCode });\n            return res;\n        });\n    }\n    // POST /recovery/users/:userId/wallets/:walletId/finish\n    finalizeRecovery(userId, walletId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/recovery/users/${userId}/wallets/${walletId}/finish`);\n            return res;\n        });\n    }\n    // GET /recovery/users/:userId/wallets/:walletId/key-shares\n    recoverUserShares(userId, walletId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/recovery/users/${userId}/wallets/${walletId}/key-shares?type=USER&encryptor=RECOVERY`);\n            return res;\n        });\n    }\n    // POST /recovery/verify-email\n    verifyEmailForRecovery(email, verificationCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const body = { email, verificationCode };\n            const res = yield this.baseRequest.post(`/recovery/verify-email`, body);\n            return res;\n        });\n    }\n    // POST /recovery/verify-identifier\n    verifyPhoneForRecovery(phone, countryCode, verificationCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const body = { phone, countryCode, verificationCode };\n            const res = yield this.baseRequest.post(`/recovery/verify-identifier`, body);\n            return res;\n        });\n    }\n    // POST /2fa/verify\n    verify2FA(email, verificationCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const body = { email, verificationCode };\n            const res = yield this.baseRequest.post('/2fa/verify', body);\n            return res;\n        });\n    }\n    // POST /2fa/phone/verify\n    verify2FAForPhone(phone, countryCode, verificationCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const body = { phone, countryCode, verificationCode };\n            const res = yield this.baseRequest.post('/2fa/verify', body);\n            return res;\n        });\n    }\n    tempTrasmissionInit(message, userId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const body = { message, userId };\n            const res = yield this.baseRequest.post('/temporary-transmissions', body);\n            return res;\n        });\n    }\n    tempTrasmission(id) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/temporary-transmissions/${id}`);\n            return res;\n        });\n    }\n    getPartner(partnerId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/partners/${partnerId}`);\n            return res;\n        });\n    }\n    acceptScopes(userId, walletId, body) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/wallets/${walletId}/scopes/accept`, body);\n            return res;\n        });\n    }\n    getPendingTransaction(userId, pendingTransactionid) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/${userId}/pending-transactions/${pendingTransactionid}`);\n            return res;\n        });\n    }\n    acceptPendingTransaction(userId, pendingTransactionId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/pending-transactions/${pendingTransactionId}/accept`);\n            return res;\n        });\n    }\n    createOnRampPurchase(_a) {\n        return __awaiter(this, arguments, void 0, function* ({ userId, walletId, externalWalletAddress, provider, network, asset, testMode = false, }) {\n            const walletString = walletId ? `wallets/${walletId}` : `external-wallets/${externalWalletAddress}`;\n            const res = yield this.baseRequest.post(`/users/${userId}/${walletString}/purchases`, {\n                provider,\n                network,\n                asset,\n                testMode,\n            });\n            return res;\n        });\n    }\n    updateOnRampPurchase(_a) {\n        return __awaiter(this, arguments, void 0, function* ({ userId, walletId, externalWalletAddress, purchaseId, updates, }) {\n            const walletString = walletId ? `wallets/${walletId}` : `external-wallets/${externalWalletAddress}`;\n            const res = yield this.baseRequest.patch(`/users/${userId}/${walletString}/purchases/${purchaseId}`, updates);\n            return res;\n        });\n    }\n    getOnRampPurchase(_a) {\n        return __awaiter(this, arguments, void 0, function* ({ userId, walletId, externalWalletAddress, purchaseId, }) {\n            const walletString = walletId ? `wallets/${walletId}` : `external-wallets/${externalWalletAddress}`;\n            const res = yield this.baseRequest.get(`/users/${userId}/${walletString}/purchases/${purchaseId}`);\n            return res;\n        });\n    }\n    distributeCapsuleShare(_a) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var { userId, walletId } = _a, rest = __rest(_a, [\"userId\", \"walletId\"]);\n            const body = rest;\n            const res = yield this.baseRequest.post(`/users/${userId}/wallets/${walletId}/capsule-share/distribute`, body);\n            return res;\n        });\n    }\n    keepSessionAlive(userId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/session/keep-alive`);\n            return res.data;\n        });\n    }\n    persistRecoveryPublicKeys(userId, publicKeys) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.post(`/users/${userId}/recovery-public-keys`, { publicKeys });\n            return res.data;\n        });\n    }\n    getRecoveryPublicKeys(userId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/${userId}/recovery-public-keys`);\n            return res.data;\n        });\n    }\n    uploadEncryptedWalletPrivateKey(userId, encryptedWalletPrivateKey, encryptionKeyHash, biometricPublicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const body = { encryptedWalletPrivateKey, encryptionKeyHash, biometricPublicKey };\n            const res = yield this.baseRequest.post(`/users/${userId}/encrypted-wallet-private-keys`, body);\n            return res.data;\n        });\n    }\n    getEncryptedWalletPrivateKeys(userId, encryptionKeyHash) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get(`/users/${userId}/encrypted-wallet-private-keys/${encryptionKeyHash}`);\n            return res.data;\n        });\n    }\n    getEthToUsdConversionRate() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const res = yield this.baseRequest.get('/ethToUsdConversionRate');\n            return res.data;\n        });\n    }\n    // GET /users/:userId/wallets/:walletId/refresh-done\n    isRefreshDone(userId, walletId, partnerId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const partnerIdStr = partnerId ? `?partnerId=${partnerId}` : '';\n            const res = yield this.baseRequest.get(`/users/${userId}/wallets/${walletId}/refresh-done${partnerIdStr}`);\n            return res.data;\n        });\n    }\n}\nexport default Client;\n// GET /users/:userId/wallets/:walletId/send (NOTE: endpoint not found in server)\n// NOT USED IN DEMO\n// POST /users/:userId/wallets/:walletId/presign\n// POST /users/:userId/wallets/:walletId/presign-online\n// POST /auth/signup/web\n// GET /logout\n// POST /users/:userId/wallets/:walletId/key\n// GET /users/:userId/wallets/:walletId/key\n// GET /users/:userId/configurations\n// GET /\n","function number(n: number) {\n  if (!Number.isSafeInteger(n) || n < 0) throw new Error(`positive integer expected, not ${n}`);\n}\n\nfunction bool(b: boolean) {\n  if (typeof b !== 'boolean') throw new Error(`boolean expected, not ${b}`);\n}\n\n// copied from utils\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\nfunction bytes(b: Uint8Array | undefined, ...lengths: number[]) {\n  if (!isBytes(b)) throw new Error('Uint8Array expected');\n  if (lengths.length > 0 && !lengths.includes(b.length))\n    throw new Error(`Uint8Array expected of length ${lengths}, not of length=${b.length}`);\n}\n\ntype Hash = {\n  (data: Uint8Array): Uint8Array;\n  blockLen: number;\n  outputLen: number;\n  create: any;\n};\nfunction hash(h: Hash) {\n  if (typeof h !== 'function' || typeof h.create !== 'function')\n    throw new Error('Hash should be wrapped by utils.wrapConstructor');\n  number(h.outputLen);\n  number(h.blockLen);\n}\n\nfunction exists(instance: any, checkFinished = true) {\n  if (instance.destroyed) throw new Error('Hash instance has been destroyed');\n  if (checkFinished && instance.finished) throw new Error('Hash#digest() has already been called');\n}\nfunction output(out: any, instance: any) {\n  bytes(out);\n  const min = instance.outputLen;\n  if (out.length < min) {\n    throw new Error(`digestInto() expects output buffer of length at least ${min}`);\n  }\n}\n\nexport { number, bool, bytes, hash, exists, output };\n\nconst assert = { number, bool, bytes, hash, exists, output };\nexport default assert;\n","/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */\n\n// We use WebCrypto aka globalThis.crypto, which exists in browsers and node.js 16+.\n// node.js versions earlier than v19 don't declare it in global scope.\n// For node.js, package.json#exports field mapping rewrites import\n// from `crypto` to `cryptoNode`, which imports native module.\n// Makes the utils un-importable in browsers without a bundler.\n// Once node.js 18 is deprecated (2025-04-30), we can just drop the import.\nimport { crypto } from '@noble/hashes/crypto';\nimport { bytes as abytes } from './_assert.js';\n// export { isBytes } from './_assert.js';\n// We can't reuse isBytes from _assert, because somehow this causes huge perf issues\nexport function isBytes(a: unknown): a is Uint8Array {\n  return (\n    a instanceof Uint8Array ||\n    (a != null && typeof a === 'object' && a.constructor.name === 'Uint8Array')\n  );\n}\n\n// prettier-ignore\nexport type TypedArray = Int8Array | Uint8ClampedArray | Uint8Array |\n  Uint16Array | Int16Array | Uint32Array | Int32Array;\n\n// Cast array to different type\nexport const u8 = (arr: TypedArray) => new Uint8Array(arr.buffer, arr.byteOffset, arr.byteLength);\nexport const u32 = (arr: TypedArray) =>\n  new Uint32Array(arr.buffer, arr.byteOffset, Math.floor(arr.byteLength / 4));\n\n// Cast array to view\nexport const createView = (arr: TypedArray) =>\n  new DataView(arr.buffer, arr.byteOffset, arr.byteLength);\n\n// The rotate right (circular right shift) operation for uint32\nexport const rotr = (word: number, shift: number) => (word << (32 - shift)) | (word >>> shift);\n// The rotate left (circular left shift) operation for uint32\nexport const rotl = (word: number, shift: number) =>\n  (word << shift) | ((word >>> (32 - shift)) >>> 0);\n\nexport const isLE = new Uint8Array(new Uint32Array([0x11223344]).buffer)[0] === 0x44;\n// The byte swap operation for uint32\nexport const byteSwap = (word: number) =>\n  ((word << 24) & 0xff000000) |\n  ((word << 8) & 0xff0000) |\n  ((word >>> 8) & 0xff00) |\n  ((word >>> 24) & 0xff);\n// Conditionally byte swap if on a big-endian platform\nexport const byteSwapIfBE = isLE ? (n: number) => n : (n: number) => byteSwap(n);\n\n// In place byte swap for Uint32Array\nexport function byteSwap32(arr: Uint32Array) {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = byteSwap(arr[i]);\n  }\n}\n\n// Array where index 0xf0 (240) is mapped to string 'f0'\nconst hexes = /* @__PURE__ */ Array.from({ length: 256 }, (_, i) =>\n  i.toString(16).padStart(2, '0')\n);\n/**\n * @example bytesToHex(Uint8Array.from([0xca, 0xfe, 0x01, 0x23])) // 'cafe0123'\n */\nexport function bytesToHex(bytes: Uint8Array): string {\n  abytes(bytes);\n  // pre-caching improves the speed 6x\n  let hex = '';\n  for (let i = 0; i < bytes.length; i++) {\n    hex += hexes[bytes[i]];\n  }\n  return hex;\n}\n\n// We use optimized technique to convert hex string to byte array\nconst asciis = { _0: 48, _9: 57, _A: 65, _F: 70, _a: 97, _f: 102 } as const;\nfunction asciiToBase16(char: number): number | undefined {\n  if (char >= asciis._0 && char <= asciis._9) return char - asciis._0;\n  if (char >= asciis._A && char <= asciis._F) return char - (asciis._A - 10);\n  if (char >= asciis._a && char <= asciis._f) return char - (asciis._a - 10);\n  return;\n}\n\n/**\n * @example hexToBytes('cafe0123') // Uint8Array.from([0xca, 0xfe, 0x01, 0x23])\n */\nexport function hexToBytes(hex: string): Uint8Array {\n  if (typeof hex !== 'string') throw new Error('hex string expected, got ' + typeof hex);\n  const hl = hex.length;\n  const al = hl / 2;\n  if (hl % 2) throw new Error('padded hex string expected, got unpadded hex of length ' + hl);\n  const array = new Uint8Array(al);\n  for (let ai = 0, hi = 0; ai < al; ai++, hi += 2) {\n    const n1 = asciiToBase16(hex.charCodeAt(hi));\n    const n2 = asciiToBase16(hex.charCodeAt(hi + 1));\n    if (n1 === undefined || n2 === undefined) {\n      const char = hex[hi] + hex[hi + 1];\n      throw new Error('hex string expected, got non-hex character \"' + char + '\" at index ' + hi);\n    }\n    array[ai] = n1 * 16 + n2;\n  }\n  return array;\n}\n\n// There is no setImmediate in browser and setTimeout is slow.\n// call of async fn will return Promise, which will be fullfiled only on\n// next scheduler queue processing step and this is exactly what we need.\nexport const nextTick = async () => {};\n\n// Returns control to thread each 'tick' ms to avoid blocking\nexport async function asyncLoop(iters: number, tick: number, cb: (i: number) => void) {\n  let ts = Date.now();\n  for (let i = 0; i < iters; i++) {\n    cb(i);\n    // Date.now() is not monotonic, so in case if clock goes backwards we return return control too\n    const diff = Date.now() - ts;\n    if (diff >= 0 && diff < tick) continue;\n    await nextTick();\n    ts += diff;\n  }\n}\n\n// Global symbols in both browsers and Node.js since v11\n// See https://github.com/microsoft/TypeScript/issues/31535\ndeclare const TextEncoder: any;\n\n/**\n * @example utf8ToBytes('abc') // new Uint8Array([97, 98, 99])\n */\nexport function utf8ToBytes(str: string): Uint8Array {\n  if (typeof str !== 'string') throw new Error(`utf8ToBytes expected string, got ${typeof str}`);\n  return new Uint8Array(new TextEncoder().encode(str)); // https://bugzil.la/1681809\n}\n\nexport type Input = Uint8Array | string;\n/**\n * Normalizes (non-hex) string or Uint8Array to Uint8Array.\n * Warning: when Uint8Array is passed, it would NOT get copied.\n * Keep in mind for future mutable operations.\n */\nexport function toBytes(data: Input): Uint8Array {\n  if (typeof data === 'string') data = utf8ToBytes(data);\n  abytes(data);\n  return data;\n}\n\n/**\n * Copies several Uint8Arrays into one.\n */\nexport function concatBytes(...arrays: Uint8Array[]): Uint8Array {\n  let sum = 0;\n  for (let i = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    abytes(a);\n    sum += a.length;\n  }\n  const res = new Uint8Array(sum);\n  for (let i = 0, pad = 0; i < arrays.length; i++) {\n    const a = arrays[i];\n    res.set(a, pad);\n    pad += a.length;\n  }\n  return res;\n}\n\n// For runtime check if class implements interface\nexport abstract class Hash<T extends Hash<T>> {\n  abstract blockLen: number; // Bytes per block\n  abstract outputLen: number; // Bytes in output\n  abstract update(buf: Input): this;\n  // Writes digest into buf\n  abstract digestInto(buf: Uint8Array): void;\n  abstract digest(): Uint8Array;\n  /**\n   * Resets internal state. Makes Hash instance unusable.\n   * Reset is impossible for keyed hashes if key is consumed into state. If digest is not consumed\n   * by user, they will need to manually call `destroy()` when zeroing is necessary.\n   */\n  abstract destroy(): void;\n  /**\n   * Clones hash instance. Unsafe: doesn't check whether `to` is valid. Can be used as `clone()`\n   * when no options are passed.\n   * Reasons to use `_cloneInto` instead of clone: 1) performance 2) reuse instance => all internal\n   * buffers are overwritten => causes buffer overwrite which is used for digest in some cases.\n   * There are no guarantees for clean-up because it's impossible in JS.\n   */\n  abstract _cloneInto(to?: T): T;\n  // Safe version that clones internal state\n  clone(): T {\n    return this._cloneInto();\n  }\n}\n\n/**\n * XOF: streaming API to read digest in chunks.\n * Same as 'squeeze' in keccak/k12 and 'seek' in blake3, but more generic name.\n * When hash used in XOF mode it is up to user to call '.destroy' afterwards, since we cannot\n * destroy state, next call can require more bytes.\n */\nexport type HashXOF<T extends Hash<T>> = Hash<T> & {\n  xof(bytes: number): Uint8Array; // Read 'bytes' bytes from digest stream\n  xofInto(buf: Uint8Array): Uint8Array; // read buf.length bytes from digest stream into buf\n};\n\nconst toStr = {}.toString;\ntype EmptyObj = {};\nexport function checkOpts<T1 extends EmptyObj, T2 extends EmptyObj>(\n  defaults: T1,\n  opts?: T2\n): T1 & T2 {\n  if (opts !== undefined && toStr.call(opts) !== '[object Object]')\n    throw new Error('Options should be object or undefined');\n  const merged = Object.assign(defaults, opts);\n  return merged as T1 & T2;\n}\n\nexport type CHash = ReturnType<typeof wrapConstructor>;\n\nexport function wrapConstructor<T extends Hash<T>>(hashCons: () => Hash<T>) {\n  const hashC = (msg: Input): Uint8Array => hashCons().update(toBytes(msg)).digest();\n  const tmp = hashCons();\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = () => hashCons();\n  return hashC;\n}\n\nexport function wrapConstructorWithOpts<H extends Hash<H>, T extends Object>(\n  hashCons: (opts?: T) => Hash<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\nexport function wrapXOFConstructorWithOpts<H extends HashXOF<H>, T extends Object>(\n  hashCons: (opts?: T) => HashXOF<H>\n) {\n  const hashC = (msg: Input, opts?: T): Uint8Array => hashCons(opts).update(toBytes(msg)).digest();\n  const tmp = hashCons({} as T);\n  hashC.outputLen = tmp.outputLen;\n  hashC.blockLen = tmp.blockLen;\n  hashC.create = (opts: T) => hashCons(opts);\n  return hashC;\n}\n\n/**\n * Secure PRNG. Uses `crypto.getRandomValues`, which defers to OS.\n */\nexport function randomBytes(bytesLength = 32): Uint8Array {\n  if (crypto && typeof crypto.getRandomValues === 'function') {\n    return crypto.getRandomValues(new Uint8Array(bytesLength));\n  }\n  // Legacy Node.js compatibility\n  if (crypto && typeof crypto.randomBytes === 'function') {\n    return crypto.randomBytes(bytesLength);\n  }\n  throw new Error('crypto.getRandomValues must be defined');\n}\n","import { exists, output } from './_assert.js';\nimport { Hash, createView, Input, toBytes } from './utils.js';\n\n/**\n * Polyfill for Safari 14\n */\nfunction setBigUint64(view: DataView, byteOffset: number, value: bigint, isLE: boolean): void {\n  if (typeof view.setBigUint64 === 'function') return view.setBigUint64(byteOffset, value, isLE);\n  const _32n = BigInt(32);\n  const _u32_max = BigInt(0xffffffff);\n  const wh = Number((value >> _32n) & _u32_max);\n  const wl = Number(value & _u32_max);\n  const h = isLE ? 4 : 0;\n  const l = isLE ? 0 : 4;\n  view.setUint32(byteOffset + h, wh, isLE);\n  view.setUint32(byteOffset + l, wl, isLE);\n}\n\n/**\n * Choice: a ? b : c\n */\nexport const Chi = (a: number, b: number, c: number) => (a & b) ^ (~a & c);\n\n/**\n * Majority function, true if any two inputs is true\n */\nexport const Maj = (a: number, b: number, c: number) => (a & b) ^ (a & c) ^ (b & c);\n\n/**\n * Merkle-Damgard hash construction base class.\n * Could be used to create MD5, RIPEMD, SHA1, SHA2.\n */\nexport abstract class HashMD<T extends HashMD<T>> extends Hash<T> {\n  protected abstract process(buf: DataView, offset: number): void;\n  protected abstract get(): number[];\n  protected abstract set(...args: number[]): void;\n  abstract destroy(): void;\n  protected abstract roundClean(): void;\n  // For partial updates less than block size\n  protected buffer: Uint8Array;\n  protected view: DataView;\n  protected finished = false;\n  protected length = 0;\n  protected pos = 0;\n  protected destroyed = false;\n\n  constructor(\n    readonly blockLen: number,\n    public outputLen: number,\n    readonly padOffset: number,\n    readonly isLE: boolean\n  ) {\n    super();\n    this.buffer = new Uint8Array(blockLen);\n    this.view = createView(this.buffer);\n  }\n  update(data: Input): this {\n    exists(this);\n    const { view, buffer, blockLen } = this;\n    data = toBytes(data);\n    const len = data.length;\n    for (let pos = 0; pos < len; ) {\n      const take = Math.min(blockLen - this.pos, len - pos);\n      // Fast path: we have at least one block in input, cast it to view and process\n      if (take === blockLen) {\n        const dataView = createView(data);\n        for (; blockLen <= len - pos; pos += blockLen) this.process(dataView, pos);\n        continue;\n      }\n      buffer.set(data.subarray(pos, pos + take), this.pos);\n      this.pos += take;\n      pos += take;\n      if (this.pos === blockLen) {\n        this.process(view, 0);\n        this.pos = 0;\n      }\n    }\n    this.length += data.length;\n    this.roundClean();\n    return this;\n  }\n  digestInto(out: Uint8Array) {\n    exists(this);\n    output(out, this);\n    this.finished = true;\n    // Padding\n    // We can avoid allocation of buffer for padding completely if it\n    // was previously not allocated here. But it won't change performance.\n    const { buffer, view, blockLen, isLE } = this;\n    let { pos } = this;\n    // append the bit '1' to the message\n    buffer[pos++] = 0b10000000;\n    this.buffer.subarray(pos).fill(0);\n    // we have less than padOffset left in buffer, so we cannot put length in\n    // current block, need process it and pad again\n    if (this.padOffset > blockLen - pos) {\n      this.process(view, 0);\n      pos = 0;\n    }\n    // Pad until full block byte with zeros\n    for (let i = pos; i < blockLen; i++) buffer[i] = 0;\n    // Note: sha512 requires length to be 128bit integer, but length in JS will overflow before that\n    // You need to write around 2 exabytes (u64_max / 8 / (1024**6)) for this to happen.\n    // So we just write lowest 64 bits of that value.\n    setBigUint64(view, blockLen - 8, BigInt(this.length * 8), isLE);\n    this.process(view, 0);\n    const oview = createView(out);\n    const len = this.outputLen;\n    // NOTE: we do division by 4 later, which should be fused in single op with modulo by JIT\n    if (len % 4) throw new Error('_sha2: outputLen should be aligned to 32bit');\n    const outLen = len / 4;\n    const state = this.get();\n    if (outLen > state.length) throw new Error('_sha2: outputLen bigger than state');\n    for (let i = 0; i < outLen; i++) oview.setUint32(4 * i, state[i], isLE);\n  }\n  digest() {\n    const { buffer, outputLen } = this;\n    this.digestInto(buffer);\n    const res = buffer.slice(0, outputLen);\n    this.destroy();\n    return res;\n  }\n  _cloneInto(to?: T): T {\n    to ||= new (this.constructor as any)() as T;\n    to.set(...this.get());\n    const { blockLen, buffer, length, finished, destroyed, pos } = this;\n    to.length = length;\n    to.pos = pos;\n    to.finished = finished;\n    to.destroyed = destroyed;\n    if (length % blockLen) to.buffer.set(buffer);\n    return to;\n  }\n}\n","import { HashMD, Chi, Maj } from './_md.js';\nimport { rotr, wrapConstructor } from './utils.js';\n\n// SHA2-256 need to try 2^128 hashes to execute birthday attack.\n// BTC network is doing 2^67 hashes/sec as per early 2023.\n\n// Round constants:\n// first 32 bits of the fractional parts of the cube roots of the first 64 primes 2..311)\n// prettier-ignore\nconst SHA256_K = /* @__PURE__ */ new Uint32Array([\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n]);\n\n// Initial state:\n// first 32 bits of the fractional parts of the square roots of the first 8 primes 2..19\n// prettier-ignore\nconst SHA256_IV = /* @__PURE__ */ new Uint32Array([\n  0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a, 0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n]);\n\n// Temporary buffer, not used to store anything between runs\n// Named this way because it matches specification.\nconst SHA256_W = /* @__PURE__ */ new Uint32Array(64);\nexport class SHA256 extends HashMD<SHA256> {\n  // We cannot use array here since array allows indexing by variable\n  // which means optimizer/compiler cannot use registers.\n  A = SHA256_IV[0] | 0;\n  B = SHA256_IV[1] | 0;\n  C = SHA256_IV[2] | 0;\n  D = SHA256_IV[3] | 0;\n  E = SHA256_IV[4] | 0;\n  F = SHA256_IV[5] | 0;\n  G = SHA256_IV[6] | 0;\n  H = SHA256_IV[7] | 0;\n\n  constructor() {\n    super(64, 32, 8, false);\n  }\n  protected get(): [number, number, number, number, number, number, number, number] {\n    const { A, B, C, D, E, F, G, H } = this;\n    return [A, B, C, D, E, F, G, H];\n  }\n  // prettier-ignore\n  protected set(\n    A: number, B: number, C: number, D: number, E: number, F: number, G: number, H: number\n  ) {\n    this.A = A | 0;\n    this.B = B | 0;\n    this.C = C | 0;\n    this.D = D | 0;\n    this.E = E | 0;\n    this.F = F | 0;\n    this.G = G | 0;\n    this.H = H | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    // Extend the first 16 words into the remaining 48 words w[16..63] of the message schedule array\n    for (let i = 0; i < 16; i++, offset += 4) SHA256_W[i] = view.getUint32(offset, false);\n    for (let i = 16; i < 64; i++) {\n      const W15 = SHA256_W[i - 15];\n      const W2 = SHA256_W[i - 2];\n      const s0 = rotr(W15, 7) ^ rotr(W15, 18) ^ (W15 >>> 3);\n      const s1 = rotr(W2, 17) ^ rotr(W2, 19) ^ (W2 >>> 10);\n      SHA256_W[i] = (s1 + SHA256_W[i - 7] + s0 + SHA256_W[i - 16]) | 0;\n    }\n    // Compression function main loop, 64 rounds\n    let { A, B, C, D, E, F, G, H } = this;\n    for (let i = 0; i < 64; i++) {\n      const sigma1 = rotr(E, 6) ^ rotr(E, 11) ^ rotr(E, 25);\n      const T1 = (H + sigma1 + Chi(E, F, G) + SHA256_K[i] + SHA256_W[i]) | 0;\n      const sigma0 = rotr(A, 2) ^ rotr(A, 13) ^ rotr(A, 22);\n      const T2 = (sigma0 + Maj(A, B, C)) | 0;\n      H = G;\n      G = F;\n      F = E;\n      E = (D + T1) | 0;\n      D = C;\n      C = B;\n      B = A;\n      A = (T1 + T2) | 0;\n    }\n    // Add the compressed chunk to the current hash value\n    A = (A + this.A) | 0;\n    B = (B + this.B) | 0;\n    C = (C + this.C) | 0;\n    D = (D + this.D) | 0;\n    E = (E + this.E) | 0;\n    F = (F + this.F) | 0;\n    G = (G + this.G) | 0;\n    H = (H + this.H) | 0;\n    this.set(A, B, C, D, E, F, G, H);\n  }\n  protected roundClean() {\n    SHA256_W.fill(0);\n  }\n  destroy() {\n    this.set(0, 0, 0, 0, 0, 0, 0, 0);\n    this.buffer.fill(0);\n  }\n}\n// Constants from https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.180-4.pdf\nclass SHA224 extends SHA256 {\n  A = 0xc1059ed8 | 0;\n  B = 0x367cd507 | 0;\n  C = 0x3070dd17 | 0;\n  D = 0xf70e5939 | 0;\n  E = 0xffc00b31 | 0;\n  F = 0x68581511 | 0;\n  G = 0x64f98fa7 | 0;\n  H = 0xbefa4fa4 | 0;\n  constructor() {\n    super();\n    this.outputLen = 28;\n  }\n}\n\n/**\n * SHA2-256 hash function\n * @param message - data that would be hashed\n */\nexport const sha256 = /* @__PURE__ */ wrapConstructor(() => new SHA256());\n/**\n * SHA2-224 hash function\n */\nexport const sha224 = /* @__PURE__ */ wrapConstructor(() => new SHA224());\n","import { HashMD } from './_md.js';\nimport { rotl, wrapConstructor } from './utils.js';\n\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160.html\n// https://homes.esat.kuleuven.be/~bosselae/ripemd160/pdf/AB-9601/AB-9601.pdf\nconst Rho = /* @__PURE__ */ new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]);\nconst Id = /* @__PURE__ */ new Uint8Array(new Array(16).fill(0).map((_, i) => i));\nconst Pi = /* @__PURE__ */ Id.map((i) => (9 * i + 5) % 16);\nlet idxL = [Id];\nlet idxR = [Pi];\nfor (let i = 0; i < 4; i++) for (let j of [idxL, idxR]) j.push(j[i].map((k) => Rho[k]));\n\nconst shifts = /* @__PURE__ */ [\n  [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],\n  [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],\n  [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],\n  [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],\n  [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5],\n].map((i) => new Uint8Array(i));\nconst shiftsL = /* @__PURE__ */ idxL.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst shiftsR = /* @__PURE__ */ idxR.map((idx, i) => idx.map((j) => shifts[i][j]));\nconst Kl = /* @__PURE__ */ new Uint32Array([\n  0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e,\n]);\nconst Kr = /* @__PURE__ */ new Uint32Array([\n  0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000,\n]);\n// It's called f() in spec.\nfunction f(group: number, x: number, y: number, z: number): number {\n  if (group === 0) return x ^ y ^ z;\n  else if (group === 1) return (x & y) | (~x & z);\n  else if (group === 2) return (x | ~y) ^ z;\n  else if (group === 3) return (x & z) | (y & ~z);\n  else return x ^ (y | ~z);\n}\n// Temporary buffer, not used to store anything between runs\nconst R_BUF = /* @__PURE__ */ new Uint32Array(16);\nexport class RIPEMD160 extends HashMD<RIPEMD160> {\n  private h0 = 0x67452301 | 0;\n  private h1 = 0xefcdab89 | 0;\n  private h2 = 0x98badcfe | 0;\n  private h3 = 0x10325476 | 0;\n  private h4 = 0xc3d2e1f0 | 0;\n\n  constructor() {\n    super(64, 20, 8, true);\n  }\n  protected get(): [number, number, number, number, number] {\n    const { h0, h1, h2, h3, h4 } = this;\n    return [h0, h1, h2, h3, h4];\n  }\n  protected set(h0: number, h1: number, h2: number, h3: number, h4: number) {\n    this.h0 = h0 | 0;\n    this.h1 = h1 | 0;\n    this.h2 = h2 | 0;\n    this.h3 = h3 | 0;\n    this.h4 = h4 | 0;\n  }\n  protected process(view: DataView, offset: number): void {\n    for (let i = 0; i < 16; i++, offset += 4) R_BUF[i] = view.getUint32(offset, true);\n    // prettier-ignore\n    let al = this.h0 | 0, ar = al,\n        bl = this.h1 | 0, br = bl,\n        cl = this.h2 | 0, cr = cl,\n        dl = this.h3 | 0, dr = dl,\n        el = this.h4 | 0, er = el;\n\n    // Instead of iterating 0 to 80, we split it into 5 groups\n    // And use the groups in constants, functions, etc. Much simpler\n    for (let group = 0; group < 5; group++) {\n      const rGroup = 4 - group;\n      const hbl = Kl[group], hbr = Kr[group]; // prettier-ignore\n      const rl = idxL[group], rr = idxR[group]; // prettier-ignore\n      const sl = shiftsL[group], sr = shiftsR[group]; // prettier-ignore\n      for (let i = 0; i < 16; i++) {\n        const tl = (rotl(al + f(group, bl, cl, dl) + R_BUF[rl[i]] + hbl, sl[i]) + el) | 0;\n        al = el, el = dl, dl = rotl(cl, 10) | 0, cl = bl, bl = tl; // prettier-ignore\n      }\n      // 2 loops are 10% faster\n      for (let i = 0; i < 16; i++) {\n        const tr = (rotl(ar + f(rGroup, br, cr, dr) + R_BUF[rr[i]] + hbr, sr[i]) + er) | 0;\n        ar = er, er = dr, dr = rotl(cr, 10) | 0, cr = br, br = tr; // prettier-ignore\n      }\n    }\n    // Add the compressed chunk to the current hash value\n    this.set(\n      (this.h1 + cl + dr) | 0,\n      (this.h2 + dl + er) | 0,\n      (this.h3 + el + ar) | 0,\n      (this.h4 + al + br) | 0,\n      (this.h0 + bl + cr) | 0\n    );\n  }\n  protected roundClean() {\n    R_BUF.fill(0);\n  }\n  destroy() {\n    this.destroyed = true;\n    this.buffer.fill(0);\n    this.set(0, 0, 0, 0, 0);\n  }\n}\n\n/**\n * RIPEMD-160 - a hash function from 1990s.\n * @param message - msg that would be hashed\n */\nexport const ripemd160 = /* @__PURE__ */ wrapConstructor(() => new RIPEMD160());\n","import { WalletType } from '@usecapsule/user-management-client';\nimport { toBech32 } from '@cosmjs/encoding';\nimport { sha256 } from '@noble/hashes/sha256';\nimport { ripemd160 } from '@noble/hashes/ripemd160';\nimport elliptic from 'elliptic';\nconst secp256k1 = new elliptic.ec('secp256k1');\nexport function hexStringToBase64(hexString) {\n    if (hexString.substring(0, 2) === '0x') {\n        hexString = hexString.substring(2);\n    }\n    return Buffer.from(hexString, 'hex').toString('base64');\n}\nexport function hexToSignature(hexSig) {\n    return {\n        r: `0x${hexSig.slice(2, 66)}`,\n        s: `0x${hexSig.slice(66, 130)}`,\n        v: BigInt(hexSig.slice(130, 132)),\n    };\n}\nexport function hexToUint8Array(hex) {\n    if (hex.startsWith('0x')) {\n        hex = hex.slice(2);\n    }\n    return new Uint8Array(Buffer.from(hex, 'hex'));\n}\nexport function hexToDecimal(hex) {\n    if (hex.startsWith('0x')) {\n        hex = hex.slice(2);\n    }\n    return `${parseInt(hex, 16)}`;\n}\nexport function decimalToHex(decimal) {\n    return `0x${parseInt(decimal).toString(16)}`;\n}\nexport function isCosmosWithPrefix(supportedWalletTypes) {\n    var _a;\n    return !!((_a = supportedWalletTypes[WalletType.COSMOS]) === null || _a === void 0 ? void 0 : _a.prefix);\n}\nfunction compressPubkey(pubkey) {\n    switch (pubkey.length) {\n        case 33:\n            return pubkey;\n        case 65:\n            return Uint8Array.from(secp256k1.keyFromPublic(pubkey).getPublic(true, 'array'));\n        default:\n            throw new Error('Invalid pubkey length');\n    }\n}\nfunction rawSecp256k1PubkeyToRawAddress(pubkeyData) {\n    if (pubkeyData.length !== 33) {\n        throw new Error(`Invalid Secp256k1 pubkey length (compressed): ${pubkeyData.length}`);\n    }\n    return ripemd160(sha256(pubkeyData));\n}\nexport function getCosmosAddress(publicKey, prefix) {\n    const uncompressedPublicKey = new Uint8Array(Buffer.from(publicKey.startsWith('0x') ? publicKey.slice(2) : publicKey, 'hex'));\n    const compressedPublicKey = compressPubkey(uncompressedPublicKey);\n    return toBech32(prefix, rawSecp256k1PubkeyToRawAddress(compressedPublicKey));\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { encodeSecp256k1Signature, serializeSignDoc, } from '@cosmjs/amino';\nimport { Secp256k1, Sha256, sha256, ExtendedSecp256k1Signature } from '@cosmjs/crypto';\nimport { makeSignBytes } from '@cosmjs/proto-signing';\nimport { NON_ED25519, hexToSignature, hexToUint8Array, getCosmosAddress, } from '@usecapsule/core-sdk';\nclass CapsuleCosmosSigner {\n    constructor(capsule, prefix = 'cosmos', walletId) {\n        this.currentWalletId = capsule.findWalletId(walletId, { scheme: NON_ED25519 });\n        this.capsule = capsule;\n        this.prefix = prefix;\n    }\n    get currentWallet() {\n        var _a;\n        return ((_a = this.capsule.wallets[this.currentWalletId]) !== null && _a !== void 0 ? _a : (() => {\n            throw new Error(`no valid Capsule wallet found`);\n        })());\n    }\n    get publicKey() {\n        const uncompressedPublicKey = hexToUint8Array(this.currentWallet.publicKey);\n        const compressedPublicKey = Secp256k1.compressPubkey(uncompressedPublicKey);\n        return compressedPublicKey;\n    }\n    get address() {\n        return getCosmosAddress(this.currentWallet.publicKey, this.prefix);\n    }\n    getAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return [\n                {\n                    algo: 'secp256k1',\n                    address: this.address,\n                    pubkey: this.publicKey,\n                },\n            ];\n        });\n    }\n}\nexport class CapsuleProtoSigner extends CapsuleCosmosSigner {\n    signDirect(address, signDoc) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const signBytes = makeSignBytes(signDoc);\n            if (address !== this.address) {\n                throw new Error(`Address ${address} not found in wallet`);\n            }\n            const hashedMessage = sha256(signBytes);\n            const res = yield this.capsule.signMessage(this.currentWallet.id, Buffer.from(hashedMessage.buffer).toString('base64'));\n            const signature = hexToSignature(`0x${res.signature}`);\n            const extendedSignature = new ExtendedSecp256k1Signature(hexToUint8Array(signature.r), hexToUint8Array(signature.s), Number(signature.v));\n            const signatureBytes = new Uint8Array([...extendedSignature.r(32), ...extendedSignature.s(32)]);\n            return {\n                signed: signDoc,\n                signature: encodeSecp256k1Signature(this.publicKey, signatureBytes),\n            };\n        });\n    }\n}\nexport class CapsuleAminoSigner extends CapsuleCosmosSigner {\n    signAmino(signerAddress, signDoc) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (signerAddress !== this.address) {\n                throw new Error(`Address ${signerAddress} not found in wallet`);\n            }\n            const hashedMessage = new Sha256(serializeSignDoc(signDoc)).digest();\n            const res = yield this.capsule.signMessage(this.currentWallet.id, Buffer.from(hashedMessage.buffer).toString('base64'));\n            const signature = hexToSignature(`0x${res.signature}`);\n            const extendedSignature = new ExtendedSecp256k1Signature(hexToUint8Array(signature.r), hexToUint8Array(signature.s), Number(signature.v));\n            const signatureBytes = new Uint8Array([...extendedSignature.r(32), ...extendedSignature.s(32)]);\n            return {\n                signed: signDoc,\n                signature: encodeSecp256k1Signature(this.publicKey, signatureBytes),\n            };\n        });\n    }\n}\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CapsuleAminoSigner, CapsuleProtoSigner } from \"@usecapsule/cosmjs-v0-integration\";\nexport const chainIdtoAddressPrefix = {\n    \"phoenix-1\": \"terra\",\n    \"loyal-main-02\": \"loyal\",\n    \"empowerchain-1\": \"empower\",\n    \"kichain-2\": \"ki\",\n    \"neutron-1\": \"neutron\",\n    \"akashnet-2\": \"akash\",\n    \"pacific-1\": \"sei\",\n    \"quicksilver-2\": \"quick\",\n    \"injective-1\": \"inj\",\n    \"umee-1\": \"umee\",\n    darchub: \"darc\",\n    \"secret-4\": \"secret\",\n    \"chihuahua-1\": \"chihuahua\",\n    \"osmosis-1\": \"osmo\",\n    \"passage-2\": \"pasg\",\n    \"agoric-3\": \"agoric\",\n    \"passage-1\": \"pasg\",\n    \"xstaxy-1\": \"aura\",\n    \"nois-1\": \"nois\",\n    \"crescent-1\": \"cre\",\n    nyx: \"n\",\n    \"fetchhub-4\": \"fetch\",\n    \"noble-1\": \"noble\",\n    \"gravity-bridge-3\": \"gravity\",\n    \"bitsong-2b\": \"bitsong\",\n    \"dydx-mainnet-1\": \"dydx\",\n    \"cronosmainnet_25-1\": \"crc\",\n    celestia: \"celestia\",\n    \"jackal-1\": \"jkl\",\n    \"pirin-1\": \"nolus\",\n    \"meme-1\": \"meme\",\n    \"dimension_37-1\": \"xpla\",\n    \"centauri-1\": \"centauri\",\n    \"mantle-1\": \"mantle\",\n    \"quasar-1\": \"quasar\",\n    \"evmos_9001-2\": \"evmos\",\n    \"planq_7070-2\": \"plq\",\n    \"sifchain-1\": \"sif\",\n    \"bitcanna-1\": \"bcna\",\n    \"eightball-1\": \"8ball\",\n    gitopia: \"gitopia\",\n    \"lum-network-1\": \"lum\",\n    \"ununifi-beta-v1\": \"ununifi\",\n    \"canto_7700-1\": \"canto\",\n    \"archway-1\": \"archway\",\n    \"mars-1\": \"mars\",\n    \"teritori-1\": \"tori\",\n    \"migaloo-1\": \"migaloo\",\n    \"comdex-1\": \"comdex\",\n    \"omniflixhub-1\": \"omniflix\",\n    \"core-1\": \"persistence\",\n    \"shentu-2.2\": \"shentu\",\n    \"columbus-5\": \"terra\",\n    \"axelar-dojo-1\": \"axelar\",\n    \"stride-1\": \"stride\",\n    \"kaiyo-1\": \"kujira\",\n    \"cosmoshub-4\": \"cosmos\",\n    \"kava_2222-10\": \"kava\",\n    \"sommelier-3\": \"somm\",\n    \"crypto-org-chain-mainnet-1\": \"cro\",\n    \"stargaze-1\": \"stars\",\n    \"juno-1\": \"juno\",\n    \"theta-testnet-001\": \"cosmos\",\n    \"uni-5\": \"juno\",\n    \"osmo-test-5\": \"osmo\",\n    \"pulsar-2\": \"secret\",\n    \"constantine-3\": \"archway\",\n    \"axelar-testnet-lisbon-3\": \"axelar\",\n    \"carbon-1\": \"swth\",\n    \"perun-1\": \"c4e\",\n    \"babajaga-1\": \"c4e\",\n    \"cheqd-mainnet-1\": \"cheqd\",\n    \"coreum-mainnet-1\": \"core\",\n    \"coreum-testnet-1\": \"testcore\",\n    \"cudos-1\": \"cudos\",\n    \"mainnet-3\": \"decentr\",\n    \"desmos-mainnet\": \"desmos\",\n    \"dydx-testnet-1\": \"dydx\",\n    \"emoney-3\": \"emoney\",\n    \"circulus-1\": \"empower\",\n    \"injective-888\": \"inj\",\n    \"irishub-1\": \"iaa\",\n    \"ixo-5\": \"ixo\",\n    \"pandora-8\": \"ixo\",\n    \"kyve-1\": \"kyve\",\n    \"kaon-1\": \"kyve\",\n    \"likecoin-mainnet-2\": \"like\",\n    \"ares-1\": \"mars\",\n    \"mayachain-mainnet-v1\": \"maya\",\n    \"pion-1\": \"neutron\",\n    \"nibiru-itn-1\": \"nibi\",\n    \"grand-1\": \"noble\",\n    \"nolus-rila\": \"nolus\",\n    \"nomic-stakenet-3\": \"nomic\",\n    \"nomic-testnet-4d\": \"nomic\",\n    \"onomy-mainnet-1\": \"onomy\",\n    \"test-core-1\": \"persistence\",\n    \"planq_7000-4\": \"plq\",\n    \"qsr-questnet-04\": \"quasar\",\n    \"atlantic-1\": \"sei\",\n    \"atlantic-2\": \"sei\",\n    \"elgafar-1\": \"stars\",\n    \"iov-mainnet-ibc\": \"star\",\n};\n/**\n * Connect a capsule to MetaMask.\n *\n * @param capsuleId - The ID of the capsule.\n * @param params - The params to pass with the capsule to connect.\n */\nexport const connectCapsule = (capsule) => __awaiter(void 0, void 0, void 0, function* () {\n    return new Promise((resolve, reject) => {\n        var _a, _b;\n        const address = (_b = (_a = Object.values(capsule.getWallets())) === null || _a === void 0 ? void 0 : _a[0]) === null || _b === void 0 ? void 0 : _b.address;\n        capsule.isSessionActive().then((isSessionActive) => {\n            if (isSessionActive && address) {\n                return resolve(true);\n            }\n            window.successFromCapsuleModal = () => {\n                resolve(true);\n            };\n            window.failureFromCapsuleModal = () => {\n                reject();\n            };\n            if (!window.openCapsuleModal) {\n                console.log(\"Social login UI package missing.\");\n                console.log(\"Consider adding @leapwallet/cosmos-social-login-capsule-provider-ui\");\n                return;\n            }\n            window.openCapsuleModal(capsule);\n        });\n    });\n});\nexport const requestAminoSignature = (capsule, chainId, signerAddress, signDoc, options) => __awaiter(void 0, void 0, void 0, function* () {\n    const isConnected = yield capsule.isSessionActive();\n    if (!isConnected) {\n        yield connectCapsule(capsule);\n        throw new Error(\"Wallet is not connected, please connect again\");\n    }\n    const modifiedSignature = yield new Promise((resolve, reject) => {\n        window.successFromTransactionSigningModal = (params) => __awaiter(void 0, void 0, void 0, function* () {\n            var _a, _b;\n            const wallets = (_b = Object.values((_a = capsule.getWallets()) !== null && _a !== void 0 ? _a : {})) === null || _b === void 0 ? void 0 : _b[0];\n            const walletSigner = new CapsuleAminoSigner(capsule, chainIdtoAddressPrefix[chainId], wallets === null || wallets === void 0 ? void 0 : wallets.id);\n            const signature = yield walletSigner.signAmino(signerAddress, signDoc);\n            const modifiedSignature = {\n                signature: signature.signature,\n                signed: signature.signed,\n            };\n            resolve(modifiedSignature);\n        });\n        window.failureFromTransactionSigningModal = (err) => {\n            reject(err);\n        };\n        if (window.openTransactionSigningModal) {\n            window.openTransactionSigningModal(capsule, chainId, signerAddress, signDoc, Object.assign({ isAmino: true }, (options !== null && options !== void 0 ? options : {})));\n        }\n        else {\n            window.successFromTransactionSigningModal({\n                capsule: capsule,\n                chainId: chainId,\n                signerAddress: signerAddress,\n                signDoc: signDoc,\n            });\n        }\n    });\n    return modifiedSignature;\n});\nexport const requestSignature = (capsule, chainId, signerAddress, signDoc) => __awaiter(void 0, void 0, void 0, function* () {\n    const isConnected = yield capsule.isSessionActive();\n    if (!isConnected) {\n        yield connectCapsule(capsule);\n        throw new Error(\"Wallet is not connected, please connect again\");\n    }\n    const modifiedSignature = yield new Promise((resolve, reject) => {\n        window.successFromTransactionSigningModal = (params) => __awaiter(void 0, void 0, void 0, function* () {\n            var _a, _b;\n            const wallets = (_b = Object.values((_a = capsule.getWallets()) !== null && _a !== void 0 ? _a : {})) === null || _b === void 0 ? void 0 : _b[0];\n            const walletSigner = new CapsuleProtoSigner(capsule, chainIdtoAddressPrefix[chainId], wallets === null || wallets === void 0 ? void 0 : wallets.id);\n            const signature = yield walletSigner.signDirect(signerAddress, signDoc);\n            const modifiedSignature = {\n                signature: signature.signature,\n                signed: signature.signed,\n            };\n            resolve(modifiedSignature);\n        });\n        window.failureFromTransactionSigningModal = (err) => {\n            reject(err);\n        };\n        if (window.openTransactionSigningModal) {\n            window.openTransactionSigningModal(capsule, chainId, signerAddress, signDoc);\n        }\n        else {\n            window.successFromTransactionSigningModal({\n                capsule: capsule,\n                chainId: chainId,\n                signerAddress: signerAddress,\n                signDoc: signDoc,\n            });\n        }\n    });\n    return modifiedSignature;\n});\nexport const getKey = (capsule, chainId) => __awaiter(void 0, void 0, void 0, function* () {\n    var _a, _b;\n    const wallets = Object.values((_a = capsule === null || capsule === void 0 ? void 0 : capsule.getWallets()) !== null && _a !== void 0 ? _a : {});\n    if (wallets.length < 1) {\n        yield connectCapsule(capsule);\n        throw Error(\"Not possible\");\n    }\n    const walletSigner = new CapsuleProtoSigner(capsule, chainIdtoAddressPrefix[chainId], (_b = wallets === null || wallets === void 0 ? void 0 : wallets[0]) === null || _b === void 0 ? void 0 : _b.id);\n    const accountData = (yield walletSigner.getAccounts())[0];\n    if (!accountData)\n        throw new Error(\"No account data found\");\n    return accountData;\n});\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { getKey, requestSignature } from \"./capsuleConnector\";\nexport class cosmjsOfflineSigner {\n    constructor(chainId, capsule) {\n        this.chainId = chainId;\n        this.capsule = capsule;\n        this.chainId = chainId;\n        this.capsule = capsule;\n    }\n    getAccounts() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const key = yield getKey(this.capsule, this.chainId);\n            return [\n                {\n                    address: key.address,\n                    algo: \"secp256k1\",\n                    pubkey: key.pubkey,\n                },\n            ];\n        });\n    }\n    // @ts-ignore\n    signDirect(signerAddress, signDoc) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.chainId !== signDoc.chainId) {\n                throw new Error(\"Chain ID does not match signer chain ID\");\n            }\n            const accounts = yield this.getAccounts();\n            console.log(\"logging accounts\", accounts);\n            if (accounts.find((account) => account.address !== signerAddress)) {\n                throw new Error(\"Signer address does not match wallet address\");\n            }\n            return requestSignature(this.capsule, this.chainId, signerAddress, signDoc);\n        });\n    }\n}\nexport function getOfflineSigner(chainId, capsule) {\n    return new cosmjsOfflineSigner(chainId, capsule);\n}\n","export const LeapCapsuleInfo = {\n    name: 'leap-capsule-social-login',\n    prettyName: 'Sign In with Email',\n    logo: 'https://leap-wallet-assets.s3.amazonaws.com/social-login/mail.svg',\n    mode: 'extension',\n    mobileDisabled: false,\n    rejectMessage: {\n        source: 'Request rejected',\n    },\n    downloads: [\n        {\n            device: 'desktop',\n            browser: 'chrome',\n            link: 'https://chrome.google.com/webstore/detail/metamask-flask-developmen/ljfoeinjpaedjfecbmggjgodbgkmjkjk',\n        },\n    ],\n    connectEventNamesOnWindow: ['leap_keystorechange'],\n};\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport Capsule, { Environment } from \"@usecapsule/web-sdk\";\nimport { CapsuleAminoSigner } from \"@usecapsule/cosmjs-v0-integration\";\nimport { chainIdtoAddressPrefix, connectCapsule, getKey, requestAminoSignature, requestSignature, } from \"./capsuleConnector\";\nimport { cosmjsOfflineSigner } from \"./offlineSigner\";\nexport class CapsuleProvider {\n    constructor(options = {}) {\n        var _a;\n        const capsuleEnv = (options.env || Environment.BETA);\n        const defaultOpts = {\n            emailPrimaryColor: \"#29a873\",\n            homepageUrl: \"https://leapwallet.io\",\n            portalTheme: {\n                backgroundColor: \"#141414\",\n                foregroundColor: \"#29a873\",\n                borderRadius: \"sm\",\n            },\n        };\n        window.capsule = new Capsule(capsuleEnv, options.apiKey, (_a = options.opts) !== null && _a !== void 0 ? _a : defaultOpts);\n    }\n    getClient() {\n        return window.capsule;\n    }\n    getKey(chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return getKey(window.capsule, chainId);\n        });\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.handleConnect();\n        });\n    }\n    disconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (window.capsuleLogout) {\n                window.capsuleLogout();\n            }\n            else {\n                window.capsule.logout();\n            }\n        });\n    }\n    getSimpleAccount(chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { address, username } = yield this.getAccount(chainId);\n            return {\n                namespace: \"cosmos\",\n                chainId,\n                address,\n                username,\n            };\n        });\n    }\n    handleConnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield connectCapsule(window.capsule);\n        });\n    }\n    connect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield connectCapsule(window.capsule);\n        });\n    }\n    getAccount(chainId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            yield this.handleConnect();\n            const key = yield getKey(window.capsule, chainId);\n            return {\n                username: (_a = window === null || window === void 0 ? void 0 : window.capsule) === null || _a === void 0 ? void 0 : _a.getEmail(),\n                address: key.address,\n                algo: key.algo,\n                pubkey: key.pubkey,\n            };\n        });\n    }\n    getOfflineSigner(chainId, preferredSignType) {\n        switch (preferredSignType) {\n            case \"amino\":\n                return this.getOfflineSignerAmino(chainId);\n            case \"direct\":\n                return this.getOfflineSignerDirect(chainId);\n            default:\n                return this.getOfflineSignerAmino(chainId);\n        }\n    }\n    getOfflineSignerAmino(chainId) {\n        var _a, _b;\n        const wallets = (_b = Object.values((_a = window.capsule) === null || _a === void 0 ? void 0 : _a.getWallets())) === null || _b === void 0 ? void 0 : _b[0];\n        return new CapsuleAminoSigner(window.capsule, chainIdtoAddressPrefix[chainId], wallets === null || wallets === void 0 ? void 0 : wallets.id);\n    }\n    getOfflineSignerDirect(chainId) {\n        return new cosmjsOfflineSigner(chainId, window.capsule);\n    }\n    signAmino(chainId, signer, signDoc, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return requestAminoSignature(window.capsule, chainId, signer, signDoc);\n        });\n    }\n    signArbitrary(chainId, signer, data, signOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let isADR36WithString = false;\n            [data, isADR36WithString] = this.getDataForADR36(data);\n            const signDoc = this.getADR36SignDoc(signer, data);\n            return requestAminoSignature(window.capsule, chainId, signer, signDoc, {\n                isADR36WithString,\n                isSignArbitrary: true,\n            });\n        });\n    }\n    signDirect(chainId, signer, signDoc) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return requestSignature(window.capsule, chainId, signer, signDoc);\n        });\n    }\n    getDataForADR36(data) {\n        let isADR36WithString = false;\n        if (typeof data === \"string\") {\n            data = Buffer.from(data).toString(\"base64\");\n            isADR36WithString = true;\n        }\n        else {\n            data = Buffer.from(data).toString(\"base64\");\n        }\n        return [data, isADR36WithString];\n    }\n    getADR36SignDoc(signer, data) {\n        return {\n            chain_id: \"\",\n            account_number: \"0\",\n            sequence: \"0\",\n            fee: {\n                gas: \"0\",\n                amount: [],\n            },\n            msgs: [\n                {\n                    type: \"sign/MsgSignData\",\n                    value: {\n                        signer,\n                        data,\n                    },\n                },\n            ],\n            memo: \"\",\n        };\n    }\n}\nexport { OAuthMethod } from \"@usecapsule/web-sdk\";\nexport * from \"./registry\";\nexport * from \"./types\";\n",null,null,null,null,null,null,null,"'use strict'\nvar ALPHABET = 'qpzry9x8gf2tvdw0s3jn54khce6mua7l'\n\n// pre-compute lookup table\nvar ALPHABET_MAP = {}\nfor (var z = 0; z < ALPHABET.length; z++) {\n  var x = ALPHABET.charAt(z)\n\n  if (ALPHABET_MAP[x] !== undefined) throw new TypeError(x + ' is ambiguous')\n  ALPHABET_MAP[x] = z\n}\n\nfunction polymodStep (pre) {\n  var b = pre >> 25\n  return ((pre & 0x1FFFFFF) << 5) ^\n    (-((b >> 0) & 1) & 0x3b6a57b2) ^\n    (-((b >> 1) & 1) & 0x26508e6d) ^\n    (-((b >> 2) & 1) & 0x1ea119fa) ^\n    (-((b >> 3) & 1) & 0x3d4233dd) ^\n    (-((b >> 4) & 1) & 0x2a1462b3)\n}\n\nfunction prefixChk (prefix) {\n  var chk = 1\n  for (var i = 0; i < prefix.length; ++i) {\n    var c = prefix.charCodeAt(i)\n    if (c < 33 || c > 126) return 'Invalid prefix (' + prefix + ')'\n\n    chk = polymodStep(chk) ^ (c >> 5)\n  }\n  chk = polymodStep(chk)\n\n  for (i = 0; i < prefix.length; ++i) {\n    var v = prefix.charCodeAt(i)\n    chk = polymodStep(chk) ^ (v & 0x1f)\n  }\n  return chk\n}\n\nfunction encode (prefix, words, LIMIT) {\n  LIMIT = LIMIT || 90\n  if ((prefix.length + 7 + words.length) > LIMIT) throw new TypeError('Exceeds length limit')\n\n  prefix = prefix.toLowerCase()\n\n  // determine chk mod\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') throw new Error(chk)\n\n  var result = prefix + '1'\n  for (var i = 0; i < words.length; ++i) {\n    var x = words[i]\n    if ((x >> 5) !== 0) throw new Error('Non 5-bit word')\n\n    chk = polymodStep(chk) ^ x\n    result += ALPHABET.charAt(x)\n  }\n\n  for (i = 0; i < 6; ++i) {\n    chk = polymodStep(chk)\n  }\n  chk ^= 1\n\n  for (i = 0; i < 6; ++i) {\n    var v = (chk >> ((5 - i) * 5)) & 0x1f\n    result += ALPHABET.charAt(v)\n  }\n\n  return result\n}\n\nfunction __decode (str, LIMIT) {\n  LIMIT = LIMIT || 90\n  if (str.length < 8) return str + ' too short'\n  if (str.length > LIMIT) return 'Exceeds length limit'\n\n  // don't allow mixed case\n  var lowered = str.toLowerCase()\n  var uppered = str.toUpperCase()\n  if (str !== lowered && str !== uppered) return 'Mixed-case string ' + str\n  str = lowered\n\n  var split = str.lastIndexOf('1')\n  if (split === -1) return 'No separator character for ' + str\n  if (split === 0) return 'Missing prefix for ' + str\n\n  var prefix = str.slice(0, split)\n  var wordChars = str.slice(split + 1)\n  if (wordChars.length < 6) return 'Data too short'\n\n  var chk = prefixChk(prefix)\n  if (typeof chk === 'string') return chk\n\n  var words = []\n  for (var i = 0; i < wordChars.length; ++i) {\n    var c = wordChars.charAt(i)\n    var v = ALPHABET_MAP[c]\n    if (v === undefined) return 'Unknown character ' + c\n    chk = polymodStep(chk) ^ v\n\n    // not in the checksum?\n    if (i + 6 >= wordChars.length) continue\n    words.push(v)\n  }\n\n  if (chk !== 1) return 'Invalid checksum for ' + str\n  return { prefix: prefix, words: words }\n}\n\nfunction decodeUnsafe () {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n}\n\nfunction decode (str) {\n  var res = __decode.apply(null, arguments)\n  if (typeof res === 'object') return res\n\n  throw new Error(res)\n}\n\nfunction convert (data, inBits, outBits, pad) {\n  var value = 0\n  var bits = 0\n  var maxV = (1 << outBits) - 1\n\n  var result = []\n  for (var i = 0; i < data.length; ++i) {\n    value = (value << inBits) | data[i]\n    bits += inBits\n\n    while (bits >= outBits) {\n      bits -= outBits\n      result.push((value >> bits) & maxV)\n    }\n  }\n\n  if (pad) {\n    if (bits > 0) {\n      result.push((value << (outBits - bits)) & maxV)\n    }\n  } else {\n    if (bits >= inBits) return 'Excess padding'\n    if ((value << (outBits - bits)) & maxV) return 'Non-zero padding'\n  }\n\n  return result\n}\n\nfunction toWordsUnsafe (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n}\n\nfunction toWords (bytes) {\n  var res = convert(bytes, 8, 5, true)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nfunction fromWordsUnsafe (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n}\n\nfunction fromWords (words) {\n  var res = convert(words, 5, 8, false)\n  if (Array.isArray(res)) return res\n\n  throw new Error(res)\n}\n\nmodule.exports = {\n  decodeUnsafe: decodeUnsafe,\n  decode: decode,\n  encode: encode,\n  toWordsUnsafe: toWordsUnsafe,\n  toWords: toWords,\n  fromWordsUnsafe: fromWordsUnsafe,\n  fromWords: fromWords\n}\n",null,"// Currently in sync with Node.js lib/assert.js\n// https://github.com/nodejs/node/commit/2a51ae424a513ec9a6aa3466baa0cc1d55dd4f3b\n\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nvar _require = require('./internal/errors'),\n  _require$codes = _require.codes,\n  ERR_AMBIGUOUS_ARGUMENT = _require$codes.ERR_AMBIGUOUS_ARGUMENT,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_INVALID_ARG_VALUE = _require$codes.ERR_INVALID_ARG_VALUE,\n  ERR_INVALID_RETURN_VALUE = _require$codes.ERR_INVALID_RETURN_VALUE,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS;\nvar AssertionError = require('./internal/assert/assertion_error');\nvar _require2 = require('util/'),\n  inspect = _require2.inspect;\nvar _require$types = require('util/').types,\n  isPromise = _require$types.isPromise,\n  isRegExp = _require$types.isRegExp;\nvar objectAssign = require('object.assign/polyfill')();\nvar objectIs = require('object-is/polyfill')();\nvar RegExpPrototypeTest = require('call-bind/callBound')('RegExp.prototype.test');\nvar errorCache = new Map();\nvar isDeepEqual;\nvar isDeepStrictEqual;\nvar parseExpressionAt;\nvar findNodeAround;\nvar decoder;\nfunction lazyLoadComparison() {\n  var comparison = require('./internal/util/comparisons');\n  isDeepEqual = comparison.isDeepEqual;\n  isDeepStrictEqual = comparison.isDeepStrictEqual;\n}\n\n// Escape control characters but not \\n and \\t to keep the line breaks and\n// indentation intact.\n// eslint-disable-next-line no-control-regex\nvar escapeSequencesRegExp = /[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f]/g;\nvar meta = [\"\\\\u0000\", \"\\\\u0001\", \"\\\\u0002\", \"\\\\u0003\", \"\\\\u0004\", \"\\\\u0005\", \"\\\\u0006\", \"\\\\u0007\", '\\\\b', '', '', \"\\\\u000b\", '\\\\f', '', \"\\\\u000e\", \"\\\\u000f\", \"\\\\u0010\", \"\\\\u0011\", \"\\\\u0012\", \"\\\\u0013\", \"\\\\u0014\", \"\\\\u0015\", \"\\\\u0016\", \"\\\\u0017\", \"\\\\u0018\", \"\\\\u0019\", \"\\\\u001a\", \"\\\\u001b\", \"\\\\u001c\", \"\\\\u001d\", \"\\\\u001e\", \"\\\\u001f\"];\nvar escapeFn = function escapeFn(str) {\n  return meta[str.charCodeAt(0)];\n};\nvar warned = false;\n\n// The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\nvar NO_EXCEPTION_SENTINEL = {};\n\n// All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided. All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction innerFail(obj) {\n  if (obj.message instanceof Error) throw obj.message;\n  throw new AssertionError(obj);\n}\nfunction fail(actual, expected, message, operator, stackStartFn) {\n  var argsLen = arguments.length;\n  var internalMessage;\n  if (argsLen === 0) {\n    internalMessage = 'Failed';\n  } else if (argsLen === 1) {\n    message = actual;\n    actual = undefined;\n  } else {\n    if (warned === false) {\n      warned = true;\n      var warn = process.emitWarning ? process.emitWarning : console.warn.bind(console);\n      warn('assert.fail() with more than one argument is deprecated. ' + 'Please use assert.strictEqual() instead or only pass a message.', 'DeprecationWarning', 'DEP0094');\n    }\n    if (argsLen === 2) operator = '!=';\n  }\n  if (message instanceof Error) throw message;\n  var errArgs = {\n    actual: actual,\n    expected: expected,\n    operator: operator === undefined ? 'fail' : operator,\n    stackStartFn: stackStartFn || fail\n  };\n  if (message !== undefined) {\n    errArgs.message = message;\n  }\n  var err = new AssertionError(errArgs);\n  if (internalMessage) {\n    err.message = internalMessage;\n    err.generatedMessage = true;\n  }\n  throw err;\n}\nassert.fail = fail;\n\n// The AssertionError is defined in internal/error.\nassert.AssertionError = AssertionError;\nfunction innerOk(fn, argLen, value, message) {\n  if (!value) {\n    var generatedMessage = false;\n    if (argLen === 0) {\n      generatedMessage = true;\n      message = 'No value argument passed to `assert.ok()`';\n    } else if (message instanceof Error) {\n      throw message;\n    }\n    var err = new AssertionError({\n      actual: value,\n      expected: true,\n      message: message,\n      operator: '==',\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n}\n\n// Pure assertion tests whether a value is truthy, as determined\n// by !!value.\nfunction ok() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  innerOk.apply(void 0, [ok, args.length].concat(args));\n}\nassert.ok = ok;\n\n// The equality assertion tests shallow, coercive equality with ==.\n/* eslint-disable no-restricted-properties */\nassert.equal = function equal(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  // eslint-disable-next-line eqeqeq\n  if (actual != expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '==',\n      stackStartFn: equal\n    });\n  }\n};\n\n// The non-equality assertion tests for whether two objects are not\n// equal with !=.\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  // eslint-disable-next-line eqeqeq\n  if (actual == expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '!=',\n      stackStartFn: notEqual\n    });\n  }\n};\n\n// The equivalence assertion tests a deep equality relation.\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (!isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepEqual',\n      stackStartFn: deepEqual\n    });\n  }\n};\n\n// The non-equivalence assertion tests for any deep inequality.\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepEqual',\n      stackStartFn: notDeepEqual\n    });\n  }\n};\n/* eslint-enable */\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (!isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepStrictEqual',\n      stackStartFn: deepStrictEqual\n    });\n  }\n};\nassert.notDeepStrictEqual = notDeepStrictEqual;\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (isDeepEqual === undefined) lazyLoadComparison();\n  if (isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepStrictEqual',\n      stackStartFn: notDeepStrictEqual\n    });\n  }\n}\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (!objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'strictEqual',\n      stackStartFn: strictEqual\n    });\n  }\n};\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n  if (objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notStrictEqual',\n      stackStartFn: notStrictEqual\n    });\n  }\n};\nvar Comparison = /*#__PURE__*/_createClass(function Comparison(obj, keys, actual) {\n  var _this = this;\n  _classCallCheck(this, Comparison);\n  keys.forEach(function (key) {\n    if (key in obj) {\n      if (actual !== undefined && typeof actual[key] === 'string' && isRegExp(obj[key]) && RegExpPrototypeTest(obj[key], actual[key])) {\n        _this[key] = actual[key];\n      } else {\n        _this[key] = obj[key];\n      }\n    }\n  });\n});\nfunction compareExceptionKey(actual, expected, key, message, keys, fn) {\n  if (!(key in actual) || !isDeepStrictEqual(actual[key], expected[key])) {\n    if (!message) {\n      // Create placeholder objects to create a nice output.\n      var a = new Comparison(actual, keys);\n      var b = new Comparison(expected, keys, actual);\n      var err = new AssertionError({\n        actual: a,\n        expected: b,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.actual = actual;\n      err.expected = expected;\n      err.operator = fn.name;\n      throw err;\n    }\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: fn.name,\n      stackStartFn: fn\n    });\n  }\n}\nfunction expectedException(actual, expected, msg, fn) {\n  if (typeof expected !== 'function') {\n    if (isRegExp(expected)) return RegExpPrototypeTest(expected, actual);\n    // assert.doesNotThrow does not accept objects.\n    if (arguments.length === 2) {\n      throw new ERR_INVALID_ARG_TYPE('expected', ['Function', 'RegExp'], expected);\n    }\n\n    // Handle primitives properly.\n    if (_typeof(actual) !== 'object' || actual === null) {\n      var err = new AssertionError({\n        actual: actual,\n        expected: expected,\n        message: msg,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.operator = fn.name;\n      throw err;\n    }\n    var keys = Object.keys(expected);\n    // Special handle errors to make sure the name and the message are compared\n    // as well.\n    if (expected instanceof Error) {\n      keys.push('name', 'message');\n    } else if (keys.length === 0) {\n      throw new ERR_INVALID_ARG_VALUE('error', expected, 'may not be an empty object');\n    }\n    if (isDeepEqual === undefined) lazyLoadComparison();\n    keys.forEach(function (key) {\n      if (typeof actual[key] === 'string' && isRegExp(expected[key]) && RegExpPrototypeTest(expected[key], actual[key])) {\n        return;\n      }\n      compareExceptionKey(actual, expected, key, msg, keys, fn);\n    });\n    return true;\n  }\n  // Guard instanceof against arrow functions as they don't have a prototype.\n  if (expected.prototype !== undefined && actual instanceof expected) {\n    return true;\n  }\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n  return expected.call({}, actual) === true;\n}\nfunction getActual(fn) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', 'Function', fn);\n  }\n  try {\n    fn();\n  } catch (e) {\n    return e;\n  }\n  return NO_EXCEPTION_SENTINEL;\n}\nfunction checkIsPromise(obj) {\n  // Accept native ES6 promises and promises that are implemented in a similar\n  // way. Do not accept thenables that use a function as `obj` and that have no\n  // `catch` handler.\n\n  // TODO: thenables are checked up until they have the correct methods,\n  // but according to documentation, the `then` method should receive\n  // the `fulfill` and `reject` arguments as well or it may be never resolved.\n\n  return isPromise(obj) || obj !== null && _typeof(obj) === 'object' && typeof obj.then === 'function' && typeof obj.catch === 'function';\n}\nfunction waitForActual(promiseFn) {\n  return Promise.resolve().then(function () {\n    var resultPromise;\n    if (typeof promiseFn === 'function') {\n      // Return a rejected promise if `promiseFn` throws synchronously.\n      resultPromise = promiseFn();\n      // Fail in case no promise is returned.\n      if (!checkIsPromise(resultPromise)) {\n        throw new ERR_INVALID_RETURN_VALUE('instance of Promise', 'promiseFn', resultPromise);\n      }\n    } else if (checkIsPromise(promiseFn)) {\n      resultPromise = promiseFn;\n    } else {\n      throw new ERR_INVALID_ARG_TYPE('promiseFn', ['Function', 'Promise'], promiseFn);\n    }\n    return Promise.resolve().then(function () {\n      return resultPromise;\n    }).then(function () {\n      return NO_EXCEPTION_SENTINEL;\n    }).catch(function (e) {\n      return e;\n    });\n  });\n}\nfunction expectsError(stackStartFn, actual, error, message) {\n  if (typeof error === 'string') {\n    if (arguments.length === 4) {\n      throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n    }\n    if (_typeof(actual) === 'object' && actual !== null) {\n      if (actual.message === error) {\n        throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error message \\\"\".concat(actual.message, \"\\\" is identical to the message.\"));\n      }\n    } else if (actual === error) {\n      throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error \\\"\".concat(actual, \"\\\" is identical to the message.\"));\n    }\n    message = error;\n    error = undefined;\n  } else if (error != null && _typeof(error) !== 'object' && typeof error !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n  }\n  if (actual === NO_EXCEPTION_SENTINEL) {\n    var details = '';\n    if (error && error.name) {\n      details += \" (\".concat(error.name, \")\");\n    }\n    details += message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'rejects' ? 'rejection' : 'exception';\n    innerFail({\n      actual: undefined,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Missing expected \".concat(fnType).concat(details),\n      stackStartFn: stackStartFn\n    });\n  }\n  if (error && !expectedException(actual, error, message, stackStartFn)) {\n    throw actual;\n  }\n}\nfunction expectsNoError(stackStartFn, actual, error, message) {\n  if (actual === NO_EXCEPTION_SENTINEL) return;\n  if (typeof error === 'string') {\n    message = error;\n    error = undefined;\n  }\n  if (!error || expectedException(actual, error)) {\n    var details = message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'doesNotReject' ? 'rejection' : 'exception';\n    innerFail({\n      actual: actual,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Got unwanted \".concat(fnType).concat(details, \"\\n\") + \"Actual message: \\\"\".concat(actual && actual.message, \"\\\"\"),\n      stackStartFn: stackStartFn\n    });\n  }\n  throw actual;\n}\nassert.throws = function throws(promiseFn) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n  expectsError.apply(void 0, [throws, getActual(promiseFn)].concat(args));\n};\nassert.rejects = function rejects(promiseFn) {\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n  return waitForActual(promiseFn).then(function (result) {\n    return expectsError.apply(void 0, [rejects, result].concat(args));\n  });\n};\nassert.doesNotThrow = function doesNotThrow(fn) {\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n  expectsNoError.apply(void 0, [doesNotThrow, getActual(fn)].concat(args));\n};\nassert.doesNotReject = function doesNotReject(fn) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n  return waitForActual(fn).then(function (result) {\n    return expectsNoError.apply(void 0, [doesNotReject, result].concat(args));\n  });\n};\nassert.ifError = function ifError(err) {\n  if (err !== null && err !== undefined) {\n    var message = 'ifError got unwanted exception: ';\n    if (_typeof(err) === 'object' && typeof err.message === 'string') {\n      if (err.message.length === 0 && err.constructor) {\n        message += err.constructor.name;\n      } else {\n        message += err.message;\n      }\n    } else {\n      message += inspect(err);\n    }\n    var newErr = new AssertionError({\n      actual: err,\n      expected: null,\n      operator: 'ifError',\n      message: message,\n      stackStartFn: ifError\n    });\n\n    // Make sure we actually have a stack trace!\n    var origStack = err.stack;\n    if (typeof origStack === 'string') {\n      // This will remove any duplicated frames from the error frames taken\n      // from within `ifError` and add the original error frames to the newly\n      // created ones.\n      var tmp2 = origStack.split('\\n');\n      tmp2.shift();\n      // Filter all frames existing in err.stack.\n      var tmp1 = newErr.stack.split('\\n');\n      for (var i = 0; i < tmp2.length; i++) {\n        // Find the first occurrence of the frame.\n        var pos = tmp1.indexOf(tmp2[i]);\n        if (pos !== -1) {\n          // Only keep new frames.\n          tmp1 = tmp1.slice(0, pos);\n          break;\n        }\n      }\n      newErr.stack = \"\".concat(tmp1.join('\\n'), \"\\n\").concat(tmp2.join('\\n'));\n    }\n    throw newErr;\n  }\n};\n\n// Currently in sync with Node.js lib/assert.js\n// https://github.com/nodejs/node/commit/2a871df3dfb8ea663ef5e1f8f62701ec51384ecb\nfunction internalMatch(string, regexp, message, fn, fnName) {\n  if (!isRegExp(regexp)) {\n    throw new ERR_INVALID_ARG_TYPE('regexp', 'RegExp', regexp);\n  }\n  var match = fnName === 'match';\n  if (typeof string !== 'string' || RegExpPrototypeTest(regexp, string) !== match) {\n    if (message instanceof Error) {\n      throw message;\n    }\n    var generatedMessage = !message;\n\n    // 'The input was expected to not match the regular expression ' +\n    message = message || (typeof string !== 'string' ? 'The \"string\" argument must be of type string. Received type ' + \"\".concat(_typeof(string), \" (\").concat(inspect(string), \")\") : (match ? 'The input did not match the regular expression ' : 'The input was expected to not match the regular expression ') + \"\".concat(inspect(regexp), \". Input:\\n\\n\").concat(inspect(string), \"\\n\"));\n    var err = new AssertionError({\n      actual: string,\n      expected: regexp,\n      message: message,\n      operator: fnName,\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n}\nassert.match = function match(string, regexp, message) {\n  internalMatch(string, regexp, message, match, 'match');\n};\nassert.doesNotMatch = function doesNotMatch(string, regexp, message) {\n  internalMatch(string, regexp, message, doesNotMatch, 'doesNotMatch');\n};\n\n// Expose a strict only variant of assert\nfunction strict() {\n  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    args[_key6] = arguments[_key6];\n  }\n  innerOk.apply(void 0, [strict, args.length].concat(args));\n}\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;","// Currently in sync with Node.js lib/internal/assert/assertion_error.js\n// https://github.com/nodejs/node/commit/0817840f775032169ddd70c85ac059f18ffcc81c\n\n'use strict';\n\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct.bind(); } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _require = require('util/'),\n  inspect = _require.inspect;\nvar _require2 = require('../errors'),\n  ERR_INVALID_ARG_TYPE = _require2.codes.ERR_INVALID_ARG_TYPE;\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n  return str.substring(this_len - search.length, this_len) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\nfunction repeat(str, count) {\n  count = Math.floor(count);\n  if (str.length == 0 || count == 0) return '';\n  var maxCount = str.length * count;\n  count = Math.floor(Math.log(count) / Math.log(2));\n  while (count) {\n    str += str;\n    count--;\n  }\n  str += str.substring(0, maxCount - str.length);\n  return str;\n}\nvar blue = '';\nvar green = '';\nvar red = '';\nvar white = '';\nvar kReadableOperator = {\n  deepStrictEqual: 'Expected values to be strictly deep-equal:',\n  strictEqual: 'Expected values to be strictly equal:',\n  strictEqualObject: 'Expected \"actual\" to be reference-equal to \"expected\":',\n  deepEqual: 'Expected values to be loosely deep-equal:',\n  equal: 'Expected values to be loosely equal:',\n  notDeepStrictEqual: 'Expected \"actual\" not to be strictly deep-equal to:',\n  notStrictEqual: 'Expected \"actual\" to be strictly unequal to:',\n  notStrictEqualObject: 'Expected \"actual\" not to be reference-equal to \"expected\":',\n  notDeepEqual: 'Expected \"actual\" not to be loosely deep-equal to:',\n  notEqual: 'Expected \"actual\" to be loosely unequal to:',\n  notIdentical: 'Values identical but not reference-equal:'\n};\n\n// Comparing short primitives should just show === / !== instead of using the\n// diff.\nvar kMaxShortLength = 10;\nfunction copyError(source) {\n  var keys = Object.keys(source);\n  var target = Object.create(Object.getPrototypeOf(source));\n  keys.forEach(function (key) {\n    target[key] = source[key];\n  });\n  Object.defineProperty(target, 'message', {\n    value: source.message\n  });\n  return target;\n}\nfunction inspectValue(val) {\n  // The util.inspect default values could be changed. This makes sure the\n  // error messages contain the necessary information nevertheless.\n  return inspect(val, {\n    compact: false,\n    customInspect: false,\n    depth: 1000,\n    maxArrayLength: Infinity,\n    // Assert compares only enumerable properties (with a few exceptions).\n    showHidden: false,\n    // Having a long line as error is better than wrapping the line for\n    // comparison for now.\n    // TODO(BridgeAR): `breakLength` should be limited as soon as soon as we\n    // have meta information about the inspected properties (i.e., know where\n    // in what line the property starts and ends).\n    breakLength: Infinity,\n    // Assert does not detect proxies currently.\n    showProxy: false,\n    sorted: true,\n    // Inspect getters as we also check them when comparing entries.\n    getters: true\n  });\n}\nfunction createErrDiff(actual, expected, operator) {\n  var other = '';\n  var res = '';\n  var lastPos = 0;\n  var end = '';\n  var skipped = false;\n  var actualInspected = inspectValue(actual);\n  var actualLines = actualInspected.split('\\n');\n  var expectedLines = inspectValue(expected).split('\\n');\n  var i = 0;\n  var indicator = '';\n\n  // In case both values are objects explicitly mark them as not reference equal\n  // for the `strictEqual` operator.\n  if (operator === 'strictEqual' && _typeof(actual) === 'object' && _typeof(expected) === 'object' && actual !== null && expected !== null) {\n    operator = 'strictEqualObject';\n  }\n\n  // If \"actual\" and \"expected\" fit on a single line and they are not strictly\n  // equal, check further special handling.\n  if (actualLines.length === 1 && expectedLines.length === 1 && actualLines[0] !== expectedLines[0]) {\n    var inputLength = actualLines[0].length + expectedLines[0].length;\n    // If the character length of \"actual\" and \"expected\" together is less than\n    // kMaxShortLength and if neither is an object and at least one of them is\n    // not `zero`, use the strict equal comparison to visualize the output.\n    if (inputLength <= kMaxShortLength) {\n      if ((_typeof(actual) !== 'object' || actual === null) && (_typeof(expected) !== 'object' || expected === null) && (actual !== 0 || expected !== 0)) {\n        // -0 === +0\n        return \"\".concat(kReadableOperator[operator], \"\\n\\n\") + \"\".concat(actualLines[0], \" !== \").concat(expectedLines[0], \"\\n\");\n      }\n    } else if (operator !== 'strictEqualObject') {\n      // If the stderr is a tty and the input length is lower than the current\n      // columns per line, add a mismatch indicator below the output. If it is\n      // not a tty, use a default value of 80 characters.\n      var maxLength = process.stderr && process.stderr.isTTY ? process.stderr.columns : 80;\n      if (inputLength < maxLength) {\n        while (actualLines[0][i] === expectedLines[0][i]) {\n          i++;\n        }\n        // Ignore the first characters.\n        if (i > 2) {\n          // Add position indicator for the first mismatch in case it is a\n          // single line and the input length is less than the column length.\n          indicator = \"\\n  \".concat(repeat(' ', i), \"^\");\n          i = 0;\n        }\n      }\n    }\n  }\n\n  // Remove all ending lines that match (this optimizes the output for\n  // readability by reducing the number of total changed lines).\n  var a = actualLines[actualLines.length - 1];\n  var b = expectedLines[expectedLines.length - 1];\n  while (a === b) {\n    if (i++ < 2) {\n      end = \"\\n  \".concat(a).concat(end);\n    } else {\n      other = a;\n    }\n    actualLines.pop();\n    expectedLines.pop();\n    if (actualLines.length === 0 || expectedLines.length === 0) break;\n    a = actualLines[actualLines.length - 1];\n    b = expectedLines[expectedLines.length - 1];\n  }\n  var maxLines = Math.max(actualLines.length, expectedLines.length);\n  // Strict equal with identical objects that are not identical by reference.\n  // E.g., assert.deepStrictEqual({ a: Symbol() }, { a: Symbol() })\n  if (maxLines === 0) {\n    // We have to get the result again. The lines were all removed before.\n    var _actualLines = actualInspected.split('\\n');\n\n    // Only remove lines in case it makes sense to collapse those.\n    // TODO: Accept env to always show the full error.\n    if (_actualLines.length > 30) {\n      _actualLines[26] = \"\".concat(blue, \"...\").concat(white);\n      while (_actualLines.length > 27) {\n        _actualLines.pop();\n      }\n    }\n    return \"\".concat(kReadableOperator.notIdentical, \"\\n\\n\").concat(_actualLines.join('\\n'), \"\\n\");\n  }\n  if (i > 3) {\n    end = \"\\n\".concat(blue, \"...\").concat(white).concat(end);\n    skipped = true;\n  }\n  if (other !== '') {\n    end = \"\\n  \".concat(other).concat(end);\n    other = '';\n  }\n  var printedLines = 0;\n  var msg = kReadableOperator[operator] + \"\\n\".concat(green, \"+ actual\").concat(white, \" \").concat(red, \"- expected\").concat(white);\n  var skippedMsg = \" \".concat(blue, \"...\").concat(white, \" Lines skipped\");\n  for (i = 0; i < maxLines; i++) {\n    // Only extra expected lines exist\n    var cur = i - lastPos;\n    if (actualLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(expectedLines[i - 2]);\n          printedLines++;\n        }\n        res += \"\\n  \".concat(expectedLines[i - 1]);\n        printedLines++;\n      }\n      // Mark the current line as the last diverging one.\n      lastPos = i;\n      // Add the expected line to the cache.\n      other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLines[i]);\n      printedLines++;\n      // Only extra actual lines exist\n    } else if (expectedLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(actualLines[i - 2]);\n          printedLines++;\n        }\n        res += \"\\n  \".concat(actualLines[i - 1]);\n        printedLines++;\n      }\n      // Mark the current line as the last diverging one.\n      lastPos = i;\n      // Add the actual line to the result.\n      res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLines[i]);\n      printedLines++;\n      // Lines diverge\n    } else {\n      var expectedLine = expectedLines[i];\n      var actualLine = actualLines[i];\n      // If the lines diverge, specifically check for lines that only diverge by\n      // a trailing comma. In that case it is actually identical and we should\n      // mark it as such.\n      var divergingLines = actualLine !== expectedLine && (!endsWith(actualLine, ',') || actualLine.slice(0, -1) !== expectedLine);\n      // If the expected line has a trailing comma but is otherwise identical,\n      // add a comma at the end of the actual line. Otherwise the output could\n      // look weird as in:\n      //\n      //   [\n      //     1         // No comma at the end!\n      // +   2\n      //   ]\n      //\n      if (divergingLines && endsWith(expectedLine, ',') && expectedLine.slice(0, -1) === actualLine) {\n        divergingLines = false;\n        actualLine += ',';\n      }\n      if (divergingLines) {\n        // If the last diverging line is more than one line above and the\n        // current line is at least line three, add some of the former lines and\n        // also add dots to indicate skipped entries.\n        if (cur > 1 && i > 2) {\n          if (cur > 4) {\n            res += \"\\n\".concat(blue, \"...\").concat(white);\n            skipped = true;\n          } else if (cur > 3) {\n            res += \"\\n  \".concat(actualLines[i - 2]);\n            printedLines++;\n          }\n          res += \"\\n  \".concat(actualLines[i - 1]);\n          printedLines++;\n        }\n        // Mark the current line as the last diverging one.\n        lastPos = i;\n        // Add the actual line to the result and cache the expected diverging\n        // line so consecutive diverging lines show up as +++--- and not +-+-+-.\n        res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLine);\n        other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLine);\n        printedLines += 2;\n        // Lines are identical\n      } else {\n        // Add all cached information to the result before adding other things\n        // and reset the cache.\n        res += other;\n        other = '';\n        // If the last diverging line is exactly one line above or if it is the\n        // very first line, add the line to the result.\n        if (cur === 1 || i === 0) {\n          res += \"\\n  \".concat(actualLine);\n          printedLines++;\n        }\n      }\n    }\n    // Inspected object to big (Show ~20 rows max)\n    if (printedLines > 20 && i < maxLines - 2) {\n      return \"\".concat(msg).concat(skippedMsg, \"\\n\").concat(res, \"\\n\").concat(blue, \"...\").concat(white).concat(other, \"\\n\") + \"\".concat(blue, \"...\").concat(white);\n    }\n  }\n  return \"\".concat(msg).concat(skipped ? skippedMsg : '', \"\\n\").concat(res).concat(other).concat(end).concat(indicator);\n}\nvar AssertionError = /*#__PURE__*/function (_Error, _inspect$custom) {\n  _inherits(AssertionError, _Error);\n  var _super = _createSuper(AssertionError);\n  function AssertionError(options) {\n    var _this;\n    _classCallCheck(this, AssertionError);\n    if (_typeof(options) !== 'object' || options === null) {\n      throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);\n    }\n    var message = options.message,\n      operator = options.operator,\n      stackStartFn = options.stackStartFn;\n    var actual = options.actual,\n      expected = options.expected;\n    var limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 0;\n    if (message != null) {\n      _this = _super.call(this, String(message));\n    } else {\n      if (process.stderr && process.stderr.isTTY) {\n        // Reset on each call to make sure we handle dynamically set environment\n        // variables correct.\n        if (process.stderr && process.stderr.getColorDepth && process.stderr.getColorDepth() !== 1) {\n          blue = \"\\x1B[34m\";\n          green = \"\\x1B[32m\";\n          white = \"\\x1B[39m\";\n          red = \"\\x1B[31m\";\n        } else {\n          blue = '';\n          green = '';\n          white = '';\n          red = '';\n        }\n      }\n      // Prevent the error stack from being visible by duplicating the error\n      // in a very close way to the original in case both sides are actually\n      // instances of Error.\n      if (_typeof(actual) === 'object' && actual !== null && _typeof(expected) === 'object' && expected !== null && 'stack' in actual && actual instanceof Error && 'stack' in expected && expected instanceof Error) {\n        actual = copyError(actual);\n        expected = copyError(expected);\n      }\n      if (operator === 'deepStrictEqual' || operator === 'strictEqual') {\n        _this = _super.call(this, createErrDiff(actual, expected, operator));\n      } else if (operator === 'notDeepStrictEqual' || operator === 'notStrictEqual') {\n        // In case the objects are equal but the operator requires unequal, show\n        // the first object and say A equals B\n        var base = kReadableOperator[operator];\n        var res = inspectValue(actual).split('\\n');\n\n        // In case \"actual\" is an object, it should not be reference equal.\n        if (operator === 'notStrictEqual' && _typeof(actual) === 'object' && actual !== null) {\n          base = kReadableOperator.notStrictEqualObject;\n        }\n\n        // Only remove lines in case it makes sense to collapse those.\n        // TODO: Accept env to always show the full error.\n        if (res.length > 30) {\n          res[26] = \"\".concat(blue, \"...\").concat(white);\n          while (res.length > 27) {\n            res.pop();\n          }\n        }\n\n        // Only print a single input.\n        if (res.length === 1) {\n          _this = _super.call(this, \"\".concat(base, \" \").concat(res[0]));\n        } else {\n          _this = _super.call(this, \"\".concat(base, \"\\n\\n\").concat(res.join('\\n'), \"\\n\"));\n        }\n      } else {\n        var _res = inspectValue(actual);\n        var other = '';\n        var knownOperators = kReadableOperator[operator];\n        if (operator === 'notDeepEqual' || operator === 'notEqual') {\n          _res = \"\".concat(kReadableOperator[operator], \"\\n\\n\").concat(_res);\n          if (_res.length > 1024) {\n            _res = \"\".concat(_res.slice(0, 1021), \"...\");\n          }\n        } else {\n          other = \"\".concat(inspectValue(expected));\n          if (_res.length > 512) {\n            _res = \"\".concat(_res.slice(0, 509), \"...\");\n          }\n          if (other.length > 512) {\n            other = \"\".concat(other.slice(0, 509), \"...\");\n          }\n          if (operator === 'deepEqual' || operator === 'equal') {\n            _res = \"\".concat(knownOperators, \"\\n\\n\").concat(_res, \"\\n\\nshould equal\\n\\n\");\n          } else {\n            other = \" \".concat(operator, \" \").concat(other);\n          }\n        }\n        _this = _super.call(this, \"\".concat(_res).concat(other));\n      }\n    }\n    Error.stackTraceLimit = limit;\n    _this.generatedMessage = !message;\n    Object.defineProperty(_assertThisInitialized(_this), 'name', {\n      value: 'AssertionError [ERR_ASSERTION]',\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n    _this.code = 'ERR_ASSERTION';\n    _this.actual = actual;\n    _this.expected = expected;\n    _this.operator = operator;\n    if (Error.captureStackTrace) {\n      // eslint-disable-next-line no-restricted-syntax\n      Error.captureStackTrace(_assertThisInitialized(_this), stackStartFn);\n    }\n    // Create error message including the error code in the name.\n    _this.stack;\n    // Reset the name.\n    _this.name = 'AssertionError';\n    return _possibleConstructorReturn(_this);\n  }\n  _createClass(AssertionError, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.name, \" [\").concat(this.code, \"]: \").concat(this.message);\n    }\n  }, {\n    key: _inspect$custom,\n    value: function value(recurseTimes, ctx) {\n      // This limits the `actual` and `expected` property default inspection to\n      // the minimum depth. Otherwise those values would be too verbose compared\n      // to the actual error message which contains a combined view of these two\n      // input values.\n      return inspect(this, _objectSpread(_objectSpread({}, ctx), {}, {\n        customInspect: false,\n        depth: 0\n      }));\n    }\n  }]);\n  return AssertionError;\n}( /*#__PURE__*/_wrapNativeSuper(Error), inspect.custom);\nmodule.exports = AssertionError;","// Currently in sync with Node.js lib/internal/errors.js\n// https://github.com/nodejs/node/commit/3b044962c48fe313905877a96b5d0894a5404f6f\n\n/* eslint node-core/documented-errors: \"error\" */\n/* eslint node-core/alphabetize-errors: \"error\" */\n/* eslint node-core/prefer-util-format-errors: \"error\" */\n\n'use strict';\n\n// The whole point behind this internal module is to allow Node.js to no\n// longer be forced to treat every error message change as a semver-major\n// change. The NodeError classes here all expose a `code` property whose\n// value statically and permanently identifies the error. While the error\n// message may change, the code should not.\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nvar codes = {};\n\n// Lazy loaded\nvar assert;\nvar util;\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n  var NodeError = /*#__PURE__*/function (_Base) {\n    _inherits(NodeError, _Base);\n    var _super = _createSuper(NodeError);\n    function NodeError(arg1, arg2, arg3) {\n      var _this;\n      _classCallCheck(this, NodeError);\n      _this = _super.call(this, getMessage(arg1, arg2, arg3));\n      _this.code = code;\n      return _this;\n    }\n    return _createClass(NodeError);\n  }(Base);\n  codes[code] = NodeError;\n}\n\n// https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n  return str.substring(this_len - search.length, this_len) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\ncreateErrorType('ERR_AMBIGUOUS_ARGUMENT', 'The \"%s\" argument is ambiguous. %s', TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  if (assert === undefined) assert = require('../assert');\n  assert(typeof name === 'string', \"'name' must be a string\");\n\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n  var msg;\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  // TODO(BridgeAR): Improve the output by showing `null` and similar.\n  msg += \". Received type \".concat(_typeof(actual));\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_VALUE', function (name, value) {\n  var reason = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'is invalid';\n  if (util === undefined) util = require('util/');\n  var inspected = util.inspect(value);\n  if (inspected.length > 128) {\n    inspected = \"\".concat(inspected.slice(0, 128), \"...\");\n  }\n  return \"The argument '\".concat(name, \"' \").concat(reason, \". Received \").concat(inspected);\n}, TypeError, RangeError);\ncreateErrorType('ERR_INVALID_RETURN_VALUE', function (input, name, value) {\n  var type;\n  if (value && value.constructor && value.constructor.name) {\n    type = \"instance of \".concat(value.constructor.name);\n  } else {\n    type = \"type \".concat(_typeof(value));\n  }\n  return \"Expected \".concat(input, \" to be returned from the \\\"\").concat(name, \"\\\"\") + \" function but got \".concat(type, \".\");\n}, TypeError);\ncreateErrorType('ERR_MISSING_ARGS', function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  if (assert === undefined) assert = require('../assert');\n  assert(args.length > 0, 'At least one arg needs to be specified');\n  var msg = 'The ';\n  var len = args.length;\n  args = args.map(function (a) {\n    return \"\\\"\".concat(a, \"\\\"\");\n  });\n  switch (len) {\n    case 1:\n      msg += \"\".concat(args[0], \" argument\");\n      break;\n    case 2:\n      msg += \"\".concat(args[0], \" and \").concat(args[1], \" arguments\");\n      break;\n    default:\n      msg += args.slice(0, len - 1).join(', ');\n      msg += \", and \".concat(args[len - 1], \" arguments\");\n      break;\n  }\n  return \"\".concat(msg, \" must be specified\");\n}, TypeError);\nmodule.exports.codes = codes;","// Currently in sync with Node.js lib/internal/util/comparisons.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar regexFlagsSupported = /a/g.flags !== undefined;\nvar arrayFromSet = function arrayFromSet(set) {\n  var array = [];\n  set.forEach(function (value) {\n    return array.push(value);\n  });\n  return array;\n};\nvar arrayFromMap = function arrayFromMap(map) {\n  var array = [];\n  map.forEach(function (value, key) {\n    return array.push([key, value]);\n  });\n  return array;\n};\nvar objectIs = Object.is ? Object.is : require('object-is');\nvar objectGetOwnPropertySymbols = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function () {\n  return [];\n};\nvar numberIsNaN = Number.isNaN ? Number.isNaN : require('is-nan');\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\nvar hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\nvar propertyIsEnumerable = uncurryThis(Object.prototype.propertyIsEnumerable);\nvar objectToString = uncurryThis(Object.prototype.toString);\nvar _require$types = require('util/').types,\n  isAnyArrayBuffer = _require$types.isAnyArrayBuffer,\n  isArrayBufferView = _require$types.isArrayBufferView,\n  isDate = _require$types.isDate,\n  isMap = _require$types.isMap,\n  isRegExp = _require$types.isRegExp,\n  isSet = _require$types.isSet,\n  isNativeError = _require$types.isNativeError,\n  isBoxedPrimitive = _require$types.isBoxedPrimitive,\n  isNumberObject = _require$types.isNumberObject,\n  isStringObject = _require$types.isStringObject,\n  isBooleanObject = _require$types.isBooleanObject,\n  isBigIntObject = _require$types.isBigIntObject,\n  isSymbolObject = _require$types.isSymbolObject,\n  isFloat32Array = _require$types.isFloat32Array,\n  isFloat64Array = _require$types.isFloat64Array;\nfunction isNonIndex(key) {\n  if (key.length === 0 || key.length > 10) return true;\n  for (var i = 0; i < key.length; i++) {\n    var code = key.charCodeAt(i);\n    if (code < 48 || code > 57) return true;\n  }\n  // The maximum size for an array is 2 ** 32 -1.\n  return key.length === 10 && key >= Math.pow(2, 32);\n}\nfunction getOwnNonIndexProperties(value) {\n  return Object.keys(value).filter(isNonIndex).concat(objectGetOwnPropertySymbols(value).filter(Object.prototype.propertyIsEnumerable.bind(value)));\n}\n\n// Taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n  var x = a.length;\n  var y = b.length;\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n  if (x < y) {\n    return -1;\n  }\n  if (y < x) {\n    return 1;\n  }\n  return 0;\n}\nvar ONLY_ENUMERABLE = undefined;\nvar kStrict = true;\nvar kLoose = false;\nvar kNoIterator = 0;\nvar kIsArray = 1;\nvar kIsSet = 2;\nvar kIsMap = 3;\n\n// Check if they have the same source and flags\nfunction areSimilarRegExps(a, b) {\n  return regexFlagsSupported ? a.source === b.source && a.flags === b.flags : RegExp.prototype.toString.call(a) === RegExp.prototype.toString.call(b);\n}\nfunction areSimilarFloatArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  for (var offset = 0; offset < a.byteLength; offset++) {\n    if (a[offset] !== b[offset]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction areSimilarTypedArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  return compare(new Uint8Array(a.buffer, a.byteOffset, a.byteLength), new Uint8Array(b.buffer, b.byteOffset, b.byteLength)) === 0;\n}\nfunction areEqualArrayBuffers(buf1, buf2) {\n  return buf1.byteLength === buf2.byteLength && compare(new Uint8Array(buf1), new Uint8Array(buf2)) === 0;\n}\nfunction isEqualBoxedPrimitive(val1, val2) {\n  if (isNumberObject(val1)) {\n    return isNumberObject(val2) && objectIs(Number.prototype.valueOf.call(val1), Number.prototype.valueOf.call(val2));\n  }\n  if (isStringObject(val1)) {\n    return isStringObject(val2) && String.prototype.valueOf.call(val1) === String.prototype.valueOf.call(val2);\n  }\n  if (isBooleanObject(val1)) {\n    return isBooleanObject(val2) && Boolean.prototype.valueOf.call(val1) === Boolean.prototype.valueOf.call(val2);\n  }\n  if (isBigIntObject(val1)) {\n    return isBigIntObject(val2) && BigInt.prototype.valueOf.call(val1) === BigInt.prototype.valueOf.call(val2);\n  }\n  return isSymbolObject(val2) && Symbol.prototype.valueOf.call(val1) === Symbol.prototype.valueOf.call(val2);\n}\n\n// Notes: Type tags are historical [[Class]] properties that can be set by\n// FunctionTemplate::SetClassName() in C++ or Symbol.toStringTag in JS\n// and retrieved using Object.prototype.toString.call(obj) in JS\n// See https://tc39.github.io/ecma262/#sec-object.prototype.tostring\n// for a list of tags pre-defined in the spec.\n// There are some unspecified tags in the wild too (e.g. typed array tags).\n// Since tags can be altered, they only serve fast failures\n//\n// Typed arrays and buffers are checked by comparing the content in their\n// underlying ArrayBuffer. This optimization requires that it's\n// reasonable to interpret their underlying memory in the same way,\n// which is checked by comparing their type tags.\n// (e.g. a Uint8Array and a Uint16Array with the same memory content\n// could still be different because they will be interpreted differently).\n//\n// For strict comparison, objects should have\n// a) The same built-in type tags\n// b) The same prototypes.\n\nfunction innerDeepEqual(val1, val2, strict, memos) {\n  // All identical values are equivalent, as determined by ===.\n  if (val1 === val2) {\n    if (val1 !== 0) return true;\n    return strict ? objectIs(val1, val2) : true;\n  }\n\n  // Check more closely if val1 and val2 are equal.\n  if (strict) {\n    if (_typeof(val1) !== 'object') {\n      return typeof val1 === 'number' && numberIsNaN(val1) && numberIsNaN(val2);\n    }\n    if (_typeof(val2) !== 'object' || val1 === null || val2 === null) {\n      return false;\n    }\n    if (Object.getPrototypeOf(val1) !== Object.getPrototypeOf(val2)) {\n      return false;\n    }\n  } else {\n    if (val1 === null || _typeof(val1) !== 'object') {\n      if (val2 === null || _typeof(val2) !== 'object') {\n        // eslint-disable-next-line eqeqeq\n        return val1 == val2;\n      }\n      return false;\n    }\n    if (val2 === null || _typeof(val2) !== 'object') {\n      return false;\n    }\n  }\n  var val1Tag = objectToString(val1);\n  var val2Tag = objectToString(val2);\n  if (val1Tag !== val2Tag) {\n    return false;\n  }\n  if (Array.isArray(val1)) {\n    // Check for sparse arrays and general fast path\n    if (val1.length !== val2.length) {\n      return false;\n    }\n    var keys1 = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n    var keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kIsArray, keys1);\n  }\n  // [browserify] This triggers on certain types in IE (Map/Set) so we don't\n  // wan't to early return out of the rest of the checks. However we can check\n  // if the second value is one of these values and the first isn't.\n  if (val1Tag === '[object Object]') {\n    // return keyCheck(val1, val2, strict, memos, kNoIterator);\n    if (!isMap(val1) && isMap(val2) || !isSet(val1) && isSet(val2)) {\n      return false;\n    }\n  }\n  if (isDate(val1)) {\n    if (!isDate(val2) || Date.prototype.getTime.call(val1) !== Date.prototype.getTime.call(val2)) {\n      return false;\n    }\n  } else if (isRegExp(val1)) {\n    if (!isRegExp(val2) || !areSimilarRegExps(val1, val2)) {\n      return false;\n    }\n  } else if (isNativeError(val1) || val1 instanceof Error) {\n    // Do not compare the stack as it might differ even though the error itself\n    // is otherwise identical.\n    if (val1.message !== val2.message || val1.name !== val2.name) {\n      return false;\n    }\n  } else if (isArrayBufferView(val1)) {\n    if (!strict && (isFloat32Array(val1) || isFloat64Array(val1))) {\n      if (!areSimilarFloatArrays(val1, val2)) {\n        return false;\n      }\n    } else if (!areSimilarTypedArrays(val1, val2)) {\n      return false;\n    }\n    // Buffer.compare returns true, so val1.length === val2.length. If they both\n    // only contain numeric keys, we don't need to exam further than checking\n    // the symbols.\n    var _keys = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n    var _keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n    if (_keys.length !== _keys2.length) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kNoIterator, _keys);\n  } else if (isSet(val1)) {\n    if (!isSet(val2) || val1.size !== val2.size) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kIsSet);\n  } else if (isMap(val1)) {\n    if (!isMap(val2) || val1.size !== val2.size) {\n      return false;\n    }\n    return keyCheck(val1, val2, strict, memos, kIsMap);\n  } else if (isAnyArrayBuffer(val1)) {\n    if (!areEqualArrayBuffers(val1, val2)) {\n      return false;\n    }\n  } else if (isBoxedPrimitive(val1) && !isEqualBoxedPrimitive(val1, val2)) {\n    return false;\n  }\n  return keyCheck(val1, val2, strict, memos, kNoIterator);\n}\nfunction getEnumerables(val, keys) {\n  return keys.filter(function (k) {\n    return propertyIsEnumerable(val, k);\n  });\n}\nfunction keyCheck(val1, val2, strict, memos, iterationType, aKeys) {\n  // For all remaining Object pairs, including Array, objects and Maps,\n  // equivalence is determined by having:\n  // a) The same number of owned enumerable properties\n  // b) The same set of keys/indexes (although not necessarily the same order)\n  // c) Equivalent values for every corresponding key/index\n  // d) For Sets and Maps, equal contents\n  // Note: this accounts for both named and indexed properties on Arrays.\n  if (arguments.length === 5) {\n    aKeys = Object.keys(val1);\n    var bKeys = Object.keys(val2);\n\n    // The pair must have the same number of owned properties.\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n  }\n\n  // Cheap key test\n  var i = 0;\n  for (; i < aKeys.length; i++) {\n    if (!hasOwnProperty(val2, aKeys[i])) {\n      return false;\n    }\n  }\n  if (strict && arguments.length === 5) {\n    var symbolKeysA = objectGetOwnPropertySymbols(val1);\n    if (symbolKeysA.length !== 0) {\n      var count = 0;\n      for (i = 0; i < symbolKeysA.length; i++) {\n        var key = symbolKeysA[i];\n        if (propertyIsEnumerable(val1, key)) {\n          if (!propertyIsEnumerable(val2, key)) {\n            return false;\n          }\n          aKeys.push(key);\n          count++;\n        } else if (propertyIsEnumerable(val2, key)) {\n          return false;\n        }\n      }\n      var symbolKeysB = objectGetOwnPropertySymbols(val2);\n      if (symbolKeysA.length !== symbolKeysB.length && getEnumerables(val2, symbolKeysB).length !== count) {\n        return false;\n      }\n    } else {\n      var _symbolKeysB = objectGetOwnPropertySymbols(val2);\n      if (_symbolKeysB.length !== 0 && getEnumerables(val2, _symbolKeysB).length !== 0) {\n        return false;\n      }\n    }\n  }\n  if (aKeys.length === 0 && (iterationType === kNoIterator || iterationType === kIsArray && val1.length === 0 || val1.size === 0)) {\n    return true;\n  }\n\n  // Use memos to handle cycles.\n  if (memos === undefined) {\n    memos = {\n      val1: new Map(),\n      val2: new Map(),\n      position: 0\n    };\n  } else {\n    // We prevent up to two map.has(x) calls by directly retrieving the value\n    // and checking for undefined. The map can only contain numbers, so it is\n    // safe to check for undefined only.\n    var val2MemoA = memos.val1.get(val1);\n    if (val2MemoA !== undefined) {\n      var val2MemoB = memos.val2.get(val2);\n      if (val2MemoB !== undefined) {\n        return val2MemoA === val2MemoB;\n      }\n    }\n    memos.position++;\n  }\n  memos.val1.set(val1, memos.position);\n  memos.val2.set(val2, memos.position);\n  var areEq = objEquiv(val1, val2, strict, aKeys, memos, iterationType);\n  memos.val1.delete(val1);\n  memos.val2.delete(val2);\n  return areEq;\n}\nfunction setHasEqualElement(set, val1, strict, memo) {\n  // Go looking.\n  var setValues = arrayFromSet(set);\n  for (var i = 0; i < setValues.length; i++) {\n    var val2 = setValues[i];\n    if (innerDeepEqual(val1, val2, strict, memo)) {\n      // Remove the matching element to make sure we do not check that again.\n      set.delete(val2);\n      return true;\n    }\n  }\n  return false;\n}\n\n// See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Loose_equality_using\n// Sadly it is not possible to detect corresponding values properly in case the\n// type is a string, number, bigint or boolean. The reason is that those values\n// can match lots of different string values (e.g., 1n == '+00001').\nfunction findLooseMatchingPrimitives(prim) {\n  switch (_typeof(prim)) {\n    case 'undefined':\n      return null;\n    case 'object':\n      // Only pass in null as object!\n      return undefined;\n    case 'symbol':\n      return false;\n    case 'string':\n      prim = +prim;\n    // Loose equal entries exist only if the string is possible to convert to\n    // a regular number and not NaN.\n    // Fall through\n    case 'number':\n      if (numberIsNaN(prim)) {\n        return false;\n      }\n  }\n  return true;\n}\nfunction setMightHaveLoosePrim(a, b, prim) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) return altValue;\n  return b.has(altValue) && !a.has(altValue);\n}\nfunction mapMightHaveLoosePrim(a, b, prim, item, memo) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) {\n    return altValue;\n  }\n  var curB = b.get(altValue);\n  if (curB === undefined && !b.has(altValue) || !innerDeepEqual(item, curB, false, memo)) {\n    return false;\n  }\n  return !a.has(altValue) && innerDeepEqual(item, curB, false, memo);\n}\nfunction setEquiv(a, b, strict, memo) {\n  // This is a lazily initiated Set of entries which have to be compared\n  // pairwise.\n  var set = null;\n  var aValues = arrayFromSet(a);\n  for (var i = 0; i < aValues.length; i++) {\n    var val = aValues[i];\n    // Note: Checking for the objects first improves the performance for object\n    // heavy sets but it is a minor slow down for primitives. As they are fast\n    // to check this improves the worst case scenario instead.\n    if (_typeof(val) === 'object' && val !== null) {\n      if (set === null) {\n        set = new Set();\n      }\n      // If the specified value doesn't exist in the second set its an not null\n      // object (or non strict only: a not matching primitive) we'll need to go\n      // hunting for something thats deep-(strict-)equal to it. To make this\n      // O(n log n) complexity we have to copy these values in a new set first.\n      set.add(val);\n    } else if (!b.has(val)) {\n      if (strict) return false;\n\n      // Fast path to detect missing string, symbol, undefined and null values.\n      if (!setMightHaveLoosePrim(a, b, val)) {\n        return false;\n      }\n      if (set === null) {\n        set = new Set();\n      }\n      set.add(val);\n    }\n  }\n  if (set !== null) {\n    var bValues = arrayFromSet(b);\n    for (var _i = 0; _i < bValues.length; _i++) {\n      var _val = bValues[_i];\n      // We have to check if a primitive value is already\n      // matching and only if it's not, go hunting for it.\n      if (_typeof(_val) === 'object' && _val !== null) {\n        if (!setHasEqualElement(set, _val, strict, memo)) return false;\n      } else if (!strict && !a.has(_val) && !setHasEqualElement(set, _val, strict, memo)) {\n        return false;\n      }\n    }\n    return set.size === 0;\n  }\n  return true;\n}\nfunction mapHasEqualEntry(set, map, key1, item1, strict, memo) {\n  // To be able to handle cases like:\n  //   Map([[{}, 'a'], [{}, 'b']]) vs Map([[{}, 'b'], [{}, 'a']])\n  // ... we need to consider *all* matching keys, not just the first we find.\n  var setValues = arrayFromSet(set);\n  for (var i = 0; i < setValues.length; i++) {\n    var key2 = setValues[i];\n    if (innerDeepEqual(key1, key2, strict, memo) && innerDeepEqual(item1, map.get(key2), strict, memo)) {\n      set.delete(key2);\n      return true;\n    }\n  }\n  return false;\n}\nfunction mapEquiv(a, b, strict, memo) {\n  var set = null;\n  var aEntries = arrayFromMap(a);\n  for (var i = 0; i < aEntries.length; i++) {\n    var _aEntries$i = _slicedToArray(aEntries[i], 2),\n      key = _aEntries$i[0],\n      item1 = _aEntries$i[1];\n    if (_typeof(key) === 'object' && key !== null) {\n      if (set === null) {\n        set = new Set();\n      }\n      set.add(key);\n    } else {\n      // By directly retrieving the value we prevent another b.has(key) check in\n      // almost all possible cases.\n      var item2 = b.get(key);\n      if (item2 === undefined && !b.has(key) || !innerDeepEqual(item1, item2, strict, memo)) {\n        if (strict) return false;\n        // Fast path to detect missing string, symbol, undefined and null\n        // keys.\n        if (!mapMightHaveLoosePrim(a, b, key, item1, memo)) return false;\n        if (set === null) {\n          set = new Set();\n        }\n        set.add(key);\n      }\n    }\n  }\n  if (set !== null) {\n    var bEntries = arrayFromMap(b);\n    for (var _i2 = 0; _i2 < bEntries.length; _i2++) {\n      var _bEntries$_i = _slicedToArray(bEntries[_i2], 2),\n        _key = _bEntries$_i[0],\n        item = _bEntries$_i[1];\n      if (_typeof(_key) === 'object' && _key !== null) {\n        if (!mapHasEqualEntry(set, a, _key, item, strict, memo)) return false;\n      } else if (!strict && (!a.has(_key) || !innerDeepEqual(a.get(_key), item, false, memo)) && !mapHasEqualEntry(set, a, _key, item, false, memo)) {\n        return false;\n      }\n    }\n    return set.size === 0;\n  }\n  return true;\n}\nfunction objEquiv(a, b, strict, keys, memos, iterationType) {\n  // Sets and maps don't have their entries accessible via normal object\n  // properties.\n  var i = 0;\n  if (iterationType === kIsSet) {\n    if (!setEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsMap) {\n    if (!mapEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsArray) {\n    for (; i < a.length; i++) {\n      if (hasOwnProperty(a, i)) {\n        if (!hasOwnProperty(b, i) || !innerDeepEqual(a[i], b[i], strict, memos)) {\n          return false;\n        }\n      } else if (hasOwnProperty(b, i)) {\n        return false;\n      } else {\n        // Array is sparse.\n        var keysA = Object.keys(a);\n        for (; i < keysA.length; i++) {\n          var key = keysA[i];\n          if (!hasOwnProperty(b, key) || !innerDeepEqual(a[key], b[key], strict, memos)) {\n            return false;\n          }\n        }\n        if (keysA.length !== Object.keys(b).length) {\n          return false;\n        }\n        return true;\n      }\n    }\n  }\n\n  // The pair must have equivalent values for every corresponding key.\n  // Possibly expensive deep test:\n  for (i = 0; i < keys.length; i++) {\n    var _key2 = keys[i];\n    if (!innerDeepEqual(a[_key2], b[_key2], strict, memos)) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isDeepEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kLoose);\n}\nfunction isDeepStrictEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kStrict);\n}\nmodule.exports = {\n  isDeepEqual: isDeepEqual,\n  isDeepStrictEqual: isDeepStrictEqual\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar pad_string_1 = require(\"./pad-string\");\nfunction encode(input, encoding) {\n    if (encoding === void 0) { encoding = \"utf8\"; }\n    if (Buffer.isBuffer(input)) {\n        return fromBase64(input.toString(\"base64\"));\n    }\n    return fromBase64(Buffer.from(input, encoding).toString(\"base64\"));\n}\n;\nfunction decode(base64url, encoding) {\n    if (encoding === void 0) { encoding = \"utf8\"; }\n    return Buffer.from(toBase64(base64url), \"base64\").toString(encoding);\n}\nfunction toBase64(base64url) {\n    base64url = base64url.toString();\n    return pad_string_1.default(base64url)\n        .replace(/\\-/g, \"+\")\n        .replace(/_/g, \"/\");\n}\nfunction fromBase64(base64) {\n    return base64\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\nfunction toBuffer(base64url) {\n    return Buffer.from(toBase64(base64url), \"base64\");\n}\nvar base64url = encode;\nbase64url.encode = encode;\nbase64url.decode = decode;\nbase64url.toBase64 = toBase64;\nbase64url.fromBase64 = fromBase64;\nbase64url.toBuffer = toBuffer;\nexports.default = base64url;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction padString(input) {\n    var segmentLength = 4;\n    var stringLength = input.length;\n    var diff = stringLength % segmentLength;\n    if (!diff) {\n        return input;\n    }\n    var position = stringLength;\n    var padLength = segmentLength - diff;\n    var paddedStringLength = stringLength + padLength;\n    var buffer = Buffer.alloc(paddedStringLength);\n    buffer.write(input);\n    while (padLength--) {\n        buffer.write(\"=\", position++);\n    }\n    return buffer.toString();\n}\nexports.default = padString;\n","module.exports = require('./dist/base64url').default;\nmodule.exports.default = module.exports;\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\n\nvar callBind = require('./');\n\nvar $indexOf = callBind(GetIntrinsic('String.prototype.indexOf'));\n\nmodule.exports = function callBoundIntrinsic(name, allowMissing) {\n\tvar intrinsic = GetIntrinsic(name, !!allowMissing);\n\tif (typeof intrinsic === 'function' && $indexOf(name, '.prototype.') > -1) {\n\t\treturn callBind(intrinsic);\n\t}\n\treturn intrinsic;\n};\n","'use strict';\n\nvar bind = require('function-bind');\nvar GetIntrinsic = require('get-intrinsic');\nvar setFunctionLength = require('set-function-length');\n\nvar $TypeError = require('es-errors/type');\nvar $apply = GetIntrinsic('%Function.prototype.apply%');\nvar $call = GetIntrinsic('%Function.prototype.call%');\nvar $reflectApply = GetIntrinsic('%Reflect.apply%', true) || bind.call($call, $apply);\n\nvar $defineProperty = require('es-define-property');\nvar $max = GetIntrinsic('%Math.max%');\n\nmodule.exports = function callBind(originalFunction) {\n\tif (typeof originalFunction !== 'function') {\n\t\tthrow new $TypeError('a function is required');\n\t}\n\tvar func = $reflectApply(bind, $call, arguments);\n\treturn setFunctionLength(\n\t\tfunc,\n\t\t1 + $max(0, originalFunction.length - (arguments.length - 1)),\n\t\ttrue\n\t);\n};\n\nvar applyBind = function applyBind() {\n\treturn $reflectApply(bind, $apply, arguments);\n};\n\nif ($defineProperty) {\n\t$defineProperty(module.exports, 'apply', { value: applyBind });\n} else {\n\tmodule.exports.apply = applyBind;\n}\n","import assert from 'assert'\nimport { BN, rlp } from './externals'\nimport {\n  privateKeyVerify,\n  publicKeyCreate,\n  publicKeyVerify,\n  publicKeyConvert,\n} from 'ethereum-cryptography/secp256k1'\nimport { stripHexPrefix } from './internal'\nimport { KECCAK256_RLP, KECCAK256_NULL } from './constants'\nimport { zeros, bufferToHex, toBuffer } from './bytes'\nimport { keccak, keccak256, keccakFromString, rlphash } from './hash'\nimport { assertIsString, assertIsHexString, assertIsBuffer } from './helpers'\nimport { BNLike, BufferLike, bnToUnpaddedBuffer, toType, TypeOutput } from './types'\n\nexport interface AccountData {\n  nonce?: BNLike\n  balance?: BNLike\n  stateRoot?: BufferLike\n  codeHash?: BufferLike\n}\n\nexport class Account {\n  nonce: BN\n  balance: BN\n  stateRoot: Buffer\n  codeHash: Buffer\n\n  static fromAccountData(accountData: AccountData) {\n    const { nonce, balance, stateRoot, codeHash } = accountData\n\n    return new Account(\n      nonce ? new BN(toBuffer(nonce)) : undefined,\n      balance ? new BN(toBuffer(balance)) : undefined,\n      stateRoot ? toBuffer(stateRoot) : undefined,\n      codeHash ? toBuffer(codeHash) : undefined\n    )\n  }\n\n  public static fromRlpSerializedAccount(serialized: Buffer) {\n    const values = rlp.decode(serialized)\n\n    if (!Array.isArray(values)) {\n      throw new Error('Invalid serialized account input. Must be array')\n    }\n\n    return this.fromValuesArray(values)\n  }\n\n  public static fromValuesArray(values: Buffer[]) {\n    const [nonce, balance, stateRoot, codeHash] = values\n\n    return new Account(new BN(nonce), new BN(balance), stateRoot, codeHash)\n  }\n\n  /**\n   * This constructor assigns and validates the values.\n   * Use the static factory methods to assist in creating an Account from varying data types.\n   */\n  constructor(\n    nonce = new BN(0),\n    balance = new BN(0),\n    stateRoot = KECCAK256_RLP,\n    codeHash = KECCAK256_NULL\n  ) {\n    this.nonce = nonce\n    this.balance = balance\n    this.stateRoot = stateRoot\n    this.codeHash = codeHash\n\n    this._validate()\n  }\n\n  private _validate() {\n    if (this.nonce.lt(new BN(0))) {\n      throw new Error('nonce must be greater than zero')\n    }\n    if (this.balance.lt(new BN(0))) {\n      throw new Error('balance must be greater than zero')\n    }\n    if (this.stateRoot.length !== 32) {\n      throw new Error('stateRoot must have a length of 32')\n    }\n    if (this.codeHash.length !== 32) {\n      throw new Error('codeHash must have a length of 32')\n    }\n  }\n\n  /**\n   * Returns a Buffer Array of the raw Buffers for the account, in order.\n   */\n  raw(): Buffer[] {\n    return [\n      bnToUnpaddedBuffer(this.nonce),\n      bnToUnpaddedBuffer(this.balance),\n      this.stateRoot,\n      this.codeHash,\n    ]\n  }\n\n  /**\n   * Returns the RLP serialization of the account as a `Buffer`.\n   */\n  serialize(): Buffer {\n    return rlp.encode(this.raw())\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is a contract.\n   */\n  isContract(): boolean {\n    return !this.codeHash.equals(KECCAK256_NULL)\n  }\n\n  /**\n   * Returns a `Boolean` determining if the account is empty complying to the definition of\n   * account emptiness in [EIP-161](https://eips.ethereum.org/EIPS/eip-161):\n   * \"An account is considered empty when it has no code and zero nonce and zero balance.\"\n   */\n  isEmpty(): boolean {\n    return this.balance.isZero() && this.nonce.isZero() && this.codeHash.equals(KECCAK256_NULL)\n  }\n}\n\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexport const isValidAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  return /^0x[0-9a-fA-F]{40}$/.test(hexAddress)\n}\n\n/**\n * Returns a checksummed address.\n *\n * If an eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details see [EIP-1191](https://eips.ethereum.org/EIPS/eip-1191).\n *\n * WARNING: Checksums with and without the chainId will differ and the EIP-1191 checksum is not\n * backwards compatible to the original widely adopted checksum format standard introduced in\n * [EIP-55](https://eips.ethereum.org/EIPS/eip-55), so this will break in existing applications.\n * Usage of this EIP is therefore discouraged unless you have a very targeted use case.\n */\nexport const toChecksumAddress = function (hexAddress: string, eip1191ChainId?: BNLike): string {\n  assertIsHexString(hexAddress)\n  const address = stripHexPrefix(hexAddress).toLowerCase()\n\n  let prefix = ''\n  if (eip1191ChainId) {\n    const chainId = toType(eip1191ChainId, TypeOutput.BN)\n    prefix = chainId.toString() + '0x'\n  }\n\n  const hash = keccakFromString(prefix + address).toString('hex')\n  let ret = '0x'\n\n  for (let i = 0; i < address.length; i++) {\n    if (parseInt(hash[i], 16) >= 8) {\n      ret += address[i].toUpperCase()\n    } else {\n      ret += address[i]\n    }\n  }\n\n  return ret\n}\n\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexport const isValidChecksumAddress = function (\n  hexAddress: string,\n  eip1191ChainId?: BNLike\n): boolean {\n  return isValidAddress(hexAddress) && toChecksumAddress(hexAddress, eip1191ChainId) === hexAddress\n}\n\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexport const generateAddress = function (from: Buffer, nonce: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(nonce)\n  const nonceBN = new BN(nonce)\n\n  if (nonceBN.isZero()) {\n    // in RLP we want to encode null in the case of zero nonce\n    // read the RLP documentation for an answer if you dare\n    return rlphash([from, null]).slice(-20)\n  }\n\n  // Only take the lower 160bits of the hash\n  return rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20)\n}\n\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexport const generateAddress2 = function (from: Buffer, salt: Buffer, initCode: Buffer): Buffer {\n  assertIsBuffer(from)\n  assertIsBuffer(salt)\n  assertIsBuffer(initCode)\n\n  assert(from.length === 20)\n  assert(salt.length === 32)\n\n  const address = keccak256(\n    Buffer.concat([Buffer.from('ff', 'hex'), from, salt, keccak256(initCode)])\n  )\n\n  return address.slice(-20)\n}\n\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexport const isValidPrivate = function (privateKey: Buffer): boolean {\n  return privateKeyVerify(privateKey)\n}\n\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const isValidPublic = function (publicKey: Buffer, sanitize: boolean = false): boolean {\n  assertIsBuffer(publicKey)\n  if (publicKey.length === 64) {\n    // Convert to SEC1 for secp256k1\n    return publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]))\n  }\n\n  if (!sanitize) {\n    return false\n  }\n\n  return publicKeyVerify(publicKey)\n}\n\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexport const pubToAddress = function (pubKey: Buffer, sanitize: boolean = false): Buffer {\n  assertIsBuffer(pubKey)\n  if (sanitize && pubKey.length !== 64) {\n    pubKey = Buffer.from(publicKeyConvert(pubKey, false).slice(1))\n  }\n  assert(pubKey.length === 64)\n  // Only take the lower 160bits of the hash\n  return keccak(pubKey).slice(-20)\n}\nexport const publicToAddress = pubToAddress\n\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToPublic = function (privateKey: Buffer): Buffer {\n  assertIsBuffer(privateKey)\n  // skip the type flag and use the X, Y points\n  return Buffer.from(publicKeyCreate(privateKey, false)).slice(1)\n}\n\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexport const privateToAddress = function (privateKey: Buffer): Buffer {\n  return publicToAddress(privateToPublic(privateKey))\n}\n\n/**\n * Converts a public key to the Ethereum format.\n */\nexport const importPublic = function (publicKey: Buffer): Buffer {\n  assertIsBuffer(publicKey)\n  if (publicKey.length !== 64) {\n    publicKey = Buffer.from(publicKeyConvert(publicKey, false).slice(1))\n  }\n  return publicKey\n}\n\n/**\n * Returns the zero address.\n */\nexport const zeroAddress = function (): string {\n  const addressLength = 20\n  const addr = zeros(addressLength)\n  return bufferToHex(addr)\n}\n\n/**\n * Checks if a given address is the zero address.\n */\nexport const isZeroAddress = function (hexAddress: string): boolean {\n  try {\n    assertIsString(hexAddress)\n  } catch (e: any) {\n    return false\n  }\n\n  const zeroAddr = zeroAddress()\n  return zeroAddr === hexAddress\n}\n","import assert from 'assert'\nimport { BN } from './externals'\nimport { toBuffer, zeros } from './bytes'\nimport {\n  isValidAddress,\n  pubToAddress,\n  privateToAddress,\n  generateAddress,\n  generateAddress2,\n} from './account'\n\nexport class Address {\n  public readonly buf: Buffer\n\n  constructor(buf: Buffer) {\n    assert(buf.length === 20, 'Invalid address length')\n    this.buf = buf\n  }\n\n  /**\n   * Returns the zero address.\n   */\n  static zero(): Address {\n    return new Address(zeros(20))\n  }\n\n  /**\n   * Returns an Address object from a hex-encoded string.\n   * @param str - Hex-encoded address\n   */\n  static fromString(str: string): Address {\n    assert(isValidAddress(str), 'Invalid address')\n    return new Address(toBuffer(str))\n  }\n\n  /**\n   * Returns an address for a given public key.\n   * @param pubKey The two points of an uncompressed key\n   */\n  static fromPublicKey(pubKey: Buffer): Address {\n    assert(Buffer.isBuffer(pubKey), 'Public key should be Buffer')\n    const buf = pubToAddress(pubKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Returns an address for a given private key.\n   * @param privateKey A private key must be 256 bits wide\n   */\n  static fromPrivateKey(privateKey: Buffer): Address {\n    assert(Buffer.isBuffer(privateKey), 'Private key should be Buffer')\n    const buf = privateToAddress(privateKey)\n    return new Address(buf)\n  }\n\n  /**\n   * Generates an address for a newly created contract.\n   * @param from The address which is creating this new address\n   * @param nonce The nonce of the from account\n   */\n  static generate(from: Address, nonce: BN): Address {\n    assert(BN.isBN(nonce))\n    return new Address(generateAddress(from.buf, nonce.toArrayLike(Buffer)))\n  }\n\n  /**\n   * Generates an address for a contract created using CREATE2.\n   * @param from The address which is creating this new address\n   * @param salt A salt\n   * @param initCode The init code of the contract being created\n   */\n  static generate2(from: Address, salt: Buffer, initCode: Buffer): Address {\n    assert(Buffer.isBuffer(salt))\n    assert(Buffer.isBuffer(initCode))\n    return new Address(generateAddress2(from.buf, salt, initCode))\n  }\n\n  /**\n   * Is address equal to another.\n   */\n  equals(address: Address): boolean {\n    return this.buf.equals(address.buf)\n  }\n\n  /**\n   * Is address zero.\n   */\n  isZero(): boolean {\n    return this.equals(Address.zero())\n  }\n\n  /**\n   * True if address is in the address range defined\n   * by EIP-1352\n   */\n  isPrecompileOrSystemAddress(): boolean {\n    const addressBN = new BN(this.buf)\n    const rangeMin = new BN(0)\n    const rangeMax = new BN('ffff', 'hex')\n\n    return addressBN.gte(rangeMin) && addressBN.lte(rangeMax)\n  }\n\n  /**\n   * Returns hex encoding of address.\n   */\n  toString(): string {\n    return '0x' + this.buf.toString('hex')\n  }\n\n  /**\n   * Returns Buffer representation of address.\n   */\n  toBuffer(): Buffer {\n    return Buffer.from(this.buf)\n  }\n}\n","import { BN } from './externals'\nimport { stripHexPrefix, padToEven, isHexString, isHexPrefixed } from './internal'\nimport {\n  PrefixedHexString,\n  TransformableToArray,\n  TransformableToBuffer,\n  NestedBufferArray,\n  NestedUint8Array,\n} from './types'\nimport { assertIsBuffer, assertIsArray, assertIsHexString } from './helpers'\n\n/**\n * Converts a `Number` into a hex `String`\n * @param {Number} i\n * @return {String}\n */\nexport const intToHex = function (i: number) {\n  if (!Number.isSafeInteger(i) || i < 0) {\n    throw new Error(`Received an invalid integer type: ${i}`)\n  }\n  return `0x${i.toString(16)}`\n}\n\n/**\n * Converts an `Number` to a `Buffer`\n * @param {Number} i\n * @return {Buffer}\n */\nexport const intToBuffer = function (i: number) {\n  const hex = intToHex(i)\n  return Buffer.from(padToEven(hex.slice(2)), 'hex')\n}\n\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexport const zeros = function (bytes: number): Buffer {\n  return Buffer.allocUnsafe(bytes).fill(0)\n}\n\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nconst setLength = function (msg: Buffer, length: number, right: boolean) {\n  const buf = zeros(length)\n  if (right) {\n    if (msg.length < length) {\n      msg.copy(buf)\n      return buf\n    }\n    return msg.slice(0, length)\n  } else {\n    if (msg.length < length) {\n      msg.copy(buf, length - msg.length)\n      return buf\n    }\n    return msg.slice(-length)\n  }\n}\n\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthLeft = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, false)\n}\n\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexport const setLengthRight = function (msg: Buffer, length: number) {\n  assertIsBuffer(msg)\n  return setLength(msg, length, true)\n}\n\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nconst stripZeros = function (a: any): Buffer | number[] | string {\n  let first = a[0]\n  while (a.length > 0 && first.toString() === '0') {\n    a = a.slice(1)\n    first = a[0]\n  }\n  return a\n}\n\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nexport const unpadBuffer = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return stripZeros(a) as Buffer\n}\n\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nexport const unpadArray = function (a: number[]): number[] {\n  assertIsArray(a)\n  return stripZeros(a) as number[]\n}\n\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nexport const unpadHexString = function (a: string): string {\n  assertIsHexString(a)\n  a = stripHexPrefix(a)\n  return stripZeros(a) as string\n}\n\nexport type ToBufferInputTypes =\n  | PrefixedHexString\n  | number\n  | BN\n  | Buffer\n  | Uint8Array\n  | number[]\n  | TransformableToArray\n  | TransformableToBuffer\n  | null\n  | undefined\n\n/**\n * Attempts to turn a value into a `Buffer`.\n * Inputs supported: `Buffer`, `String` (hex-prefixed), `Number`, null/undefined, `BN` and other objects\n * with a `toArray()` or `toBuffer()` method.\n * @param v the value\n */\nexport const toBuffer = function (v: ToBufferInputTypes): Buffer {\n  if (v === null || v === undefined) {\n    return Buffer.allocUnsafe(0)\n  }\n\n  if (Buffer.isBuffer(v)) {\n    return Buffer.from(v)\n  }\n\n  if (Array.isArray(v) || v instanceof Uint8Array) {\n    return Buffer.from(v as Uint8Array)\n  }\n\n  if (typeof v === 'string') {\n    if (!isHexString(v)) {\n      throw new Error(\n        `Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: ${v}`\n      )\n    }\n    return Buffer.from(padToEven(stripHexPrefix(v)), 'hex')\n  }\n\n  if (typeof v === 'number') {\n    return intToBuffer(v)\n  }\n\n  if (BN.isBN(v)) {\n    if (v.isNeg()) {\n      throw new Error(`Cannot convert negative BN to buffer. Given: ${v}`)\n    }\n    return v.toArrayLike(Buffer)\n  }\n\n  if (v.toArray) {\n    // converts a BN to a Buffer\n    return Buffer.from(v.toArray())\n  }\n\n  if (v.toBuffer) {\n    return Buffer.from(v.toBuffer())\n  }\n\n  throw new Error('invalid type')\n}\n\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexport const bufferToInt = function (buf: Buffer): number {\n  return new BN(toBuffer(buf)).toNumber()\n}\n\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexport const bufferToHex = function (buf: Buffer): string {\n  buf = toBuffer(buf)\n  return '0x' + buf.toString('hex')\n}\n\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexport const fromSigned = function (num: Buffer): BN {\n  return new BN(num).fromTwos(256)\n}\n\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexport const toUnsigned = function (num: BN): Buffer {\n  return Buffer.from(num.toTwos(256).toArray())\n}\n\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexport const addHexPrefix = function (str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n\n  return isHexPrefixed(str) ? str : '0x' + str\n}\n\n/**\n * Returns the utf8 string representation from a hex string.\n *\n * Examples:\n *\n * Input 1: '657468657265756d000000000000000000000000000000000000000000000000'\n * Input 2: '657468657265756d'\n * Input 3: '000000000000000000000000000000000000000000000000657468657265756d'\n *\n * Output (all 3 input variants): 'ethereum'\n *\n * Note that this method is not intended to be used with hex strings\n * representing quantities in both big endian or little endian notation.\n *\n * @param string Hex string, should be `0x` prefixed\n * @return Utf8 string\n */\nexport const toUtf8 = function (hex: string): string {\n  const zerosRegexp = /^(00)+|(00)+$/g\n  hex = stripHexPrefix(hex)\n  if (hex.length % 2 !== 0) {\n    throw new Error('Invalid non-even hex string input for toUtf8() provided')\n  }\n  const bufferVal = Buffer.from(hex.replace(zerosRegexp, ''), 'hex')\n\n  return bufferVal.toString('utf8')\n}\n\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexport const baToJSON = function (ba: any): any {\n  if (Buffer.isBuffer(ba)) {\n    return `0x${ba.toString('hex')}`\n  } else if (ba instanceof Array) {\n    const array = []\n    for (let i = 0; i < ba.length; i++) {\n      array.push(baToJSON(ba[i]))\n    }\n    return array\n  }\n}\n\n/**\n * Checks provided Buffers for leading zeroes and throws if found.\n *\n * Examples:\n *\n * Valid values: 0x1, 0x, 0x01, 0x1234\n * Invalid values: 0x0, 0x00, 0x001, 0x0001\n *\n * Note: This method is useful for validating that RLP encoded integers comply with the rule that all\n * integer values encoded to RLP must be in the most compact form and contain no leading zero bytes\n * @param values An object containing string keys and Buffer values\n * @throws if any provided value is found to have leading zero bytes\n */\nexport const validateNoLeadingZeroes = function (values: { [key: string]: Buffer | undefined }) {\n  for (const [k, v] of Object.entries(values)) {\n    if (v !== undefined && v.length > 0 && v[0] === 0) {\n      throw new Error(`${k} cannot have leading zeroes, received: ${v.toString('hex')}`)\n    }\n  }\n}\n\n/**\n * Converts a {@link Uint8Array} or {@link NestedUint8Array} to {@link Buffer} or {@link NestedBufferArray}\n */\nexport function arrToBufArr(arr: Uint8Array): Buffer\nexport function arrToBufArr(arr: NestedUint8Array): NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray\nexport function arrToBufArr(arr: Uint8Array | NestedUint8Array): Buffer | NestedBufferArray {\n  if (!Array.isArray(arr)) {\n    return Buffer.from(arr)\n  }\n  return arr.map((a) => arrToBufArr(a))\n}\n\n/**\n * Converts a {@link Buffer} or {@link NestedBufferArray} to {@link Uint8Array} or {@link NestedUint8Array}\n */\nexport function bufArrToArr(arr: Buffer): Uint8Array\nexport function bufArrToArr(arr: NestedBufferArray): NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array\nexport function bufArrToArr(arr: Buffer | NestedBufferArray): Uint8Array | NestedUint8Array {\n  if (!Array.isArray(arr)) {\n    return Uint8Array.from(arr ?? [])\n  }\n  return arr.map((a) => bufArrToArr(a))\n}\n","import { Buffer } from 'buffer'\nimport { BN } from './externals'\n\n/**\n * 2^64-1\n */\nexport const MAX_UINT64 = new BN('ffffffffffffffff', 16)\n\n/**\n * The max integer that the evm can handle (2^256-1)\n */\nexport const MAX_INTEGER = new BN(\n  'ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff',\n  16\n)\n\n/**\n * 2^256\n */\nexport const TWO_POW256 = new BN(\n  '10000000000000000000000000000000000000000000000000000000000000000',\n  16\n)\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470'\n\n/**\n * Keccak-256 hash of null\n */\nexport const KECCAK256_NULL = Buffer.from(KECCAK256_NULL_S, 'hex')\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY_S =\n  '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'\n\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexport const KECCAK256_RLP_ARRAY = Buffer.from(KECCAK256_RLP_ARRAY_S, 'hex')\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'\n\n/**\n * Keccak-256 hash of the RLP of null\n */\nexport const KECCAK256_RLP = Buffer.from(KECCAK256_RLP_S, 'hex')\n","/**\n * Re-exports commonly used modules:\n * * Exports [`BN`](https://github.com/indutny/bn.js), [`rlp`](https://github.com/ethereumjs/rlp).\n * @packageDocumentation\n */\n\nimport BN from 'bn.js'\nimport * as rlp from 'rlp'\n\n/**\n * [`BN`](https://github.com/indutny/bn.js)\n */\nexport { BN }\n\n/**\n * [`rlp`](https://github.com/ethereumjs/rlp)\n */\nexport { rlp }\n","import { keccak224, keccak384, keccak256 as k256, keccak512 } from 'ethereum-cryptography/keccak'\nconst createHash = require('create-hash')\nimport { rlp } from './externals'\nimport { toBuffer, setLengthLeft } from './bytes'\nimport { assertIsString, assertIsBuffer, assertIsArray, assertIsHexString } from './helpers'\n\n/**\n * Creates Keccak hash of a Buffer input\n * @param a The input data (Buffer)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccak = function (a: Buffer, bits: number = 256): Buffer {\n  assertIsBuffer(a)\n  switch (bits) {\n    case 224: {\n      return keccak224(a)\n    }\n    case 256: {\n      return k256(a)\n    }\n    case 384: {\n      return keccak384(a)\n    }\n    case 512: {\n      return keccak512(a)\n    }\n    default: {\n      throw new Error(`Invald algorithm: keccak${bits}`)\n    }\n  }\n}\n\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer)\n */\nexport const keccak256 = function (a: Buffer): Buffer {\n  return keccak(a)\n}\n\n/**\n * Creates Keccak hash of a utf-8 string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromString = function (a: string, bits: number = 256) {\n  assertIsString(a)\n  const buf = Buffer.from(a, 'utf8')\n  return keccak(buf, bits)\n}\n\n/**\n * Creates Keccak hash of an 0x-prefixed string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromHexString = function (a: string, bits: number = 256) {\n  assertIsHexString(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates Keccak hash of a number array input\n * @param a The input data (number[])\n * @param bits (number = 256) The Keccak width\n */\nexport const keccakFromArray = function (a: number[], bits: number = 256) {\n  assertIsArray(a)\n  return keccak(toBuffer(a), bits)\n}\n\n/**\n * Creates SHA256 hash of an input.\n * @param  a The input data (Buffer|Array|String)\n */\nconst _sha256 = function (a: any): Buffer {\n  a = toBuffer(a)\n  return createHash('sha256').update(a).digest()\n}\n\n/**\n * Creates SHA256 hash of a Buffer input.\n * @param a The input data (Buffer)\n */\nexport const sha256 = function (a: Buffer): Buffer {\n  assertIsBuffer(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a string input.\n * @param a The input data (string)\n */\nexport const sha256FromString = function (a: string): Buffer {\n  assertIsString(a)\n  return _sha256(a)\n}\n\n/**\n * Creates SHA256 hash of a number[] input.\n * @param a The input data (number[])\n */\nexport const sha256FromArray = function (a: number[]): Buffer {\n  assertIsArray(a)\n  return _sha256(a)\n}\n\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nconst _ripemd160 = function (a: any, padded: boolean): Buffer {\n  a = toBuffer(a)\n  const hash = createHash('rmd160').update(a).digest()\n  if (padded === true) {\n    return setLengthLeft(hash, 32)\n  } else {\n    return hash\n  }\n}\n\n/**\n * Creates RIPEMD160 hash of a Buffer input.\n * @param a The input data (Buffer)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160 = function (a: Buffer, padded: boolean): Buffer {\n  assertIsBuffer(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a string input.\n * @param a The input data (String)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromString = function (a: string, padded: boolean): Buffer {\n  assertIsString(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates RIPEMD160 hash of a number[] input.\n * @param a The input data (number[])\n * @param padded Whether it should be padded to 256 bits or not\n */\nexport const ripemd160FromArray = function (a: number[], padded: boolean): Buffer {\n  assertIsArray(a)\n  return _ripemd160(a, padded)\n}\n\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nexport const rlphash = function (a: rlp.Input): Buffer {\n  return keccak(rlp.encode(a))\n}\n","import { isHexString } from './internal'\n\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexport const assertIsHexString = function (input: string): void {\n  if (!isHexString(input)) {\n    const msg = `This method only supports 0x-prefixed hex strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexport const assertIsBuffer = function (input: Buffer): void {\n  if (!Buffer.isBuffer(input)) {\n    const msg = `This method only supports Buffer but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexport const assertIsArray = function (input: number[]): void {\n  if (!Array.isArray(input)) {\n    const msg = `This method only supports number arrays but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexport const assertIsString = function (input: string): void {\n  if (typeof input !== 'string') {\n    const msg = `This method only supports strings but input was: ${input}`\n    throw new Error(msg)\n  }\n}\n","/**\n * Constants\n */\nexport * from './constants'\n\n/**\n * Account class and helper functions\n */\nexport * from './account'\n\n/**\n * Address type\n */\nexport * from './address'\n\n/**\n * Hash functions\n */\nexport * from './hash'\n\n/**\n * ECDSA signature\n */\nexport * from './signature'\n\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\nexport * from './bytes'\n\n/**\n * Function for definining properties on an object\n */\nexport * from './object'\n\n/**\n * External exports (BN, rlp)\n */\nexport * from './externals'\n\n/**\n * Helpful TypeScript types\n */\nexport * from './types'\n\n/**\n * Export ethjs-util methods\n */\nexport {\n  isHexPrefixed,\n  stripHexPrefix,\n  padToEven,\n  getBinarySize,\n  arrayContainsArray,\n  toAscii,\n  fromUtf8,\n  fromAscii,\n  getKeys,\n  isHexString,\n} from './internal'\n","/*\nThe MIT License\n\nCopyright (c) 2016 Nick Dodson. nickdodson.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE\n */\n\n/**\n * Returns a `Boolean` on whether or not the a `String` starts with '0x'\n * @param str the string input value\n * @return a boolean if it is or is not hex prefixed\n * @throws if the str input is not a string\n */\nexport function isHexPrefixed(str: string): boolean {\n  if (typeof str !== 'string') {\n    throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof str}`)\n  }\n\n  return str[0] === '0' && str[1] === 'x'\n}\n\n/**\n * Removes '0x' from a given `String` if present\n * @param str the string value\n * @returns the string without 0x prefix\n */\nexport const stripHexPrefix = (str: string): string => {\n  if (typeof str !== 'string')\n    throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof str}`)\n\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/**\n * Pads a `String` to have an even length\n * @param value\n * @return output\n */\nexport function padToEven(value: string): string {\n  let a = value\n\n  if (typeof a !== 'string') {\n    throw new Error(`[padToEven] value must be type 'string', received ${typeof a}`)\n  }\n\n  if (a.length % 2) a = `0${a}`\n\n  return a\n}\n\n/**\n * Get the binary size of a string\n * @param str\n * @returns the number of bytes contained within the string\n */\nexport function getBinarySize(str: string) {\n  if (typeof str !== 'string') {\n    throw new Error(`[getBinarySize] method requires input type 'string', recieved ${typeof str}`)\n  }\n\n  return Buffer.byteLength(str, 'utf8')\n}\n\n/**\n * Returns TRUE if the first specified array contains all elements\n * from the second one. FALSE otherwise.\n *\n * @param superset\n * @param subset\n *\n */\nexport function arrayContainsArray(\n  superset: unknown[],\n  subset: unknown[],\n  some?: boolean\n): boolean {\n  if (Array.isArray(superset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'superset' to be an array, got type '${typeof superset}'`\n    )\n  }\n  if (Array.isArray(subset) !== true) {\n    throw new Error(\n      `[arrayContainsArray] method requires input 'subset' to be an array, got type '${typeof subset}'`\n    )\n  }\n\n  return subset[some ? 'some' : 'every']((value) => superset.indexOf(value) >= 0)\n}\n\n/**\n * Should be called to get ascii from its hex representation\n *\n * @param string in hex\n * @returns ascii string representation of hex value\n */\nexport function toAscii(hex: string): string {\n  let str = ''\n  let i = 0\n  const l = hex.length\n\n  if (hex.substring(0, 2) === '0x') i = 2\n\n  for (; i < l; i += 2) {\n    const code = parseInt(hex.substr(i, 2), 16)\n    str += String.fromCharCode(code)\n  }\n\n  return str\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of utf8 string\n *\n * @param string\n * @param optional padding\n * @returns hex representation of input string\n */\nexport function fromUtf8(stringValue: string) {\n  const str = Buffer.from(stringValue, 'utf8')\n\n  return `0x${padToEven(str.toString('hex')).replace(/^0+|0+$/g, '')}`\n}\n\n/**\n * Should be called to get hex representation (prefixed by 0x) of ascii string\n *\n * @param  string\n * @param  optional padding\n * @returns  hex representation of input string\n */\nexport function fromAscii(stringValue: string) {\n  let hex = ''\n  for (let i = 0; i < stringValue.length; i++) {\n    const code = stringValue.charCodeAt(i)\n    const n = code.toString(16)\n    hex += n.length < 2 ? `0${n}` : n\n  }\n\n  return `0x${hex}`\n}\n\n/**\n * Returns the keys from an array of objects.\n * @example\n * ```js\n * getKeys([{a: '1', b: '2'}, {a: '3', b: '4'}], 'a') => ['1', '3']\n *````\n * @param  params\n * @param  key\n * @param  allowEmpty\n * @returns output just a simple array of output keys\n */\nexport function getKeys(params: Record<string, string>[], key: string, allowEmpty?: boolean) {\n  if (!Array.isArray(params)) {\n    throw new Error(`[getKeys] method expects input 'params' to be an array, got ${typeof params}`)\n  }\n  if (typeof key !== 'string') {\n    throw new Error(\n      `[getKeys] method expects input 'key' to be type 'string', got ${typeof params}`\n    )\n  }\n\n  const result = []\n\n  for (let i = 0; i < params.length; i++) {\n    let value = params[i][key]\n    if (allowEmpty && !value) {\n      value = ''\n    } else if (typeof value !== 'string') {\n      throw new Error(`invalid abi - expected type 'string', received ${typeof value}`)\n    }\n    result.push(value)\n  }\n\n  return result\n}\n\n/**\n * Is the string a hex string.\n *\n * @param  value\n * @param  length\n * @returns  output the string is a hex string\n */\nexport function isHexString(value: string, length?: number): boolean {\n  if (typeof value !== 'string' || !value.match(/^0x[0-9A-Fa-f]*$/)) return false\n\n  if (length && value.length !== 2 + 2 * length) return false\n\n  return true\n}\n","import assert from 'assert'\nimport { stripHexPrefix } from './internal'\nimport { rlp } from './externals'\nimport { toBuffer, baToJSON, unpadBuffer } from './bytes'\n\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nexport const defineProperties = function (self: any, fields: any, data?: any) {\n  self.raw = []\n  self._fields = []\n\n  // attach the `toJSON`\n  self.toJSON = function (label: boolean = false) {\n    if (label) {\n      type Dict = { [key: string]: string }\n      const obj: Dict = {}\n      self._fields.forEach((field: string) => {\n        obj[field] = `0x${self[field].toString('hex')}`\n      })\n      return obj\n    }\n    return baToJSON(self.raw)\n  }\n\n  self.serialize = function serialize() {\n    return rlp.encode(self.raw)\n  }\n\n  fields.forEach((field: any, i: number) => {\n    self._fields.push(field.name)\n    function getter() {\n      return self.raw[i]\n    }\n    function setter(v: any) {\n      v = toBuffer(v)\n\n      if (v.toString('hex') === '00' && !field.allowZero) {\n        v = Buffer.allocUnsafe(0)\n      }\n\n      if (field.allowLess && field.length) {\n        v = unpadBuffer(v)\n        assert(\n          field.length >= v.length,\n          `The field ${field.name} must not have more ${field.length} bytes`\n        )\n      } else if (!(field.allowZero && v.length === 0) && field.length) {\n        assert(\n          field.length === v.length,\n          `The field ${field.name} must have byte length of ${field.length}`\n        )\n      }\n\n      self.raw[i] = v\n    }\n\n    Object.defineProperty(self, field.name, {\n      enumerable: true,\n      configurable: true,\n      get: getter,\n      set: setter,\n    })\n\n    if (field.default) {\n      self[field.name] = field.default\n    }\n\n    // attach alias\n    if (field.alias) {\n      Object.defineProperty(self, field.alias, {\n        enumerable: false,\n        configurable: true,\n        set: setter,\n        get: getter,\n      })\n    }\n  })\n\n  // if the constuctor is passed data\n  if (data) {\n    if (typeof data === 'string') {\n      data = Buffer.from(stripHexPrefix(data), 'hex')\n    }\n\n    if (Buffer.isBuffer(data)) {\n      data = rlp.decode(data)\n    }\n\n    if (Array.isArray(data)) {\n      if (data.length > self._fields.length) {\n        throw new Error('wrong number of fields in data')\n      }\n\n      // make sure all the items are buffers\n      data.forEach((d, i) => {\n        self[self._fields[i]] = toBuffer(d)\n      })\n    } else if (typeof data === 'object') {\n      const keys = Object.keys(data)\n      fields.forEach((field: any) => {\n        if (keys.indexOf(field.name) !== -1) self[field.name] = data[field.name]\n        if (keys.indexOf(field.alias) !== -1) self[field.alias] = data[field.alias]\n      })\n    } else {\n      throw new Error('invalid data')\n    }\n  }\n}\n","import { ecdsaSign, ecdsaRecover, publicKeyConvert } from 'ethereum-cryptography/secp256k1'\nimport { BN } from './externals'\nimport { toBuffer, setLengthLeft, bufferToHex, bufferToInt } from './bytes'\nimport { keccak } from './hash'\nimport { assertIsBuffer } from './helpers'\nimport { BNLike, toType, TypeOutput } from './types'\n\nexport interface ECDSASignature {\n  v: number\n  r: Buffer\n  s: Buffer\n}\n\nexport interface ECDSASignatureBuffer {\n  v: Buffer\n  r: Buffer\n  s: Buffer\n}\n\n/**\n * Returns the ECDSA signature of a message hash.\n */\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId?: number): ECDSASignature\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId: BNLike): ECDSASignatureBuffer\nexport function ecsign(msgHash: Buffer, privateKey: Buffer, chainId: any): any {\n  const { signature, recid: recovery } = ecdsaSign(msgHash, privateKey)\n\n  const r = Buffer.from(signature.slice(0, 32))\n  const s = Buffer.from(signature.slice(32, 64))\n\n  if (!chainId || typeof chainId === 'number') {\n    // return legacy type ECDSASignature (deprecated in favor of ECDSASignatureBuffer to handle large chainIds)\n    if (chainId && !Number.isSafeInteger(chainId)) {\n      throw new Error(\n        'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n      )\n    }\n    const v = chainId ? recovery + (chainId * 2 + 35) : recovery + 27\n    return { r, s, v }\n  }\n\n  const chainIdBN = toType(chainId as BNLike, TypeOutput.BN)\n  const v = chainIdBN.muln(2).addn(35).addn(recovery).toArrayLike(Buffer)\n  return { r, s, v }\n}\n\nfunction calculateSigRecovery(v: BNLike, chainId?: BNLike): BN {\n  const vBN = toType(v, TypeOutput.BN)\n\n  if (vBN.eqn(0) || vBN.eqn(1)) return toType(v, TypeOutput.BN)\n\n  if (!chainId) {\n    return vBN.subn(27)\n  }\n  const chainIdBN = toType(chainId, TypeOutput.BN)\n  return vBN.sub(chainIdBN.muln(2).addn(35))\n}\n\nfunction isValidSigRecovery(recovery: number | BN): boolean {\n  const rec = new BN(recovery)\n  return rec.eqn(0) || rec.eqn(1)\n}\n\n/**\n * ECDSA public key recovery from signature.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Recovered public key\n */\nexport const ecrecover = function (\n  msgHash: Buffer,\n  v: BNLike,\n  r: Buffer,\n  s: Buffer,\n  chainId?: BNLike\n): Buffer {\n  const signature = Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32)], 64)\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n  const senderPubKey = ecdsaRecover(signature, recovery.toNumber(), msgHash)\n  return Buffer.from(publicKeyConvert(senderPubKey, false).slice(1))\n}\n\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toRpcSig = function (v: BNLike, r: Buffer, s: Buffer, chainId?: BNLike): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(s, 32), toBuffer(v)]))\n}\n\n/**\n * Convert signature parameters into the format of Compact Signature Representation (EIP-2098).\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @returns Signature\n */\nexport const toCompactSig = function (v: BNLike, r: Buffer, s: Buffer, chainId?: BNLike): string {\n  const recovery = calculateSigRecovery(v, chainId)\n  if (!isValidSigRecovery(recovery)) {\n    throw new Error('Invalid signature v value')\n  }\n\n  const vn = toType(v, TypeOutput.Number)\n  let ss = s\n  if ((vn > 28 && vn % 2 === 1) || vn === 1 || vn === 28) {\n    ss = Buffer.from(s)\n    ss[0] |= 0x80\n  }\n\n  return bufferToHex(Buffer.concat([setLengthLeft(r, 32), setLengthLeft(ss, 32)]))\n}\n\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n * NOTE: After EIP1559, `v` could be `0` or `1` but this function assumes\n * it's a signed message (EIP-191 or EIP-712) adding `27` at the end. Remove if needed.\n */\nexport const fromRpcSig = function (sig: string): ECDSASignature {\n  const buf: Buffer = toBuffer(sig)\n\n  let r: Buffer\n  let s: Buffer\n  let v: number\n  if (buf.length >= 65) {\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(64))\n  } else if (buf.length === 64) {\n    // Compact Signature Representation (https://eips.ethereum.org/EIPS/eip-2098)\n    r = buf.slice(0, 32)\n    s = buf.slice(32, 64)\n    v = bufferToInt(buf.slice(32, 33)) >> 7\n    s[0] &= 0x7f\n  } else {\n    throw new Error('Invalid signature length')\n  }\n\n  // support both versions of `eth_sign` responses\n  if (v < 27) {\n    v += 27\n  }\n\n  return {\n    v,\n    r,\n    s,\n  }\n}\n\n/**\n * Validate a ECDSA signature.\n * NOTE: Accepts `v == 0 | v == 1` for EIP1559 transactions\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexport const isValidSignature = function (\n  v: BNLike,\n  r: Buffer,\n  s: Buffer,\n  homesteadOrLater: boolean = true,\n  chainId?: BNLike\n): boolean {\n  const SECP256K1_N_DIV_2 = new BN(\n    '7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0',\n    16\n  )\n  const SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16)\n\n  if (r.length !== 32 || s.length !== 32) {\n    return false\n  }\n\n  if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n    return false\n  }\n\n  const rBN = new BN(r)\n  const sBN = new BN(s)\n\n  if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n    return false\n  }\n\n  if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexport const hashPersonalMessage = function (message: Buffer): Buffer {\n  assertIsBuffer(message)\n  const prefix = Buffer.from(`\\u0019Ethereum Signed Message:\\n${message.length}`, 'utf-8')\n  return keccak(Buffer.concat([prefix, message]))\n}\n","import { BN } from './externals'\nimport { isHexString } from './internal'\nimport { Address } from './address'\nimport { unpadBuffer, toBuffer, ToBufferInputTypes } from './bytes'\n\n/*\n * A type that represents a BNLike input that can be converted to a BN.\n */\nexport type BNLike = BN | PrefixedHexString | number | Buffer\n\n/*\n * A type that represents a BufferLike input that can be converted to a Buffer.\n */\nexport type BufferLike =\n  | Buffer\n  | Uint8Array\n  | number[]\n  | number\n  | BN\n  | TransformableToBuffer\n  | PrefixedHexString\n\n/*\n * A type that represents a `0x`-prefixed hex string.\n */\nexport type PrefixedHexString = string\n\n/**\n * A type that represents an Address-like value.\n * To convert to address, use `new Address(toBuffer(value))`\n */\nexport type AddressLike = Address | Buffer | PrefixedHexString\n\n/*\n * A type that represents an object that has a `toArray()` method.\n */\nexport interface TransformableToArray {\n  toArray(): Uint8Array\n  toBuffer?(): Buffer\n}\n\n/*\n * A type that represents an object that has a `toBuffer()` method.\n */\nexport interface TransformableToBuffer {\n  toBuffer(): Buffer\n  toArray?(): Uint8Array\n}\n\nexport type NestedUint8Array = Array<Uint8Array | NestedUint8Array>\nexport type NestedBufferArray = Array<Buffer | NestedBufferArray>\n\n/**\n * Convert BN to 0x-prefixed hex string.\n */\nexport function bnToHex(value: BN): PrefixedHexString {\n  return `0x${value.toString(16)}`\n}\n\n/**\n * Convert value from BN to an unpadded Buffer\n * (useful for RLP transport)\n * @param value value to convert\n */\nexport function bnToUnpaddedBuffer(value: BN): Buffer {\n  // Using `bn.toArrayLike(Buffer)` instead of `bn.toBuffer()`\n  // for compatibility with browserify and similar tools\n  return unpadBuffer(value.toArrayLike(Buffer))\n}\n\n/**\n * Deprecated alias for {@link bnToUnpaddedBuffer}\n * @deprecated\n */\nexport function bnToRlp(value: BN): Buffer {\n  return bnToUnpaddedBuffer(value)\n}\n\n/**\n * Type output options\n */\nexport enum TypeOutput {\n  Number,\n  BN,\n  Buffer,\n  PrefixedHexString,\n}\n\nexport type TypeOutputReturnType = {\n  [TypeOutput.Number]: number\n  [TypeOutput.BN]: BN\n  [TypeOutput.Buffer]: Buffer\n  [TypeOutput.PrefixedHexString]: PrefixedHexString\n}\n\n/**\n * Convert an input to a specified type.\n * Input of null/undefined returns null/undefined regardless of the output type.\n * @param input value to convert\n * @param outputType type to output\n */\nexport function toType<T extends TypeOutput>(input: null, outputType: T): null\nexport function toType<T extends TypeOutput>(input: undefined, outputType: T): undefined\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T]\nexport function toType<T extends TypeOutput>(\n  input: ToBufferInputTypes,\n  outputType: T\n): TypeOutputReturnType[T] | undefined | null {\n  if (input === null) {\n    return null\n  }\n  if (input === undefined) {\n    return undefined\n  }\n\n  if (typeof input === 'string' && !isHexString(input)) {\n    throw new Error(`A string must be provided with a 0x-prefix, given: ${input}`)\n  } else if (typeof input === 'number' && !Number.isSafeInteger(input)) {\n    throw new Error(\n      'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)'\n    )\n  }\n\n  const output = toBuffer(input)\n\n  if (outputType === TypeOutput.Buffer) {\n    return output as TypeOutputReturnType[T]\n  } else if (outputType === TypeOutput.BN) {\n    return new BN(output) as TypeOutputReturnType[T]\n  } else if (outputType === TypeOutput.Number) {\n    const bn = new BN(output)\n    const max = new BN(Number.MAX_SAFE_INTEGER.toString())\n    if (bn.gt(max)) {\n      throw new Error(\n        'The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)'\n      )\n    }\n    return bn.toNumber() as TypeOutputReturnType[T]\n  } else {\n    // outputType === TypeOutput.PrefixedHexString\n    return `0x${output.toString('hex')}` as TypeOutputReturnType[T]\n  }\n}\n","import { Hash } from \"crypto\";\n\nexport function createHashFunction(\n  hashConstructor: () => Hash\n): (msg: Buffer) => Buffer {\n  return msg => {\n    const hash = hashConstructor();\n    hash.update(msg);\n    return Buffer.from(hash.digest());\n  };\n}\n","import { createHashFunction } from \"./hash-utils\";\n\nconst createKeccakHash = require(\"keccak\");\n\nexport const keccak224 = createHashFunction(() =>\n  createKeccakHash(\"keccak224\")\n);\n\nexport const keccak256 = createHashFunction(() =>\n  createKeccakHash(\"keccak256\")\n);\n\nexport const keccak384 = createHashFunction(() =>\n  createKeccakHash(\"keccak384\")\n);\n\nexport const keccak512 = createHashFunction(() =>\n  createKeccakHash(\"keccak512\")\n);\n","const randombytes = require(\"randombytes\");\n\nexport function getRandomBytes(bytes: number): Promise<Buffer> {\n  return new Promise((resolve, reject) => {\n    randombytes(bytes, function(err: any, resp: Buffer) {\n      if (err) {\n        reject(err);\n        return;\n      }\n\n      resolve(resp);\n    });\n  });\n}\n\nexport function getRandomBytesSync(bytes: number): Buffer {\n  return randombytes(bytes);\n}\n","import { privateKeyVerify } from \"secp256k1\";\nimport { getRandomBytes, getRandomBytesSync } from \"./random\";\n\nconst SECP256K1_PRIVATE_KEY_SIZE = 32;\n\nexport async function createPrivateKey(): Promise<Uint8Array> {\n  while (true) {\n    const pk = await getRandomBytes(SECP256K1_PRIVATE_KEY_SIZE);\n    if (privateKeyVerify(pk)) {\n      return pk;\n    }\n  }\n}\n\nexport function createPrivateKeySync(): Uint8Array {\n  while (true) {\n    const pk = getRandomBytesSync(SECP256K1_PRIVATE_KEY_SIZE);\n    if (privateKeyVerify(pk)) {\n      return pk;\n    }\n  }\n}\n\nexport * from \"secp256k1\";\n","'use strict';\n\nvar isCallable = require('is-callable');\n\nvar toStr = Object.prototype.toString;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            if (receiver == null) {\n                iterator(array[i], i, array);\n            } else {\n                iterator.call(receiver, array[i], i, array);\n            }\n        }\n    }\n};\n\nvar forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        if (receiver == null) {\n            iterator(string.charAt(i), i, string);\n        } else {\n            iterator.call(receiver, string.charAt(i), i, string);\n        }\n    }\n};\n\nvar forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            if (receiver == null) {\n                iterator(object[k], k, object);\n            } else {\n                iterator.call(receiver, object[k], k, object);\n            }\n        }\n    }\n};\n\nvar forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n        throw new TypeError('iterator must be a function');\n    }\n\n    var receiver;\n    if (arguments.length >= 3) {\n        receiver = thisArg;\n    }\n\n    if (toStr.call(list) === '[object Array]') {\n        forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n        forEachString(list, iterator, receiver);\n    } else {\n        forEachObject(list, iterator, receiver);\n    }\n};\n\nmodule.exports = forEach;\n","'use strict';\n\nvar hasSymbols = require('has-symbols/shams');\n\n/** @type {import('.')} */\nmodule.exports = function hasToStringTagShams() {\n\treturn hasSymbols() && !!Symbol.toStringTag;\n};\n","'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n","'use strict';\n\nvar fnToStr = Function.prototype.toString;\nvar reflectApply = typeof Reflect === 'object' && Reflect !== null && Reflect.apply;\nvar badArrayLike;\nvar isCallableMarker;\nif (typeof reflectApply === 'function' && typeof Object.defineProperty === 'function') {\n\ttry {\n\t\tbadArrayLike = Object.defineProperty({}, 'length', {\n\t\t\tget: function () {\n\t\t\t\tthrow isCallableMarker;\n\t\t\t}\n\t\t});\n\t\tisCallableMarker = {};\n\t\t// eslint-disable-next-line no-throw-literal\n\t\treflectApply(function () { throw 42; }, null, badArrayLike);\n\t} catch (_) {\n\t\tif (_ !== isCallableMarker) {\n\t\t\treflectApply = null;\n\t\t}\n\t}\n} else {\n\treflectApply = null;\n}\n\nvar constructorRegex = /^\\s*class\\b/;\nvar isES6ClassFn = function isES6ClassFunction(value) {\n\ttry {\n\t\tvar fnStr = fnToStr.call(value);\n\t\treturn constructorRegex.test(fnStr);\n\t} catch (e) {\n\t\treturn false; // not a function\n\t}\n};\n\nvar tryFunctionObject = function tryFunctionToStr(value) {\n\ttry {\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tfnToStr.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar objectClass = '[object Object]';\nvar fnClass = '[object Function]';\nvar genClass = '[object GeneratorFunction]';\nvar ddaClass = '[object HTMLAllCollection]'; // IE 11\nvar ddaClass2 = '[object HTML document.all class]';\nvar ddaClass3 = '[object HTMLCollection]'; // IE 9-10\nvar hasToStringTag = typeof Symbol === 'function' && !!Symbol.toStringTag; // better: use `has-tostringtag`\n\nvar isIE68 = !(0 in [,]); // eslint-disable-line no-sparse-arrays, comma-spacing\n\nvar isDDA = function isDocumentDotAll() { return false; };\nif (typeof document === 'object') {\n\t// Firefox 3 canonicalizes DDA to undefined when it's not accessed directly\n\tvar all = document.all;\n\tif (toStr.call(all) === toStr.call(document.all)) {\n\t\tisDDA = function isDocumentDotAll(value) {\n\t\t\t/* globals document: false */\n\t\t\t// in IE 6-8, typeof document.all is \"object\" and it's truthy\n\t\t\tif ((isIE68 || !value) && (typeof value === 'undefined' || typeof value === 'object')) {\n\t\t\t\ttry {\n\t\t\t\t\tvar str = toStr.call(value);\n\t\t\t\t\treturn (\n\t\t\t\t\t\tstr === ddaClass\n\t\t\t\t\t\t|| str === ddaClass2\n\t\t\t\t\t\t|| str === ddaClass3 // opera 12.16\n\t\t\t\t\t\t|| str === objectClass // IE 6-8\n\t\t\t\t\t) && value('') == null; // eslint-disable-line eqeqeq\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t\treturn false;\n\t\t};\n\t}\n}\n\nmodule.exports = reflectApply\n\t? function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\ttry {\n\t\t\treflectApply(value, null, badArrayLike);\n\t\t} catch (e) {\n\t\t\tif (e !== isCallableMarker) { return false; }\n\t\t}\n\t\treturn !isES6ClassFn(value) && tryFunctionObject(value);\n\t}\n\t: function isCallable(value) {\n\t\tif (isDDA(value)) { return true; }\n\t\tif (!value) { return false; }\n\t\tif (typeof value !== 'function' && typeof value !== 'object') { return false; }\n\t\tif (hasToStringTag) { return tryFunctionObject(value); }\n\t\tif (isES6ClassFn(value)) { return false; }\n\t\tvar strClass = toStr.call(value);\n\t\tif (strClass !== fnClass && strClass !== genClass && !(/^\\[object HTML/).test(strClass)) { return false; }\n\t\treturn tryFunctionObject(value);\n\t};\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar fnToStr = Function.prototype.toString;\nvar isFnRegex = /^\\s*(?:function)?\\*/;\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar getProto = Object.getPrototypeOf;\nvar getGeneratorFunc = function () { // eslint-disable-line consistent-return\n\tif (!hasToStringTag) {\n\t\treturn false;\n\t}\n\ttry {\n\t\treturn Function('return function*() {}')();\n\t} catch (e) {\n\t}\n};\nvar GeneratorFunction;\n\nmodule.exports = function isGeneratorFunction(fn) {\n\tif (typeof fn !== 'function') {\n\t\treturn false;\n\t}\n\tif (isFnRegex.test(fnToStr.call(fn))) {\n\t\treturn true;\n\t}\n\tif (!hasToStringTag) {\n\t\tvar str = toStr.call(fn);\n\t\treturn str === '[object GeneratorFunction]';\n\t}\n\tif (!getProto) {\n\t\treturn false;\n\t}\n\tif (typeof GeneratorFunction === 'undefined') {\n\t\tvar generatorFunc = getGeneratorFunc();\n\t\tGeneratorFunction = generatorFunc ? getProto(generatorFunc) : false;\n\t}\n\treturn getProto(fn) === GeneratorFunction;\n};\n","'use strict';\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function isNaN(value) {\n\treturn value !== value;\n};\n","'use strict';\n\nvar callBind = require('call-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Number);\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\tif (Number.isNaN && Number.isNaN(NaN) && !Number.isNaN('a')) {\n\t\treturn Number.isNaN;\n\t}\n\treturn implementation;\n};\n","'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function shimNumberIsNaN() {\n\tvar polyfill = getPolyfill();\n\tdefine(Number, { isNaN: polyfill }, {\n\t\tisNaN: function testIsNaN() {\n\t\t\treturn Number.isNaN !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","'use strict';\n\nvar whichTypedArray = require('which-typed-array');\n\n/** @type {import('.')} */\nmodule.exports = function isTypedArray(value) {\n\treturn !!whichTypedArray(value);\n};\n","module.exports = require('./lib/api')(require('./lib/keccak'))\n","const createKeccak = require('./keccak')\nconst createShake = require('./shake')\n\nmodule.exports = function (KeccakState) {\n  const Keccak = createKeccak(KeccakState)\n  const Shake = createShake(KeccakState)\n\n  return function (algorithm, options) {\n    const hash = typeof algorithm === 'string' ? algorithm.toLowerCase() : algorithm\n    switch (hash) {\n      case 'keccak224': return new Keccak(1152, 448, null, 224, options)\n      case 'keccak256': return new Keccak(1088, 512, null, 256, options)\n      case 'keccak384': return new Keccak(832, 768, null, 384, options)\n      case 'keccak512': return new Keccak(576, 1024, null, 512, options)\n\n      case 'sha3-224': return new Keccak(1152, 448, 0x06, 224, options)\n      case 'sha3-256': return new Keccak(1088, 512, 0x06, 256, options)\n      case 'sha3-384': return new Keccak(832, 768, 0x06, 384, options)\n      case 'sha3-512': return new Keccak(576, 1024, 0x06, 512, options)\n\n      case 'shake128': return new Shake(1344, 256, 0x1f, options)\n      case 'shake256': return new Shake(1088, 512, 0x1f, options)\n\n      default: throw new Error('Invald algorithm: ' + algorithm)\n    }\n  }\n}\n","const { Transform } = require('readable-stream')\n\nmodule.exports = (KeccakState) => class Keccak extends Transform {\n  constructor (rate, capacity, delimitedSuffix, hashBitLength, options) {\n    super(options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._hashBitLength = hashBitLength\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  _transform (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  _flush (callback) {\n    let error = null\n    try {\n      this.push(this.digest())\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  update (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Digest already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  digest (encoding) {\n    if (this._finalized) throw new Error('Digest already called')\n    this._finalized = true\n\n    if (this._delimitedSuffix) this._state.absorbLastFewBits(this._delimitedSuffix)\n    let digest = this._state.squeeze(this._hashBitLength / 8)\n    if (encoding !== undefined) digest = digest.toString(encoding)\n\n    this._resetState()\n\n    return digest\n  }\n\n  // remove result from memory\n  _resetState () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  // because sometimes we need hash right now and little later\n  _clone () {\n    const clone = new Keccak(this._rate, this._capacity, this._delimitedSuffix, this._hashBitLength, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n}\n","const { Transform } = require('readable-stream')\n\nmodule.exports = (KeccakState) => class Shake extends Transform {\n  constructor (rate, capacity, delimitedSuffix, options) {\n    super(options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  _transform (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  _flush () {}\n\n  _read (size) {\n    this.push(this.squeeze(size))\n  }\n\n  update (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Squeeze already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  squeeze (dataByteLength, encoding) {\n    if (!this._finalized) {\n      this._finalized = true\n      this._state.absorbLastFewBits(this._delimitedSuffix)\n    }\n\n    let data = this._state.squeeze(dataByteLength)\n    if (encoding !== undefined) data = data.toString(encoding)\n\n    return data\n  }\n\n  _resetState () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  _clone () {\n    const clone = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n}\n","const P1600_ROUND_CONSTANTS = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648]\n\nexports.p1600 = function (s) {\n  for (let round = 0; round < 24; ++round) {\n    // theta\n    const lo0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40]\n    const hi0 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41]\n    const lo1 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42]\n    const hi1 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43]\n    const lo2 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44]\n    const hi2 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45]\n    const lo3 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46]\n    const hi3 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47]\n    const lo4 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48]\n    const hi4 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49]\n\n    let lo = lo4 ^ (lo1 << 1 | hi1 >>> 31)\n    let hi = hi4 ^ (hi1 << 1 | lo1 >>> 31)\n    const t1slo0 = s[0] ^ lo\n    const t1shi0 = s[1] ^ hi\n    const t1slo5 = s[10] ^ lo\n    const t1shi5 = s[11] ^ hi\n    const t1slo10 = s[20] ^ lo\n    const t1shi10 = s[21] ^ hi\n    const t1slo15 = s[30] ^ lo\n    const t1shi15 = s[31] ^ hi\n    const t1slo20 = s[40] ^ lo\n    const t1shi20 = s[41] ^ hi\n    lo = lo0 ^ (lo2 << 1 | hi2 >>> 31)\n    hi = hi0 ^ (hi2 << 1 | lo2 >>> 31)\n    const t1slo1 = s[2] ^ lo\n    const t1shi1 = s[3] ^ hi\n    const t1slo6 = s[12] ^ lo\n    const t1shi6 = s[13] ^ hi\n    const t1slo11 = s[22] ^ lo\n    const t1shi11 = s[23] ^ hi\n    const t1slo16 = s[32] ^ lo\n    const t1shi16 = s[33] ^ hi\n    const t1slo21 = s[42] ^ lo\n    const t1shi21 = s[43] ^ hi\n    lo = lo1 ^ (lo3 << 1 | hi3 >>> 31)\n    hi = hi1 ^ (hi3 << 1 | lo3 >>> 31)\n    const t1slo2 = s[4] ^ lo\n    const t1shi2 = s[5] ^ hi\n    const t1slo7 = s[14] ^ lo\n    const t1shi7 = s[15] ^ hi\n    const t1slo12 = s[24] ^ lo\n    const t1shi12 = s[25] ^ hi\n    const t1slo17 = s[34] ^ lo\n    const t1shi17 = s[35] ^ hi\n    const t1slo22 = s[44] ^ lo\n    const t1shi22 = s[45] ^ hi\n    lo = lo2 ^ (lo4 << 1 | hi4 >>> 31)\n    hi = hi2 ^ (hi4 << 1 | lo4 >>> 31)\n    const t1slo3 = s[6] ^ lo\n    const t1shi3 = s[7] ^ hi\n    const t1slo8 = s[16] ^ lo\n    const t1shi8 = s[17] ^ hi\n    const t1slo13 = s[26] ^ lo\n    const t1shi13 = s[27] ^ hi\n    const t1slo18 = s[36] ^ lo\n    const t1shi18 = s[37] ^ hi\n    const t1slo23 = s[46] ^ lo\n    const t1shi23 = s[47] ^ hi\n    lo = lo3 ^ (lo0 << 1 | hi0 >>> 31)\n    hi = hi3 ^ (hi0 << 1 | lo0 >>> 31)\n    const t1slo4 = s[8] ^ lo\n    const t1shi4 = s[9] ^ hi\n    const t1slo9 = s[18] ^ lo\n    const t1shi9 = s[19] ^ hi\n    const t1slo14 = s[28] ^ lo\n    const t1shi14 = s[29] ^ hi\n    const t1slo19 = s[38] ^ lo\n    const t1shi19 = s[39] ^ hi\n    const t1slo24 = s[48] ^ lo\n    const t1shi24 = s[49] ^ hi\n\n    // rho & pi\n    const t2slo0 = t1slo0\n    const t2shi0 = t1shi0\n    const t2slo16 = (t1shi5 << 4 | t1slo5 >>> 28)\n    const t2shi16 = (t1slo5 << 4 | t1shi5 >>> 28)\n    const t2slo7 = (t1slo10 << 3 | t1shi10 >>> 29)\n    const t2shi7 = (t1shi10 << 3 | t1slo10 >>> 29)\n    const t2slo23 = (t1shi15 << 9 | t1slo15 >>> 23)\n    const t2shi23 = (t1slo15 << 9 | t1shi15 >>> 23)\n    const t2slo14 = (t1slo20 << 18 | t1shi20 >>> 14)\n    const t2shi14 = (t1shi20 << 18 | t1slo20 >>> 14)\n    const t2slo10 = (t1slo1 << 1 | t1shi1 >>> 31)\n    const t2shi10 = (t1shi1 << 1 | t1slo1 >>> 31)\n    const t2slo1 = (t1shi6 << 12 | t1slo6 >>> 20)\n    const t2shi1 = (t1slo6 << 12 | t1shi6 >>> 20)\n    const t2slo17 = (t1slo11 << 10 | t1shi11 >>> 22)\n    const t2shi17 = (t1shi11 << 10 | t1slo11 >>> 22)\n    const t2slo8 = (t1shi16 << 13 | t1slo16 >>> 19)\n    const t2shi8 = (t1slo16 << 13 | t1shi16 >>> 19)\n    const t2slo24 = (t1slo21 << 2 | t1shi21 >>> 30)\n    const t2shi24 = (t1shi21 << 2 | t1slo21 >>> 30)\n    const t2slo20 = (t1shi2 << 30 | t1slo2 >>> 2)\n    const t2shi20 = (t1slo2 << 30 | t1shi2 >>> 2)\n    const t2slo11 = (t1slo7 << 6 | t1shi7 >>> 26)\n    const t2shi11 = (t1shi7 << 6 | t1slo7 >>> 26)\n    const t2slo2 = (t1shi12 << 11 | t1slo12 >>> 21)\n    const t2shi2 = (t1slo12 << 11 | t1shi12 >>> 21)\n    const t2slo18 = (t1slo17 << 15 | t1shi17 >>> 17)\n    const t2shi18 = (t1shi17 << 15 | t1slo17 >>> 17)\n    const t2slo9 = (t1shi22 << 29 | t1slo22 >>> 3)\n    const t2shi9 = (t1slo22 << 29 | t1shi22 >>> 3)\n    const t2slo5 = (t1slo3 << 28 | t1shi3 >>> 4)\n    const t2shi5 = (t1shi3 << 28 | t1slo3 >>> 4)\n    const t2slo21 = (t1shi8 << 23 | t1slo8 >>> 9)\n    const t2shi21 = (t1slo8 << 23 | t1shi8 >>> 9)\n    const t2slo12 = (t1slo13 << 25 | t1shi13 >>> 7)\n    const t2shi12 = (t1shi13 << 25 | t1slo13 >>> 7)\n    const t2slo3 = (t1slo18 << 21 | t1shi18 >>> 11)\n    const t2shi3 = (t1shi18 << 21 | t1slo18 >>> 11)\n    const t2slo19 = (t1shi23 << 24 | t1slo23 >>> 8)\n    const t2shi19 = (t1slo23 << 24 | t1shi23 >>> 8)\n    const t2slo15 = (t1slo4 << 27 | t1shi4 >>> 5)\n    const t2shi15 = (t1shi4 << 27 | t1slo4 >>> 5)\n    const t2slo6 = (t1slo9 << 20 | t1shi9 >>> 12)\n    const t2shi6 = (t1shi9 << 20 | t1slo9 >>> 12)\n    const t2slo22 = (t1shi14 << 7 | t1slo14 >>> 25)\n    const t2shi22 = (t1slo14 << 7 | t1shi14 >>> 25)\n    const t2slo13 = (t1slo19 << 8 | t1shi19 >>> 24)\n    const t2shi13 = (t1shi19 << 8 | t1slo19 >>> 24)\n    const t2slo4 = (t1slo24 << 14 | t1shi24 >>> 18)\n    const t2shi4 = (t1shi24 << 14 | t1slo24 >>> 18)\n\n    // chi\n    s[0] = t2slo0 ^ (~t2slo1 & t2slo2)\n    s[1] = t2shi0 ^ (~t2shi1 & t2shi2)\n    s[10] = t2slo5 ^ (~t2slo6 & t2slo7)\n    s[11] = t2shi5 ^ (~t2shi6 & t2shi7)\n    s[20] = t2slo10 ^ (~t2slo11 & t2slo12)\n    s[21] = t2shi10 ^ (~t2shi11 & t2shi12)\n    s[30] = t2slo15 ^ (~t2slo16 & t2slo17)\n    s[31] = t2shi15 ^ (~t2shi16 & t2shi17)\n    s[40] = t2slo20 ^ (~t2slo21 & t2slo22)\n    s[41] = t2shi20 ^ (~t2shi21 & t2shi22)\n    s[2] = t2slo1 ^ (~t2slo2 & t2slo3)\n    s[3] = t2shi1 ^ (~t2shi2 & t2shi3)\n    s[12] = t2slo6 ^ (~t2slo7 & t2slo8)\n    s[13] = t2shi6 ^ (~t2shi7 & t2shi8)\n    s[22] = t2slo11 ^ (~t2slo12 & t2slo13)\n    s[23] = t2shi11 ^ (~t2shi12 & t2shi13)\n    s[32] = t2slo16 ^ (~t2slo17 & t2slo18)\n    s[33] = t2shi16 ^ (~t2shi17 & t2shi18)\n    s[42] = t2slo21 ^ (~t2slo22 & t2slo23)\n    s[43] = t2shi21 ^ (~t2shi22 & t2shi23)\n    s[4] = t2slo2 ^ (~t2slo3 & t2slo4)\n    s[5] = t2shi2 ^ (~t2shi3 & t2shi4)\n    s[14] = t2slo7 ^ (~t2slo8 & t2slo9)\n    s[15] = t2shi7 ^ (~t2shi8 & t2shi9)\n    s[24] = t2slo12 ^ (~t2slo13 & t2slo14)\n    s[25] = t2shi12 ^ (~t2shi13 & t2shi14)\n    s[34] = t2slo17 ^ (~t2slo18 & t2slo19)\n    s[35] = t2shi17 ^ (~t2shi18 & t2shi19)\n    s[44] = t2slo22 ^ (~t2slo23 & t2slo24)\n    s[45] = t2shi22 ^ (~t2shi23 & t2shi24)\n    s[6] = t2slo3 ^ (~t2slo4 & t2slo0)\n    s[7] = t2shi3 ^ (~t2shi4 & t2shi0)\n    s[16] = t2slo8 ^ (~t2slo9 & t2slo5)\n    s[17] = t2shi8 ^ (~t2shi9 & t2shi5)\n    s[26] = t2slo13 ^ (~t2slo14 & t2slo10)\n    s[27] = t2shi13 ^ (~t2shi14 & t2shi10)\n    s[36] = t2slo18 ^ (~t2slo19 & t2slo15)\n    s[37] = t2shi18 ^ (~t2shi19 & t2shi15)\n    s[46] = t2slo23 ^ (~t2slo24 & t2slo20)\n    s[47] = t2shi23 ^ (~t2shi24 & t2shi20)\n    s[8] = t2slo4 ^ (~t2slo0 & t2slo1)\n    s[9] = t2shi4 ^ (~t2shi0 & t2shi1)\n    s[18] = t2slo9 ^ (~t2slo5 & t2slo6)\n    s[19] = t2shi9 ^ (~t2shi5 & t2shi6)\n    s[28] = t2slo14 ^ (~t2slo10 & t2slo11)\n    s[29] = t2shi14 ^ (~t2shi10 & t2shi11)\n    s[38] = t2slo19 ^ (~t2slo15 & t2slo16)\n    s[39] = t2shi19 ^ (~t2shi15 & t2shi16)\n    s[48] = t2slo24 ^ (~t2slo20 & t2slo21)\n    s[49] = t2shi24 ^ (~t2shi20 & t2shi21)\n\n    // iota\n    s[0] ^= P1600_ROUND_CONSTANTS[round * 2]\n    s[1] ^= P1600_ROUND_CONSTANTS[round * 2 + 1]\n  }\n}\n","const keccakState = require('./keccak-state-unroll')\n\nfunction Keccak () {\n  // much faster than `new Array(50)`\n  this.state = [\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0\n  ]\n\n  this.blockSize = null\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.initialize = function (rate, capacity) {\n  for (let i = 0; i < 50; ++i) this.state[i] = 0\n  this.blockSize = rate / 8\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.absorb = function (data) {\n  for (let i = 0; i < data.length; ++i) {\n    this.state[~~(this.count / 4)] ^= data[i] << (8 * (this.count % 4))\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n}\n\nKeccak.prototype.absorbLastFewBits = function (bits) {\n  this.state[~~(this.count / 4)] ^= bits << (8 * (this.count % 4))\n  if ((bits & 0x80) !== 0 && this.count === (this.blockSize - 1)) keccakState.p1600(this.state)\n  this.state[~~((this.blockSize - 1) / 4)] ^= 0x80 << (8 * ((this.blockSize - 1) % 4))\n  keccakState.p1600(this.state)\n  this.count = 0\n  this.squeezing = true\n}\n\nKeccak.prototype.squeeze = function (length) {\n  if (!this.squeezing) this.absorbLastFewBits(0x01)\n\n  const output = Buffer.alloc(length)\n  for (let i = 0; i < length; ++i) {\n    output[i] = (this.state[~~(this.count / 4)] >>> (8 * (this.count % 4))) & 0xff\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n\n  return output\n}\n\nKeccak.prototype.copy = function (dest) {\n  for (let i = 0; i < 50; ++i) dest.state[i] = this.state[i]\n  dest.blockSize = this.blockSize\n  dest.count = this.count\n  dest.squeezing = this.squeezing\n}\n\nmodule.exports = Keccak\n","'use strict';\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inheritsLoose(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      return _Base.call(this, getMessage(arg1, arg2, arg3)) || this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"';\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  }\n\n  msg += \". Received type \".concat(typeof actual);\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented';\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\nmodule.exports.codes = codes;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();","'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;","module.exports = function () {\n  throw new Error('Readable.from is not available in the browser')\n};\n","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","module.exports = require('events').EventEmitter;\n","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\nexports.finished = require('./lib/internal/streams/end-of-stream.js');\nexports.pipeline = require('./lib/internal/streams/pipeline.js');\n","/**\n * Advanced Encryption Standard (AES) implementation.\n *\n * This implementation is based on the public domain library 'jscrypto' which\n * was written by:\n *\n * Emily Stark (estark@stanford.edu)\n * Mike Hamburg (mhamburg@stanford.edu)\n * Dan Boneh (dabo@cs.stanford.edu)\n *\n * Parts of this code are based on the OpenSSL implementation of AES:\n * http://www.openssl.org\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./cipher');\nrequire('./cipherModes');\nrequire('./util');\n\n/* AES API */\nmodule.exports = forge.aes = forge.aes || {};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('AES-<mode>', key);\n * cipher.start({iv: iv});\n *\n * Creates an AES cipher object to encrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as a string of bytes, an array of bytes,\n * a byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.startEncrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: false,\n    mode: mode\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('AES-<mode>', key);\n *\n * Creates an AES cipher object to encrypt data using the given symmetric key.\n *\n * The key may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.createEncryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: false,\n    mode: mode\n  });\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('AES-<mode>', key);\n * decipher.start({iv: iv});\n *\n * Creates an AES cipher object to decrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as a string of bytes, an array of bytes,\n * a byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.startDecrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: true,\n    mode: mode\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('AES-<mode>', key);\n *\n * Creates an AES cipher object to decrypt data using the given symmetric key.\n *\n * The key may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param key the symmetric key to use.\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.aes.createDecryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: true,\n    mode: mode\n  });\n};\n\n/**\n * Creates a new AES cipher algorithm object.\n *\n * @param name the name of the algorithm.\n * @param mode the mode factory function.\n *\n * @return the AES algorithm object.\n */\nforge.aes.Algorithm = function(name, mode) {\n  if(!init) {\n    initialize();\n  }\n  var self = this;\n  self.name = name;\n  self.mode = new mode({\n    blockSize: 16,\n    cipher: {\n      encrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._w, inBlock, outBlock, false);\n      },\n      decrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._w, inBlock, outBlock, true);\n      }\n    }\n  });\n  self._init = false;\n};\n\n/**\n * Initializes this AES algorithm by expanding its key.\n *\n * @param options the options to use.\n *          key the key to use with this algorithm.\n *          decrypt true if the algorithm should be initialized for decryption,\n *            false for encryption.\n */\nforge.aes.Algorithm.prototype.initialize = function(options) {\n  if(this._init) {\n    return;\n  }\n\n  var key = options.key;\n  var tmp;\n\n  /* Note: The key may be a string of bytes, an array of bytes, a byte\n    buffer, or an array of 32-bit integers. If the key is in bytes, then\n    it must be 16, 24, or 32 bytes in length. If it is in 32-bit\n    integers, it must be 4, 6, or 8 integers long. */\n\n  if(typeof key === 'string' &&\n    (key.length === 16 || key.length === 24 || key.length === 32)) {\n    // convert key string into byte buffer\n    key = forge.util.createBuffer(key);\n  } else if(forge.util.isArray(key) &&\n    (key.length === 16 || key.length === 24 || key.length === 32)) {\n    // convert key integer array into byte buffer\n    tmp = key;\n    key = forge.util.createBuffer();\n    for(var i = 0; i < tmp.length; ++i) {\n      key.putByte(tmp[i]);\n    }\n  }\n\n  // convert key byte buffer into 32-bit integer array\n  if(!forge.util.isArray(key)) {\n    tmp = key;\n    key = [];\n\n    // key lengths of 16, 24, 32 bytes allowed\n    var len = tmp.length();\n    if(len === 16 || len === 24 || len === 32) {\n      len = len >>> 2;\n      for(var i = 0; i < len; ++i) {\n        key.push(tmp.getInt32());\n      }\n    }\n  }\n\n  // key must be an array of 32-bit integers by now\n  if(!forge.util.isArray(key) ||\n    !(key.length === 4 || key.length === 6 || key.length === 8)) {\n    throw new Error('Invalid key parameter.');\n  }\n\n  // encryption operation is always used for these modes\n  var mode = this.mode.name;\n  var encryptOp = (['CFB', 'OFB', 'CTR', 'GCM'].indexOf(mode) !== -1);\n\n  // do key expansion\n  this._w = _expandKey(key, options.decrypt && !encryptOp);\n  this._init = true;\n};\n\n/**\n * Expands a key. Typically only used for testing.\n *\n * @param key the symmetric key to expand, as an array of 32-bit words.\n * @param decrypt true to expand for decryption, false for encryption.\n *\n * @return the expanded key.\n */\nforge.aes._expandKey = function(key, decrypt) {\n  if(!init) {\n    initialize();\n  }\n  return _expandKey(key, decrypt);\n};\n\n/**\n * Updates a single block. Typically only used for testing.\n *\n * @param w the expanded key to use.\n * @param input an array of block-size 32-bit words.\n * @param output an array of block-size 32-bit words.\n * @param decrypt true to decrypt, false to encrypt.\n */\nforge.aes._updateBlock = _updateBlock;\n\n/** Register AES algorithms **/\n\nregisterAlgorithm('AES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('AES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('AES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('AES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('AES-CTR', forge.cipher.modes.ctr);\nregisterAlgorithm('AES-GCM', forge.cipher.modes.gcm);\n\nfunction registerAlgorithm(name, mode) {\n  var factory = function() {\n    return new forge.aes.Algorithm(name, mode);\n  };\n  forge.cipher.registerAlgorithm(name, factory);\n}\n\n/** AES implementation **/\n\nvar init = false; // not yet initialized\nvar Nb = 4;       // number of words comprising the state (AES = 4)\nvar sbox;         // non-linear substitution table used in key expansion\nvar isbox;        // inversion of sbox\nvar rcon;         // round constant word array\nvar mix;          // mix-columns table\nvar imix;         // inverse mix-columns table\n\n/**\n * Performs initialization, ie: precomputes tables to optimize for speed.\n *\n * One way to understand how AES works is to imagine that 'addition' and\n * 'multiplication' are interfaces that require certain mathematical\n * properties to hold true (ie: they are associative) but they might have\n * different implementations and produce different kinds of results ...\n * provided that their mathematical properties remain true. AES defines\n * its own methods of addition and multiplication but keeps some important\n * properties the same, ie: associativity and distributivity. The\n * explanation below tries to shed some light on how AES defines addition\n * and multiplication of bytes and 32-bit words in order to perform its\n * encryption and decryption algorithms.\n *\n * The basics:\n *\n * The AES algorithm views bytes as binary representations of polynomials\n * that have either 1 or 0 as the coefficients. It defines the addition\n * or subtraction of two bytes as the XOR operation. It also defines the\n * multiplication of two bytes as a finite field referred to as GF(2^8)\n * (Note: 'GF' means \"Galois Field\" which is a field that contains a finite\n * number of elements so GF(2^8) has 256 elements).\n *\n * This means that any two bytes can be represented as binary polynomials;\n * when they multiplied together and modularly reduced by an irreducible\n * polynomial of the 8th degree, the results are the field GF(2^8). The\n * specific irreducible polynomial that AES uses in hexadecimal is 0x11b.\n * This multiplication is associative with 0x01 as the identity:\n *\n * (b * 0x01 = GF(b, 0x01) = b).\n *\n * The operation GF(b, 0x02) can be performed at the byte level by left\n * shifting b once and then XOR'ing it (to perform the modular reduction)\n * with 0x11b if b is >= 128. Repeated application of the multiplication\n * of 0x02 can be used to implement the multiplication of any two bytes.\n *\n * For instance, multiplying 0x57 and 0x13, denoted as GF(0x57, 0x13), can\n * be performed by factoring 0x13 into 0x01, 0x02, and 0x10. Then these\n * factors can each be multiplied by 0x57 and then added together. To do\n * the multiplication, values for 0x57 multiplied by each of these 3 factors\n * can be precomputed and stored in a table. To add them, the values from\n * the table are XOR'd together.\n *\n * AES also defines addition and multiplication of words, that is 4-byte\n * numbers represented as polynomials of 3 degrees where the coefficients\n * are the values of the bytes.\n *\n * The word [a0, a1, a2, a3] is a polynomial a3x^3 + a2x^2 + a1x + a0.\n *\n * Addition is performed by XOR'ing like powers of x. Multiplication\n * is performed in two steps, the first is an algebriac expansion as\n * you would do normally (where addition is XOR). But the result is\n * a polynomial larger than 3 degrees and thus it cannot fit in a word. So\n * next the result is modularly reduced by an AES-specific polynomial of\n * degree 4 which will always produce a polynomial of less than 4 degrees\n * such that it will fit in a word. In AES, this polynomial is x^4 + 1.\n *\n * The modular product of two polynomials 'a' and 'b' is thus:\n *\n * d(x) = d3x^3 + d2x^2 + d1x + d0\n * with\n * d0 = GF(a0, b0) ^ GF(a3, b1) ^ GF(a2, b2) ^ GF(a1, b3)\n * d1 = GF(a1, b0) ^ GF(a0, b1) ^ GF(a3, b2) ^ GF(a2, b3)\n * d2 = GF(a2, b0) ^ GF(a1, b1) ^ GF(a0, b2) ^ GF(a3, b3)\n * d3 = GF(a3, b0) ^ GF(a2, b1) ^ GF(a1, b2) ^ GF(a0, b3)\n *\n * As a matrix:\n *\n * [d0] = [a0 a3 a2 a1][b0]\n * [d1]   [a1 a0 a3 a2][b1]\n * [d2]   [a2 a1 a0 a3][b2]\n * [d3]   [a3 a2 a1 a0][b3]\n *\n * Special polynomials defined by AES (0x02 == {02}):\n * a(x)    = {03}x^3 + {01}x^2 + {01}x + {02}\n * a^-1(x) = {0b}x^3 + {0d}x^2 + {09}x + {0e}.\n *\n * These polynomials are used in the MixColumns() and InverseMixColumns()\n * operations, respectively, to cause each element in the state to affect\n * the output (referred to as diffusing).\n *\n * RotWord() uses: a0 = a1 = a2 = {00} and a3 = {01}, which is the\n * polynomial x3.\n *\n * The ShiftRows() method modifies the last 3 rows in the state (where\n * the state is 4 words with 4 bytes per word) by shifting bytes cyclically.\n * The 1st byte in the second row is moved to the end of the row. The 1st\n * and 2nd bytes in the third row are moved to the end of the row. The 1st,\n * 2nd, and 3rd bytes are moved in the fourth row.\n *\n * More details on how AES arithmetic works:\n *\n * In the polynomial representation of binary numbers, XOR performs addition\n * and subtraction and multiplication in GF(2^8) denoted as GF(a, b)\n * corresponds with the multiplication of polynomials modulo an irreducible\n * polynomial of degree 8. In other words, for AES, GF(a, b) will multiply\n * polynomial 'a' with polynomial 'b' and then do a modular reduction by\n * an AES-specific irreducible polynomial of degree 8.\n *\n * A polynomial is irreducible if its only divisors are one and itself. For\n * the AES algorithm, this irreducible polynomial is:\n *\n * m(x) = x^8 + x^4 + x^3 + x + 1,\n *\n * or {01}{1b} in hexadecimal notation, where each coefficient is a bit:\n * 100011011 = 283 = 0x11b.\n *\n * For example, GF(0x57, 0x83) = 0xc1 because\n *\n * 0x57 = 87  = 01010111 = x^6 + x^4 + x^2 + x + 1\n * 0x85 = 131 = 10000101 = x^7 + x + 1\n *\n * (x^6 + x^4 + x^2 + x + 1) * (x^7 + x + 1)\n * =  x^13 + x^11 + x^9 + x^8 + x^7 +\n *    x^7 + x^5 + x^3 + x^2 + x +\n *    x^6 + x^4 + x^2 + x + 1\n * =  x^13 + x^11 + x^9 + x^8 + x^6 + x^5 + x^4 + x^3 + 1 = y\n *    y modulo (x^8 + x^4 + x^3 + x + 1)\n * =  x^7 + x^6 + 1.\n *\n * The modular reduction by m(x) guarantees the result will be a binary\n * polynomial of less than degree 8, so that it can fit in a byte.\n *\n * The operation to multiply a binary polynomial b with x (the polynomial\n * x in binary representation is 00000010) is:\n *\n * b_7x^8 + b_6x^7 + b_5x^6 + b_4x^5 + b_3x^4 + b_2x^3 + b_1x^2 + b_0x^1\n *\n * To get GF(b, x) we must reduce that by m(x). If b_7 is 0 (that is the\n * most significant bit is 0 in b) then the result is already reduced. If\n * it is 1, then we can reduce it by subtracting m(x) via an XOR.\n *\n * It follows that multiplication by x (00000010 or 0x02) can be implemented\n * by performing a left shift followed by a conditional bitwise XOR with\n * 0x1b. This operation on bytes is denoted by xtime(). Multiplication by\n * higher powers of x can be implemented by repeated application of xtime().\n *\n * By adding intermediate results, multiplication by any constant can be\n * implemented. For instance:\n *\n * GF(0x57, 0x13) = 0xfe because:\n *\n * xtime(b) = (b & 128) ? (b << 1 ^ 0x11b) : (b << 1)\n *\n * Note: We XOR with 0x11b instead of 0x1b because in javascript our\n * datatype for b can be larger than 1 byte, so a left shift will not\n * automatically eliminate bits that overflow a byte ... by XOR'ing the\n * overflow bit with 1 (the extra one from 0x11b) we zero it out.\n *\n * GF(0x57, 0x02) = xtime(0x57) = 0xae\n * GF(0x57, 0x04) = xtime(0xae) = 0x47\n * GF(0x57, 0x08) = xtime(0x47) = 0x8e\n * GF(0x57, 0x10) = xtime(0x8e) = 0x07\n *\n * GF(0x57, 0x13) = GF(0x57, (0x01 ^ 0x02 ^ 0x10))\n *\n * And by the distributive property (since XOR is addition and GF() is\n * multiplication):\n *\n * = GF(0x57, 0x01) ^ GF(0x57, 0x02) ^ GF(0x57, 0x10)\n * = 0x57 ^ 0xae ^ 0x07\n * = 0xfe.\n */\nfunction initialize() {\n  init = true;\n\n  /* Populate the Rcon table. These are the values given by\n    [x^(i-1),{00},{00},{00}] where x^(i-1) are powers of x (and x = 0x02)\n    in the field of GF(2^8), where i starts at 1.\n\n    rcon[0] = [0x00, 0x00, 0x00, 0x00]\n    rcon[1] = [0x01, 0x00, 0x00, 0x00] 2^(1-1) = 2^0 = 1\n    rcon[2] = [0x02, 0x00, 0x00, 0x00] 2^(2-1) = 2^1 = 2\n    ...\n    rcon[9]  = [0x1B, 0x00, 0x00, 0x00] 2^(9-1)  = 2^8 = 0x1B\n    rcon[10] = [0x36, 0x00, 0x00, 0x00] 2^(10-1) = 2^9 = 0x36\n\n    We only store the first byte because it is the only one used.\n  */\n  rcon = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1B, 0x36];\n\n  // compute xtime table which maps i onto GF(i, 0x02)\n  var xtime = new Array(256);\n  for(var i = 0; i < 128; ++i) {\n    xtime[i] = i << 1;\n    xtime[i + 128] = (i + 128) << 1 ^ 0x11B;\n  }\n\n  // compute all other tables\n  sbox = new Array(256);\n  isbox = new Array(256);\n  mix = new Array(4);\n  imix = new Array(4);\n  for(var i = 0; i < 4; ++i) {\n    mix[i] = new Array(256);\n    imix[i] = new Array(256);\n  }\n  var e = 0, ei = 0, e2, e4, e8, sx, sx2, me, ime;\n  for(var i = 0; i < 256; ++i) {\n    /* We need to generate the SubBytes() sbox and isbox tables so that\n      we can perform byte substitutions. This requires us to traverse\n      all of the elements in GF, find their multiplicative inverses,\n      and apply to each the following affine transformation:\n\n      bi' = bi ^ b(i + 4) mod 8 ^ b(i + 5) mod 8 ^ b(i + 6) mod 8 ^\n            b(i + 7) mod 8 ^ ci\n      for 0 <= i < 8, where bi is the ith bit of the byte, and ci is the\n      ith bit of a byte c with the value {63} or {01100011}.\n\n      It is possible to traverse every possible value in a Galois field\n      using what is referred to as a 'generator'. There are many\n      generators (128 out of 256): 3,5,6,9,11,82 to name a few. To fully\n      traverse GF we iterate 255 times, multiplying by our generator\n      each time.\n\n      On each iteration we can determine the multiplicative inverse for\n      the current element.\n\n      Suppose there is an element in GF 'e'. For a given generator 'g',\n      e = g^x. The multiplicative inverse of e is g^(255 - x). It turns\n      out that if use the inverse of a generator as another generator\n      it will produce all of the corresponding multiplicative inverses\n      at the same time. For this reason, we choose 5 as our inverse\n      generator because it only requires 2 multiplies and 1 add and its\n      inverse, 82, requires relatively few operations as well.\n\n      In order to apply the affine transformation, the multiplicative\n      inverse 'ei' of 'e' can be repeatedly XOR'd (4 times) with a\n      bit-cycling of 'ei'. To do this 'ei' is first stored in 's' and\n      'x'. Then 's' is left shifted and the high bit of 's' is made the\n      low bit. The resulting value is stored in 's'. Then 'x' is XOR'd\n      with 's' and stored in 'x'. On each subsequent iteration the same\n      operation is performed. When 4 iterations are complete, 'x' is\n      XOR'd with 'c' (0x63) and the transformed value is stored in 'x'.\n      For example:\n\n      s = 01000001\n      x = 01000001\n\n      iteration 1: s = 10000010, x ^= s\n      iteration 2: s = 00000101, x ^= s\n      iteration 3: s = 00001010, x ^= s\n      iteration 4: s = 00010100, x ^= s\n      x ^= 0x63\n\n      This can be done with a loop where s = (s << 1) | (s >> 7). However,\n      it can also be done by using a single 16-bit (in this case 32-bit)\n      number 'sx'. Since XOR is an associative operation, we can set 'sx'\n      to 'ei' and then XOR it with 'sx' left-shifted 1,2,3, and 4 times.\n      The most significant bits will flow into the high 8 bit positions\n      and be correctly XOR'd with one another. All that remains will be\n      to cycle the high 8 bits by XOR'ing them all with the lower 8 bits\n      afterwards.\n\n      At the same time we're populating sbox and isbox we can precompute\n      the multiplication we'll need to do to do MixColumns() later.\n    */\n\n    // apply affine transformation\n    sx = ei ^ (ei << 1) ^ (ei << 2) ^ (ei << 3) ^ (ei << 4);\n    sx = (sx >> 8) ^ (sx & 255) ^ 0x63;\n\n    // update tables\n    sbox[e] = sx;\n    isbox[sx] = e;\n\n    /* Mixing columns is done using matrix multiplication. The columns\n      that are to be mixed are each a single word in the current state.\n      The state has Nb columns (4 columns). Therefore each column is a\n      4 byte word. So to mix the columns in a single column 'c' where\n      its rows are r0, r1, r2, and r3, we use the following matrix\n      multiplication:\n\n      [2 3 1 1]*[r0,c]=[r'0,c]\n      [1 2 3 1] [r1,c] [r'1,c]\n      [1 1 2 3] [r2,c] [r'2,c]\n      [3 1 1 2] [r3,c] [r'3,c]\n\n      r0, r1, r2, and r3 are each 1 byte of one of the words in the\n      state (a column). To do matrix multiplication for each mixed\n      column c' we multiply the corresponding row from the left matrix\n      with the corresponding column from the right matrix. In total, we\n      get 4 equations:\n\n      r0,c' = 2*r0,c + 3*r1,c + 1*r2,c + 1*r3,c\n      r1,c' = 1*r0,c + 2*r1,c + 3*r2,c + 1*r3,c\n      r2,c' = 1*r0,c + 1*r1,c + 2*r2,c + 3*r3,c\n      r3,c' = 3*r0,c + 1*r1,c + 1*r2,c + 2*r3,c\n\n      As usual, the multiplication is as previously defined and the\n      addition is XOR. In order to optimize mixing columns we can store\n      the multiplication results in tables. If you think of the whole\n      column as a word (it might help to visualize by mentally rotating\n      the equations above by counterclockwise 90 degrees) then you can\n      see that it would be useful to map the multiplications performed on\n      each byte (r0, r1, r2, r3) onto a word as well. For instance, we\n      could map 2*r0,1*r0,1*r0,3*r0 onto a word by storing 2*r0 in the\n      highest 8 bits and 3*r0 in the lowest 8 bits (with the other two\n      respectively in the middle). This means that a table can be\n      constructed that uses r0 as an index to the word. We can do the\n      same with r1, r2, and r3, creating a total of 4 tables.\n\n      To construct a full c', we can just look up each byte of c in\n      their respective tables and XOR the results together.\n\n      Also, to build each table we only have to calculate the word\n      for 2,1,1,3 for every byte ... which we can do on each iteration\n      of this loop since we will iterate over every byte. After we have\n      calculated 2,1,1,3 we can get the results for the other tables\n      by cycling the byte at the end to the beginning. For instance\n      we can take the result of table 2,1,1,3 and produce table 3,2,1,1\n      by moving the right most byte to the left most position just like\n      how you can imagine the 3 moved out of 2,1,1,3 and to the front\n      to produce 3,2,1,1.\n\n      There is another optimization in that the same multiples of\n      the current element we need in order to advance our generator\n      to the next iteration can be reused in performing the 2,1,1,3\n      calculation. We also calculate the inverse mix column tables,\n      with e,9,d,b being the inverse of 2,1,1,3.\n\n      When we're done, and we need to actually mix columns, the first\n      byte of each state word should be put through mix[0] (2,1,1,3),\n      the second through mix[1] (3,2,1,1) and so forth. Then they should\n      be XOR'd together to produce the fully mixed column.\n    */\n\n    // calculate mix and imix table values\n    sx2 = xtime[sx];\n    e2 = xtime[e];\n    e4 = xtime[e2];\n    e8 = xtime[e4];\n    me =\n      (sx2 << 24) ^  // 2\n      (sx << 16) ^   // 1\n      (sx << 8) ^    // 1\n      (sx ^ sx2);    // 3\n    ime =\n      (e2 ^ e4 ^ e8) << 24 ^  // E (14)\n      (e ^ e8) << 16 ^        // 9\n      (e ^ e4 ^ e8) << 8 ^    // D (13)\n      (e ^ e2 ^ e8);          // B (11)\n    // produce each of the mix tables by rotating the 2,1,1,3 value\n    for(var n = 0; n < 4; ++n) {\n      mix[n][e] = me;\n      imix[n][sx] = ime;\n      // cycle the right most byte to the left most position\n      // ie: 2,1,1,3 becomes 3,2,1,1\n      me = me << 24 | me >>> 8;\n      ime = ime << 24 | ime >>> 8;\n    }\n\n    // get next element and inverse\n    if(e === 0) {\n      // 1 is the inverse of 1\n      e = ei = 1;\n    } else {\n      // e = 2e + 2*2*2*(10e)) = multiply e by 82 (chosen generator)\n      // ei = ei + 2*2*ei = multiply ei by 5 (inverse generator)\n      e = e2 ^ xtime[xtime[xtime[e2 ^ e8]]];\n      ei ^= xtime[xtime[ei]];\n    }\n  }\n}\n\n/**\n * Generates a key schedule using the AES key expansion algorithm.\n *\n * The AES algorithm takes the Cipher Key, K, and performs a Key Expansion\n * routine to generate a key schedule. The Key Expansion generates a total\n * of Nb*(Nr + 1) words: the algorithm requires an initial set of Nb words,\n * and each of the Nr rounds requires Nb words of key data. The resulting\n * key schedule consists of a linear array of 4-byte words, denoted [wi ],\n * with i in the range 0 <= i < Nb(Nr + 1).\n *\n * KeyExpansion(byte key[4*Nk], word w[Nb*(Nr+1)], Nk)\n * AES-128 (Nb=4, Nk=4, Nr=10)\n * AES-192 (Nb=4, Nk=6, Nr=12)\n * AES-256 (Nb=4, Nk=8, Nr=14)\n * Note: Nr=Nk+6.\n *\n * Nb is the number of columns (32-bit words) comprising the State (or\n * number of bytes in a block). For AES, Nb=4.\n *\n * @param key the key to schedule (as an array of 32-bit words).\n * @param decrypt true to modify the key schedule to decrypt, false not to.\n *\n * @return the generated key schedule.\n */\nfunction _expandKey(key, decrypt) {\n  // copy the key's words to initialize the key schedule\n  var w = key.slice(0);\n\n  /* RotWord() will rotate a word, moving the first byte to the last\n    byte's position (shifting the other bytes left).\n\n    We will be getting the value of Rcon at i / Nk. 'i' will iterate\n    from Nk to (Nb * Nr+1). Nk = 4 (4 byte key), Nb = 4 (4 words in\n    a block), Nr = Nk + 6 (10). Therefore 'i' will iterate from\n    4 to 44 (exclusive). Each time we iterate 4 times, i / Nk will\n    increase by 1. We use a counter iNk to keep track of this.\n   */\n\n  // go through the rounds expanding the key\n  var temp, iNk = 1;\n  var Nk = w.length;\n  var Nr1 = Nk + 6 + 1;\n  var end = Nb * Nr1;\n  for(var i = Nk; i < end; ++i) {\n    temp = w[i - 1];\n    if(i % Nk === 0) {\n      // temp = SubWord(RotWord(temp)) ^ Rcon[i / Nk]\n      temp =\n        sbox[temp >>> 16 & 255] << 24 ^\n        sbox[temp >>> 8 & 255] << 16 ^\n        sbox[temp & 255] << 8 ^\n        sbox[temp >>> 24] ^ (rcon[iNk] << 24);\n      iNk++;\n    } else if(Nk > 6 && (i % Nk === 4)) {\n      // temp = SubWord(temp)\n      temp =\n        sbox[temp >>> 24] << 24 ^\n        sbox[temp >>> 16 & 255] << 16 ^\n        sbox[temp >>> 8 & 255] << 8 ^\n        sbox[temp & 255];\n    }\n    w[i] = w[i - Nk] ^ temp;\n  }\n\n  /* When we are updating a cipher block we always use the code path for\n     encryption whether we are decrypting or not (to shorten code and\n     simplify the generation of look up tables). However, because there\n     are differences in the decryption algorithm, other than just swapping\n     in different look up tables, we must transform our key schedule to\n     account for these changes:\n\n     1. The decryption algorithm gets its key rounds in reverse order.\n     2. The decryption algorithm adds the round key before mixing columns\n       instead of afterwards.\n\n     We don't need to modify our key schedule to handle the first case,\n     we can just traverse the key schedule in reverse order when decrypting.\n\n     The second case requires a little work.\n\n     The tables we built for performing rounds will take an input and then\n     perform SubBytes() and MixColumns() or, for the decrypt version,\n     InvSubBytes() and InvMixColumns(). But the decrypt algorithm requires\n     us to AddRoundKey() before InvMixColumns(). This means we'll need to\n     apply some transformations to the round key to inverse-mix its columns\n     so they'll be correct for moving AddRoundKey() to after the state has\n     had its columns inverse-mixed.\n\n     To inverse-mix the columns of the state when we're decrypting we use a\n     lookup table that will apply InvSubBytes() and InvMixColumns() at the\n     same time. However, the round key's bytes are not inverse-substituted\n     in the decryption algorithm. To get around this problem, we can first\n     substitute the bytes in the round key so that when we apply the\n     transformation via the InvSubBytes()+InvMixColumns() table, it will\n     undo our substitution leaving us with the original value that we\n     want -- and then inverse-mix that value.\n\n     This change will correctly alter our key schedule so that we can XOR\n     each round key with our already transformed decryption state. This\n     allows us to use the same code path as the encryption algorithm.\n\n     We make one more change to the decryption key. Since the decryption\n     algorithm runs in reverse from the encryption algorithm, we reverse\n     the order of the round keys to avoid having to iterate over the key\n     schedule backwards when running the encryption algorithm later in\n     decryption mode. In addition to reversing the order of the round keys,\n     we also swap each round key's 2nd and 4th rows. See the comments\n     section where rounds are performed for more details about why this is\n     done. These changes are done inline with the other substitution\n     described above.\n  */\n  if(decrypt) {\n    var tmp;\n    var m0 = imix[0];\n    var m1 = imix[1];\n    var m2 = imix[2];\n    var m3 = imix[3];\n    var wnew = w.slice(0);\n    end = w.length;\n    for(var i = 0, wi = end - Nb; i < end; i += Nb, wi -= Nb) {\n      // do not sub the first or last round key (round keys are Nb\n      // words) as no column mixing is performed before they are added,\n      // but do change the key order\n      if(i === 0 || i === (end - Nb)) {\n        wnew[i] = w[wi];\n        wnew[i + 1] = w[wi + 3];\n        wnew[i + 2] = w[wi + 2];\n        wnew[i + 3] = w[wi + 1];\n      } else {\n        // substitute each round key byte because the inverse-mix\n        // table will inverse-substitute it (effectively cancel the\n        // substitution because round key bytes aren't sub'd in\n        // decryption mode) and swap indexes 3 and 1\n        for(var n = 0; n < Nb; ++n) {\n          tmp = w[wi + n];\n          wnew[i + (3&-n)] =\n            m0[sbox[tmp >>> 24]] ^\n            m1[sbox[tmp >>> 16 & 255]] ^\n            m2[sbox[tmp >>> 8 & 255]] ^\n            m3[sbox[tmp & 255]];\n        }\n      }\n    }\n    w = wnew;\n  }\n\n  return w;\n}\n\n/**\n * Updates a single block (16 bytes) using AES. The update will either\n * encrypt or decrypt the block.\n *\n * @param w the key schedule.\n * @param input the input block (an array of 32-bit words).\n * @param output the updated output block.\n * @param decrypt true to decrypt the block, false to encrypt it.\n */\nfunction _updateBlock(w, input, output, decrypt) {\n  /*\n  Cipher(byte in[4*Nb], byte out[4*Nb], word w[Nb*(Nr+1)])\n  begin\n    byte state[4,Nb]\n    state = in\n    AddRoundKey(state, w[0, Nb-1])\n    for round = 1 step 1 to Nr-1\n      SubBytes(state)\n      ShiftRows(state)\n      MixColumns(state)\n      AddRoundKey(state, w[round*Nb, (round+1)*Nb-1])\n    end for\n    SubBytes(state)\n    ShiftRows(state)\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n    out = state\n  end\n\n  InvCipher(byte in[4*Nb], byte out[4*Nb], word w[Nb*(Nr+1)])\n  begin\n    byte state[4,Nb]\n    state = in\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n    for round = Nr-1 step -1 downto 1\n      InvShiftRows(state)\n      InvSubBytes(state)\n      AddRoundKey(state, w[round*Nb, (round+1)*Nb-1])\n      InvMixColumns(state)\n    end for\n    InvShiftRows(state)\n    InvSubBytes(state)\n    AddRoundKey(state, w[0, Nb-1])\n    out = state\n  end\n  */\n\n  // Encrypt: AddRoundKey(state, w[0, Nb-1])\n  // Decrypt: AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n  var Nr = w.length / 4 - 1;\n  var m0, m1, m2, m3, sub;\n  if(decrypt) {\n    m0 = imix[0];\n    m1 = imix[1];\n    m2 = imix[2];\n    m3 = imix[3];\n    sub = isbox;\n  } else {\n    m0 = mix[0];\n    m1 = mix[1];\n    m2 = mix[2];\n    m3 = mix[3];\n    sub = sbox;\n  }\n  var a, b, c, d, a2, b2, c2;\n  a = input[0] ^ w[0];\n  b = input[decrypt ? 3 : 1] ^ w[1];\n  c = input[2] ^ w[2];\n  d = input[decrypt ? 1 : 3] ^ w[3];\n  var i = 3;\n\n  /* In order to share code we follow the encryption algorithm when both\n    encrypting and decrypting. To account for the changes required in the\n    decryption algorithm, we use different lookup tables when decrypting\n    and use a modified key schedule to account for the difference in the\n    order of transformations applied when performing rounds. We also get\n    key rounds in reverse order (relative to encryption). */\n  for(var round = 1; round < Nr; ++round) {\n    /* As described above, we'll be using table lookups to perform the\n      column mixing. Each column is stored as a word in the state (the\n      array 'input' has one column as a word at each index). In order to\n      mix a column, we perform these transformations on each row in c,\n      which is 1 byte in each word. The new column for c0 is c'0:\n\n               m0      m1      m2      m3\n      r0,c'0 = 2*r0,c0 + 3*r1,c0 + 1*r2,c0 + 1*r3,c0\n      r1,c'0 = 1*r0,c0 + 2*r1,c0 + 3*r2,c0 + 1*r3,c0\n      r2,c'0 = 1*r0,c0 + 1*r1,c0 + 2*r2,c0 + 3*r3,c0\n      r3,c'0 = 3*r0,c0 + 1*r1,c0 + 1*r2,c0 + 2*r3,c0\n\n      So using mix tables where c0 is a word with r0 being its upper\n      8 bits and r3 being its lower 8 bits:\n\n      m0[c0 >> 24] will yield this word: [2*r0,1*r0,1*r0,3*r0]\n      ...\n      m3[c0 & 255] will yield this word: [1*r3,1*r3,3*r3,2*r3]\n\n      Therefore to mix the columns in each word in the state we\n      do the following (& 255 omitted for brevity):\n      c'0,r0 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r1 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r2 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n      c'0,r3 = m0[c0 >> 24] ^ m1[c1 >> 16] ^ m2[c2 >> 8] ^ m3[c3]\n\n      However, before mixing, the algorithm requires us to perform\n      ShiftRows(). The ShiftRows() transformation cyclically shifts the\n      last 3 rows of the state over different offsets. The first row\n      (r = 0) is not shifted.\n\n      s'_r,c = s_r,(c + shift(r, Nb) mod Nb\n      for 0 < r < 4 and 0 <= c < Nb and\n      shift(1, 4) = 1\n      shift(2, 4) = 2\n      shift(3, 4) = 3.\n\n      This causes the first byte in r = 1 to be moved to the end of\n      the row, the first 2 bytes in r = 2 to be moved to the end of\n      the row, the first 3 bytes in r = 3 to be moved to the end of\n      the row:\n\n      r1: [c0 c1 c2 c3] => [c1 c2 c3 c0]\n      r2: [c0 c1 c2 c3]    [c2 c3 c0 c1]\n      r3: [c0 c1 c2 c3]    [c3 c0 c1 c2]\n\n      We can make these substitutions inline with our column mixing to\n      generate an updated set of equations to produce each word in the\n      state (note the columns have changed positions):\n\n      c0 c1 c2 c3 => c0 c1 c2 c3\n      c0 c1 c2 c3    c1 c2 c3 c0  (cycled 1 byte)\n      c0 c1 c2 c3    c2 c3 c0 c1  (cycled 2 bytes)\n      c0 c1 c2 c3    c3 c0 c1 c2  (cycled 3 bytes)\n\n      Therefore:\n\n      c'0 = 2*r0,c0 + 3*r1,c1 + 1*r2,c2 + 1*r3,c3\n      c'0 = 1*r0,c0 + 2*r1,c1 + 3*r2,c2 + 1*r3,c3\n      c'0 = 1*r0,c0 + 1*r1,c1 + 2*r2,c2 + 3*r3,c3\n      c'0 = 3*r0,c0 + 1*r1,c1 + 1*r2,c2 + 2*r3,c3\n\n      c'1 = 2*r0,c1 + 3*r1,c2 + 1*r2,c3 + 1*r3,c0\n      c'1 = 1*r0,c1 + 2*r1,c2 + 3*r2,c3 + 1*r3,c0\n      c'1 = 1*r0,c1 + 1*r1,c2 + 2*r2,c3 + 3*r3,c0\n      c'1 = 3*r0,c1 + 1*r1,c2 + 1*r2,c3 + 2*r3,c0\n\n      ... and so forth for c'2 and c'3. The important distinction is\n      that the columns are cycling, with c0 being used with the m0\n      map when calculating c0, but c1 being used with the m0 map when\n      calculating c1 ... and so forth.\n\n      When performing the inverse we transform the mirror image and\n      skip the bottom row, instead of the top one, and move upwards:\n\n      c3 c2 c1 c0 => c0 c3 c2 c1  (cycled 3 bytes) *same as encryption\n      c3 c2 c1 c0    c1 c0 c3 c2  (cycled 2 bytes)\n      c3 c2 c1 c0    c2 c1 c0 c3  (cycled 1 byte)  *same as encryption\n      c3 c2 c1 c0    c3 c2 c1 c0\n\n      If you compare the resulting matrices for ShiftRows()+MixColumns()\n      and for InvShiftRows()+InvMixColumns() the 2nd and 4th columns are\n      different (in encrypt mode vs. decrypt mode). So in order to use\n      the same code to handle both encryption and decryption, we will\n      need to do some mapping.\n\n      If in encryption mode we let a=c0, b=c1, c=c2, d=c3, and r<N> be\n      a row number in the state, then the resulting matrix in encryption\n      mode for applying the above transformations would be:\n\n      r1: a b c d\n      r2: b c d a\n      r3: c d a b\n      r4: d a b c\n\n      If we did the same in decryption mode we would get:\n\n      r1: a d c b\n      r2: b a d c\n      r3: c b a d\n      r4: d c b a\n\n      If instead we swap d and b (set b=c3 and d=c1), then we get:\n\n      r1: a b c d\n      r2: d a b c\n      r3: c d a b\n      r4: b c d a\n\n      Now the 1st and 3rd rows are the same as the encryption matrix. All\n      we need to do then to make the mapping exactly the same is to swap\n      the 2nd and 4th rows when in decryption mode. To do this without\n      having to do it on each iteration, we swapped the 2nd and 4th rows\n      in the decryption key schedule. We also have to do the swap above\n      when we first pull in the input and when we set the final output. */\n    a2 =\n      m0[a >>> 24] ^\n      m1[b >>> 16 & 255] ^\n      m2[c >>> 8 & 255] ^\n      m3[d & 255] ^ w[++i];\n    b2 =\n      m0[b >>> 24] ^\n      m1[c >>> 16 & 255] ^\n      m2[d >>> 8 & 255] ^\n      m3[a & 255] ^ w[++i];\n    c2 =\n      m0[c >>> 24] ^\n      m1[d >>> 16 & 255] ^\n      m2[a >>> 8 & 255] ^\n      m3[b & 255] ^ w[++i];\n    d =\n      m0[d >>> 24] ^\n      m1[a >>> 16 & 255] ^\n      m2[b >>> 8 & 255] ^\n      m3[c & 255] ^ w[++i];\n    a = a2;\n    b = b2;\n    c = c2;\n  }\n\n  /*\n    Encrypt:\n    SubBytes(state)\n    ShiftRows(state)\n    AddRoundKey(state, w[Nr*Nb, (Nr+1)*Nb-1])\n\n    Decrypt:\n    InvShiftRows(state)\n    InvSubBytes(state)\n    AddRoundKey(state, w[0, Nb-1])\n   */\n  // Note: rows are shifted inline\n  output[0] =\n    (sub[a >>> 24] << 24) ^\n    (sub[b >>> 16 & 255] << 16) ^\n    (sub[c >>> 8 & 255] << 8) ^\n    (sub[d & 255]) ^ w[++i];\n  output[decrypt ? 3 : 1] =\n    (sub[b >>> 24] << 24) ^\n    (sub[c >>> 16 & 255] << 16) ^\n    (sub[d >>> 8 & 255] << 8) ^\n    (sub[a & 255]) ^ w[++i];\n  output[2] =\n    (sub[c >>> 24] << 24) ^\n    (sub[d >>> 16 & 255] << 16) ^\n    (sub[a >>> 8 & 255] << 8) ^\n    (sub[b & 255]) ^ w[++i];\n  output[decrypt ? 1 : 3] =\n    (sub[d >>> 24] << 24) ^\n    (sub[a >>> 16 & 255] << 16) ^\n    (sub[b >>> 8 & 255] << 8) ^\n    (sub[c & 255]) ^ w[++i];\n}\n\n/**\n * Deprecated. Instead, use:\n *\n * forge.cipher.createCipher('AES-<mode>', key);\n * forge.cipher.createDecipher('AES-<mode>', key);\n *\n * Creates a deprecated AES cipher object. This object's mode will default to\n * CBC (cipher-block-chaining).\n *\n * The key and iv may be given as a string of bytes, an array of bytes, a\n * byte buffer, or an array of 32-bit words.\n *\n * @param options the options to use.\n *          key the symmetric key to use.\n *          output the buffer to write to.\n *          decrypt true for decryption, false for encryption.\n *          mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nfunction _createCipher(options) {\n  options = options || {};\n  var mode = (options.mode || 'CBC').toUpperCase();\n  var algorithm = 'AES-' + mode;\n\n  var cipher;\n  if(options.decrypt) {\n    cipher = forge.cipher.createDecipher(algorithm, options.key);\n  } else {\n    cipher = forge.cipher.createCipher(algorithm, options.key);\n  }\n\n  // backwards compatible start API\n  var start = cipher.start;\n  cipher.start = function(iv, options) {\n    // backwards compatibility: support second arg as output buffer\n    var output = null;\n    if(options instanceof forge.util.ByteBuffer) {\n      output = options;\n      options = {};\n    }\n    options = options || {};\n    options.output = output;\n    options.iv = iv;\n    start.call(cipher, options);\n  };\n\n  return cipher;\n}\n","/**\n * A Javascript implementation of AES Cipher Suites for TLS.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2009-2015 Digital Bazaar, Inc.\n *\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./tls');\n\nvar tls = module.exports = forge.tls;\n\n/**\n * Supported cipher suites.\n */\ntls.CipherSuites['TLS_RSA_WITH_AES_128_CBC_SHA'] = {\n  id: [0x00, 0x2f],\n  name: 'TLS_RSA_WITH_AES_128_CBC_SHA',\n  initSecurityParameters: function(sp) {\n    sp.bulk_cipher_algorithm = tls.BulkCipherAlgorithm.aes;\n    sp.cipher_type = tls.CipherType.block;\n    sp.enc_key_length = 16;\n    sp.block_length = 16;\n    sp.fixed_iv_length = 16;\n    sp.record_iv_length = 16;\n    sp.mac_algorithm = tls.MACAlgorithm.hmac_sha1;\n    sp.mac_length = 20;\n    sp.mac_key_length = 20;\n  },\n  initConnectionState: initConnectionState\n};\ntls.CipherSuites['TLS_RSA_WITH_AES_256_CBC_SHA'] = {\n  id: [0x00, 0x35],\n  name: 'TLS_RSA_WITH_AES_256_CBC_SHA',\n  initSecurityParameters: function(sp) {\n    sp.bulk_cipher_algorithm = tls.BulkCipherAlgorithm.aes;\n    sp.cipher_type = tls.CipherType.block;\n    sp.enc_key_length = 32;\n    sp.block_length = 16;\n    sp.fixed_iv_length = 16;\n    sp.record_iv_length = 16;\n    sp.mac_algorithm = tls.MACAlgorithm.hmac_sha1;\n    sp.mac_length = 20;\n    sp.mac_key_length = 20;\n  },\n  initConnectionState: initConnectionState\n};\n\nfunction initConnectionState(state, c, sp) {\n  var client = (c.entity === forge.tls.ConnectionEnd.client);\n\n  // cipher setup\n  state.read.cipherState = {\n    init: false,\n    cipher: forge.cipher.createDecipher('AES-CBC', client ?\n      sp.keys.server_write_key : sp.keys.client_write_key),\n    iv: client ? sp.keys.server_write_IV : sp.keys.client_write_IV\n  };\n  state.write.cipherState = {\n    init: false,\n    cipher: forge.cipher.createCipher('AES-CBC', client ?\n      sp.keys.client_write_key : sp.keys.server_write_key),\n    iv: client ? sp.keys.client_write_IV : sp.keys.server_write_IV\n  };\n  state.read.cipherFunction = decrypt_aes_cbc_sha1;\n  state.write.cipherFunction = encrypt_aes_cbc_sha1;\n\n  // MAC setup\n  state.read.macLength = state.write.macLength = sp.mac_length;\n  state.read.macFunction = state.write.macFunction = tls.hmac_sha1;\n}\n\n/**\n * Encrypts the TLSCompressed record into a TLSCipherText record using AES\n * in CBC mode.\n *\n * @param record the TLSCompressed record to encrypt.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nfunction encrypt_aes_cbc_sha1(record, s) {\n  var rval = false;\n\n  // append MAC to fragment, update sequence number\n  var mac = s.macFunction(s.macKey, s.sequenceNumber, record);\n  record.fragment.putBytes(mac);\n  s.updateSequenceNumber();\n\n  // TLS 1.1+ use an explicit IV every time to protect against CBC attacks\n  var iv;\n  if(record.version.minor === tls.Versions.TLS_1_0.minor) {\n    // use the pre-generated IV when initializing for TLS 1.0, otherwise use\n    // the residue from the previous encryption\n    iv = s.cipherState.init ? null : s.cipherState.iv;\n  } else {\n    iv = forge.random.getBytesSync(16);\n  }\n\n  s.cipherState.init = true;\n\n  // start cipher\n  var cipher = s.cipherState.cipher;\n  cipher.start({iv: iv});\n\n  // TLS 1.1+ write IV into output\n  if(record.version.minor >= tls.Versions.TLS_1_1.minor) {\n    cipher.output.putBytes(iv);\n  }\n\n  // do encryption (default padding is appropriate)\n  cipher.update(record.fragment);\n  if(cipher.finish(encrypt_aes_cbc_sha1_padding)) {\n    // set record fragment to encrypted output\n    record.fragment = cipher.output;\n    record.length = record.fragment.length();\n    rval = true;\n  }\n\n  return rval;\n}\n\n/**\n * Handles padding for aes_cbc_sha1 in encrypt mode.\n *\n * @param blockSize the block size.\n * @param input the input buffer.\n * @param decrypt true in decrypt mode, false in encrypt mode.\n *\n * @return true on success, false on failure.\n */\nfunction encrypt_aes_cbc_sha1_padding(blockSize, input, decrypt) {\n  /* The encrypted data length (TLSCiphertext.length) is one more than the sum\n   of SecurityParameters.block_length, TLSCompressed.length,\n   SecurityParameters.mac_length, and padding_length.\n\n   The padding may be any length up to 255 bytes long, as long as it results in\n   the TLSCiphertext.length being an integral multiple of the block length.\n   Lengths longer than necessary might be desirable to frustrate attacks on a\n   protocol based on analysis of the lengths of exchanged messages. Each uint8\n   in the padding data vector must be filled with the padding length value.\n\n   The padding length should be such that the total size of the\n   GenericBlockCipher structure is a multiple of the cipher's block length.\n   Legal values range from zero to 255, inclusive. This length specifies the\n   length of the padding field exclusive of the padding_length field itself.\n\n   This is slightly different from PKCS#7 because the padding value is 1\n   less than the actual number of padding bytes if you include the\n   padding_length uint8 itself as a padding byte. */\n  if(!decrypt) {\n    // get the number of padding bytes required to reach the blockSize and\n    // subtract 1 for the padding value (to make room for the padding_length\n    // uint8)\n    var padding = blockSize - (input.length() % blockSize);\n    input.fillWithByte(padding - 1, padding);\n  }\n  return true;\n}\n\n/**\n * Handles padding for aes_cbc_sha1 in decrypt mode.\n *\n * @param blockSize the block size.\n * @param output the output buffer.\n * @param decrypt true in decrypt mode, false in encrypt mode.\n *\n * @return true on success, false on failure.\n */\nfunction decrypt_aes_cbc_sha1_padding(blockSize, output, decrypt) {\n  var rval = true;\n  if(decrypt) {\n    /* The last byte in the output specifies the number of padding bytes not\n      including itself. Each of the padding bytes has the same value as that\n      last byte (known as the padding_length). Here we check all padding\n      bytes to ensure they have the value of padding_length even if one of\n      them is bad in order to ward-off timing attacks. */\n    var len = output.length();\n    var paddingLength = output.last();\n    for(var i = len - 1 - paddingLength; i < len - 1; ++i) {\n      rval = rval && (output.at(i) == paddingLength);\n    }\n    if(rval) {\n      // trim off padding bytes and last padding length byte\n      output.truncate(paddingLength + 1);\n    }\n  }\n  return rval;\n}\n\n/**\n * Decrypts a TLSCipherText record into a TLSCompressed record using\n * AES in CBC mode.\n *\n * @param record the TLSCipherText record to decrypt.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nfunction decrypt_aes_cbc_sha1(record, s) {\n  var rval = false;\n\n  var iv;\n  if(record.version.minor === tls.Versions.TLS_1_0.minor) {\n    // use pre-generated IV when initializing for TLS 1.0, otherwise use the\n    // residue from the previous decryption\n    iv = s.cipherState.init ? null : s.cipherState.iv;\n  } else {\n    // TLS 1.1+ use an explicit IV every time to protect against CBC attacks\n    // that is appended to the record fragment\n    iv = record.fragment.getBytes(16);\n  }\n\n  s.cipherState.init = true;\n\n  // start cipher\n  var cipher = s.cipherState.cipher;\n  cipher.start({iv: iv});\n\n  // do decryption\n  cipher.update(record.fragment);\n  rval = cipher.finish(decrypt_aes_cbc_sha1_padding);\n\n  // even if decryption fails, keep going to minimize timing attacks\n\n  // decrypted data:\n  // first (len - 20) bytes = application data\n  // last 20 bytes          = MAC\n  var macLen = s.macLength;\n\n  // create a random MAC to check against should the mac length check fail\n  // Note: do this regardless of the failure to keep timing consistent\n  var mac = forge.random.getBytesSync(macLen);\n\n  // get fragment and mac\n  var len = cipher.output.length();\n  if(len >= macLen) {\n    record.fragment = cipher.output.getBytes(len - macLen);\n    mac = cipher.output.getBytes(macLen);\n  } else {\n    // bad data, but get bytes anyway to try to keep timing consistent\n    record.fragment = cipher.output.getBytes();\n  }\n  record.fragment = forge.util.createBuffer(record.fragment);\n  record.length = record.fragment.length();\n\n  // see if data integrity checks out, update sequence number\n  var mac2 = s.macFunction(s.macKey, s.sequenceNumber, record);\n  s.updateSequenceNumber();\n  rval = compareMacs(s.macKey, mac, mac2) && rval;\n  return rval;\n}\n\n/**\n * Safely compare two MACs. This function will compare two MACs in a way\n * that protects against timing attacks.\n *\n * TODO: Expose elsewhere as a utility API.\n *\n * See: https://www.nccgroup.trust/us/about-us/newsroom-and-events/blog/2011/february/double-hmac-verification/\n *\n * @param key the MAC key to use.\n * @param mac1 as a binary-encoded string of bytes.\n * @param mac2 as a binary-encoded string of bytes.\n *\n * @return true if the MACs are the same, false if not.\n */\nfunction compareMacs(key, mac1, mac2) {\n  var hmac = forge.hmac.create();\n\n  hmac.start('SHA1', key);\n  hmac.update(mac1);\n  mac1 = hmac.digest().getBytes();\n\n  hmac.start(null, null);\n  hmac.update(mac2);\n  mac2 = hmac.digest().getBytes();\n\n  return mac1 === mac2;\n}\n","/**\n * Copyright (c) 2019 Digital Bazaar, Inc.\n */\n\nvar forge = require('./forge');\nrequire('./asn1');\nvar asn1 = forge.asn1;\n\nexports.privateKeyValidator = {\n  // PrivateKeyInfo\n  name: 'PrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'PrivateKeyInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // privateKeyAlgorithm\n    name: 'PrivateKeyInfo.privateKeyAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'privateKeyOid'\n    }]\n  }, {\n    // PrivateKey\n    name: 'PrivateKeyInfo',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'privateKey'\n  }]\n};\n\nexports.publicKeyValidator = {\n  name: 'SubjectPublicKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'subjectPublicKeyInfo',\n  value: [{\n    name: 'SubjectPublicKeyInfo.AlgorithmIdentifier',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'publicKeyOid'\n    }]\n  },\n  // capture group for ed25519PublicKey\n  {\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    composed: true,\n    captureBitStringValue: 'ed25519PublicKey'\n  }\n  // FIXME: this is capture group for rsaPublicKey, use it in this API or\n  // discard?\n  /* {\n    // subjectPublicKey\n    name: 'SubjectPublicKeyInfo.subjectPublicKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    value: [{\n      // RSAPublicKey\n      name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      optional: true,\n      captureAsn1: 'rsaPublicKey'\n    }]\n  } */\n  ]\n};\n","/**\n * Javascript implementation of Abstract Syntax Notation Number One.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n *\n * An API for storing data using the Abstract Syntax Notation Number One\n * format using DER (Distinguished Encoding Rules) encoding. This encoding is\n * commonly used to store data for PKI, i.e. X.509 Certificates, and this\n * implementation exists for that purpose.\n *\n * Abstract Syntax Notation Number One (ASN.1) is used to define the abstract\n * syntax of information without restricting the way the information is encoded\n * for transmission. It provides a standard that allows for open systems\n * communication. ASN.1 defines the syntax of information data and a number of\n * simple data types as well as a notation for describing them and specifying\n * values for them.\n *\n * The RSA algorithm creates public and private keys that are often stored in\n * X.509 or PKCS#X formats -- which use ASN.1 (encoded in DER format). This\n * class provides the most basic functionality required to store and load DSA\n * keys that are encoded according to ASN.1.\n *\n * The most common binary encodings for ASN.1 are BER (Basic Encoding Rules)\n * and DER (Distinguished Encoding Rules). DER is just a subset of BER that\n * has stricter requirements for how data must be encoded.\n *\n * Each ASN.1 structure has a tag (a byte identifying the ASN.1 structure type)\n * and a byte array for the value of this ASN1 structure which may be data or a\n * list of ASN.1 structures.\n *\n * Each ASN.1 structure using BER is (Tag-Length-Value):\n *\n * | byte 0 | bytes X | bytes Y |\n * |--------|---------|----------\n * |  tag   | length  |  value  |\n *\n * ASN.1 allows for tags to be of \"High-tag-number form\" which allows a tag to\n * be two or more octets, but that is not supported by this class. A tag is\n * only 1 byte. Bits 1-5 give the tag number (ie the data type within a\n * particular 'class'), 6 indicates whether or not the ASN.1 value is\n * constructed from other ASN.1 values, and bits 7 and 8 give the 'class'. If\n * bits 7 and 8 are both zero, the class is UNIVERSAL. If only bit 7 is set,\n * then the class is APPLICATION. If only bit 8 is set, then the class is\n * CONTEXT_SPECIFIC. If both bits 7 and 8 are set, then the class is PRIVATE.\n * The tag numbers for the data types for the class UNIVERSAL are listed below:\n *\n * UNIVERSAL 0 Reserved for use by the encoding rules\n * UNIVERSAL 1 Boolean type\n * UNIVERSAL 2 Integer type\n * UNIVERSAL 3 Bitstring type\n * UNIVERSAL 4 Octetstring type\n * UNIVERSAL 5 Null type\n * UNIVERSAL 6 Object identifier type\n * UNIVERSAL 7 Object descriptor type\n * UNIVERSAL 8 External type and Instance-of type\n * UNIVERSAL 9 Real type\n * UNIVERSAL 10 Enumerated type\n * UNIVERSAL 11 Embedded-pdv type\n * UNIVERSAL 12 UTF8String type\n * UNIVERSAL 13 Relative object identifier type\n * UNIVERSAL 14-15 Reserved for future editions\n * UNIVERSAL 16 Sequence and Sequence-of types\n * UNIVERSAL 17 Set and Set-of types\n * UNIVERSAL 18-22, 25-30 Character string types\n * UNIVERSAL 23-24 Time types\n *\n * The length of an ASN.1 structure is specified after the tag identifier.\n * There is a definite form and an indefinite form. The indefinite form may\n * be used if the encoding is constructed and not all immediately available.\n * The indefinite form is encoded using a length byte with only the 8th bit\n * set. The end of the constructed object is marked using end-of-contents\n * octets (two zero bytes).\n *\n * The definite form looks like this:\n *\n * The length may take up 1 or more bytes, it depends on the length of the\n * value of the ASN.1 structure. DER encoding requires that if the ASN.1\n * structure has a value that has a length greater than 127, more than 1 byte\n * will be used to store its length, otherwise just one byte will be used.\n * This is strict.\n *\n * In the case that the length of the ASN.1 value is less than 127, 1 octet\n * (byte) is used to store the \"short form\" length. The 8th bit has a value of\n * 0 indicating the length is \"short form\" and not \"long form\" and bits 7-1\n * give the length of the data. (The 8th bit is the left-most, most significant\n * bit: also known as big endian or network format).\n *\n * In the case that the length of the ASN.1 value is greater than 127, 2 to\n * 127 octets (bytes) are used to store the \"long form\" length. The first\n * byte's 8th bit is set to 1 to indicate the length is \"long form.\" Bits 7-1\n * give the number of additional octets. All following octets are in base 256\n * with the most significant digit first (typical big-endian binary unsigned\n * integer storage). So, for instance, if the length of a value was 257, the\n * first byte would be set to:\n *\n * 10000010 = 130 = 0x82.\n *\n * This indicates there are 2 octets (base 256) for the length. The second and\n * third bytes (the octets just mentioned) would store the length in base 256:\n *\n * octet 2: 00000001 = 1 * 256^1 = 256\n * octet 3: 00000001 = 1 * 256^0 = 1\n * total = 257\n *\n * The algorithm for converting a js integer value of 257 to base-256 is:\n *\n * var value = 257;\n * var bytes = [];\n * bytes[0] = (value >>> 8) & 0xFF; // most significant byte first\n * bytes[1] = value & 0xFF;        // least significant byte last\n *\n * On the ASN.1 UNIVERSAL Object Identifier (OID) type:\n *\n * An OID can be written like: \"value1.value2.value3...valueN\"\n *\n * The DER encoding rules:\n *\n * The first byte has the value 40 * value1 + value2.\n * The following bytes, if any, encode the remaining values. Each value is\n * encoded in base 128, most significant digit first (big endian), with as\n * few digits as possible, and the most significant bit of each byte set\n * to 1 except the last in each value's encoding. For example: Given the\n * OID \"1.2.840.113549\", its DER encoding is (remember each byte except the\n * last one in each encoding is OR'd with 0x80):\n *\n * byte 1: 40 * 1 + 2 = 42 = 0x2A.\n * bytes 2-3: 128 * 6 + 72 = 840 = 6 72 = 6 72 = 0x0648 = 0x8648\n * bytes 4-6: 16384 * 6 + 128 * 119 + 13 = 6 119 13 = 0x06770D = 0x86F70D\n *\n * The final value is: 0x2A864886F70D.\n * The full OID (including ASN.1 tag and length of 6 bytes) is:\n * 0x06062A864886F70D\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./oids');\n\n/* ASN.1 API */\nvar asn1 = module.exports = forge.asn1 = forge.asn1 || {};\n\n/**\n * ASN.1 classes.\n */\nasn1.Class = {\n  UNIVERSAL:        0x00,\n  APPLICATION:      0x40,\n  CONTEXT_SPECIFIC: 0x80,\n  PRIVATE:          0xC0\n};\n\n/**\n * ASN.1 types. Not all types are supported by this implementation, only\n * those necessary to implement a simple PKI are implemented.\n */\nasn1.Type = {\n  NONE:             0,\n  BOOLEAN:          1,\n  INTEGER:          2,\n  BITSTRING:        3,\n  OCTETSTRING:      4,\n  NULL:             5,\n  OID:              6,\n  ODESC:            7,\n  EXTERNAL:         8,\n  REAL:             9,\n  ENUMERATED:      10,\n  EMBEDDED:        11,\n  UTF8:            12,\n  ROID:            13,\n  SEQUENCE:        16,\n  SET:             17,\n  PRINTABLESTRING: 19,\n  IA5STRING:       22,\n  UTCTIME:         23,\n  GENERALIZEDTIME: 24,\n  BMPSTRING:       30\n};\n\n/**\n * Creates a new asn1 object.\n *\n * @param tagClass the tag class for the object.\n * @param type the data type (tag number) for the object.\n * @param constructed true if the asn1 object is in constructed form.\n * @param value the value for the object, if it is not constructed.\n * @param [options] the options to use:\n *          [bitStringContents] the plain BIT STRING content including padding\n *            byte.\n *\n * @return the asn1 object.\n */\nasn1.create = function(tagClass, type, constructed, value, options) {\n  /* An asn1 object has a tagClass, a type, a constructed flag, and a\n    value. The value's type depends on the constructed flag. If\n    constructed, it will contain a list of other asn1 objects. If not,\n    it will contain the ASN.1 value as an array of bytes formatted\n    according to the ASN.1 data type. */\n\n  // remove undefined values\n  if(forge.util.isArray(value)) {\n    var tmp = [];\n    for(var i = 0; i < value.length; ++i) {\n      if(value[i] !== undefined) {\n        tmp.push(value[i]);\n      }\n    }\n    value = tmp;\n  }\n\n  var obj = {\n    tagClass: tagClass,\n    type: type,\n    constructed: constructed,\n    composed: constructed || forge.util.isArray(value),\n    value: value\n  };\n  if(options && 'bitStringContents' in options) {\n    // TODO: copy byte buffer if it's a buffer not a string\n    obj.bitStringContents = options.bitStringContents;\n    // TODO: add readonly flag to avoid this overhead\n    // save copy to detect changes\n    obj.original = asn1.copy(obj);\n  }\n  return obj;\n};\n\n/**\n * Copies an asn1 object.\n *\n * @param obj the asn1 object.\n * @param [options] copy options:\n *          [excludeBitStringContents] true to not copy bitStringContents\n *\n * @return the a copy of the asn1 object.\n */\nasn1.copy = function(obj, options) {\n  var copy;\n\n  if(forge.util.isArray(obj)) {\n    copy = [];\n    for(var i = 0; i < obj.length; ++i) {\n      copy.push(asn1.copy(obj[i], options));\n    }\n    return copy;\n  }\n\n  if(typeof obj === 'string') {\n    // TODO: copy byte buffer if it's a buffer not a string\n    return obj;\n  }\n\n  copy = {\n    tagClass: obj.tagClass,\n    type: obj.type,\n    constructed: obj.constructed,\n    composed: obj.composed,\n    value: asn1.copy(obj.value, options)\n  };\n  if(options && !options.excludeBitStringContents) {\n    // TODO: copy byte buffer if it's a buffer not a string\n    copy.bitStringContents = obj.bitStringContents;\n  }\n  return copy;\n};\n\n/**\n * Compares asn1 objects for equality.\n *\n * Note this function does not run in constant time.\n *\n * @param obj1 the first asn1 object.\n * @param obj2 the second asn1 object.\n * @param [options] compare options:\n *          [includeBitStringContents] true to compare bitStringContents\n *\n * @return true if the asn1 objects are equal.\n */\nasn1.equals = function(obj1, obj2, options) {\n  if(forge.util.isArray(obj1)) {\n    if(!forge.util.isArray(obj2)) {\n      return false;\n    }\n    if(obj1.length !== obj2.length) {\n      return false;\n    }\n    for(var i = 0; i < obj1.length; ++i) {\n      if(!asn1.equals(obj1[i], obj2[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  if(typeof obj1 !== typeof obj2) {\n    return false;\n  }\n\n  if(typeof obj1 === 'string') {\n    return obj1 === obj2;\n  }\n\n  var equal = obj1.tagClass === obj2.tagClass &&\n    obj1.type === obj2.type &&\n    obj1.constructed === obj2.constructed &&\n    obj1.composed === obj2.composed &&\n    asn1.equals(obj1.value, obj2.value);\n  if(options && options.includeBitStringContents) {\n    equal = equal && (obj1.bitStringContents === obj2.bitStringContents);\n  }\n\n  return equal;\n};\n\n/**\n * Gets the length of a BER-encoded ASN.1 value.\n *\n * In case the length is not specified, undefined is returned.\n *\n * @param b the BER-encoded ASN.1 byte buffer, starting with the first\n *          length byte.\n *\n * @return the length of the BER-encoded ASN.1 value or undefined.\n */\nasn1.getBerValueLength = function(b) {\n  // TODO: move this function and related DER/BER functions to a der.js\n  // file; better abstract ASN.1 away from der/ber.\n  var b2 = b.getByte();\n  if(b2 === 0x80) {\n    return undefined;\n  }\n\n  // see if the length is \"short form\" or \"long form\" (bit 8 set)\n  var length;\n  var longForm = b2 & 0x80;\n  if(!longForm) {\n    // length is just the first byte\n    length = b2;\n  } else {\n    // the number of bytes the length is specified in bits 7 through 1\n    // and each length byte is in big-endian base-256\n    length = b.getInt((b2 & 0x7F) << 3);\n  }\n  return length;\n};\n\n/**\n * Check if the byte buffer has enough bytes. Throws an Error if not.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the bytes remaining in the current parsing state.\n * @param n the number of bytes the buffer must have.\n */\nfunction _checkBufferLength(bytes, remaining, n) {\n  if(n > remaining) {\n    var error = new Error('Too few bytes to parse DER.');\n    error.available = bytes.length();\n    error.remaining = remaining;\n    error.requested = n;\n    throw error;\n  }\n}\n\n/**\n * Gets the length of a BER-encoded ASN.1 value.\n *\n * In case the length is not specified, undefined is returned.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the bytes remaining in the current parsing state.\n *\n * @return the length of the BER-encoded ASN.1 value or undefined.\n */\nvar _getValueLength = function(bytes, remaining) {\n  // TODO: move this function and related DER/BER functions to a der.js\n  // file; better abstract ASN.1 away from der/ber.\n  // fromDer already checked that this byte exists\n  var b2 = bytes.getByte();\n  remaining--;\n  if(b2 === 0x80) {\n    return undefined;\n  }\n\n  // see if the length is \"short form\" or \"long form\" (bit 8 set)\n  var length;\n  var longForm = b2 & 0x80;\n  if(!longForm) {\n    // length is just the first byte\n    length = b2;\n  } else {\n    // the number of bytes the length is specified in bits 7 through 1\n    // and each length byte is in big-endian base-256\n    var longFormBytes = b2 & 0x7F;\n    _checkBufferLength(bytes, remaining, longFormBytes);\n    length = bytes.getInt(longFormBytes << 3);\n  }\n  // FIXME: this will only happen for 32 bit getInt with high bit set\n  if(length < 0) {\n    throw new Error('Negative length: ' + length);\n  }\n  return length;\n};\n\n/**\n * Parses an asn1 object from a byte buffer in DER format.\n *\n * @param bytes the byte buffer to parse from.\n * @param [strict] true to be strict when checking value lengths, false to\n *          allow truncated values (default: true).\n * @param [options] object with options or boolean strict flag\n *          [strict] true to be strict when checking value lengths, false to\n *            allow truncated values (default: true).\n *          [parseAllBytes] true to ensure all bytes are parsed\n *            (default: true)\n *          [decodeBitStrings] true to attempt to decode the content of\n *            BIT STRINGs (not OCTET STRINGs) using strict mode. Note that\n *            without schema support to understand the data context this can\n *            erroneously decode values that happen to be valid ASN.1. This\n *            flag will be deprecated or removed as soon as schema support is\n *            available. (default: true)\n *\n * @throws Will throw an error for various malformed input conditions.\n *\n * @return the parsed asn1 object.\n */\nasn1.fromDer = function(bytes, options) {\n  if(options === undefined) {\n    options = {\n      strict: true,\n      parseAllBytes: true,\n      decodeBitStrings: true\n    };\n  }\n  if(typeof options === 'boolean') {\n    options = {\n      strict: options,\n      parseAllBytes: true,\n      decodeBitStrings: true\n    };\n  }\n  if(!('strict' in options)) {\n    options.strict = true;\n  }\n  if(!('parseAllBytes' in options)) {\n    options.parseAllBytes = true;\n  }\n  if(!('decodeBitStrings' in options)) {\n    options.decodeBitStrings = true;\n  }\n\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  var byteCount = bytes.length();\n  var value = _fromDer(bytes, bytes.length(), 0, options);\n  if(options.parseAllBytes && bytes.length() !== 0) {\n    var error = new Error('Unparsed DER bytes remain after ASN.1 parsing.');\n    error.byteCount = byteCount;\n    error.remaining = bytes.length();\n    throw error;\n  }\n  return value;\n};\n\n/**\n * Internal function to parse an asn1 object from a byte buffer in DER format.\n *\n * @param bytes the byte buffer to parse from.\n * @param remaining the number of bytes remaining for this chunk.\n * @param depth the current parsing depth.\n * @param options object with same options as fromDer().\n *\n * @return the parsed asn1 object.\n */\nfunction _fromDer(bytes, remaining, depth, options) {\n  // temporary storage for consumption calculations\n  var start;\n\n  // minimum length for ASN.1 DER structure is 2\n  _checkBufferLength(bytes, remaining, 2);\n\n  // get the first byte\n  var b1 = bytes.getByte();\n  // consumed one byte\n  remaining--;\n\n  // get the tag class\n  var tagClass = (b1 & 0xC0);\n\n  // get the type (bits 1-5)\n  var type = b1 & 0x1F;\n\n  // get the variable value length and adjust remaining bytes\n  start = bytes.length();\n  var length = _getValueLength(bytes, remaining);\n  remaining -= start - bytes.length();\n\n  // ensure there are enough bytes to get the value\n  if(length !== undefined && length > remaining) {\n    if(options.strict) {\n      var error = new Error('Too few bytes to read ASN.1 value.');\n      error.available = bytes.length();\n      error.remaining = remaining;\n      error.requested = length;\n      throw error;\n    }\n    // Note: be lenient with truncated values and use remaining state bytes\n    length = remaining;\n  }\n\n  // value storage\n  var value;\n  // possible BIT STRING contents storage\n  var bitStringContents;\n\n  // constructed flag is bit 6 (32 = 0x20) of the first byte\n  var constructed = ((b1 & 0x20) === 0x20);\n  if(constructed) {\n    // parse child asn1 objects from the value\n    value = [];\n    if(length === undefined) {\n      // asn1 object of indefinite length, read until end tag\n      for(;;) {\n        _checkBufferLength(bytes, remaining, 2);\n        if(bytes.bytes(2) === String.fromCharCode(0, 0)) {\n          bytes.getBytes(2);\n          remaining -= 2;\n          break;\n        }\n        start = bytes.length();\n        value.push(_fromDer(bytes, remaining, depth + 1, options));\n        remaining -= start - bytes.length();\n      }\n    } else {\n      // parsing asn1 object of definite length\n      while(length > 0) {\n        start = bytes.length();\n        value.push(_fromDer(bytes, length, depth + 1, options));\n        remaining -= start - bytes.length();\n        length -= start - bytes.length();\n      }\n    }\n  }\n\n  // if a BIT STRING, save the contents including padding\n  if(value === undefined && tagClass === asn1.Class.UNIVERSAL &&\n    type === asn1.Type.BITSTRING) {\n    bitStringContents = bytes.bytes(length);\n  }\n\n  // determine if a non-constructed value should be decoded as a composed\n  // value that contains other ASN.1 objects. BIT STRINGs (and OCTET STRINGs)\n  // can be used this way.\n  if(value === undefined && options.decodeBitStrings &&\n    tagClass === asn1.Class.UNIVERSAL &&\n    // FIXME: OCTET STRINGs not yet supported here\n    // .. other parts of forge expect to decode OCTET STRINGs manually\n    (type === asn1.Type.BITSTRING /*|| type === asn1.Type.OCTETSTRING*/) &&\n    length > 1) {\n    // save read position\n    var savedRead = bytes.read;\n    var savedRemaining = remaining;\n    var unused = 0;\n    if(type === asn1.Type.BITSTRING) {\n      /* The first octet gives the number of bits by which the length of the\n        bit string is less than the next multiple of eight (this is called\n        the \"number of unused bits\").\n\n        The second and following octets give the value of the bit string\n        converted to an octet string. */\n      _checkBufferLength(bytes, remaining, 1);\n      unused = bytes.getByte();\n      remaining--;\n    }\n    // if all bits are used, maybe the BIT/OCTET STRING holds ASN.1 objs\n    if(unused === 0) {\n      try {\n        // attempt to parse child asn1 object from the value\n        // (stored in array to signal composed value)\n        start = bytes.length();\n        var subOptions = {\n          // enforce strict mode to avoid parsing ASN.1 from plain data\n          strict: true,\n          decodeBitStrings: true\n        };\n        var composed = _fromDer(bytes, remaining, depth + 1, subOptions);\n        var used = start - bytes.length();\n        remaining -= used;\n        if(type == asn1.Type.BITSTRING) {\n          used++;\n        }\n\n        // if the data all decoded and the class indicates UNIVERSAL or\n        // CONTEXT_SPECIFIC then assume we've got an encapsulated ASN.1 object\n        var tc = composed.tagClass;\n        if(used === length &&\n          (tc === asn1.Class.UNIVERSAL || tc === asn1.Class.CONTEXT_SPECIFIC)) {\n          value = [composed];\n        }\n      } catch(ex) {\n      }\n    }\n    if(value === undefined) {\n      // restore read position\n      bytes.read = savedRead;\n      remaining = savedRemaining;\n    }\n  }\n\n  if(value === undefined) {\n    // asn1 not constructed or composed, get raw value\n    // TODO: do DER to OID conversion and vice-versa in .toDer?\n\n    if(length === undefined) {\n      if(options.strict) {\n        throw new Error('Non-constructed ASN.1 object of indefinite length.');\n      }\n      // be lenient and use remaining state bytes\n      length = remaining;\n    }\n\n    if(type === asn1.Type.BMPSTRING) {\n      value = '';\n      for(; length > 0; length -= 2) {\n        _checkBufferLength(bytes, remaining, 2);\n        value += String.fromCharCode(bytes.getInt16());\n        remaining -= 2;\n      }\n    } else {\n      value = bytes.getBytes(length);\n      remaining -= length;\n    }\n  }\n\n  // add BIT STRING contents if available\n  var asn1Options = bitStringContents === undefined ? null : {\n    bitStringContents: bitStringContents\n  };\n\n  // create and return asn1 object\n  return asn1.create(tagClass, type, constructed, value, asn1Options);\n}\n\n/**\n * Converts the given asn1 object to a buffer of bytes in DER format.\n *\n * @param asn1 the asn1 object to convert to bytes.\n *\n * @return the buffer of bytes.\n */\nasn1.toDer = function(obj) {\n  var bytes = forge.util.createBuffer();\n\n  // build the first byte\n  var b1 = obj.tagClass | obj.type;\n\n  // for storing the ASN.1 value\n  var value = forge.util.createBuffer();\n\n  // use BIT STRING contents if available and data not changed\n  var useBitStringContents = false;\n  if('bitStringContents' in obj) {\n    useBitStringContents = true;\n    if(obj.original) {\n      useBitStringContents = asn1.equals(obj, obj.original);\n    }\n  }\n\n  if(useBitStringContents) {\n    value.putBytes(obj.bitStringContents);\n  } else if(obj.composed) {\n    // if composed, use each child asn1 object's DER bytes as value\n    // turn on 6th bit (0x20 = 32) to indicate asn1 is constructed\n    // from other asn1 objects\n    if(obj.constructed) {\n      b1 |= 0x20;\n    } else {\n      // type is a bit string, add unused bits of 0x00\n      value.putByte(0x00);\n    }\n\n    // add all of the child DER bytes together\n    for(var i = 0; i < obj.value.length; ++i) {\n      if(obj.value[i] !== undefined) {\n        value.putBuffer(asn1.toDer(obj.value[i]));\n      }\n    }\n  } else {\n    // use asn1.value directly\n    if(obj.type === asn1.Type.BMPSTRING) {\n      for(var i = 0; i < obj.value.length; ++i) {\n        value.putInt16(obj.value.charCodeAt(i));\n      }\n    } else {\n      // ensure integer is minimally-encoded\n      // TODO: should all leading bytes be stripped vs just one?\n      // .. ex '00 00 01' => '01'?\n      if(obj.type === asn1.Type.INTEGER &&\n        obj.value.length > 1 &&\n        // leading 0x00 for positive integer\n        ((obj.value.charCodeAt(0) === 0 &&\n        (obj.value.charCodeAt(1) & 0x80) === 0) ||\n        // leading 0xFF for negative integer\n        (obj.value.charCodeAt(0) === 0xFF &&\n        (obj.value.charCodeAt(1) & 0x80) === 0x80))) {\n        value.putBytes(obj.value.substr(1));\n      } else {\n        value.putBytes(obj.value);\n      }\n    }\n  }\n\n  // add tag byte\n  bytes.putByte(b1);\n\n  // use \"short form\" encoding\n  if(value.length() <= 127) {\n    // one byte describes the length\n    // bit 8 = 0 and bits 7-1 = length\n    bytes.putByte(value.length() & 0x7F);\n  } else {\n    // use \"long form\" encoding\n    // 2 to 127 bytes describe the length\n    // first byte: bit 8 = 1 and bits 7-1 = # of additional bytes\n    // other bytes: length in base 256, big-endian\n    var len = value.length();\n    var lenBytes = '';\n    do {\n      lenBytes += String.fromCharCode(len & 0xFF);\n      len = len >>> 8;\n    } while(len > 0);\n\n    // set first byte to # bytes used to store the length and turn on\n    // bit 8 to indicate long-form length is used\n    bytes.putByte(lenBytes.length | 0x80);\n\n    // concatenate length bytes in reverse since they were generated\n    // little endian and we need big endian\n    for(var i = lenBytes.length - 1; i >= 0; --i) {\n      bytes.putByte(lenBytes.charCodeAt(i));\n    }\n  }\n\n  // concatenate value bytes\n  bytes.putBuffer(value);\n  return bytes;\n};\n\n/**\n * Converts an OID dot-separated string to a byte buffer. The byte buffer\n * contains only the DER-encoded value, not any tag or length bytes.\n *\n * @param oid the OID dot-separated string.\n *\n * @return the byte buffer.\n */\nasn1.oidToDer = function(oid) {\n  // split OID into individual values\n  var values = oid.split('.');\n  var bytes = forge.util.createBuffer();\n\n  // first byte is 40 * value1 + value2\n  bytes.putByte(40 * parseInt(values[0], 10) + parseInt(values[1], 10));\n  // other bytes are each value in base 128 with 8th bit set except for\n  // the last byte for each value\n  var last, valueBytes, value, b;\n  for(var i = 2; i < values.length; ++i) {\n    // produce value bytes in reverse because we don't know how many\n    // bytes it will take to store the value\n    last = true;\n    valueBytes = [];\n    value = parseInt(values[i], 10);\n    do {\n      b = value & 0x7F;\n      value = value >>> 7;\n      // if value is not last, then turn on 8th bit\n      if(!last) {\n        b |= 0x80;\n      }\n      valueBytes.push(b);\n      last = false;\n    } while(value > 0);\n\n    // add value bytes in reverse (needs to be in big endian)\n    for(var n = valueBytes.length - 1; n >= 0; --n) {\n      bytes.putByte(valueBytes[n]);\n    }\n  }\n\n  return bytes;\n};\n\n/**\n * Converts a DER-encoded byte buffer to an OID dot-separated string. The\n * byte buffer should contain only the DER-encoded value, not any tag or\n * length bytes.\n *\n * @param bytes the byte buffer.\n *\n * @return the OID dot-separated string.\n */\nasn1.derToOid = function(bytes) {\n  var oid;\n\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  // first byte is 40 * value1 + value2\n  var b = bytes.getByte();\n  oid = Math.floor(b / 40) + '.' + (b % 40);\n\n  // other bytes are each value in base 128 with 8th bit set except for\n  // the last byte for each value\n  var value = 0;\n  while(bytes.length() > 0) {\n    b = bytes.getByte();\n    value = value << 7;\n    // not the last byte for the value\n    if(b & 0x80) {\n      value += b & 0x7F;\n    } else {\n      // last byte\n      oid += '.' + (value + b);\n      value = 0;\n    }\n  }\n\n  return oid;\n};\n\n/**\n * Converts a UTCTime value to a date.\n *\n * Note: GeneralizedTime has 4 digits for the year and is used for X.509\n * dates past 2049. Parsing that structure hasn't been implemented yet.\n *\n * @param utc the UTCTime value to convert.\n *\n * @return the date.\n */\nasn1.utcTimeToDate = function(utc) {\n  /* The following formats can be used:\n\n    YYMMDDhhmmZ\n    YYMMDDhhmm+hh'mm'\n    YYMMDDhhmm-hh'mm'\n    YYMMDDhhmmssZ\n    YYMMDDhhmmss+hh'mm'\n    YYMMDDhhmmss-hh'mm'\n\n    Where:\n\n    YY is the least significant two digits of the year\n    MM is the month (01 to 12)\n    DD is the day (01 to 31)\n    hh is the hour (00 to 23)\n    mm are the minutes (00 to 59)\n    ss are the seconds (00 to 59)\n    Z indicates that local time is GMT, + indicates that local time is\n    later than GMT, and - indicates that local time is earlier than GMT\n    hh' is the absolute value of the offset from GMT in hours\n    mm' is the absolute value of the offset from GMT in minutes */\n  var date = new Date();\n\n  // if YY >= 50 use 19xx, if YY < 50 use 20xx\n  var year = parseInt(utc.substr(0, 2), 10);\n  year = (year >= 50) ? 1900 + year : 2000 + year;\n  var MM = parseInt(utc.substr(2, 2), 10) - 1; // use 0-11 for month\n  var DD = parseInt(utc.substr(4, 2), 10);\n  var hh = parseInt(utc.substr(6, 2), 10);\n  var mm = parseInt(utc.substr(8, 2), 10);\n  var ss = 0;\n\n  // not just YYMMDDhhmmZ\n  if(utc.length > 11) {\n    // get character after minutes\n    var c = utc.charAt(10);\n    var end = 10;\n\n    // see if seconds are present\n    if(c !== '+' && c !== '-') {\n      // get seconds\n      ss = parseInt(utc.substr(10, 2), 10);\n      end += 2;\n    }\n  }\n\n  // update date\n  date.setUTCFullYear(year, MM, DD);\n  date.setUTCHours(hh, mm, ss, 0);\n\n  if(end) {\n    // get +/- after end of time\n    c = utc.charAt(end);\n    if(c === '+' || c === '-') {\n      // get hours+minutes offset\n      var hhoffset = parseInt(utc.substr(end + 1, 2), 10);\n      var mmoffset = parseInt(utc.substr(end + 4, 2), 10);\n\n      // calculate offset in milliseconds\n      var offset = hhoffset * 60 + mmoffset;\n      offset *= 60000;\n\n      // apply offset\n      if(c === '+') {\n        date.setTime(+date - offset);\n      } else {\n        date.setTime(+date + offset);\n      }\n    }\n  }\n\n  return date;\n};\n\n/**\n * Converts a GeneralizedTime value to a date.\n *\n * @param gentime the GeneralizedTime value to convert.\n *\n * @return the date.\n */\nasn1.generalizedTimeToDate = function(gentime) {\n  /* The following formats can be used:\n\n    YYYYMMDDHHMMSS\n    YYYYMMDDHHMMSS.fff\n    YYYYMMDDHHMMSSZ\n    YYYYMMDDHHMMSS.fffZ\n    YYYYMMDDHHMMSS+hh'mm'\n    YYYYMMDDHHMMSS.fff+hh'mm'\n    YYYYMMDDHHMMSS-hh'mm'\n    YYYYMMDDHHMMSS.fff-hh'mm'\n\n    Where:\n\n    YYYY is the year\n    MM is the month (01 to 12)\n    DD is the day (01 to 31)\n    hh is the hour (00 to 23)\n    mm are the minutes (00 to 59)\n    ss are the seconds (00 to 59)\n    .fff is the second fraction, accurate to three decimal places\n    Z indicates that local time is GMT, + indicates that local time is\n    later than GMT, and - indicates that local time is earlier than GMT\n    hh' is the absolute value of the offset from GMT in hours\n    mm' is the absolute value of the offset from GMT in minutes */\n  var date = new Date();\n\n  var YYYY = parseInt(gentime.substr(0, 4), 10);\n  var MM = parseInt(gentime.substr(4, 2), 10) - 1; // use 0-11 for month\n  var DD = parseInt(gentime.substr(6, 2), 10);\n  var hh = parseInt(gentime.substr(8, 2), 10);\n  var mm = parseInt(gentime.substr(10, 2), 10);\n  var ss = parseInt(gentime.substr(12, 2), 10);\n  var fff = 0;\n  var offset = 0;\n  var isUTC = false;\n\n  if(gentime.charAt(gentime.length - 1) === 'Z') {\n    isUTC = true;\n  }\n\n  var end = gentime.length - 5, c = gentime.charAt(end);\n  if(c === '+' || c === '-') {\n    // get hours+minutes offset\n    var hhoffset = parseInt(gentime.substr(end + 1, 2), 10);\n    var mmoffset = parseInt(gentime.substr(end + 4, 2), 10);\n\n    // calculate offset in milliseconds\n    offset = hhoffset * 60 + mmoffset;\n    offset *= 60000;\n\n    // apply offset\n    if(c === '+') {\n      offset *= -1;\n    }\n\n    isUTC = true;\n  }\n\n  // check for second fraction\n  if(gentime.charAt(14) === '.') {\n    fff = parseFloat(gentime.substr(14), 10) * 1000;\n  }\n\n  if(isUTC) {\n    date.setUTCFullYear(YYYY, MM, DD);\n    date.setUTCHours(hh, mm, ss, fff);\n\n    // apply offset\n    date.setTime(+date + offset);\n  } else {\n    date.setFullYear(YYYY, MM, DD);\n    date.setHours(hh, mm, ss, fff);\n  }\n\n  return date;\n};\n\n/**\n * Converts a date to a UTCTime value.\n *\n * Note: GeneralizedTime has 4 digits for the year and is used for X.509\n * dates past 2049. Converting to a GeneralizedTime hasn't been\n * implemented yet.\n *\n * @param date the date to convert.\n *\n * @return the UTCTime value.\n */\nasn1.dateToUtcTime = function(date) {\n  // TODO: validate; currently assumes proper format\n  if(typeof date === 'string') {\n    return date;\n  }\n\n  var rval = '';\n\n  // create format YYMMDDhhmmssZ\n  var format = [];\n  format.push(('' + date.getUTCFullYear()).substr(2));\n  format.push('' + (date.getUTCMonth() + 1));\n  format.push('' + date.getUTCDate());\n  format.push('' + date.getUTCHours());\n  format.push('' + date.getUTCMinutes());\n  format.push('' + date.getUTCSeconds());\n\n  // ensure 2 digits are used for each format entry\n  for(var i = 0; i < format.length; ++i) {\n    if(format[i].length < 2) {\n      rval += '0';\n    }\n    rval += format[i];\n  }\n  rval += 'Z';\n\n  return rval;\n};\n\n/**\n * Converts a date to a GeneralizedTime value.\n *\n * @param date the date to convert.\n *\n * @return the GeneralizedTime value as a string.\n */\nasn1.dateToGeneralizedTime = function(date) {\n  // TODO: validate; currently assumes proper format\n  if(typeof date === 'string') {\n    return date;\n  }\n\n  var rval = '';\n\n  // create format YYYYMMDDHHMMSSZ\n  var format = [];\n  format.push('' + date.getUTCFullYear());\n  format.push('' + (date.getUTCMonth() + 1));\n  format.push('' + date.getUTCDate());\n  format.push('' + date.getUTCHours());\n  format.push('' + date.getUTCMinutes());\n  format.push('' + date.getUTCSeconds());\n\n  // ensure 2 digits are used for each format entry\n  for(var i = 0; i < format.length; ++i) {\n    if(format[i].length < 2) {\n      rval += '0';\n    }\n    rval += format[i];\n  }\n  rval += 'Z';\n\n  return rval;\n};\n\n/**\n * Converts a javascript integer to a DER-encoded byte buffer to be used\n * as the value for an INTEGER type.\n *\n * @param x the integer.\n *\n * @return the byte buffer.\n */\nasn1.integerToDer = function(x) {\n  var rval = forge.util.createBuffer();\n  if(x >= -0x80 && x < 0x80) {\n    return rval.putSignedInt(x, 8);\n  }\n  if(x >= -0x8000 && x < 0x8000) {\n    return rval.putSignedInt(x, 16);\n  }\n  if(x >= -0x800000 && x < 0x800000) {\n    return rval.putSignedInt(x, 24);\n  }\n  if(x >= -0x80000000 && x < 0x80000000) {\n    return rval.putSignedInt(x, 32);\n  }\n  var error = new Error('Integer too large; max is 32-bits.');\n  error.integer = x;\n  throw error;\n};\n\n/**\n * Converts a DER-encoded byte buffer to a javascript integer. This is\n * typically used to decode the value of an INTEGER type.\n *\n * @param bytes the byte buffer.\n *\n * @return the integer.\n */\nasn1.derToInteger = function(bytes) {\n  // wrap in buffer if needed\n  if(typeof bytes === 'string') {\n    bytes = forge.util.createBuffer(bytes);\n  }\n\n  var n = bytes.length() * 8;\n  if(n > 32) {\n    throw new Error('Integer too large; max is 32-bits.');\n  }\n  return bytes.getSignedInt(n);\n};\n\n/**\n * Validates that the given ASN.1 object is at least a super set of the\n * given ASN.1 structure. Only tag classes and types are checked. An\n * optional map may also be provided to capture ASN.1 values while the\n * structure is checked.\n *\n * To capture an ASN.1 value, set an object in the validator's 'capture'\n * parameter to the key to use in the capture map. To capture the full\n * ASN.1 object, specify 'captureAsn1'. To capture BIT STRING bytes, including\n * the leading unused bits counter byte, specify 'captureBitStringContents'.\n * To capture BIT STRING bytes, without the leading unused bits counter byte,\n * specify 'captureBitStringValue'.\n *\n * Objects in the validator may set a field 'optional' to true to indicate\n * that it isn't necessary to pass validation.\n *\n * @param obj the ASN.1 object to validate.\n * @param v the ASN.1 structure validator.\n * @param capture an optional map to capture values in.\n * @param errors an optional array for storing validation errors.\n *\n * @return true on success, false on failure.\n */\nasn1.validate = function(obj, v, capture, errors) {\n  var rval = false;\n\n  // ensure tag class and type are the same if specified\n  if((obj.tagClass === v.tagClass || typeof(v.tagClass) === 'undefined') &&\n    (obj.type === v.type || typeof(v.type) === 'undefined')) {\n    // ensure constructed flag is the same if specified\n    if(obj.constructed === v.constructed ||\n      typeof(v.constructed) === 'undefined') {\n      rval = true;\n\n      // handle sub values\n      if(v.value && forge.util.isArray(v.value)) {\n        var j = 0;\n        for(var i = 0; rval && i < v.value.length; ++i) {\n          rval = v.value[i].optional || false;\n          if(obj.value[j]) {\n            rval = asn1.validate(obj.value[j], v.value[i], capture, errors);\n            if(rval) {\n              ++j;\n            } else if(v.value[i].optional) {\n              rval = true;\n            }\n          }\n          if(!rval && errors) {\n            errors.push(\n              '[' + v.name + '] ' +\n              'Tag class \"' + v.tagClass + '\", type \"' +\n              v.type + '\" expected value length \"' +\n              v.value.length + '\", got \"' +\n              obj.value.length + '\"');\n          }\n        }\n      }\n\n      if(rval && capture) {\n        if(v.capture) {\n          capture[v.capture] = obj.value;\n        }\n        if(v.captureAsn1) {\n          capture[v.captureAsn1] = obj;\n        }\n        if(v.captureBitStringContents && 'bitStringContents' in obj) {\n          capture[v.captureBitStringContents] = obj.bitStringContents;\n        }\n        if(v.captureBitStringValue && 'bitStringContents' in obj) {\n          var value;\n          if(obj.bitStringContents.length < 2) {\n            capture[v.captureBitStringValue] = '';\n          } else {\n            // FIXME: support unused bits with data shifting\n            var unused = obj.bitStringContents.charCodeAt(0);\n            if(unused !== 0) {\n              throw new Error(\n                'captureBitStringValue only supported for zero unused bits');\n            }\n            capture[v.captureBitStringValue] = obj.bitStringContents.slice(1);\n          }\n        }\n      }\n    } else if(errors) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected constructed \"' + v.constructed + '\", got \"' +\n        obj.constructed + '\"');\n    }\n  } else if(errors) {\n    if(obj.tagClass !== v.tagClass) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected tag class \"' + v.tagClass + '\", got \"' +\n        obj.tagClass + '\"');\n    }\n    if(obj.type !== v.type) {\n      errors.push(\n        '[' + v.name + '] ' +\n        'Expected type \"' + v.type + '\", got \"' + obj.type + '\"');\n    }\n  }\n  return rval;\n};\n\n// regex for testing for non-latin characters\nvar _nonLatinRegex = /[^\\\\u0000-\\\\u00ff]/;\n\n/**\n * Pretty prints an ASN.1 object to a string.\n *\n * @param obj the object to write out.\n * @param level the level in the tree.\n * @param indentation the indentation to use.\n *\n * @return the string.\n */\nasn1.prettyPrint = function(obj, level, indentation) {\n  var rval = '';\n\n  // set default level and indentation\n  level = level || 0;\n  indentation = indentation || 2;\n\n  // start new line for deep levels\n  if(level > 0) {\n    rval += '\\n';\n  }\n\n  // create indent\n  var indent = '';\n  for(var i = 0; i < level * indentation; ++i) {\n    indent += ' ';\n  }\n\n  // print class:type\n  rval += indent + 'Tag: ';\n  switch(obj.tagClass) {\n  case asn1.Class.UNIVERSAL:\n    rval += 'Universal:';\n    break;\n  case asn1.Class.APPLICATION:\n    rval += 'Application:';\n    break;\n  case asn1.Class.CONTEXT_SPECIFIC:\n    rval += 'Context-Specific:';\n    break;\n  case asn1.Class.PRIVATE:\n    rval += 'Private:';\n    break;\n  }\n\n  if(obj.tagClass === asn1.Class.UNIVERSAL) {\n    rval += obj.type;\n\n    // known types\n    switch(obj.type) {\n    case asn1.Type.NONE:\n      rval += ' (None)';\n      break;\n    case asn1.Type.BOOLEAN:\n      rval += ' (Boolean)';\n      break;\n    case asn1.Type.INTEGER:\n      rval += ' (Integer)';\n      break;\n    case asn1.Type.BITSTRING:\n      rval += ' (Bit string)';\n      break;\n    case asn1.Type.OCTETSTRING:\n      rval += ' (Octet string)';\n      break;\n    case asn1.Type.NULL:\n      rval += ' (Null)';\n      break;\n    case asn1.Type.OID:\n      rval += ' (Object Identifier)';\n      break;\n    case asn1.Type.ODESC:\n      rval += ' (Object Descriptor)';\n      break;\n    case asn1.Type.EXTERNAL:\n      rval += ' (External or Instance of)';\n      break;\n    case asn1.Type.REAL:\n      rval += ' (Real)';\n      break;\n    case asn1.Type.ENUMERATED:\n      rval += ' (Enumerated)';\n      break;\n    case asn1.Type.EMBEDDED:\n      rval += ' (Embedded PDV)';\n      break;\n    case asn1.Type.UTF8:\n      rval += ' (UTF8)';\n      break;\n    case asn1.Type.ROID:\n      rval += ' (Relative Object Identifier)';\n      break;\n    case asn1.Type.SEQUENCE:\n      rval += ' (Sequence)';\n      break;\n    case asn1.Type.SET:\n      rval += ' (Set)';\n      break;\n    case asn1.Type.PRINTABLESTRING:\n      rval += ' (Printable String)';\n      break;\n    case asn1.Type.IA5String:\n      rval += ' (IA5String (ASCII))';\n      break;\n    case asn1.Type.UTCTIME:\n      rval += ' (UTC time)';\n      break;\n    case asn1.Type.GENERALIZEDTIME:\n      rval += ' (Generalized time)';\n      break;\n    case asn1.Type.BMPSTRING:\n      rval += ' (BMP String)';\n      break;\n    }\n  } else {\n    rval += obj.type;\n  }\n\n  rval += '\\n';\n  rval += indent + 'Constructed: ' + obj.constructed + '\\n';\n\n  if(obj.composed) {\n    var subvalues = 0;\n    var sub = '';\n    for(var i = 0; i < obj.value.length; ++i) {\n      if(obj.value[i] !== undefined) {\n        subvalues += 1;\n        sub += asn1.prettyPrint(obj.value[i], level + 1, indentation);\n        if((i + 1) < obj.value.length) {\n          sub += ',';\n        }\n      }\n    }\n    rval += indent + 'Sub values: ' + subvalues + sub;\n  } else {\n    rval += indent + 'Value: ';\n    if(obj.type === asn1.Type.OID) {\n      var oid = asn1.derToOid(obj.value);\n      rval += oid;\n      if(forge.pki && forge.pki.oids) {\n        if(oid in forge.pki.oids) {\n          rval += ' (' + forge.pki.oids[oid] + ') ';\n        }\n      }\n    }\n    if(obj.type === asn1.Type.INTEGER) {\n      try {\n        rval += asn1.derToInteger(obj.value);\n      } catch(ex) {\n        rval += '0x' + forge.util.bytesToHex(obj.value);\n      }\n    } else if(obj.type === asn1.Type.BITSTRING) {\n      // TODO: shift bits as needed to display without padding\n      if(obj.value.length > 1) {\n        // remove unused bits field\n        rval += '0x' + forge.util.bytesToHex(obj.value.slice(1));\n      } else {\n        rval += '(none)';\n      }\n      // show unused bit count\n      if(obj.value.length > 0) {\n        var unused = obj.value.charCodeAt(0);\n        if(unused == 1) {\n          rval += ' (1 unused bit shown)';\n        } else if(unused > 1) {\n          rval += ' (' + unused + ' unused bits shown)';\n        }\n      }\n    } else if(obj.type === asn1.Type.OCTETSTRING) {\n      if(!_nonLatinRegex.test(obj.value)) {\n        rval += '(' + obj.value + ') ';\n      }\n      rval += '0x' + forge.util.bytesToHex(obj.value);\n    } else if(obj.type === asn1.Type.UTF8) {\n      try {\n        rval += forge.util.decodeUtf8(obj.value);\n      } catch(e) {\n        if(e.message === 'URI malformed') {\n          rval +=\n            '0x' + forge.util.bytesToHex(obj.value) + ' (malformed UTF8)';\n        } else {\n          throw e;\n        }\n      }\n    } else if(obj.type === asn1.Type.PRINTABLESTRING ||\n      obj.type === asn1.Type.IA5String) {\n      rval += obj.value;\n    } else if(_nonLatinRegex.test(obj.value)) {\n      rval += '0x' + forge.util.bytesToHex(obj.value);\n    } else if(obj.value.length === 0) {\n      rval += '[null]';\n    } else {\n      rval += obj.value;\n    }\n  }\n\n  return rval;\n};\n","/**\n * Base-N/Base-X encoding/decoding functions.\n *\n * Original implementation from base-x:\n * https://github.com/cryptocoinjs/base-x\n *\n * Which is MIT licensed:\n *\n * The MIT License (MIT)\n *\n * Copyright base-x contributors (c) 2016\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n * DEALINGS IN THE SOFTWARE.\n */\nvar api = {};\nmodule.exports = api;\n\n// baseN alphabet indexes\nvar _reverseAlphabets = {};\n\n/**\n * BaseN-encodes a Uint8Array using the given alphabet.\n *\n * @param input the Uint8Array to encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the baseN-encoded output string.\n */\napi.encode = function(input, alphabet, maxline) {\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n  if(maxline !== undefined && typeof maxline !== 'number') {\n    throw new TypeError('\"maxline\" must be a number.');\n  }\n\n  var output = '';\n\n  if(!(input instanceof Uint8Array)) {\n    // assume forge byte buffer\n    output = _encodeWithByteBuffer(input, alphabet);\n  } else {\n    var i = 0;\n    var base = alphabet.length;\n    var first = alphabet.charAt(0);\n    var digits = [0];\n    for(i = 0; i < input.length; ++i) {\n      for(var j = 0, carry = input[i]; j < digits.length; ++j) {\n        carry += digits[j] << 8;\n        digits[j] = carry % base;\n        carry = (carry / base) | 0;\n      }\n\n      while(carry > 0) {\n        digits.push(carry % base);\n        carry = (carry / base) | 0;\n      }\n    }\n\n    // deal with leading zeros\n    for(i = 0; input[i] === 0 && i < input.length - 1; ++i) {\n      output += first;\n    }\n    // convert digits to a string\n    for(i = digits.length - 1; i >= 0; --i) {\n      output += alphabet[digits[i]];\n    }\n  }\n\n  if(maxline) {\n    var regex = new RegExp('.{1,' + maxline + '}', 'g');\n    output = output.match(regex).join('\\r\\n');\n  }\n\n  return output;\n};\n\n/**\n * Decodes a baseN-encoded (using the given alphabet) string to a\n * Uint8Array.\n *\n * @param input the baseN-encoded input string.\n *\n * @return the Uint8Array.\n */\napi.decode = function(input, alphabet) {\n  if(typeof input !== 'string') {\n    throw new TypeError('\"input\" must be a string.');\n  }\n  if(typeof alphabet !== 'string') {\n    throw new TypeError('\"alphabet\" must be a string.');\n  }\n\n  var table = _reverseAlphabets[alphabet];\n  if(!table) {\n    // compute reverse alphabet\n    table = _reverseAlphabets[alphabet] = [];\n    for(var i = 0; i < alphabet.length; ++i) {\n      table[alphabet.charCodeAt(i)] = i;\n    }\n  }\n\n  // remove whitespace characters\n  input = input.replace(/\\s/g, '');\n\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var bytes = [0];\n  for(var i = 0; i < input.length; i++) {\n    var value = table[input.charCodeAt(i)];\n    if(value === undefined) {\n      return;\n    }\n\n    for(var j = 0, carry = value; j < bytes.length; ++j) {\n      carry += bytes[j] * base;\n      bytes[j] = carry & 0xff;\n      carry >>= 8;\n    }\n\n    while(carry > 0) {\n      bytes.push(carry & 0xff);\n      carry >>= 8;\n    }\n  }\n\n  // deal with leading zeros\n  for(var k = 0; input[k] === first && k < input.length - 1; ++k) {\n    bytes.push(0);\n  }\n\n  if(typeof Buffer !== 'undefined') {\n    return Buffer.from(bytes.reverse());\n  }\n\n  return new Uint8Array(bytes.reverse());\n};\n\nfunction _encodeWithByteBuffer(input, alphabet) {\n  var i = 0;\n  var base = alphabet.length;\n  var first = alphabet.charAt(0);\n  var digits = [0];\n  for(i = 0; i < input.length(); ++i) {\n    for(var j = 0, carry = input.at(i); j < digits.length; ++j) {\n      carry += digits[j] << 8;\n      digits[j] = carry % base;\n      carry = (carry / base) | 0;\n    }\n\n    while(carry > 0) {\n      digits.push(carry % base);\n      carry = (carry / base) | 0;\n    }\n  }\n\n  var output = '';\n\n  // deal with leading zeros\n  for(i = 0; input.at(i) === 0 && i < input.length() - 1; ++i) {\n    output += first;\n  }\n  // convert digits to a string\n  for(i = digits.length - 1; i >= 0; --i) {\n    output += alphabet[digits[i]];\n  }\n\n  return output;\n}\n","/**\n * Cipher base API.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nmodule.exports = forge.cipher = forge.cipher || {};\n\n// registered algorithms\nforge.cipher.algorithms = forge.cipher.algorithms || {};\n\n/**\n * Creates a cipher object that can be used to encrypt data using the given\n * algorithm and key. The algorithm may be provided as a string value for a\n * previously registered algorithm or it may be given as a cipher algorithm\n * API object.\n *\n * @param algorithm the algorithm to use, either a string or an algorithm API\n *          object.\n * @param key the key to use, as a binary-encoded string of bytes or a\n *          byte buffer.\n *\n * @return the cipher.\n */\nforge.cipher.createCipher = function(algorithm, key) {\n  var api = algorithm;\n  if(typeof api === 'string') {\n    api = forge.cipher.getAlgorithm(api);\n    if(api) {\n      api = api();\n    }\n  }\n  if(!api) {\n    throw new Error('Unsupported algorithm: ' + algorithm);\n  }\n\n  // assume block cipher\n  return new forge.cipher.BlockCipher({\n    algorithm: api,\n    key: key,\n    decrypt: false\n  });\n};\n\n/**\n * Creates a decipher object that can be used to decrypt data using the given\n * algorithm and key. The algorithm may be provided as a string value for a\n * previously registered algorithm or it may be given as a cipher algorithm\n * API object.\n *\n * @param algorithm the algorithm to use, either a string or an algorithm API\n *          object.\n * @param key the key to use, as a binary-encoded string of bytes or a\n *          byte buffer.\n *\n * @return the cipher.\n */\nforge.cipher.createDecipher = function(algorithm, key) {\n  var api = algorithm;\n  if(typeof api === 'string') {\n    api = forge.cipher.getAlgorithm(api);\n    if(api) {\n      api = api();\n    }\n  }\n  if(!api) {\n    throw new Error('Unsupported algorithm: ' + algorithm);\n  }\n\n  // assume block cipher\n  return new forge.cipher.BlockCipher({\n    algorithm: api,\n    key: key,\n    decrypt: true\n  });\n};\n\n/**\n * Registers an algorithm by name. If the name was already registered, the\n * algorithm API object will be overwritten.\n *\n * @param name the name of the algorithm.\n * @param algorithm the algorithm API object.\n */\nforge.cipher.registerAlgorithm = function(name, algorithm) {\n  name = name.toUpperCase();\n  forge.cipher.algorithms[name] = algorithm;\n};\n\n/**\n * Gets a registered algorithm by name.\n *\n * @param name the name of the algorithm.\n *\n * @return the algorithm, if found, null if not.\n */\nforge.cipher.getAlgorithm = function(name) {\n  name = name.toUpperCase();\n  if(name in forge.cipher.algorithms) {\n    return forge.cipher.algorithms[name];\n  }\n  return null;\n};\n\nvar BlockCipher = forge.cipher.BlockCipher = function(options) {\n  this.algorithm = options.algorithm;\n  this.mode = this.algorithm.mode;\n  this.blockSize = this.mode.blockSize;\n  this._finish = false;\n  this._input = null;\n  this.output = null;\n  this._op = options.decrypt ? this.mode.decrypt : this.mode.encrypt;\n  this._decrypt = options.decrypt;\n  this.algorithm.initialize(options);\n};\n\n/**\n * Starts or restarts the encryption or decryption process, whichever\n * was previously configured.\n *\n * For non-GCM mode, the IV may be a binary-encoded string of bytes, an array\n * of bytes, a byte buffer, or an array of 32-bit integers. If the IV is in\n * bytes, then it must be Nb (16) bytes in length. If the IV is given in as\n * 32-bit integers, then it must be 4 integers long.\n *\n * Note: an IV is not required or used in ECB mode.\n *\n * For GCM-mode, the IV must be given as a binary-encoded string of bytes or\n * a byte buffer. The number of bytes should be 12 (96 bits) as recommended\n * by NIST SP-800-38D but another length may be given.\n *\n * @param options the options to use:\n *          iv the initialization vector to use as a binary-encoded string of\n *            bytes, null to reuse the last ciphered block from a previous\n *            update() (this \"residue\" method is for legacy support only).\n *          additionalData additional authentication data as a binary-encoded\n *            string of bytes, for 'GCM' mode, (default: none).\n *          tagLength desired length of authentication tag, in bits, for\n *            'GCM' mode (0-128, default: 128).\n *          tag the authentication tag to check if decrypting, as a\n *             binary-encoded string of bytes.\n *          output the output the buffer to write to, null to create one.\n */\nBlockCipher.prototype.start = function(options) {\n  options = options || {};\n  var opts = {};\n  for(var key in options) {\n    opts[key] = options[key];\n  }\n  opts.decrypt = this._decrypt;\n  this._finish = false;\n  this._input = forge.util.createBuffer();\n  this.output = options.output || forge.util.createBuffer();\n  this.mode.start(opts);\n};\n\n/**\n * Updates the next block according to the cipher mode.\n *\n * @param input the buffer to read from.\n */\nBlockCipher.prototype.update = function(input) {\n  if(input) {\n    // input given, so empty it into the input buffer\n    this._input.putBuffer(input);\n  }\n\n  // do cipher operation until it needs more input and not finished\n  while(!this._op.call(this.mode, this._input, this.output, this._finish) &&\n    !this._finish) {}\n\n  // free consumed memory from input buffer\n  this._input.compact();\n};\n\n/**\n * Finishes encrypting or decrypting.\n *\n * @param pad a padding function to use in CBC mode, null for default,\n *          signature(blockSize, buffer, decrypt).\n *\n * @return true if successful, false on error.\n */\nBlockCipher.prototype.finish = function(pad) {\n  // backwards-compatibility w/deprecated padding API\n  // Note: will overwrite padding functions even after another start() call\n  if(pad && (this.mode.name === 'ECB' || this.mode.name === 'CBC')) {\n    this.mode.pad = function(input) {\n      return pad(this.blockSize, input, false);\n    };\n    this.mode.unpad = function(output) {\n      return pad(this.blockSize, output, true);\n    };\n  }\n\n  // build options for padding and afterFinish functions\n  var options = {};\n  options.decrypt = this._decrypt;\n\n  // get # of bytes that won't fill a block\n  options.overflow = this._input.length() % this.blockSize;\n\n  if(!this._decrypt && this.mode.pad) {\n    if(!this.mode.pad(this._input, options)) {\n      return false;\n    }\n  }\n\n  // do final update\n  this._finish = true;\n  this.update();\n\n  if(this._decrypt && this.mode.unpad) {\n    if(!this.mode.unpad(this.output, options)) {\n      return false;\n    }\n  }\n\n  if(this.mode.afterFinish) {\n    if(!this.mode.afterFinish(this.output, options)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","/**\n * Supported cipher modes.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nforge.cipher = forge.cipher || {};\n\n// supported cipher modes\nvar modes = module.exports = forge.cipher.modes = forge.cipher.modes || {};\n\n/** Electronic codebook (ECB) (Don't use this; it's not secure) **/\n\nmodes.ecb = function(options) {\n  options = options || {};\n  this.name = 'ECB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n};\n\nmodes.ecb.prototype.start = function(options) {};\n\nmodes.ecb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // write output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n};\n\nmodes.ecb.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // decrypt block\n  this.cipher.decrypt(this._inBlock, this._outBlock);\n\n  // write output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n};\n\nmodes.ecb.prototype.pad = function(input, options) {\n  // add PKCS#7 padding to block (each pad byte is the\n  // value of the number of pad bytes)\n  var padding = (input.length() === this.blockSize ?\n    this.blockSize : (this.blockSize - input.length()));\n  input.fillWithByte(padding, padding);\n  return true;\n};\n\nmodes.ecb.prototype.unpad = function(output, options) {\n  // check for error: input data not a multiple of blockSize\n  if(options.overflow > 0) {\n    return false;\n  }\n\n  // ensure padding byte count is valid\n  var len = output.length();\n  var count = output.at(len - 1);\n  if(count > (this.blockSize << 2)) {\n    return false;\n  }\n\n  // trim off padding bytes\n  output.truncate(count);\n  return true;\n};\n\n/** Cipher-block Chaining (CBC) **/\n\nmodes.cbc = function(options) {\n  options = options || {};\n  this.name = 'CBC';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n};\n\nmodes.cbc.prototype.start = function(options) {\n  // Note: legacy support for using IV residue (has security flaws)\n  // if IV is null, reuse block from previous processing\n  if(options.iv === null) {\n    // must have a previous block\n    if(!this._prev) {\n      throw new Error('Invalid IV parameter.');\n    }\n    this._iv = this._prev.slice(0);\n  } else if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  } else {\n    // save IV as \"previous\" block\n    this._iv = transformIV(options.iv, this.blockSize);\n    this._prev = this._iv.slice(0);\n  }\n};\n\nmodes.cbc.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  // CBC XOR's IV (or previous block) with plaintext\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = this._prev[i] ^ input.getInt32();\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // write output, save previous block\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i]);\n  }\n  this._prev = this._outBlock;\n};\n\nmodes.cbc.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  if(input.length() < this.blockSize && !(finish && input.length() > 0)) {\n    return true;\n  }\n\n  // get next block\n  for(var i = 0; i < this._ints; ++i) {\n    this._inBlock[i] = input.getInt32();\n  }\n\n  // decrypt block\n  this.cipher.decrypt(this._inBlock, this._outBlock);\n\n  // write output, save previous ciphered block\n  // CBC XOR's IV (or previous block) with ciphertext\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._prev[i] ^ this._outBlock[i]);\n  }\n  this._prev = this._inBlock.slice(0);\n};\n\nmodes.cbc.prototype.pad = function(input, options) {\n  // add PKCS#7 padding to block (each pad byte is the\n  // value of the number of pad bytes)\n  var padding = (input.length() === this.blockSize ?\n    this.blockSize : (this.blockSize - input.length()));\n  input.fillWithByte(padding, padding);\n  return true;\n};\n\nmodes.cbc.prototype.unpad = function(output, options) {\n  // check for error: input data not a multiple of blockSize\n  if(options.overflow > 0) {\n    return false;\n  }\n\n  // ensure padding byte count is valid\n  var len = output.length();\n  var count = output.at(len - 1);\n  if(count > (this.blockSize << 2)) {\n    return false;\n  }\n\n  // trim off padding bytes\n  output.truncate(count);\n  return true;\n};\n\n/** Cipher feedback (CFB) **/\n\nmodes.cfb = function(options) {\n  options = options || {};\n  this.name = 'CFB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output, write input as output\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = input.getInt32() ^ this._outBlock[i];\n      output.putInt32(this._inBlock[i]);\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output, write input as partial output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialBlock[i] = input.getInt32() ^ this._outBlock[i];\n    this._partialOutput.putInt32(this._partialBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._partialBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\nmodes.cfb.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block (CFB always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output, write input as output\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = input.getInt32();\n      output.putInt32(this._inBlock[i] ^ this._outBlock[i]);\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output, write input as partial output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialBlock[i] = input.getInt32();\n    this._partialOutput.putInt32(this._partialBlock[i] ^ this._outBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._partialBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\n/** Output feedback (OFB) **/\n\nmodes.ofb = function(options) {\n  options = options || {};\n  this.name = 'OFB';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(input.length() === 0) {\n    return true;\n  }\n\n  // encrypt block (OFB always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output and update next input\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(input.getInt32() ^ this._outBlock[i]);\n      this._inBlock[i] = this._outBlock[i];\n    }\n    return;\n  }\n\n  // handle partial block\n  var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n  if(partialBytes > 0) {\n    partialBytes = this.blockSize - partialBytes;\n  }\n\n  // XOR input with output\n  this._partialOutput.clear();\n  for(var i = 0; i < this._ints; ++i) {\n    this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n  }\n\n  if(partialBytes > 0) {\n    // block still incomplete, restore input buffer\n    input.read -= this.blockSize;\n  } else {\n    // block complete, update input block\n    for(var i = 0; i < this._ints; ++i) {\n      this._inBlock[i] = this._outBlock[i];\n    }\n  }\n\n  // skip any previous partial bytes\n  if(this._partialBytes > 0) {\n    this._partialOutput.getBytes(this._partialBytes);\n  }\n\n  if(partialBytes > 0 && !finish) {\n    output.putBytes(this._partialOutput.getBytes(\n      partialBytes - this._partialBytes));\n    this._partialBytes = partialBytes;\n    return true;\n  }\n\n  output.putBytes(this._partialOutput.getBytes(\n    inputLength - this._partialBytes));\n  this._partialBytes = 0;\n};\n\nmodes.ofb.prototype.decrypt = modes.ofb.prototype.encrypt;\n\n/** Counter (CTR) **/\n\nmodes.ctr = function(options) {\n  options = options || {};\n  this.name = 'CTR';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = null;\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n};\n\nmodes.ctr.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // use IV as first input\n  this._iv = transformIV(options.iv, this.blockSize);\n  this._inBlock = this._iv.slice(0);\n  this._partialBytes = 0;\n};\n\nmodes.ctr.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block (CTR always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n  } else {\n    // handle partial block\n    var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n    if(partialBytes > 0) {\n      partialBytes = this.blockSize - partialBytes;\n    }\n\n    // XOR input with output\n    this._partialOutput.clear();\n    for(var i = 0; i < this._ints; ++i) {\n      this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n\n    if(partialBytes > 0) {\n      // block still incomplete, restore input buffer\n      input.read -= this.blockSize;\n    }\n\n    // skip any previous partial bytes\n    if(this._partialBytes > 0) {\n      this._partialOutput.getBytes(this._partialBytes);\n    }\n\n    if(partialBytes > 0 && !finish) {\n      output.putBytes(this._partialOutput.getBytes(\n        partialBytes - this._partialBytes));\n      this._partialBytes = partialBytes;\n      return true;\n    }\n\n    output.putBytes(this._partialOutput.getBytes(\n      inputLength - this._partialBytes));\n    this._partialBytes = 0;\n  }\n\n  // block complete, increment counter (input block)\n  inc32(this._inBlock);\n};\n\nmodes.ctr.prototype.decrypt = modes.ctr.prototype.encrypt;\n\n/** Galois/Counter Mode (GCM) **/\n\nmodes.gcm = function(options) {\n  options = options || {};\n  this.name = 'GCM';\n  this.cipher = options.cipher;\n  this.blockSize = options.blockSize || 16;\n  this._ints = this.blockSize / 4;\n  this._inBlock = new Array(this._ints);\n  this._outBlock = new Array(this._ints);\n  this._partialOutput = forge.util.createBuffer();\n  this._partialBytes = 0;\n\n  // R is actually this value concatenated with 120 more zero bits, but\n  // we only XOR against R so the other zeros have no effect -- we just\n  // apply this value to the first integer in a block\n  this._R = 0xE1000000;\n};\n\nmodes.gcm.prototype.start = function(options) {\n  if(!('iv' in options)) {\n    throw new Error('Invalid IV parameter.');\n  }\n  // ensure IV is a byte buffer\n  var iv = forge.util.createBuffer(options.iv);\n\n  // no ciphered data processed yet\n  this._cipherLength = 0;\n\n  // default additional data is none\n  var additionalData;\n  if('additionalData' in options) {\n    additionalData = forge.util.createBuffer(options.additionalData);\n  } else {\n    additionalData = forge.util.createBuffer();\n  }\n\n  // default tag length is 128 bits\n  if('tagLength' in options) {\n    this._tagLength = options.tagLength;\n  } else {\n    this._tagLength = 128;\n  }\n\n  // if tag is given, ensure tag matches tag length\n  this._tag = null;\n  if(options.decrypt) {\n    // save tag to check later\n    this._tag = forge.util.createBuffer(options.tag).getBytes();\n    if(this._tag.length !== (this._tagLength / 8)) {\n      throw new Error('Authentication tag does not match tag length.');\n    }\n  }\n\n  // create tmp storage for hash calculation\n  this._hashBlock = new Array(this._ints);\n\n  // no tag generated yet\n  this.tag = null;\n\n  // generate hash subkey\n  // (apply block cipher to \"zero\" block)\n  this._hashSubkey = new Array(this._ints);\n  this.cipher.encrypt([0, 0, 0, 0], this._hashSubkey);\n\n  // generate table M\n  // use 4-bit tables (32 component decomposition of a 16 byte value)\n  // 8-bit tables take more space and are known to have security\n  // vulnerabilities (in native implementations)\n  this.componentBits = 4;\n  this._m = this.generateHashTable(this._hashSubkey, this.componentBits);\n\n  // Note: support IV length different from 96 bits? (only supporting\n  // 96 bits is recommended by NIST SP-800-38D)\n  // generate J_0\n  var ivLength = iv.length();\n  if(ivLength === 12) {\n    // 96-bit IV\n    this._j0 = [iv.getInt32(), iv.getInt32(), iv.getInt32(), 1];\n  } else {\n    // IV is NOT 96-bits\n    this._j0 = [0, 0, 0, 0];\n    while(iv.length() > 0) {\n      this._j0 = this.ghash(\n        this._hashSubkey, this._j0,\n        [iv.getInt32(), iv.getInt32(), iv.getInt32(), iv.getInt32()]);\n    }\n    this._j0 = this.ghash(\n      this._hashSubkey, this._j0, [0, 0].concat(from64To32(ivLength * 8)));\n  }\n\n  // generate ICB (initial counter block)\n  this._inBlock = this._j0.slice(0);\n  inc32(this._inBlock);\n  this._partialBytes = 0;\n\n  // consume authentication data\n  additionalData = forge.util.createBuffer(additionalData);\n  // save additional data length as a BE 64-bit number\n  this._aDataLength = from64To32(additionalData.length() * 8);\n  // pad additional data to 128 bit (16 byte) block size\n  var overflow = additionalData.length() % this.blockSize;\n  if(overflow) {\n    additionalData.fillWithByte(0, this.blockSize - overflow);\n  }\n  this._s = [0, 0, 0, 0];\n  while(additionalData.length() > 0) {\n    this._s = this.ghash(this._hashSubkey, this._s, [\n      additionalData.getInt32(),\n      additionalData.getInt32(),\n      additionalData.getInt32(),\n      additionalData.getInt32()\n    ]);\n  }\n};\n\nmodes.gcm.prototype.encrypt = function(input, output, finish) {\n  // not enough input to encrypt\n  var inputLength = input.length();\n  if(inputLength === 0) {\n    return true;\n  }\n\n  // encrypt block\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // handle full block\n  if(this._partialBytes === 0 && inputLength >= this.blockSize) {\n    // XOR input with output\n    for(var i = 0; i < this._ints; ++i) {\n      output.putInt32(this._outBlock[i] ^= input.getInt32());\n    }\n    this._cipherLength += this.blockSize;\n  } else {\n    // handle partial block\n    var partialBytes = (this.blockSize - inputLength) % this.blockSize;\n    if(partialBytes > 0) {\n      partialBytes = this.blockSize - partialBytes;\n    }\n\n    // XOR input with output\n    this._partialOutput.clear();\n    for(var i = 0; i < this._ints; ++i) {\n      this._partialOutput.putInt32(input.getInt32() ^ this._outBlock[i]);\n    }\n\n    if(partialBytes <= 0 || finish) {\n      // handle overflow prior to hashing\n      if(finish) {\n        // get block overflow\n        var overflow = inputLength % this.blockSize;\n        this._cipherLength += overflow;\n        // truncate for hash function\n        this._partialOutput.truncate(this.blockSize - overflow);\n      } else {\n        this._cipherLength += this.blockSize;\n      }\n\n      // get output block for hashing\n      for(var i = 0; i < this._ints; ++i) {\n        this._outBlock[i] = this._partialOutput.getInt32();\n      }\n      this._partialOutput.read -= this.blockSize;\n    }\n\n    // skip any previous partial bytes\n    if(this._partialBytes > 0) {\n      this._partialOutput.getBytes(this._partialBytes);\n    }\n\n    if(partialBytes > 0 && !finish) {\n      // block still incomplete, restore input buffer, get partial output,\n      // and return early\n      input.read -= this.blockSize;\n      output.putBytes(this._partialOutput.getBytes(\n        partialBytes - this._partialBytes));\n      this._partialBytes = partialBytes;\n      return true;\n    }\n\n    output.putBytes(this._partialOutput.getBytes(\n      inputLength - this._partialBytes));\n    this._partialBytes = 0;\n  }\n\n  // update hash block S\n  this._s = this.ghash(this._hashSubkey, this._s, this._outBlock);\n\n  // increment counter (input block)\n  inc32(this._inBlock);\n};\n\nmodes.gcm.prototype.decrypt = function(input, output, finish) {\n  // not enough input to decrypt\n  var inputLength = input.length();\n  if(inputLength < this.blockSize && !(finish && inputLength > 0)) {\n    return true;\n  }\n\n  // encrypt block (GCM always uses encryption mode)\n  this.cipher.encrypt(this._inBlock, this._outBlock);\n\n  // increment counter (input block)\n  inc32(this._inBlock);\n\n  // update hash block S\n  this._hashBlock[0] = input.getInt32();\n  this._hashBlock[1] = input.getInt32();\n  this._hashBlock[2] = input.getInt32();\n  this._hashBlock[3] = input.getInt32();\n  this._s = this.ghash(this._hashSubkey, this._s, this._hashBlock);\n\n  // XOR hash input with output\n  for(var i = 0; i < this._ints; ++i) {\n    output.putInt32(this._outBlock[i] ^ this._hashBlock[i]);\n  }\n\n  // increment cipher data length\n  if(inputLength < this.blockSize) {\n    this._cipherLength += inputLength % this.blockSize;\n  } else {\n    this._cipherLength += this.blockSize;\n  }\n};\n\nmodes.gcm.prototype.afterFinish = function(output, options) {\n  var rval = true;\n\n  // handle overflow\n  if(options.decrypt && options.overflow) {\n    output.truncate(this.blockSize - options.overflow);\n  }\n\n  // handle authentication tag\n  this.tag = forge.util.createBuffer();\n\n  // concatenate additional data length with cipher length\n  var lengths = this._aDataLength.concat(from64To32(this._cipherLength * 8));\n\n  // include lengths in hash\n  this._s = this.ghash(this._hashSubkey, this._s, lengths);\n\n  // do GCTR(J_0, S)\n  var tag = [];\n  this.cipher.encrypt(this._j0, tag);\n  for(var i = 0; i < this._ints; ++i) {\n    this.tag.putInt32(this._s[i] ^ tag[i]);\n  }\n\n  // trim tag to length\n  this.tag.truncate(this.tag.length() % (this._tagLength / 8));\n\n  // check authentication tag\n  if(options.decrypt && this.tag.bytes() !== this._tag) {\n    rval = false;\n  }\n\n  return rval;\n};\n\n/**\n * See NIST SP-800-38D 6.3 (Algorithm 1). This function performs Galois\n * field multiplication. The field, GF(2^128), is defined by the polynomial:\n *\n * x^128 + x^7 + x^2 + x + 1\n *\n * Which is represented in little-endian binary form as: 11100001 (0xe1). When\n * the value of a coefficient is 1, a bit is set. The value R, is the\n * concatenation of this value and 120 zero bits, yielding a 128-bit value\n * which matches the block size.\n *\n * This function will multiply two elements (vectors of bytes), X and Y, in\n * the field GF(2^128). The result is initialized to zero. For each bit of\n * X (out of 128), x_i, if x_i is set, then the result is multiplied (XOR'd)\n * by the current value of Y. For each bit, the value of Y will be raised by\n * a power of x (multiplied by the polynomial x). This can be achieved by\n * shifting Y once to the right. If the current value of Y, prior to being\n * multiplied by x, has 0 as its LSB, then it is a 127th degree polynomial.\n * Otherwise, we must divide by R after shifting to find the remainder.\n *\n * @param x the first block to multiply by the second.\n * @param y the second block to multiply by the first.\n *\n * @return the block result of the multiplication.\n */\nmodes.gcm.prototype.multiply = function(x, y) {\n  var z_i = [0, 0, 0, 0];\n  var v_i = y.slice(0);\n\n  // calculate Z_128 (block has 128 bits)\n  for(var i = 0; i < 128; ++i) {\n    // if x_i is 0, Z_{i+1} = Z_i (unchanged)\n    // else Z_{i+1} = Z_i ^ V_i\n    // get x_i by finding 32-bit int position, then left shift 1 by remainder\n    var x_i = x[(i / 32) | 0] & (1 << (31 - i % 32));\n    if(x_i) {\n      z_i[0] ^= v_i[0];\n      z_i[1] ^= v_i[1];\n      z_i[2] ^= v_i[2];\n      z_i[3] ^= v_i[3];\n    }\n\n    // if LSB(V_i) is 1, V_i = V_i >> 1\n    // else V_i = (V_i >> 1) ^ R\n    this.pow(v_i, v_i);\n  }\n\n  return z_i;\n};\n\nmodes.gcm.prototype.pow = function(x, out) {\n  // if LSB(x) is 1, x = x >>> 1\n  // else x = (x >>> 1) ^ R\n  var lsb = x[3] & 1;\n\n  // always do x >>> 1:\n  // starting with the rightmost integer, shift each integer to the right\n  // one bit, pulling in the bit from the integer to the left as its top\n  // most bit (do this for the last 3 integers)\n  for(var i = 3; i > 0; --i) {\n    out[i] = (x[i] >>> 1) | ((x[i - 1] & 1) << 31);\n  }\n  // shift the first integer normally\n  out[0] = x[0] >>> 1;\n\n  // if lsb was not set, then polynomial had a degree of 127 and doesn't\n  // need to divided; otherwise, XOR with R to find the remainder; we only\n  // need to XOR the first integer since R technically ends w/120 zero bits\n  if(lsb) {\n    out[0] ^= this._R;\n  }\n};\n\nmodes.gcm.prototype.tableMultiply = function(x) {\n  // assumes 4-bit tables are used\n  var z = [0, 0, 0, 0];\n  for(var i = 0; i < 32; ++i) {\n    var idx = (i / 8) | 0;\n    var x_i = (x[idx] >>> ((7 - (i % 8)) * 4)) & 0xF;\n    var ah = this._m[i][x_i];\n    z[0] ^= ah[0];\n    z[1] ^= ah[1];\n    z[2] ^= ah[2];\n    z[3] ^= ah[3];\n  }\n  return z;\n};\n\n/**\n * A continuing version of the GHASH algorithm that operates on a single\n * block. The hash block, last hash value (Ym) and the new block to hash\n * are given.\n *\n * @param h the hash block.\n * @param y the previous value for Ym, use [0, 0, 0, 0] for a new hash.\n * @param x the block to hash.\n *\n * @return the hashed value (Ym).\n */\nmodes.gcm.prototype.ghash = function(h, y, x) {\n  y[0] ^= x[0];\n  y[1] ^= x[1];\n  y[2] ^= x[2];\n  y[3] ^= x[3];\n  return this.tableMultiply(y);\n  //return this.multiply(y, h);\n};\n\n/**\n * Precomputes a table for multiplying against the hash subkey. This\n * mechanism provides a substantial speed increase over multiplication\n * performed without a table. The table-based multiplication this table is\n * for solves X * H by multiplying each component of X by H and then\n * composing the results together using XOR.\n *\n * This function can be used to generate tables with different bit sizes\n * for the components, however, this implementation assumes there are\n * 32 components of X (which is a 16 byte vector), therefore each component\n * takes 4-bits (so the table is constructed with bits=4).\n *\n * @param h the hash subkey.\n * @param bits the bit size for a component.\n */\nmodes.gcm.prototype.generateHashTable = function(h, bits) {\n  // TODO: There are further optimizations that would use only the\n  // first table M_0 (or some variant) along with a remainder table;\n  // this can be explored in the future\n  var multiplier = 8 / bits;\n  var perInt = 4 * multiplier;\n  var size = 16 * multiplier;\n  var m = new Array(size);\n  for(var i = 0; i < size; ++i) {\n    var tmp = [0, 0, 0, 0];\n    var idx = (i / perInt) | 0;\n    var shft = ((perInt - 1 - (i % perInt)) * bits);\n    tmp[idx] = (1 << (bits - 1)) << shft;\n    m[i] = this.generateSubHashTable(this.multiply(tmp, h), bits);\n  }\n  return m;\n};\n\n/**\n * Generates a table for multiplying against the hash subkey for one\n * particular component (out of all possible component values).\n *\n * @param mid the pre-multiplied value for the middle key of the table.\n * @param bits the bit size for a component.\n */\nmodes.gcm.prototype.generateSubHashTable = function(mid, bits) {\n  // compute the table quickly by minimizing the number of\n  // POW operations -- they only need to be performed for powers of 2,\n  // all other entries can be composed from those powers using XOR\n  var size = 1 << bits;\n  var half = size >>> 1;\n  var m = new Array(size);\n  m[half] = mid.slice(0);\n  var i = half >>> 1;\n  while(i > 0) {\n    // raise m0[2 * i] and store in m0[i]\n    this.pow(m[2 * i], m[i] = []);\n    i >>= 1;\n  }\n  i = 2;\n  while(i < half) {\n    for(var j = 1; j < i; ++j) {\n      var m_i = m[i];\n      var m_j = m[j];\n      m[i + j] = [\n        m_i[0] ^ m_j[0],\n        m_i[1] ^ m_j[1],\n        m_i[2] ^ m_j[2],\n        m_i[3] ^ m_j[3]\n      ];\n    }\n    i *= 2;\n  }\n  m[0] = [0, 0, 0, 0];\n  /* Note: We could avoid storing these by doing composition during multiply\n  calculate top half using composition by speed is preferred. */\n  for(i = half + 1; i < size; ++i) {\n    var c = m[i ^ half];\n    m[i] = [mid[0] ^ c[0], mid[1] ^ c[1], mid[2] ^ c[2], mid[3] ^ c[3]];\n  }\n  return m;\n};\n\n/** Utility functions */\n\nfunction transformIV(iv, blockSize) {\n  if(typeof iv === 'string') {\n    // convert iv string into byte buffer\n    iv = forge.util.createBuffer(iv);\n  }\n\n  if(forge.util.isArray(iv) && iv.length > 4) {\n    // convert iv byte array into byte buffer\n    var tmp = iv;\n    iv = forge.util.createBuffer();\n    for(var i = 0; i < tmp.length; ++i) {\n      iv.putByte(tmp[i]);\n    }\n  }\n\n  if(iv.length() < blockSize) {\n    throw new Error(\n      'Invalid IV length; got ' + iv.length() +\n      ' bytes and expected ' + blockSize + ' bytes.');\n  }\n\n  if(!forge.util.isArray(iv)) {\n    // convert iv byte buffer into 32-bit integer array\n    var ints = [];\n    var blocks = blockSize / 4;\n    for(var i = 0; i < blocks; ++i) {\n      ints.push(iv.getInt32());\n    }\n    iv = ints;\n  }\n\n  return iv;\n}\n\nfunction inc32(block) {\n  // increment last 32 bits of block only\n  block[block.length - 1] = (block[block.length - 1] + 1) & 0xFFFFFFFF;\n}\n\nfunction from64To32(num) {\n  // convert 64-bit number to two BE Int32s\n  return [(num / 0x100000000) | 0, num & 0xFFFFFFFF];\n}\n","/**\n * DES (Data Encryption Standard) implementation.\n *\n * This implementation supports DES as well as 3DES-EDE in ECB and CBC mode.\n * It is based on the BSD-licensed implementation by Paul Tero:\n *\n * Paul Tero, July 2001\n * http://www.tero.co.uk/des/\n *\n * Optimised for performance with large blocks by\n * Michael Hayworth, November 2001\n * http://www.netdealing.com\n *\n * THIS SOFTWARE IS PROVIDED \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2012-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./cipher');\nrequire('./cipherModes');\nrequire('./util');\n\n/* DES API */\nmodule.exports = forge.des = forge.des || {};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('DES-<mode>', key);\n * cipher.start({iv: iv});\n *\n * Creates an DES cipher object to encrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as binary-encoded strings of bytes or\n * byte buffers.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC' if IV is\n *          given, 'ECB' if null).\n *\n * @return the cipher.\n */\nforge.des.startEncrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: false,\n    mode: mode || (iv === null ? 'ECB' : 'CBC')\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var cipher = forge.cipher.createCipher('DES-<mode>', key);\n *\n * Creates an DES cipher object to encrypt data using the given symmetric key.\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.des.createEncryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: false,\n    mode: mode\n  });\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('DES-<mode>', key);\n * decipher.start({iv: iv});\n *\n * Creates an DES cipher object to decrypt data using the given symmetric key.\n * The output will be stored in the 'output' member of the returned cipher.\n *\n * The key and iv may be given as binary-encoded strings of bytes or\n * byte buffers.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n * @param mode the cipher mode to use (default: 'CBC' if IV is\n *          given, 'ECB' if null).\n *\n * @return the cipher.\n */\nforge.des.startDecrypting = function(key, iv, output, mode) {\n  var cipher = _createCipher({\n    key: key,\n    output: output,\n    decrypt: true,\n    mode: mode || (iv === null ? 'ECB' : 'CBC')\n  });\n  cipher.start(iv);\n  return cipher;\n};\n\n/**\n * Deprecated. Instead, use:\n *\n * var decipher = forge.cipher.createDecipher('DES-<mode>', key);\n *\n * Creates an DES cipher object to decrypt data using the given symmetric key.\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param key the symmetric key to use (64 or 192 bits).\n * @param mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nforge.des.createDecryptionCipher = function(key, mode) {\n  return _createCipher({\n    key: key,\n    output: null,\n    decrypt: true,\n    mode: mode\n  });\n};\n\n/**\n * Creates a new DES cipher algorithm object.\n *\n * @param name the name of the algorithm.\n * @param mode the mode factory function.\n *\n * @return the DES algorithm object.\n */\nforge.des.Algorithm = function(name, mode) {\n  var self = this;\n  self.name = name;\n  self.mode = new mode({\n    blockSize: 8,\n    cipher: {\n      encrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._keys, inBlock, outBlock, false);\n      },\n      decrypt: function(inBlock, outBlock) {\n        return _updateBlock(self._keys, inBlock, outBlock, true);\n      }\n    }\n  });\n  self._init = false;\n};\n\n/**\n * Initializes this DES algorithm by expanding its key.\n *\n * @param options the options to use.\n *          key the key to use with this algorithm.\n *          decrypt true if the algorithm should be initialized for decryption,\n *            false for encryption.\n */\nforge.des.Algorithm.prototype.initialize = function(options) {\n  if(this._init) {\n    return;\n  }\n\n  var key = forge.util.createBuffer(options.key);\n  if(this.name.indexOf('3DES') === 0) {\n    if(key.length() !== 24) {\n      throw new Error('Invalid Triple-DES key size: ' + key.length() * 8);\n    }\n  }\n\n  // do key expansion to 16 or 48 subkeys (single or triple DES)\n  this._keys = _createKeys(key);\n  this._init = true;\n};\n\n/** Register DES algorithms **/\n\nregisterAlgorithm('DES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('DES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('DES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('DES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('DES-CTR', forge.cipher.modes.ctr);\n\nregisterAlgorithm('3DES-ECB', forge.cipher.modes.ecb);\nregisterAlgorithm('3DES-CBC', forge.cipher.modes.cbc);\nregisterAlgorithm('3DES-CFB', forge.cipher.modes.cfb);\nregisterAlgorithm('3DES-OFB', forge.cipher.modes.ofb);\nregisterAlgorithm('3DES-CTR', forge.cipher.modes.ctr);\n\nfunction registerAlgorithm(name, mode) {\n  var factory = function() {\n    return new forge.des.Algorithm(name, mode);\n  };\n  forge.cipher.registerAlgorithm(name, factory);\n}\n\n/** DES implementation **/\n\nvar spfunction1 = [0x1010400,0,0x10000,0x1010404,0x1010004,0x10404,0x4,0x10000,0x400,0x1010400,0x1010404,0x400,0x1000404,0x1010004,0x1000000,0x4,0x404,0x1000400,0x1000400,0x10400,0x10400,0x1010000,0x1010000,0x1000404,0x10004,0x1000004,0x1000004,0x10004,0,0x404,0x10404,0x1000000,0x10000,0x1010404,0x4,0x1010000,0x1010400,0x1000000,0x1000000,0x400,0x1010004,0x10000,0x10400,0x1000004,0x400,0x4,0x1000404,0x10404,0x1010404,0x10004,0x1010000,0x1000404,0x1000004,0x404,0x10404,0x1010400,0x404,0x1000400,0x1000400,0,0x10004,0x10400,0,0x1010004];\nvar spfunction2 = [-0x7fef7fe0,-0x7fff8000,0x8000,0x108020,0x100000,0x20,-0x7fefffe0,-0x7fff7fe0,-0x7fffffe0,-0x7fef7fe0,-0x7fef8000,-0x80000000,-0x7fff8000,0x100000,0x20,-0x7fefffe0,0x108000,0x100020,-0x7fff7fe0,0,-0x80000000,0x8000,0x108020,-0x7ff00000,0x100020,-0x7fffffe0,0,0x108000,0x8020,-0x7fef8000,-0x7ff00000,0x8020,0,0x108020,-0x7fefffe0,0x100000,-0x7fff7fe0,-0x7ff00000,-0x7fef8000,0x8000,-0x7ff00000,-0x7fff8000,0x20,-0x7fef7fe0,0x108020,0x20,0x8000,-0x80000000,0x8020,-0x7fef8000,0x100000,-0x7fffffe0,0x100020,-0x7fff7fe0,-0x7fffffe0,0x100020,0x108000,0,-0x7fff8000,0x8020,-0x80000000,-0x7fefffe0,-0x7fef7fe0,0x108000];\nvar spfunction3 = [0x208,0x8020200,0,0x8020008,0x8000200,0,0x20208,0x8000200,0x20008,0x8000008,0x8000008,0x20000,0x8020208,0x20008,0x8020000,0x208,0x8000000,0x8,0x8020200,0x200,0x20200,0x8020000,0x8020008,0x20208,0x8000208,0x20200,0x20000,0x8000208,0x8,0x8020208,0x200,0x8000000,0x8020200,0x8000000,0x20008,0x208,0x20000,0x8020200,0x8000200,0,0x200,0x20008,0x8020208,0x8000200,0x8000008,0x200,0,0x8020008,0x8000208,0x20000,0x8000000,0x8020208,0x8,0x20208,0x20200,0x8000008,0x8020000,0x8000208,0x208,0x8020000,0x20208,0x8,0x8020008,0x20200];\nvar spfunction4 = [0x802001,0x2081,0x2081,0x80,0x802080,0x800081,0x800001,0x2001,0,0x802000,0x802000,0x802081,0x81,0,0x800080,0x800001,0x1,0x2000,0x800000,0x802001,0x80,0x800000,0x2001,0x2080,0x800081,0x1,0x2080,0x800080,0x2000,0x802080,0x802081,0x81,0x800080,0x800001,0x802000,0x802081,0x81,0,0,0x802000,0x2080,0x800080,0x800081,0x1,0x802001,0x2081,0x2081,0x80,0x802081,0x81,0x1,0x2000,0x800001,0x2001,0x802080,0x800081,0x2001,0x2080,0x800000,0x802001,0x80,0x800000,0x2000,0x802080];\nvar spfunction5 = [0x100,0x2080100,0x2080000,0x42000100,0x80000,0x100,0x40000000,0x2080000,0x40080100,0x80000,0x2000100,0x40080100,0x42000100,0x42080000,0x80100,0x40000000,0x2000000,0x40080000,0x40080000,0,0x40000100,0x42080100,0x42080100,0x2000100,0x42080000,0x40000100,0,0x42000000,0x2080100,0x2000000,0x42000000,0x80100,0x80000,0x42000100,0x100,0x2000000,0x40000000,0x2080000,0x42000100,0x40080100,0x2000100,0x40000000,0x42080000,0x2080100,0x40080100,0x100,0x2000000,0x42080000,0x42080100,0x80100,0x42000000,0x42080100,0x2080000,0,0x40080000,0x42000000,0x80100,0x2000100,0x40000100,0x80000,0,0x40080000,0x2080100,0x40000100];\nvar spfunction6 = [0x20000010,0x20400000,0x4000,0x20404010,0x20400000,0x10,0x20404010,0x400000,0x20004000,0x404010,0x400000,0x20000010,0x400010,0x20004000,0x20000000,0x4010,0,0x400010,0x20004010,0x4000,0x404000,0x20004010,0x10,0x20400010,0x20400010,0,0x404010,0x20404000,0x4010,0x404000,0x20404000,0x20000000,0x20004000,0x10,0x20400010,0x404000,0x20404010,0x400000,0x4010,0x20000010,0x400000,0x20004000,0x20000000,0x4010,0x20000010,0x20404010,0x404000,0x20400000,0x404010,0x20404000,0,0x20400010,0x10,0x4000,0x20400000,0x404010,0x4000,0x400010,0x20004010,0,0x20404000,0x20000000,0x400010,0x20004010];\nvar spfunction7 = [0x200000,0x4200002,0x4000802,0,0x800,0x4000802,0x200802,0x4200800,0x4200802,0x200000,0,0x4000002,0x2,0x4000000,0x4200002,0x802,0x4000800,0x200802,0x200002,0x4000800,0x4000002,0x4200000,0x4200800,0x200002,0x4200000,0x800,0x802,0x4200802,0x200800,0x2,0x4000000,0x200800,0x4000000,0x200800,0x200000,0x4000802,0x4000802,0x4200002,0x4200002,0x2,0x200002,0x4000000,0x4000800,0x200000,0x4200800,0x802,0x200802,0x4200800,0x802,0x4000002,0x4200802,0x4200000,0x200800,0,0x2,0x4200802,0,0x200802,0x4200000,0x800,0x4000002,0x4000800,0x800,0x200002];\nvar spfunction8 = [0x10001040,0x1000,0x40000,0x10041040,0x10000000,0x10001040,0x40,0x10000000,0x40040,0x10040000,0x10041040,0x41000,0x10041000,0x41040,0x1000,0x40,0x10040000,0x10000040,0x10001000,0x1040,0x41000,0x40040,0x10040040,0x10041000,0x1040,0,0,0x10040040,0x10000040,0x10001000,0x41040,0x40000,0x41040,0x40000,0x10041000,0x1000,0x40,0x10040040,0x1000,0x41040,0x10001000,0x40,0x10000040,0x10040000,0x10040040,0x10000000,0x40000,0x10001040,0,0x10041040,0x40040,0x10000040,0x10040000,0x10001000,0x10001040,0,0x10041040,0x41000,0x41000,0x1040,0x1040,0x40040,0x10000000,0x10041000];\n\n/**\n * Create necessary sub keys.\n *\n * @param key the 64-bit or 192-bit key.\n *\n * @return the expanded keys.\n */\nfunction _createKeys(key) {\n  var pc2bytes0  = [0,0x4,0x20000000,0x20000004,0x10000,0x10004,0x20010000,0x20010004,0x200,0x204,0x20000200,0x20000204,0x10200,0x10204,0x20010200,0x20010204],\n      pc2bytes1  = [0,0x1,0x100000,0x100001,0x4000000,0x4000001,0x4100000,0x4100001,0x100,0x101,0x100100,0x100101,0x4000100,0x4000101,0x4100100,0x4100101],\n      pc2bytes2  = [0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808,0,0x8,0x800,0x808,0x1000000,0x1000008,0x1000800,0x1000808],\n      pc2bytes3  = [0,0x200000,0x8000000,0x8200000,0x2000,0x202000,0x8002000,0x8202000,0x20000,0x220000,0x8020000,0x8220000,0x22000,0x222000,0x8022000,0x8222000],\n      pc2bytes4  = [0,0x40000,0x10,0x40010,0,0x40000,0x10,0x40010,0x1000,0x41000,0x1010,0x41010,0x1000,0x41000,0x1010,0x41010],\n      pc2bytes5  = [0,0x400,0x20,0x420,0,0x400,0x20,0x420,0x2000000,0x2000400,0x2000020,0x2000420,0x2000000,0x2000400,0x2000020,0x2000420],\n      pc2bytes6  = [0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002,0,0x10000000,0x80000,0x10080000,0x2,0x10000002,0x80002,0x10080002],\n      pc2bytes7  = [0,0x10000,0x800,0x10800,0x20000000,0x20010000,0x20000800,0x20010800,0x20000,0x30000,0x20800,0x30800,0x20020000,0x20030000,0x20020800,0x20030800],\n      pc2bytes8  = [0,0x40000,0,0x40000,0x2,0x40002,0x2,0x40002,0x2000000,0x2040000,0x2000000,0x2040000,0x2000002,0x2040002,0x2000002,0x2040002],\n      pc2bytes9  = [0,0x10000000,0x8,0x10000008,0,0x10000000,0x8,0x10000008,0x400,0x10000400,0x408,0x10000408,0x400,0x10000400,0x408,0x10000408],\n      pc2bytes10 = [0,0x20,0,0x20,0x100000,0x100020,0x100000,0x100020,0x2000,0x2020,0x2000,0x2020,0x102000,0x102020,0x102000,0x102020],\n      pc2bytes11 = [0,0x1000000,0x200,0x1000200,0x200000,0x1200000,0x200200,0x1200200,0x4000000,0x5000000,0x4000200,0x5000200,0x4200000,0x5200000,0x4200200,0x5200200],\n      pc2bytes12 = [0,0x1000,0x8000000,0x8001000,0x80000,0x81000,0x8080000,0x8081000,0x10,0x1010,0x8000010,0x8001010,0x80010,0x81010,0x8080010,0x8081010],\n      pc2bytes13 = [0,0x4,0x100,0x104,0,0x4,0x100,0x104,0x1,0x5,0x101,0x105,0x1,0x5,0x101,0x105];\n\n  // how many iterations (1 for des, 3 for triple des)\n  // changed by Paul 16/6/2007 to use Triple DES for 9+ byte keys\n  var iterations = key.length() > 8 ? 3 : 1;\n\n  // stores the return keys\n  var keys = [];\n\n  // now define the left shifts which need to be done\n  var shifts = [0, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0];\n\n  var n = 0, tmp;\n  for(var j = 0; j < iterations; j++) {\n    var left = key.getInt32();\n    var right = key.getInt32();\n\n    tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n    right ^= tmp;\n    left ^= (tmp << 4);\n\n    tmp = ((right >>> -16) ^ left) & 0x0000ffff;\n    left ^= tmp;\n    right ^= (tmp << -16);\n\n    tmp = ((left >>> 2) ^ right) & 0x33333333;\n    right ^= tmp;\n    left ^= (tmp << 2);\n\n    tmp = ((right >>> -16) ^ left) & 0x0000ffff;\n    left ^= tmp;\n    right ^= (tmp << -16);\n\n    tmp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= tmp;\n    left ^= (tmp << 1);\n\n    tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n    left ^= tmp;\n    right ^= (tmp << 8);\n\n    tmp = ((left >>> 1) ^ right) & 0x55555555;\n    right ^= tmp;\n    left ^= (tmp << 1);\n\n    // right needs to be shifted and OR'd with last four bits of left\n    tmp = (left << 8) | ((right >>> 20) & 0x000000f0);\n\n    // left needs to be put upside down\n    left = ((right << 24) | ((right << 8) & 0xff0000) |\n      ((right >>> 8) & 0xff00) | ((right >>> 24) & 0xf0));\n    right = tmp;\n\n    // now go through and perform these shifts on the left and right keys\n    for(var i = 0; i < shifts.length; ++i) {\n      //shift the keys either one or two bits to the left\n      if(shifts[i]) {\n        left = (left << 2) | (left >>> 26);\n        right = (right << 2) | (right >>> 26);\n      } else {\n        left = (left << 1) | (left >>> 27);\n        right = (right << 1) | (right >>> 27);\n      }\n      left &= -0xf;\n      right &= -0xf;\n\n      // now apply PC-2, in such a way that E is easier when encrypting or\n      // decrypting this conversion will look like PC-2 except only the last 6\n      // bits of each byte are used rather than 48 consecutive bits and the\n      // order of lines will be according to how the S selection functions will\n      // be applied: S2, S4, S6, S8, S1, S3, S5, S7\n      var lefttmp = (\n        pc2bytes0[left >>> 28] | pc2bytes1[(left >>> 24) & 0xf] |\n        pc2bytes2[(left >>> 20) & 0xf] | pc2bytes3[(left >>> 16) & 0xf] |\n        pc2bytes4[(left >>> 12) & 0xf] | pc2bytes5[(left >>> 8) & 0xf] |\n        pc2bytes6[(left >>> 4) & 0xf]);\n      var righttmp = (\n        pc2bytes7[right >>> 28] | pc2bytes8[(right >>> 24) & 0xf] |\n        pc2bytes9[(right >>> 20) & 0xf] | pc2bytes10[(right >>> 16) & 0xf] |\n        pc2bytes11[(right >>> 12) & 0xf] | pc2bytes12[(right >>> 8) & 0xf] |\n        pc2bytes13[(right >>> 4) & 0xf]);\n      tmp = ((righttmp >>> 16) ^ lefttmp) & 0x0000ffff;\n      keys[n++] = lefttmp ^ tmp;\n      keys[n++] = righttmp ^ (tmp << 16);\n    }\n  }\n\n  return keys;\n}\n\n/**\n * Updates a single block (1 byte) using DES. The update will either\n * encrypt or decrypt the block.\n *\n * @param keys the expanded keys.\n * @param input the input block (an array of 32-bit words).\n * @param output the updated output block.\n * @param decrypt true to decrypt the block, false to encrypt it.\n */\nfunction _updateBlock(keys, input, output, decrypt) {\n  // set up loops for single or triple DES\n  var iterations = keys.length === 32 ? 3 : 9;\n  var looping;\n  if(iterations === 3) {\n    looping = decrypt ? [30, -2, -2] : [0, 32, 2];\n  } else {\n    looping = (decrypt ?\n      [94, 62, -2, 32, 64, 2, 30, -2, -2] :\n      [0, 32, 2, 62, 30, -2, 64, 96, 2]);\n  }\n\n  var tmp;\n\n  var left = input[0];\n  var right = input[1];\n\n  // first each 64 bit chunk of the message must be permuted according to IP\n  tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n  right ^= tmp;\n  left ^= (tmp << 4);\n\n  tmp = ((left >>> 16) ^ right) & 0x0000ffff;\n  right ^= tmp;\n  left ^= (tmp << 16);\n\n  tmp = ((right >>> 2) ^ left) & 0x33333333;\n  left ^= tmp;\n  right ^= (tmp << 2);\n\n  tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n  left ^= tmp;\n  right ^= (tmp << 8);\n\n  tmp = ((left >>> 1) ^ right) & 0x55555555;\n  right ^= tmp;\n  left ^= (tmp << 1);\n\n  // rotate left 1 bit\n  left = ((left << 1) | (left >>> 31));\n  right = ((right << 1) | (right >>> 31));\n\n  for(var j = 0; j < iterations; j += 3) {\n    var endloop = looping[j + 1];\n    var loopinc = looping[j + 2];\n\n    // now go through and perform the encryption or decryption\n    for(var i = looping[j]; i != endloop; i += loopinc) {\n      var right1 = right ^ keys[i];\n      var right2 = ((right >>> 4) | (right << 28)) ^ keys[i + 1];\n\n      // passing these bytes through the S selection functions\n      tmp = left;\n      left = right;\n      right = tmp ^ (\n        spfunction2[(right1 >>> 24) & 0x3f] |\n        spfunction4[(right1 >>> 16) & 0x3f] |\n        spfunction6[(right1 >>>  8) & 0x3f] |\n        spfunction8[right1 & 0x3f] |\n        spfunction1[(right2 >>> 24) & 0x3f] |\n        spfunction3[(right2 >>> 16) & 0x3f] |\n        spfunction5[(right2 >>>  8) & 0x3f] |\n        spfunction7[right2 & 0x3f]);\n    }\n    // unreverse left and right\n    tmp = left;\n    left = right;\n    right = tmp;\n  }\n\n  // rotate right 1 bit\n  left = ((left >>> 1) | (left << 31));\n  right = ((right >>> 1) | (right << 31));\n\n  // now perform IP-1, which is IP in the opposite direction\n  tmp = ((left >>> 1) ^ right) & 0x55555555;\n  right ^= tmp;\n  left ^= (tmp << 1);\n\n  tmp = ((right >>> 8) ^ left) & 0x00ff00ff;\n  left ^= tmp;\n  right ^= (tmp << 8);\n\n  tmp = ((right >>> 2) ^ left) & 0x33333333;\n  left ^= tmp;\n  right ^= (tmp << 2);\n\n  tmp = ((left >>> 16) ^ right) & 0x0000ffff;\n  right ^= tmp;\n  left ^= (tmp << 16);\n\n  tmp = ((left >>> 4) ^ right) & 0x0f0f0f0f;\n  right ^= tmp;\n  left ^= (tmp << 4);\n\n  output[0] = left;\n  output[1] = right;\n}\n\n/**\n * Deprecated. Instead, use:\n *\n * forge.cipher.createCipher('DES-<mode>', key);\n * forge.cipher.createDecipher('DES-<mode>', key);\n *\n * Creates a deprecated DES cipher object. This object's mode will default to\n * CBC (cipher-block-chaining).\n *\n * The key may be given as a binary-encoded string of bytes or a byte buffer.\n *\n * @param options the options to use.\n *          key the symmetric key to use (64 or 192 bits).\n *          output the buffer to write to.\n *          decrypt true for decryption, false for encryption.\n *          mode the cipher mode to use (default: 'CBC').\n *\n * @return the cipher.\n */\nfunction _createCipher(options) {\n  options = options || {};\n  var mode = (options.mode || 'CBC').toUpperCase();\n  var algorithm = 'DES-' + mode;\n\n  var cipher;\n  if(options.decrypt) {\n    cipher = forge.cipher.createDecipher(algorithm, options.key);\n  } else {\n    cipher = forge.cipher.createCipher(algorithm, options.key);\n  }\n\n  // backwards compatible start API\n  var start = cipher.start;\n  cipher.start = function(iv, options) {\n    // backwards compatibility: support second arg as output buffer\n    var output = null;\n    if(options instanceof forge.util.ByteBuffer) {\n      output = options;\n      options = {};\n    }\n    options = options || {};\n    options.output = output;\n    options.iv = iv;\n    start.call(cipher, options);\n  };\n\n  return cipher;\n}\n","/**\n * JavaScript implementation of Ed25519.\n *\n * Copyright (c) 2017-2019 Digital Bazaar, Inc.\n *\n * This implementation is based on the most excellent TweetNaCl which is\n * in the public domain. Many thanks to its contributors:\n *\n * https://github.com/dchest/tweetnacl-js\n */\nvar forge = require('./forge');\nrequire('./jsbn');\nrequire('./random');\nrequire('./sha512');\nrequire('./util');\nvar asn1Validator = require('./asn1-validator');\nvar publicKeyValidator = asn1Validator.publicKeyValidator;\nvar privateKeyValidator = asn1Validator.privateKeyValidator;\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\nvar ByteBuffer = forge.util.ByteBuffer;\nvar NativeBuffer = typeof Buffer === 'undefined' ? Uint8Array : Buffer;\n\n/*\n * Ed25519 algorithms, see RFC 8032:\n * https://tools.ietf.org/html/rfc8032\n */\nforge.pki = forge.pki || {};\nmodule.exports = forge.pki.ed25519 = forge.ed25519 = forge.ed25519 || {};\nvar ed25519 = forge.ed25519;\n\ned25519.constants = {};\ned25519.constants.PUBLIC_KEY_BYTE_LENGTH = 32;\ned25519.constants.PRIVATE_KEY_BYTE_LENGTH = 64;\ned25519.constants.SEED_BYTE_LENGTH = 32;\ned25519.constants.SIGN_BYTE_LENGTH = 64;\ned25519.constants.HASH_BYTE_LENGTH = 64;\n\ned25519.generateKeyPair = function(options) {\n  options = options || {};\n  var seed = options.seed;\n  if(seed === undefined) {\n    // generate seed\n    seed = forge.random.getBytesSync(ed25519.constants.SEED_BYTE_LENGTH);\n  } else if(typeof seed === 'string') {\n    if(seed.length !== ed25519.constants.SEED_BYTE_LENGTH) {\n      throw new TypeError(\n        '\"seed\" must be ' + ed25519.constants.SEED_BYTE_LENGTH +\n        ' bytes in length.');\n    }\n  } else if(!(seed instanceof Uint8Array)) {\n    throw new TypeError(\n      '\"seed\" must be a node.js Buffer, Uint8Array, or a binary string.');\n  }\n\n  seed = messageToNativeBuffer({message: seed, encoding: 'binary'});\n\n  var pk = new NativeBuffer(ed25519.constants.PUBLIC_KEY_BYTE_LENGTH);\n  var sk = new NativeBuffer(ed25519.constants.PRIVATE_KEY_BYTE_LENGTH);\n  for(var i = 0; i < 32; ++i) {\n    sk[i] = seed[i];\n  }\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, privateKey: sk};\n};\n\n/**\n * Converts a private key from a RFC8410 ASN.1 encoding.\n *\n * @param obj - The asn1 representation of a private key.\n *\n * @returns {Object} keyInfo - The key information.\n * @returns {Buffer|Uint8Array} keyInfo.privateKeyBytes - 32 private key bytes.\n */\ned25519.privateKeyFromAsn1 = function(obj) {\n  var capture = {};\n  var errors = [];\n  var valid = forge.asn1.validate(obj, privateKeyValidator, capture, errors);\n  if(!valid) {\n    var error = new Error('Invalid Key.');\n    error.errors = errors;\n    throw error;\n  }\n  var oid = forge.asn1.derToOid(capture.privateKeyOid);\n  var ed25519Oid = forge.oids.EdDSA25519;\n  if(oid !== ed25519Oid) {\n    throw new Error('Invalid OID \"' + oid + '\"; OID must be \"' +\n      ed25519Oid + '\".');\n  }\n  var privateKey = capture.privateKey;\n  // manually extract the private key bytes from nested octet string, see FIXME:\n  // https://github.com/digitalbazaar/forge/blob/master/lib/asn1.js#L542\n  var privateKeyBytes = messageToNativeBuffer({\n    message: forge.asn1.fromDer(privateKey).value,\n    encoding: 'binary'\n  });\n  // TODO: RFC8410 specifies a format for encoding the public key bytes along\n  // with the private key bytes. `publicKeyBytes` can be returned in the\n  // future. https://tools.ietf.org/html/rfc8410#section-10.3\n  return {privateKeyBytes: privateKeyBytes};\n};\n\n/**\n * Converts a public key from a RFC8410 ASN.1 encoding.\n *\n * @param obj - The asn1 representation of a public key.\n *\n * @return {Buffer|Uint8Array} - 32 public key bytes.\n */\ned25519.publicKeyFromAsn1 = function(obj) {\n  // get SubjectPublicKeyInfo\n  var capture = {};\n  var errors = [];\n  var valid = forge.asn1.validate(obj, publicKeyValidator, capture, errors);\n  if(!valid) {\n    var error = new Error('Invalid Key.');\n    error.errors = errors;\n    throw error;\n  }\n  var oid = forge.asn1.derToOid(capture.publicKeyOid);\n  var ed25519Oid = forge.oids.EdDSA25519;\n  if(oid !== ed25519Oid) {\n    throw new Error('Invalid OID \"' + oid + '\"; OID must be \"' +\n      ed25519Oid + '\".');\n  }\n  var publicKeyBytes = capture.ed25519PublicKey;\n  if(publicKeyBytes.length !== ed25519.constants.PUBLIC_KEY_BYTE_LENGTH) {\n    throw new Error('Key length is invalid.');\n  }\n  return messageToNativeBuffer({\n    message: publicKeyBytes,\n    encoding: 'binary'\n  });\n};\n\ned25519.publicKeyFromPrivateKey = function(options) {\n  options = options || {};\n  var privateKey = messageToNativeBuffer({\n    message: options.privateKey, encoding: 'binary'\n  });\n  if(privateKey.length !== ed25519.constants.PRIVATE_KEY_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.privateKey\" must have a byte length of ' +\n      ed25519.constants.PRIVATE_KEY_BYTE_LENGTH);\n  }\n\n  var pk = new NativeBuffer(ed25519.constants.PUBLIC_KEY_BYTE_LENGTH);\n  for(var i = 0; i < pk.length; ++i) {\n    pk[i] = privateKey[32 + i];\n  }\n  return pk;\n};\n\ned25519.sign = function(options) {\n  options = options || {};\n  var msg = messageToNativeBuffer(options);\n  var privateKey = messageToNativeBuffer({\n    message: options.privateKey,\n    encoding: 'binary'\n  });\n  if(privateKey.length === ed25519.constants.SEED_BYTE_LENGTH) {\n    var keyPair = ed25519.generateKeyPair({seed: privateKey});\n    privateKey = keyPair.privateKey;\n  } else if(privateKey.length !== ed25519.constants.PRIVATE_KEY_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.privateKey\" must have a byte length of ' +\n      ed25519.constants.SEED_BYTE_LENGTH + ' or ' +\n      ed25519.constants.PRIVATE_KEY_BYTE_LENGTH);\n  }\n\n  var signedMsg = new NativeBuffer(\n    ed25519.constants.SIGN_BYTE_LENGTH + msg.length);\n  crypto_sign(signedMsg, msg, msg.length, privateKey);\n\n  var sig = new NativeBuffer(ed25519.constants.SIGN_BYTE_LENGTH);\n  for(var i = 0; i < sig.length; ++i) {\n    sig[i] = signedMsg[i];\n  }\n  return sig;\n};\n\ned25519.verify = function(options) {\n  options = options || {};\n  var msg = messageToNativeBuffer(options);\n  if(options.signature === undefined) {\n    throw new TypeError(\n      '\"options.signature\" must be a node.js Buffer, a Uint8Array, a forge ' +\n      'ByteBuffer, or a binary string.');\n  }\n  var sig = messageToNativeBuffer({\n    message: options.signature,\n    encoding: 'binary'\n  });\n  if(sig.length !== ed25519.constants.SIGN_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.signature\" must have a byte length of ' +\n      ed25519.constants.SIGN_BYTE_LENGTH);\n  }\n  var publicKey = messageToNativeBuffer({\n    message: options.publicKey,\n    encoding: 'binary'\n  });\n  if(publicKey.length !== ed25519.constants.PUBLIC_KEY_BYTE_LENGTH) {\n    throw new TypeError(\n      '\"options.publicKey\" must have a byte length of ' +\n      ed25519.constants.PUBLIC_KEY_BYTE_LENGTH);\n  }\n\n  var sm = new NativeBuffer(ed25519.constants.SIGN_BYTE_LENGTH + msg.length);\n  var m = new NativeBuffer(ed25519.constants.SIGN_BYTE_LENGTH + msg.length);\n  var i;\n  for(i = 0; i < ed25519.constants.SIGN_BYTE_LENGTH; ++i) {\n    sm[i] = sig[i];\n  }\n  for(i = 0; i < msg.length; ++i) {\n    sm[i + ed25519.constants.SIGN_BYTE_LENGTH] = msg[i];\n  }\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nfunction messageToNativeBuffer(options) {\n  var message = options.message;\n  if(message instanceof Uint8Array || message instanceof NativeBuffer) {\n    return message;\n  }\n\n  var encoding = options.encoding;\n  if(message === undefined) {\n    if(options.md) {\n      // TODO: more rigorous validation that `md` is a MessageDigest\n      message = options.md.digest().getBytes();\n      encoding = 'binary';\n    } else {\n      throw new TypeError('\"options.message\" or \"options.md\" not specified.');\n    }\n  }\n\n  if(typeof message === 'string' && !encoding) {\n    throw new TypeError('\"options.encoding\" must be \"binary\" or \"utf8\".');\n  }\n\n  if(typeof message === 'string') {\n    if(typeof Buffer !== 'undefined') {\n      return Buffer.from(message, encoding);\n    }\n    message = new ByteBuffer(message, encoding);\n  } else if(!(message instanceof ByteBuffer)) {\n    throw new TypeError(\n      '\"options.message\" must be a node.js Buffer, a Uint8Array, a forge ' +\n      'ByteBuffer, or a string with \"options.encoding\" specifying its ' +\n      'encoding.');\n  }\n\n  // convert to native buffer\n  var buffer = new NativeBuffer(message.length());\n  for(var i = 0; i < buffer.length; ++i) {\n    buffer[i] = message.at(i);\n  }\n  return buffer;\n}\n\nvar gf0 = gf();\nvar gf1 = gf([1]);\nvar D = gf([\n  0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070,\n  0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]);\nvar D2 = gf([\n  0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0,\n  0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]);\nvar X = gf([\n  0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c,\n  0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]);\nvar Y = gf([\n  0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666,\n  0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]);\nvar L = new Float64Array([\n  0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58,\n  0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\nvar I = gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43,\n  0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\n// TODO: update forge buffer implementation to use `Buffer` or `Uint8Array`,\n// whichever is available, to improve performance\nfunction sha512(msg, msgLen) {\n  // Note: `out` and `msg` are NativeBuffer\n  var md = forge.md.sha512.create();\n  var buffer = new ByteBuffer(msg);\n  md.update(buffer.getBytes(msgLen), 'binary');\n  var hash = md.digest().getBytes();\n  if(typeof Buffer !== 'undefined') {\n    return Buffer.from(hash, 'binary');\n  }\n  var out = new NativeBuffer(ed25519.constants.HASH_BYTE_LENGTH);\n  for(var i = 0; i < 64; ++i) {\n    out[i] = hash.charCodeAt(i);\n  }\n  return out;\n}\n\nfunction crypto_sign_keypair(pk, sk) {\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  var d = sha512(sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for(i = 0; i < 32; ++i) {\n    sk[i + 32] = pk[i];\n  }\n  return 0;\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  var d = sha512(sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for(i = 0; i < n; ++i) {\n    sm[64 + i] = m[i];\n  }\n  for(i = 0; i < 32; ++i) {\n    sm[32 + i] = d[32 + i];\n  }\n\n  var r = sha512(sm.subarray(32), n + 32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for(i = 32; i < 64; ++i) {\n    sm[i] = sk[i];\n  }\n  var h = sha512(sm, n + 64);\n  reduce(h);\n\n  for(i = 32; i < 64; ++i) {\n    x[i] = 0;\n  }\n  for(i = 0; i < 32; ++i) {\n    x[i] = r[i];\n  }\n  for(i = 0; i < 32; ++i) {\n    for(j = 0; j < 32; j++) {\n      x[i + j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i, mlen;\n  var t = new NativeBuffer(32);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  mlen = -1;\n  if(n < 64) {\n    return -1;\n  }\n\n  if(unpackneg(q, pk)) {\n    return -1;\n  }\n\n  for(i = 0; i < n; ++i) {\n    m[i] = sm[i];\n  }\n  for(i = 0; i < 32; ++i) {\n    m[i + 32] = pk[i];\n  }\n  var h = sha512(m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if(crypto_verify_32(sm, 0, t, 0)) {\n    for(i = 0; i < n; ++i) {\n      m[i] = 0;\n    }\n    return -1;\n  }\n\n  for(i = 0; i < n; ++i) {\n    m[i] = sm[i + 64];\n  }\n  mlen = n;\n  return mlen;\n}\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for(i = 63; i >= 32; --i) {\n    carry = 0;\n    for(j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = (x[j] + 128) >> 8;\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for(j = 0; j < 32; ++j) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for(j = 0; j < 32; ++j) {\n    x[j] -= carry * L[j];\n  }\n  for(i = 0; i < 32; ++i) {\n    x[i + 1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64);\n  for(var i = 0; i < 64; ++i) {\n    x[i] = r[i];\n    r[i] = 0;\n  }\n  modL(r, x);\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  for(var i = 0; i < 4; ++i) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for(i = 0; i < 16; ++i) {\n    t[i] = n[i];\n  }\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for(j = 0; j < 2; ++j) {\n    m[0] = t[0] - 0xffed;\n    for(i = 1; i < 15; ++i) {\n      m[i] = t[i] - 0xffff - ((m[i - 1] >> 16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14] >> 16) & 1);\n    b = (m[15] >> 16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1 - b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2 * i] = t[i] & 0xff;\n    o[2 * i + 1] = t[i] >> 8;\n  }\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if(neq25519(chk, num)) {\n    M(r[0], r[0], I);\n  }\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if(neq25519(chk, num)) {\n    return -1;\n  }\n\n  if(par25519(r[0]) === (p[31] >> 7)) {\n    Z(r[0], gf0, r[0]);\n  }\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for(i = 0; i < 16; ++i) {\n    o[i] = n[2 * i] + (n[2 * i + 1] << 8);\n  }\n  o[15] &= 0x7fff;\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for(a = 0; a < 16; ++a) {\n    c[a] = i[a];\n  }\n  for(a = 250; a >= 0; --a) {\n    S(c, c);\n    if(a !== 1) {\n      M(c, c, i);\n    }\n  }\n  for(a = 0; a < 16; ++a) {\n    o[a] = c[a];\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new NativeBuffer(32);\n  var d = new NativeBuffer(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x, xi, y, yi, 32);\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i, d = 0;\n  for(i = 0; i < n; ++i) {\n    d |= x[xi + i] ^ y[yi + i];\n  }\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction par25519(a) {\n  var d = new NativeBuffer(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for(i = 255; i >= 0; --i) {\n    b = (s[(i / 8)|0] >> (i & 7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction set25519(r, a) {\n  var i;\n  for(i = 0; i < 16; i++) {\n    r[i] = a[i] | 0;\n  }\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for(a = 0; a < 16; ++a) {\n    c[a] = i[a];\n  }\n  for(a = 253; a >= 0; --a) {\n    S(c, c);\n    if(a !== 2 && a !== 4) {\n      M(c, c, i);\n    }\n  }\n  for(a = 0; a < 16; ++a) {\n    o[a] = c[a];\n  }\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for(i = 0; i < 16; ++i) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c - 1 + 37 * (c - 1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b - 1);\n  for(var i = 0; i < 16; ++i) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction gf(init) {\n  var i, r = new Float64Array(16);\n  if(init) {\n    for(i = 0; i < init.length; ++i) {\n      r[i] = init[i];\n    }\n  }\n  return r;\n}\n\nfunction A(o, a, b) {\n  for(var i = 0; i < 16; ++i) {\n    o[i] = a[i] + b[i];\n  }\n}\n\nfunction Z(o, a, b) {\n  for(var i = 0; i < 16; ++i) {\n    o[i] = a[i] - b[i];\n  }\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n","/**\n * Node.js module for Forge.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2016 Digital Bazaar, Inc.\n */\nmodule.exports = {\n  // default options\n  options: {\n    usePureJavaScript: false\n  }\n};\n","/**\n * Hash-based Message Authentication Code implementation. Requires a message\n * digest object that can be obtained, for example, from forge.md.sha1 or\n * forge.md.md5.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2012 Digital Bazaar, Inc. All rights reserved.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\n/* HMAC API */\nvar hmac = module.exports = forge.hmac = forge.hmac || {};\n\n/**\n * Creates an HMAC object that uses the given message digest object.\n *\n * @return an HMAC object.\n */\nhmac.create = function() {\n  // the hmac key to use\n  var _key = null;\n\n  // the message digest to use\n  var _md = null;\n\n  // the inner padding\n  var _ipadding = null;\n\n  // the outer padding\n  var _opadding = null;\n\n  // hmac context\n  var ctx = {};\n\n  /**\n   * Starts or restarts the HMAC with the given key and message digest.\n   *\n   * @param md the message digest to use, null to reuse the previous one,\n   *           a string to use builtin 'sha1', 'md5', 'sha256'.\n   * @param key the key to use as a string, array of bytes, byte buffer,\n   *           or null to reuse the previous key.\n   */\n  ctx.start = function(md, key) {\n    if(md !== null) {\n      if(typeof md === 'string') {\n        // create builtin message digest\n        md = md.toLowerCase();\n        if(md in forge.md.algorithms) {\n          _md = forge.md.algorithms[md].create();\n        } else {\n          throw new Error('Unknown hash algorithm \"' + md + '\"');\n        }\n      } else {\n        // store message digest\n        _md = md;\n      }\n    }\n\n    if(key === null) {\n      // reuse previous key\n      key = _key;\n    } else {\n      if(typeof key === 'string') {\n        // convert string into byte buffer\n        key = forge.util.createBuffer(key);\n      } else if(forge.util.isArray(key)) {\n        // convert byte array into byte buffer\n        var tmp = key;\n        key = forge.util.createBuffer();\n        for(var i = 0; i < tmp.length; ++i) {\n          key.putByte(tmp[i]);\n        }\n      }\n\n      // if key is longer than blocksize, hash it\n      var keylen = key.length();\n      if(keylen > _md.blockLength) {\n        _md.start();\n        _md.update(key.bytes());\n        key = _md.digest();\n      }\n\n      // mix key into inner and outer padding\n      // ipadding = [0x36 * blocksize] ^ key\n      // opadding = [0x5C * blocksize] ^ key\n      _ipadding = forge.util.createBuffer();\n      _opadding = forge.util.createBuffer();\n      keylen = key.length();\n      for(var i = 0; i < keylen; ++i) {\n        var tmp = key.at(i);\n        _ipadding.putByte(0x36 ^ tmp);\n        _opadding.putByte(0x5C ^ tmp);\n      }\n\n      // if key is shorter than blocksize, add additional padding\n      if(keylen < _md.blockLength) {\n        var tmp = _md.blockLength - keylen;\n        for(var i = 0; i < tmp; ++i) {\n          _ipadding.putByte(0x36);\n          _opadding.putByte(0x5C);\n        }\n      }\n      _key = key;\n      _ipadding = _ipadding.bytes();\n      _opadding = _opadding.bytes();\n    }\n\n    // digest is done like so: hash(opadding | hash(ipadding | message))\n\n    // prepare to do inner hash\n    // hash(ipadding | message)\n    _md.start();\n    _md.update(_ipadding);\n  };\n\n  /**\n   * Updates the HMAC with the given message bytes.\n   *\n   * @param bytes the bytes to update with.\n   */\n  ctx.update = function(bytes) {\n    _md.update(bytes);\n  };\n\n  /**\n   * Produces the Message Authentication Code (MAC).\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  ctx.getMac = function() {\n    // digest is done like so: hash(opadding | hash(ipadding | message))\n    // here we do the outer hashing\n    var inner = _md.digest().bytes();\n    _md.start();\n    _md.update(_opadding);\n    _md.update(inner);\n    return _md.digest();\n  };\n  // alias for getMac\n  ctx.digest = ctx.getMac;\n\n  return ctx;\n};\n","/**\n * Node.js module for Forge.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2016 Digital Bazaar, Inc.\n */\nmodule.exports = require('./forge');\nrequire('./aes');\nrequire('./aesCipherSuites');\nrequire('./asn1');\nrequire('./cipher');\nrequire('./des');\nrequire('./ed25519');\nrequire('./hmac');\nrequire('./kem');\nrequire('./log');\nrequire('./md.all');\nrequire('./mgf1');\nrequire('./pbkdf2');\nrequire('./pem');\nrequire('./pkcs1');\nrequire('./pkcs12');\nrequire('./pkcs7');\nrequire('./pki');\nrequire('./prime');\nrequire('./prng');\nrequire('./pss');\nrequire('./random');\nrequire('./rc2');\nrequire('./ssh');\nrequire('./tls');\nrequire('./util');\n","// Copyright (c) 2005  Tom Wu\n// All Rights Reserved.\n// See \"LICENSE\" for details.\n\n// Basic JavaScript BN library - subset useful for RSA encryption.\n\n/*\nLicensing (LICENSE)\n-------------------\n\nThis software is covered under the following copyright:\n*/\n/*\n * Copyright (c) 2003-2005  Tom Wu\n * All Rights Reserved.\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS-IS\" AND WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS, IMPLIED OR OTHERWISE, INCLUDING WITHOUT LIMITATION, ANY\n * WARRANTY OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE.\n *\n * IN NO EVENT SHALL TOM WU BE LIABLE FOR ANY SPECIAL, INCIDENTAL,\n * INDIRECT OR CONSEQUENTIAL DAMAGES OF ANY KIND, OR ANY DAMAGES WHATSOEVER\n * RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER OR NOT ADVISED OF\n * THE POSSIBILITY OF DAMAGE, AND ON ANY THEORY OF LIABILITY, ARISING OUT\n * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n *\n * In addition, the following condition applies:\n *\n * All redistributions must retain an intact copy of this copyright notice\n * and disclaimer.\n */\n/*\nAddress all questions regarding this license to:\n\n  Tom Wu\n  tjw@cs.Stanford.EDU\n*/\nvar forge = require('./forge');\n\nmodule.exports = forge.jsbn = forge.jsbn || {};\n\n// Bits per digit\nvar dbits;\n\n// JavaScript engine analysis\nvar canary = 0xdeadbeefcafe;\nvar j_lm = ((canary&0xffffff)==0xefcafe);\n\n// (public) Constructor\nfunction BigInteger(a,b,c) {\n  this.data = [];\n  if(a != null)\n    if(\"number\" == typeof a) this.fromNumber(a,b,c);\n    else if(b == null && \"string\" != typeof a) this.fromString(a,256);\n    else this.fromString(a,b);\n}\nforge.jsbn.BigInteger = BigInteger;\n\n// return new, unset BigInteger\nfunction nbi() { return new BigInteger(null); }\n\n// am: Compute w_j += (x*this_i), propagate carries,\n// c is initial carry, returns final carry.\n// c < 3*dvalue, x < 2*dvalue, this_i < dvalue\n// We need to select the fastest one that works in this environment.\n\n// am1: use a single mult and divide to get the high bits,\n// max digit bits should be 26 because\n// max internal value = 2*dvalue^2-2*dvalue (< 2^53)\nfunction am1(i,x,w,j,c,n) {\n  while(--n >= 0) {\n    var v = x*this.data[i++]+w.data[j]+c;\n    c = Math.floor(v/0x4000000);\n    w.data[j++] = v&0x3ffffff;\n  }\n  return c;\n}\n// am2 avoids a big mult-and-extract completely.\n// Max digit bits should be <= 30 because we do bitwise ops\n// on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)\nfunction am2(i,x,w,j,c,n) {\n  var xl = x&0x7fff, xh = x>>15;\n  while(--n >= 0) {\n    var l = this.data[i]&0x7fff;\n    var h = this.data[i++]>>15;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x7fff)<<15)+w.data[j]+(c&0x3fffffff);\n    c = (l>>>30)+(m>>>15)+xh*h+(c>>>30);\n    w.data[j++] = l&0x3fffffff;\n  }\n  return c;\n}\n// Alternately, set max digit bits to 28 since some\n// browsers slow down when dealing with 32-bit numbers.\nfunction am3(i,x,w,j,c,n) {\n  var xl = x&0x3fff, xh = x>>14;\n  while(--n >= 0) {\n    var l = this.data[i]&0x3fff;\n    var h = this.data[i++]>>14;\n    var m = xh*l+h*xl;\n    l = xl*l+((m&0x3fff)<<14)+w.data[j]+c;\n    c = (l>>28)+(m>>14)+xh*h;\n    w.data[j++] = l&0xfffffff;\n  }\n  return c;\n}\n\n// node.js (no browser)\nif(typeof(navigator) === 'undefined')\n{\n   BigInteger.prototype.am = am3;\n   dbits = 28;\n} else if(j_lm && (navigator.appName == \"Microsoft Internet Explorer\")) {\n  BigInteger.prototype.am = am2;\n  dbits = 30;\n} else if(j_lm && (navigator.appName != \"Netscape\")) {\n  BigInteger.prototype.am = am1;\n  dbits = 26;\n} else { // Mozilla/Netscape seems to prefer am3\n  BigInteger.prototype.am = am3;\n  dbits = 28;\n}\n\nBigInteger.prototype.DB = dbits;\nBigInteger.prototype.DM = ((1<<dbits)-1);\nBigInteger.prototype.DV = (1<<dbits);\n\nvar BI_FP = 52;\nBigInteger.prototype.FV = Math.pow(2,BI_FP);\nBigInteger.prototype.F1 = BI_FP-dbits;\nBigInteger.prototype.F2 = 2*dbits-BI_FP;\n\n// Digit conversions\nvar BI_RM = \"0123456789abcdefghijklmnopqrstuvwxyz\";\nvar BI_RC = new Array();\nvar rr,vv;\nrr = \"0\".charCodeAt(0);\nfor(vv = 0; vv <= 9; ++vv) BI_RC[rr++] = vv;\nrr = \"a\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\nrr = \"A\".charCodeAt(0);\nfor(vv = 10; vv < 36; ++vv) BI_RC[rr++] = vv;\n\nfunction int2char(n) { return BI_RM.charAt(n); }\nfunction intAt(s,i) {\n  var c = BI_RC[s.charCodeAt(i)];\n  return (c==null)?-1:c;\n}\n\n// (protected) copy this to r\nfunction bnpCopyTo(r) {\n  for(var i = this.t-1; i >= 0; --i) r.data[i] = this.data[i];\n  r.t = this.t;\n  r.s = this.s;\n}\n\n// (protected) set from integer value x, -DV <= x < DV\nfunction bnpFromInt(x) {\n  this.t = 1;\n  this.s = (x<0)?-1:0;\n  if(x > 0) this.data[0] = x;\n  else if(x < -1) this.data[0] = x+this.DV;\n  else this.t = 0;\n}\n\n// return bigint initialized to value\nfunction nbv(i) { var r = nbi(); r.fromInt(i); return r; }\n\n// (protected) set from string and radix\nfunction bnpFromString(s,b) {\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 256) k = 8; // byte array\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else { this.fromRadix(s,b); return; }\n  this.t = 0;\n  this.s = 0;\n  var i = s.length, mi = false, sh = 0;\n  while(--i >= 0) {\n    var x = (k==8)?s[i]&0xff:intAt(s,i);\n    if(x < 0) {\n      if(s.charAt(i) == \"-\") mi = true;\n      continue;\n    }\n    mi = false;\n    if(sh == 0)\n      this.data[this.t++] = x;\n    else if(sh+k > this.DB) {\n      this.data[this.t-1] |= (x&((1<<(this.DB-sh))-1))<<sh;\n      this.data[this.t++] = (x>>(this.DB-sh));\n    } else\n      this.data[this.t-1] |= x<<sh;\n    sh += k;\n    if(sh >= this.DB) sh -= this.DB;\n  }\n  if(k == 8 && (s[0]&0x80) != 0) {\n    this.s = -1;\n    if(sh > 0) this.data[this.t-1] |= ((1<<(this.DB-sh))-1)<<sh;\n  }\n  this.clamp();\n  if(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n// (protected) clamp off excess high words\nfunction bnpClamp() {\n  var c = this.s&this.DM;\n  while(this.t > 0 && this.data[this.t-1] == c) --this.t;\n}\n\n// (public) return string representation in given radix\nfunction bnToString(b) {\n  if(this.s < 0) return \"-\"+this.negate().toString(b);\n  var k;\n  if(b == 16) k = 4;\n  else if(b == 8) k = 3;\n  else if(b == 2) k = 1;\n  else if(b == 32) k = 5;\n  else if(b == 4) k = 2;\n  else return this.toRadix(b);\n  var km = (1<<k)-1, d, m = false, r = \"\", i = this.t;\n  var p = this.DB-(i*this.DB)%k;\n  if(i-- > 0) {\n    if(p < this.DB && (d = this.data[i]>>p) > 0) { m = true; r = int2char(d); }\n    while(i >= 0) {\n      if(p < k) {\n        d = (this.data[i]&((1<<p)-1))<<(k-p);\n        d |= this.data[--i]>>(p+=this.DB-k);\n      } else {\n        d = (this.data[i]>>(p-=k))&km;\n        if(p <= 0) { p += this.DB; --i; }\n      }\n      if(d > 0) m = true;\n      if(m) r += int2char(d);\n    }\n  }\n  return m?r:\"0\";\n}\n\n// (public) -this\nfunction bnNegate() { var r = nbi(); BigInteger.ZERO.subTo(this,r); return r; }\n\n// (public) |this|\nfunction bnAbs() { return (this.s<0)?this.negate():this; }\n\n// (public) return + if this > a, - if this < a, 0 if equal\nfunction bnCompareTo(a) {\n  var r = this.s-a.s;\n  if(r != 0) return r;\n  var i = this.t;\n  r = i-a.t;\n  if(r != 0) return (this.s<0)?-r:r;\n  while(--i >= 0) if((r=this.data[i]-a.data[i]) != 0) return r;\n  return 0;\n}\n\n// returns bit length of the integer x\nfunction nbits(x) {\n  var r = 1, t;\n  if((t=x>>>16) != 0) { x = t; r += 16; }\n  if((t=x>>8) != 0) { x = t; r += 8; }\n  if((t=x>>4) != 0) { x = t; r += 4; }\n  if((t=x>>2) != 0) { x = t; r += 2; }\n  if((t=x>>1) != 0) { x = t; r += 1; }\n  return r;\n}\n\n// (public) return the number of bits in \"this\"\nfunction bnBitLength() {\n  if(this.t <= 0) return 0;\n  return this.DB*(this.t-1)+nbits(this.data[this.t-1]^(this.s&this.DM));\n}\n\n// (protected) r = this << n*DB\nfunction bnpDLShiftTo(n,r) {\n  var i;\n  for(i = this.t-1; i >= 0; --i) r.data[i+n] = this.data[i];\n  for(i = n-1; i >= 0; --i) r.data[i] = 0;\n  r.t = this.t+n;\n  r.s = this.s;\n}\n\n// (protected) r = this >> n*DB\nfunction bnpDRShiftTo(n,r) {\n  for(var i = n; i < this.t; ++i) r.data[i-n] = this.data[i];\n  r.t = Math.max(this.t-n,0);\n  r.s = this.s;\n}\n\n// (protected) r = this << n\nfunction bnpLShiftTo(n,r) {\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<cbs)-1;\n  var ds = Math.floor(n/this.DB), c = (this.s<<bs)&this.DM, i;\n  for(i = this.t-1; i >= 0; --i) {\n    r.data[i+ds+1] = (this.data[i]>>cbs)|c;\n    c = (this.data[i]&bm)<<bs;\n  }\n  for(i = ds-1; i >= 0; --i) r.data[i] = 0;\n  r.data[ds] = c;\n  r.t = this.t+ds+1;\n  r.s = this.s;\n  r.clamp();\n}\n\n// (protected) r = this >> n\nfunction bnpRShiftTo(n,r) {\n  r.s = this.s;\n  var ds = Math.floor(n/this.DB);\n  if(ds >= this.t) { r.t = 0; return; }\n  var bs = n%this.DB;\n  var cbs = this.DB-bs;\n  var bm = (1<<bs)-1;\n  r.data[0] = this.data[ds]>>bs;\n  for(var i = ds+1; i < this.t; ++i) {\n    r.data[i-ds-1] |= (this.data[i]&bm)<<cbs;\n    r.data[i-ds] = this.data[i]>>bs;\n  }\n  if(bs > 0) r.data[this.t-ds-1] |= (this.s&bm)<<cbs;\n  r.t = this.t-ds;\n  r.clamp();\n}\n\n// (protected) r = this - a\nfunction bnpSubTo(a,r) {\n  var i = 0, c = 0, m = Math.min(a.t,this.t);\n  while(i < m) {\n    c += this.data[i]-a.data[i];\n    r.data[i++] = c&this.DM;\n    c >>= this.DB;\n  }\n  if(a.t < this.t) {\n    c -= a.s;\n    while(i < this.t) {\n      c += this.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c += this.s;\n  } else {\n    c += this.s;\n    while(i < a.t) {\n      c -= a.data[i];\n      r.data[i++] = c&this.DM;\n      c >>= this.DB;\n    }\n    c -= a.s;\n  }\n  r.s = (c<0)?-1:0;\n  if(c < -1) r.data[i++] = this.DV+c;\n  else if(c > 0) r.data[i++] = c;\n  r.t = i;\n  r.clamp();\n}\n\n// (protected) r = this * a, r != this,a (HAC 14.12)\n// \"this\" should be the larger one if appropriate.\nfunction bnpMultiplyTo(a,r) {\n  var x = this.abs(), y = a.abs();\n  var i = x.t;\n  r.t = i+y.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < y.t; ++i) r.data[i+x.t] = x.am(0,y.data[i],r,i,0,x.t);\n  r.s = 0;\n  r.clamp();\n  if(this.s != a.s) BigInteger.ZERO.subTo(r,r);\n}\n\n// (protected) r = this^2, r != this (HAC 14.16)\nfunction bnpSquareTo(r) {\n  var x = this.abs();\n  var i = r.t = 2*x.t;\n  while(--i >= 0) r.data[i] = 0;\n  for(i = 0; i < x.t-1; ++i) {\n    var c = x.am(i,x.data[i],r,2*i,0,1);\n    if((r.data[i+x.t]+=x.am(i+1,2*x.data[i],r,2*i+1,c,x.t-i-1)) >= x.DV) {\n      r.data[i+x.t] -= x.DV;\n      r.data[i+x.t+1] = 1;\n    }\n  }\n  if(r.t > 0) r.data[r.t-1] += x.am(i,x.data[i],r,2*i,0,1);\n  r.s = 0;\n  r.clamp();\n}\n\n// (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)\n// r != q, this != m.  q or r may be null.\nfunction bnpDivRemTo(m,q,r) {\n  var pm = m.abs();\n  if(pm.t <= 0) return;\n  var pt = this.abs();\n  if(pt.t < pm.t) {\n    if(q != null) q.fromInt(0);\n    if(r != null) this.copyTo(r);\n    return;\n  }\n  if(r == null) r = nbi();\n  var y = nbi(), ts = this.s, ms = m.s;\n  var nsh = this.DB-nbits(pm.data[pm.t-1]);\t// normalize modulus\n  if(nsh > 0) { pm.lShiftTo(nsh,y); pt.lShiftTo(nsh,r); } else { pm.copyTo(y); pt.copyTo(r); }\n  var ys = y.t;\n  var y0 = y.data[ys-1];\n  if(y0 == 0) return;\n  var yt = y0*(1<<this.F1)+((ys>1)?y.data[ys-2]>>this.F2:0);\n  var d1 = this.FV/yt, d2 = (1<<this.F1)/yt, e = 1<<this.F2;\n  var i = r.t, j = i-ys, t = (q==null)?nbi():q;\n  y.dlShiftTo(j,t);\n  if(r.compareTo(t) >= 0) {\n    r.data[r.t++] = 1;\n    r.subTo(t,r);\n  }\n  BigInteger.ONE.dlShiftTo(ys,t);\n  t.subTo(y,y);\t// \"negative\" y so we can replace sub with am later\n  while(y.t < ys) y.data[y.t++] = 0;\n  while(--j >= 0) {\n    // Estimate quotient digit\n    var qd = (r.data[--i]==y0)?this.DM:Math.floor(r.data[i]*d1+(r.data[i-1]+e)*d2);\n    if((r.data[i]+=y.am(0,qd,r,j,0,ys)) < qd) {\t// Try it out\n      y.dlShiftTo(j,t);\n      r.subTo(t,r);\n      while(r.data[i] < --qd) r.subTo(t,r);\n    }\n  }\n  if(q != null) {\n    r.drShiftTo(ys,q);\n    if(ts != ms) BigInteger.ZERO.subTo(q,q);\n  }\n  r.t = ys;\n  r.clamp();\n  if(nsh > 0) r.rShiftTo(nsh,r);\t// Denormalize remainder\n  if(ts < 0) BigInteger.ZERO.subTo(r,r);\n}\n\n// (public) this mod a\nfunction bnMod(a) {\n  var r = nbi();\n  this.abs().divRemTo(a,null,r);\n  if(this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) a.subTo(r,r);\n  return r;\n}\n\n// Modular reduction using \"classic\" algorithm\nfunction Classic(m) { this.m = m; }\nfunction cConvert(x) {\n  if(x.s < 0 || x.compareTo(this.m) >= 0) return x.mod(this.m);\n  else return x;\n}\nfunction cRevert(x) { return x; }\nfunction cReduce(x) { x.divRemTo(this.m,null,x); }\nfunction cMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\nfunction cSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\nClassic.prototype.convert = cConvert;\nClassic.prototype.revert = cRevert;\nClassic.prototype.reduce = cReduce;\nClassic.prototype.mulTo = cMulTo;\nClassic.prototype.sqrTo = cSqrTo;\n\n// (protected) return \"-1/this % 2^DB\"; useful for Mont. reduction\n// justification:\n//         xy == 1 (mod m)\n//         xy =  1+km\n//   xy(2-xy) = (1+km)(1-km)\n// x[y(2-xy)] = 1-k^2m^2\n// x[y(2-xy)] == 1 (mod m^2)\n// if y is 1/x mod m, then y(2-xy) is 1/x mod m^2\n// should reduce x and y(2-xy) by m^2 at each step to keep size bounded.\n// JS multiply \"overflows\" differently from C/C++, so care is needed here.\nfunction bnpInvDigit() {\n  if(this.t < 1) return 0;\n  var x = this.data[0];\n  if((x&1) == 0) return 0;\n  var y = x&3;\t\t// y == 1/x mod 2^2\n  y = (y*(2-(x&0xf)*y))&0xf;\t// y == 1/x mod 2^4\n  y = (y*(2-(x&0xff)*y))&0xff;\t// y == 1/x mod 2^8\n  y = (y*(2-(((x&0xffff)*y)&0xffff)))&0xffff;\t// y == 1/x mod 2^16\n  // last step - calculate inverse mod DV directly;\n  // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints\n  y = (y*(2-x*y%this.DV))%this.DV;\t\t// y == 1/x mod 2^dbits\n  // we really want the negative inverse, and -DV < y < DV\n  return (y>0)?this.DV-y:-y;\n}\n\n// Montgomery reduction\nfunction Montgomery(m) {\n  this.m = m;\n  this.mp = m.invDigit();\n  this.mpl = this.mp&0x7fff;\n  this.mph = this.mp>>15;\n  this.um = (1<<(m.DB-15))-1;\n  this.mt2 = 2*m.t;\n}\n\n// xR mod m\nfunction montConvert(x) {\n  var r = nbi();\n  x.abs().dlShiftTo(this.m.t,r);\n  r.divRemTo(this.m,null,r);\n  if(x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) this.m.subTo(r,r);\n  return r;\n}\n\n// x/R mod m\nfunction montRevert(x) {\n  var r = nbi();\n  x.copyTo(r);\n  this.reduce(r);\n  return r;\n}\n\n// x = x/R mod m (HAC 14.32)\nfunction montReduce(x) {\n  while(x.t <= this.mt2)\t// pad x so am has enough room later\n    x.data[x.t++] = 0;\n  for(var i = 0; i < this.m.t; ++i) {\n    // faster way of calculating u0 = x.data[i]*mp mod DV\n    var j = x.data[i]&0x7fff;\n    var u0 = (j*this.mpl+(((j*this.mph+(x.data[i]>>15)*this.mpl)&this.um)<<15))&x.DM;\n    // use am to combine the multiply-shift-add into one call\n    j = i+this.m.t;\n    x.data[j] += this.m.am(0,u0,x,i,0,this.m.t);\n    // propagate carry\n    while(x.data[j] >= x.DV) { x.data[j] -= x.DV; x.data[++j]++; }\n  }\n  x.clamp();\n  x.drShiftTo(this.m.t,x);\n  if(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n// r = \"x^2/R mod m\"; x != r\nfunction montSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n// r = \"xy/R mod m\"; x,y != r\nfunction montMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nMontgomery.prototype.convert = montConvert;\nMontgomery.prototype.revert = montRevert;\nMontgomery.prototype.reduce = montReduce;\nMontgomery.prototype.mulTo = montMulTo;\nMontgomery.prototype.sqrTo = montSqrTo;\n\n// (protected) true iff this is even\nfunction bnpIsEven() { return ((this.t>0)?(this.data[0]&1):this.s) == 0; }\n\n// (protected) this^e, e < 2^32, doing sqr and mul with \"r\" (HAC 14.79)\nfunction bnpExp(e,z) {\n  if(e > 0xffffffff || e < 1) return BigInteger.ONE;\n  var r = nbi(), r2 = nbi(), g = z.convert(this), i = nbits(e)-1;\n  g.copyTo(r);\n  while(--i >= 0) {\n    z.sqrTo(r,r2);\n    if((e&(1<<i)) > 0) z.mulTo(r2,g,r);\n    else { var t = r; r = r2; r2 = t; }\n  }\n  return z.revert(r);\n}\n\n// (public) this^e % m, 0 <= e < 2^32\nfunction bnModPowInt(e,m) {\n  var z;\n  if(e < 256 || m.isEven()) z = new Classic(m); else z = new Montgomery(m);\n  return this.exp(e,z);\n}\n\n// protected\nBigInteger.prototype.copyTo = bnpCopyTo;\nBigInteger.prototype.fromInt = bnpFromInt;\nBigInteger.prototype.fromString = bnpFromString;\nBigInteger.prototype.clamp = bnpClamp;\nBigInteger.prototype.dlShiftTo = bnpDLShiftTo;\nBigInteger.prototype.drShiftTo = bnpDRShiftTo;\nBigInteger.prototype.lShiftTo = bnpLShiftTo;\nBigInteger.prototype.rShiftTo = bnpRShiftTo;\nBigInteger.prototype.subTo = bnpSubTo;\nBigInteger.prototype.multiplyTo = bnpMultiplyTo;\nBigInteger.prototype.squareTo = bnpSquareTo;\nBigInteger.prototype.divRemTo = bnpDivRemTo;\nBigInteger.prototype.invDigit = bnpInvDigit;\nBigInteger.prototype.isEven = bnpIsEven;\nBigInteger.prototype.exp = bnpExp;\n\n// public\nBigInteger.prototype.toString = bnToString;\nBigInteger.prototype.negate = bnNegate;\nBigInteger.prototype.abs = bnAbs;\nBigInteger.prototype.compareTo = bnCompareTo;\nBigInteger.prototype.bitLength = bnBitLength;\nBigInteger.prototype.mod = bnMod;\nBigInteger.prototype.modPowInt = bnModPowInt;\n\n// \"constants\"\nBigInteger.ZERO = nbv(0);\nBigInteger.ONE = nbv(1);\n\n// jsbn2 lib\n\n//Copyright (c) 2005-2009  Tom Wu\n//All Rights Reserved.\n//See \"LICENSE\" for details (See jsbn.js for LICENSE).\n\n//Extended JavaScript BN functions, required for RSA private ops.\n\n//Version 1.1: new BigInteger(\"0\", 10) returns \"proper\" zero\n\n//(public)\nfunction bnClone() { var r = nbi(); this.copyTo(r); return r; }\n\n//(public) return value as integer\nfunction bnIntValue() {\nif(this.s < 0) {\n if(this.t == 1) return this.data[0]-this.DV;\n else if(this.t == 0) return -1;\n} else if(this.t == 1) return this.data[0];\nelse if(this.t == 0) return 0;\n// assumes 16 < DB < 32\nreturn ((this.data[1]&((1<<(32-this.DB))-1))<<this.DB)|this.data[0];\n}\n\n//(public) return value as byte\nfunction bnByteValue() { return (this.t==0)?this.s:(this.data[0]<<24)>>24; }\n\n//(public) return value as short (assumes DB>=16)\nfunction bnShortValue() { return (this.t==0)?this.s:(this.data[0]<<16)>>16; }\n\n//(protected) return x s.t. r^x < DV\nfunction bnpChunkSize(r) { return Math.floor(Math.LN2*this.DB/Math.log(r)); }\n\n//(public) 0 if this == 0, 1 if this > 0\nfunction bnSigNum() {\nif(this.s < 0) return -1;\nelse if(this.t <= 0 || (this.t == 1 && this.data[0] <= 0)) return 0;\nelse return 1;\n}\n\n//(protected) convert to radix string\nfunction bnpToRadix(b) {\nif(b == null) b = 10;\nif(this.signum() == 0 || b < 2 || b > 36) return \"0\";\nvar cs = this.chunkSize(b);\nvar a = Math.pow(b,cs);\nvar d = nbv(a), y = nbi(), z = nbi(), r = \"\";\nthis.divRemTo(d,y,z);\nwhile(y.signum() > 0) {\n r = (a+z.intValue()).toString(b).substr(1) + r;\n y.divRemTo(d,y,z);\n}\nreturn z.intValue().toString(b) + r;\n}\n\n//(protected) convert from radix string\nfunction bnpFromRadix(s,b) {\nthis.fromInt(0);\nif(b == null) b = 10;\nvar cs = this.chunkSize(b);\nvar d = Math.pow(b,cs), mi = false, j = 0, w = 0;\nfor(var i = 0; i < s.length; ++i) {\n var x = intAt(s,i);\n if(x < 0) {\n   if(s.charAt(i) == \"-\" && this.signum() == 0) mi = true;\n   continue;\n }\n w = b*w+x;\n if(++j >= cs) {\n   this.dMultiply(d);\n   this.dAddOffset(w,0);\n   j = 0;\n   w = 0;\n }\n}\nif(j > 0) {\n this.dMultiply(Math.pow(b,j));\n this.dAddOffset(w,0);\n}\nif(mi) BigInteger.ZERO.subTo(this,this);\n}\n\n//(protected) alternate constructor\nfunction bnpFromNumber(a,b,c) {\nif(\"number\" == typeof b) {\n // new BigInteger(int,int,RNG)\n if(a < 2) this.fromInt(1);\n else {\n   this.fromNumber(a,c);\n   if(!this.testBit(a-1))  // force MSB set\n     this.bitwiseTo(BigInteger.ONE.shiftLeft(a-1),op_or,this);\n   if(this.isEven()) this.dAddOffset(1,0); // force odd\n   while(!this.isProbablePrime(b)) {\n     this.dAddOffset(2,0);\n     if(this.bitLength() > a) this.subTo(BigInteger.ONE.shiftLeft(a-1),this);\n   }\n }\n} else {\n // new BigInteger(int,RNG)\n var x = new Array(), t = a&7;\n x.length = (a>>3)+1;\n b.nextBytes(x);\n if(t > 0) x[0] &= ((1<<t)-1); else x[0] = 0;\n this.fromString(x,256);\n}\n}\n\n//(public) convert to bigendian byte array\nfunction bnToByteArray() {\nvar i = this.t, r = new Array();\nr[0] = this.s;\nvar p = this.DB-(i*this.DB)%8, d, k = 0;\nif(i-- > 0) {\n if(p < this.DB && (d = this.data[i]>>p) != (this.s&this.DM)>>p)\n   r[k++] = d|(this.s<<(this.DB-p));\n while(i >= 0) {\n   if(p < 8) {\n     d = (this.data[i]&((1<<p)-1))<<(8-p);\n     d |= this.data[--i]>>(p+=this.DB-8);\n   } else {\n     d = (this.data[i]>>(p-=8))&0xff;\n     if(p <= 0) { p += this.DB; --i; }\n   }\n   if((d&0x80) != 0) d |= -256;\n   if(k == 0 && (this.s&0x80) != (d&0x80)) ++k;\n   if(k > 0 || d != this.s) r[k++] = d;\n }\n}\nreturn r;\n}\n\nfunction bnEquals(a) { return(this.compareTo(a)==0); }\nfunction bnMin(a) { return(this.compareTo(a)<0)?this:a; }\nfunction bnMax(a) { return(this.compareTo(a)>0)?this:a; }\n\n//(protected) r = this op a (bitwise)\nfunction bnpBitwiseTo(a,op,r) {\nvar i, f, m = Math.min(a.t,this.t);\nfor(i = 0; i < m; ++i) r.data[i] = op(this.data[i],a.data[i]);\nif(a.t < this.t) {\n f = a.s&this.DM;\n for(i = m; i < this.t; ++i) r.data[i] = op(this.data[i],f);\n r.t = this.t;\n} else {\n f = this.s&this.DM;\n for(i = m; i < a.t; ++i) r.data[i] = op(f,a.data[i]);\n r.t = a.t;\n}\nr.s = op(this.s,a.s);\nr.clamp();\n}\n\n//(public) this & a\nfunction op_and(x,y) { return x&y; }\nfunction bnAnd(a) { var r = nbi(); this.bitwiseTo(a,op_and,r); return r; }\n\n//(public) this | a\nfunction op_or(x,y) { return x|y; }\nfunction bnOr(a) { var r = nbi(); this.bitwiseTo(a,op_or,r); return r; }\n\n//(public) this ^ a\nfunction op_xor(x,y) { return x^y; }\nfunction bnXor(a) { var r = nbi(); this.bitwiseTo(a,op_xor,r); return r; }\n\n//(public) this & ~a\nfunction op_andnot(x,y) { return x&~y; }\nfunction bnAndNot(a) { var r = nbi(); this.bitwiseTo(a,op_andnot,r); return r; }\n\n//(public) ~this\nfunction bnNot() {\nvar r = nbi();\nfor(var i = 0; i < this.t; ++i) r.data[i] = this.DM&~this.data[i];\nr.t = this.t;\nr.s = ~this.s;\nreturn r;\n}\n\n//(public) this << n\nfunction bnShiftLeft(n) {\nvar r = nbi();\nif(n < 0) this.rShiftTo(-n,r); else this.lShiftTo(n,r);\nreturn r;\n}\n\n//(public) this >> n\nfunction bnShiftRight(n) {\nvar r = nbi();\nif(n < 0) this.lShiftTo(-n,r); else this.rShiftTo(n,r);\nreturn r;\n}\n\n//return index of lowest 1-bit in x, x < 2^31\nfunction lbit(x) {\nif(x == 0) return -1;\nvar r = 0;\nif((x&0xffff) == 0) { x >>= 16; r += 16; }\nif((x&0xff) == 0) { x >>= 8; r += 8; }\nif((x&0xf) == 0) { x >>= 4; r += 4; }\nif((x&3) == 0) { x >>= 2; r += 2; }\nif((x&1) == 0) ++r;\nreturn r;\n}\n\n//(public) returns index of lowest 1-bit (or -1 if none)\nfunction bnGetLowestSetBit() {\nfor(var i = 0; i < this.t; ++i)\n if(this.data[i] != 0) return i*this.DB+lbit(this.data[i]);\nif(this.s < 0) return this.t*this.DB;\nreturn -1;\n}\n\n//return number of 1 bits in x\nfunction cbit(x) {\nvar r = 0;\nwhile(x != 0) { x &= x-1; ++r; }\nreturn r;\n}\n\n//(public) return number of set bits\nfunction bnBitCount() {\nvar r = 0, x = this.s&this.DM;\nfor(var i = 0; i < this.t; ++i) r += cbit(this.data[i]^x);\nreturn r;\n}\n\n//(public) true iff nth bit is set\nfunction bnTestBit(n) {\nvar j = Math.floor(n/this.DB);\nif(j >= this.t) return(this.s!=0);\nreturn((this.data[j]&(1<<(n%this.DB)))!=0);\n}\n\n//(protected) this op (1<<n)\nfunction bnpChangeBit(n,op) {\nvar r = BigInteger.ONE.shiftLeft(n);\nthis.bitwiseTo(r,op,r);\nreturn r;\n}\n\n//(public) this | (1<<n)\nfunction bnSetBit(n) { return this.changeBit(n,op_or); }\n\n//(public) this & ~(1<<n)\nfunction bnClearBit(n) { return this.changeBit(n,op_andnot); }\n\n//(public) this ^ (1<<n)\nfunction bnFlipBit(n) { return this.changeBit(n,op_xor); }\n\n//(protected) r = this + a\nfunction bnpAddTo(a,r) {\nvar i = 0, c = 0, m = Math.min(a.t,this.t);\nwhile(i < m) {\n c += this.data[i]+a.data[i];\n r.data[i++] = c&this.DM;\n c >>= this.DB;\n}\nif(a.t < this.t) {\n c += a.s;\n while(i < this.t) {\n   c += this.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += this.s;\n} else {\n c += this.s;\n while(i < a.t) {\n   c += a.data[i];\n   r.data[i++] = c&this.DM;\n   c >>= this.DB;\n }\n c += a.s;\n}\nr.s = (c<0)?-1:0;\nif(c > 0) r.data[i++] = c;\nelse if(c < -1) r.data[i++] = this.DV+c;\nr.t = i;\nr.clamp();\n}\n\n//(public) this + a\nfunction bnAdd(a) { var r = nbi(); this.addTo(a,r); return r; }\n\n//(public) this - a\nfunction bnSubtract(a) { var r = nbi(); this.subTo(a,r); return r; }\n\n//(public) this * a\nfunction bnMultiply(a) { var r = nbi(); this.multiplyTo(a,r); return r; }\n\n//(public) this / a\nfunction bnDivide(a) { var r = nbi(); this.divRemTo(a,r,null); return r; }\n\n//(public) this % a\nfunction bnRemainder(a) { var r = nbi(); this.divRemTo(a,null,r); return r; }\n\n//(public) [this/a,this%a]\nfunction bnDivideAndRemainder(a) {\nvar q = nbi(), r = nbi();\nthis.divRemTo(a,q,r);\nreturn new Array(q,r);\n}\n\n//(protected) this *= n, this >= 0, 1 < n < DV\nfunction bnpDMultiply(n) {\nthis.data[this.t] = this.am(0,n-1,this,0,0,this.t);\n++this.t;\nthis.clamp();\n}\n\n//(protected) this += n << w words, this >= 0\nfunction bnpDAddOffset(n,w) {\nif(n == 0) return;\nwhile(this.t <= w) this.data[this.t++] = 0;\nthis.data[w] += n;\nwhile(this.data[w] >= this.DV) {\n this.data[w] -= this.DV;\n if(++w >= this.t) this.data[this.t++] = 0;\n ++this.data[w];\n}\n}\n\n//A \"null\" reducer\nfunction NullExp() {}\nfunction nNop(x) { return x; }\nfunction nMulTo(x,y,r) { x.multiplyTo(y,r); }\nfunction nSqrTo(x,r) { x.squareTo(r); }\n\nNullExp.prototype.convert = nNop;\nNullExp.prototype.revert = nNop;\nNullExp.prototype.mulTo = nMulTo;\nNullExp.prototype.sqrTo = nSqrTo;\n\n//(public) this^e\nfunction bnPow(e) { return this.exp(e,new NullExp()); }\n\n//(protected) r = lower n words of \"this * a\", a.t <= n\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyLowerTo(a,n,r) {\nvar i = Math.min(this.t+a.t,n);\nr.s = 0; // assumes a,this >= 0\nr.t = i;\nwhile(i > 0) r.data[--i] = 0;\nvar j;\nfor(j = r.t-this.t; i < j; ++i) r.data[i+this.t] = this.am(0,a.data[i],r,i,0,this.t);\nfor(j = Math.min(a.t,n); i < j; ++i) this.am(0,a.data[i],r,i,0,n-i);\nr.clamp();\n}\n\n//(protected) r = \"this * a\" without lower n words, n > 0\n//\"this\" should be the larger one if appropriate.\nfunction bnpMultiplyUpperTo(a,n,r) {\n--n;\nvar i = r.t = this.t+a.t-n;\nr.s = 0; // assumes a,this >= 0\nwhile(--i >= 0) r.data[i] = 0;\nfor(i = Math.max(n-this.t,0); i < a.t; ++i)\n r.data[this.t+i-n] = this.am(n-i,a.data[i],r,0,0,this.t+i-n);\nr.clamp();\nr.drShiftTo(1,r);\n}\n\n//Barrett modular reduction\nfunction Barrett(m) {\n// setup Barrett\nthis.r2 = nbi();\nthis.q3 = nbi();\nBigInteger.ONE.dlShiftTo(2*m.t,this.r2);\nthis.mu = this.r2.divide(m);\nthis.m = m;\n}\n\nfunction barrettConvert(x) {\nif(x.s < 0 || x.t > 2*this.m.t) return x.mod(this.m);\nelse if(x.compareTo(this.m) < 0) return x;\nelse { var r = nbi(); x.copyTo(r); this.reduce(r); return r; }\n}\n\nfunction barrettRevert(x) { return x; }\n\n//x = x mod m (HAC 14.42)\nfunction barrettReduce(x) {\nx.drShiftTo(this.m.t-1,this.r2);\nif(x.t > this.m.t+1) { x.t = this.m.t+1; x.clamp(); }\nthis.mu.multiplyUpperTo(this.r2,this.m.t+1,this.q3);\nthis.m.multiplyLowerTo(this.q3,this.m.t+1,this.r2);\nwhile(x.compareTo(this.r2) < 0) x.dAddOffset(1,this.m.t+1);\nx.subTo(this.r2,x);\nwhile(x.compareTo(this.m) >= 0) x.subTo(this.m,x);\n}\n\n//r = x^2 mod m; x != r\nfunction barrettSqrTo(x,r) { x.squareTo(r); this.reduce(r); }\n\n//r = x*y mod m; x,y != r\nfunction barrettMulTo(x,y,r) { x.multiplyTo(y,r); this.reduce(r); }\n\nBarrett.prototype.convert = barrettConvert;\nBarrett.prototype.revert = barrettRevert;\nBarrett.prototype.reduce = barrettReduce;\nBarrett.prototype.mulTo = barrettMulTo;\nBarrett.prototype.sqrTo = barrettSqrTo;\n\n//(public) this^e % m (HAC 14.85)\nfunction bnModPow(e,m) {\nvar i = e.bitLength(), k, r = nbv(1), z;\nif(i <= 0) return r;\nelse if(i < 18) k = 1;\nelse if(i < 48) k = 3;\nelse if(i < 144) k = 4;\nelse if(i < 768) k = 5;\nelse k = 6;\nif(i < 8)\n z = new Classic(m);\nelse if(m.isEven())\n z = new Barrett(m);\nelse\n z = new Montgomery(m);\n\n// precomputation\nvar g = new Array(), n = 3, k1 = k-1, km = (1<<k)-1;\ng[1] = z.convert(this);\nif(k > 1) {\n var g2 = nbi();\n z.sqrTo(g[1],g2);\n while(n <= km) {\n   g[n] = nbi();\n   z.mulTo(g2,g[n-2],g[n]);\n   n += 2;\n }\n}\n\nvar j = e.t-1, w, is1 = true, r2 = nbi(), t;\ni = nbits(e.data[j])-1;\nwhile(j >= 0) {\n if(i >= k1) w = (e.data[j]>>(i-k1))&km;\n else {\n   w = (e.data[j]&((1<<(i+1))-1))<<(k1-i);\n   if(j > 0) w |= e.data[j-1]>>(this.DB+i-k1);\n }\n\n n = k;\n while((w&1) == 0) { w >>= 1; --n; }\n if((i -= n) < 0) { i += this.DB; --j; }\n if(is1) {  // ret == 1, don't bother squaring or multiplying it\n   g[w].copyTo(r);\n   is1 = false;\n } else {\n   while(n > 1) { z.sqrTo(r,r2); z.sqrTo(r2,r); n -= 2; }\n   if(n > 0) z.sqrTo(r,r2); else { t = r; r = r2; r2 = t; }\n   z.mulTo(r2,g[w],r);\n }\n\n while(j >= 0 && (e.data[j]&(1<<i)) == 0) {\n   z.sqrTo(r,r2); t = r; r = r2; r2 = t;\n   if(--i < 0) { i = this.DB-1; --j; }\n }\n}\nreturn z.revert(r);\n}\n\n//(public) gcd(this,a) (HAC 14.54)\nfunction bnGCD(a) {\nvar x = (this.s<0)?this.negate():this.clone();\nvar y = (a.s<0)?a.negate():a.clone();\nif(x.compareTo(y) < 0) { var t = x; x = y; y = t; }\nvar i = x.getLowestSetBit(), g = y.getLowestSetBit();\nif(g < 0) return x;\nif(i < g) g = i;\nif(g > 0) {\n x.rShiftTo(g,x);\n y.rShiftTo(g,y);\n}\nwhile(x.signum() > 0) {\n if((i = x.getLowestSetBit()) > 0) x.rShiftTo(i,x);\n if((i = y.getLowestSetBit()) > 0) y.rShiftTo(i,y);\n if(x.compareTo(y) >= 0) {\n   x.subTo(y,x);\n   x.rShiftTo(1,x);\n } else {\n   y.subTo(x,y);\n   y.rShiftTo(1,y);\n }\n}\nif(g > 0) y.lShiftTo(g,y);\nreturn y;\n}\n\n//(protected) this % n, n < 2^26\nfunction bnpModInt(n) {\nif(n <= 0) return 0;\nvar d = this.DV%n, r = (this.s<0)?n-1:0;\nif(this.t > 0)\n if(d == 0) r = this.data[0]%n;\n else for(var i = this.t-1; i >= 0; --i) r = (d*r+this.data[i])%n;\nreturn r;\n}\n\n//(public) 1/this % m (HAC 14.61)\nfunction bnModInverse(m) {\nvar ac = m.isEven();\nif((this.isEven() && ac) || m.signum() == 0) return BigInteger.ZERO;\nvar u = m.clone(), v = this.clone();\nvar a = nbv(1), b = nbv(0), c = nbv(0), d = nbv(1);\nwhile(u.signum() != 0) {\n while(u.isEven()) {\n   u.rShiftTo(1,u);\n   if(ac) {\n     if(!a.isEven() || !b.isEven()) { a.addTo(this,a); b.subTo(m,b); }\n     a.rShiftTo(1,a);\n   } else if(!b.isEven()) b.subTo(m,b);\n   b.rShiftTo(1,b);\n }\n while(v.isEven()) {\n   v.rShiftTo(1,v);\n   if(ac) {\n     if(!c.isEven() || !d.isEven()) { c.addTo(this,c); d.subTo(m,d); }\n     c.rShiftTo(1,c);\n   } else if(!d.isEven()) d.subTo(m,d);\n   d.rShiftTo(1,d);\n }\n if(u.compareTo(v) >= 0) {\n   u.subTo(v,u);\n   if(ac) a.subTo(c,a);\n   b.subTo(d,b);\n } else {\n   v.subTo(u,v);\n   if(ac) c.subTo(a,c);\n   d.subTo(b,d);\n }\n}\nif(v.compareTo(BigInteger.ONE) != 0) return BigInteger.ZERO;\nif(d.compareTo(m) >= 0) return d.subtract(m);\nif(d.signum() < 0) d.addTo(m,d); else return d;\nif(d.signum() < 0) return d.add(m); else return d;\n}\n\nvar lowprimes = [2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509];\nvar lplim = (1<<26)/lowprimes[lowprimes.length-1];\n\n//(public) test primality with certainty >= 1-.5^t\nfunction bnIsProbablePrime(t) {\nvar i, x = this.abs();\nif(x.t == 1 && x.data[0] <= lowprimes[lowprimes.length-1]) {\n for(i = 0; i < lowprimes.length; ++i)\n   if(x.data[0] == lowprimes[i]) return true;\n return false;\n}\nif(x.isEven()) return false;\ni = 1;\nwhile(i < lowprimes.length) {\n var m = lowprimes[i], j = i+1;\n while(j < lowprimes.length && m < lplim) m *= lowprimes[j++];\n m = x.modInt(m);\n while(i < j) if(m%lowprimes[i++] == 0) return false;\n}\nreturn x.millerRabin(t);\n}\n\n//(protected) true if probably prime (HAC 4.24, Miller-Rabin)\nfunction bnpMillerRabin(t) {\nvar n1 = this.subtract(BigInteger.ONE);\nvar k = n1.getLowestSetBit();\nif(k <= 0) return false;\nvar r = n1.shiftRight(k);\nvar prng = bnGetPrng();\nvar a;\nfor(var i = 0; i < t; ++i) {\n // select witness 'a' at random from between 1 and n1\n do {\n   a = new BigInteger(this.bitLength(), prng);\n }\n while(a.compareTo(BigInteger.ONE) <= 0 || a.compareTo(n1) >= 0);\n var y = a.modPow(r,this);\n if(y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {\n   var j = 1;\n   while(j++ < k && y.compareTo(n1) != 0) {\n     y = y.modPowInt(2,this);\n     if(y.compareTo(BigInteger.ONE) == 0) return false;\n   }\n   if(y.compareTo(n1) != 0) return false;\n }\n}\nreturn true;\n}\n\n// get pseudo random number generator\nfunction bnGetPrng() {\n  // create prng with api that matches BigInteger secure random\n  return {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = Math.floor(Math.random() * 0x0100);\n      }\n    }\n  };\n}\n\n//protected\nBigInteger.prototype.chunkSize = bnpChunkSize;\nBigInteger.prototype.toRadix = bnpToRadix;\nBigInteger.prototype.fromRadix = bnpFromRadix;\nBigInteger.prototype.fromNumber = bnpFromNumber;\nBigInteger.prototype.bitwiseTo = bnpBitwiseTo;\nBigInteger.prototype.changeBit = bnpChangeBit;\nBigInteger.prototype.addTo = bnpAddTo;\nBigInteger.prototype.dMultiply = bnpDMultiply;\nBigInteger.prototype.dAddOffset = bnpDAddOffset;\nBigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;\nBigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;\nBigInteger.prototype.modInt = bnpModInt;\nBigInteger.prototype.millerRabin = bnpMillerRabin;\n\n//public\nBigInteger.prototype.clone = bnClone;\nBigInteger.prototype.intValue = bnIntValue;\nBigInteger.prototype.byteValue = bnByteValue;\nBigInteger.prototype.shortValue = bnShortValue;\nBigInteger.prototype.signum = bnSigNum;\nBigInteger.prototype.toByteArray = bnToByteArray;\nBigInteger.prototype.equals = bnEquals;\nBigInteger.prototype.min = bnMin;\nBigInteger.prototype.max = bnMax;\nBigInteger.prototype.and = bnAnd;\nBigInteger.prototype.or = bnOr;\nBigInteger.prototype.xor = bnXor;\nBigInteger.prototype.andNot = bnAndNot;\nBigInteger.prototype.not = bnNot;\nBigInteger.prototype.shiftLeft = bnShiftLeft;\nBigInteger.prototype.shiftRight = bnShiftRight;\nBigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;\nBigInteger.prototype.bitCount = bnBitCount;\nBigInteger.prototype.testBit = bnTestBit;\nBigInteger.prototype.setBit = bnSetBit;\nBigInteger.prototype.clearBit = bnClearBit;\nBigInteger.prototype.flipBit = bnFlipBit;\nBigInteger.prototype.add = bnAdd;\nBigInteger.prototype.subtract = bnSubtract;\nBigInteger.prototype.multiply = bnMultiply;\nBigInteger.prototype.divide = bnDivide;\nBigInteger.prototype.remainder = bnRemainder;\nBigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;\nBigInteger.prototype.modPow = bnModPow;\nBigInteger.prototype.modInverse = bnModInverse;\nBigInteger.prototype.pow = bnPow;\nBigInteger.prototype.gcd = bnGCD;\nBigInteger.prototype.isProbablePrime = bnIsProbablePrime;\n\n//BigInteger interfaces not implemented in jsbn:\n\n//BigInteger(int signum, byte[] magnitude)\n//double doubleValue()\n//float floatValue()\n//int hashCode()\n//long longValue()\n//static BigInteger valueOf(long val)\n","/**\n * Javascript implementation of RSA-KEM.\n *\n * @author Lautaro Cozzani Rodriguez\n * @author Dave Longley\n *\n * Copyright (c) 2014 Lautaro Cozzani <lautaro.cozzani@scytl.com>\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./random');\nrequire('./jsbn');\n\nmodule.exports = forge.kem = forge.kem || {};\n\nvar BigInteger = forge.jsbn.BigInteger;\n\n/**\n * The API for the RSA Key Encapsulation Mechanism (RSA-KEM) from ISO 18033-2.\n */\nforge.kem.rsa = {};\n\n/**\n * Creates an RSA KEM API object for generating a secret asymmetric key.\n *\n * The symmetric key may be generated via a call to 'encrypt', which will\n * produce a ciphertext to be transmitted to the recipient and a key to be\n * kept secret. The ciphertext is a parameter to be passed to 'decrypt' which\n * will produce the same secret key for the recipient to use to decrypt a\n * message that was encrypted with the secret key.\n *\n * @param kdf the KDF API to use (eg: new forge.kem.kdf1()).\n * @param options the options to use.\n *          [prng] a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n */\nforge.kem.rsa.create = function(kdf, options) {\n  options = options || {};\n  var prng = options.prng || forge.random;\n\n  var kem = {};\n\n  /**\n   * Generates a secret key and its encapsulation.\n   *\n   * @param publicKey the RSA public key to encrypt with.\n   * @param keyLength the length, in bytes, of the secret key to generate.\n   *\n   * @return an object with:\n   *   encapsulation: the ciphertext for generating the secret key, as a\n   *     binary-encoded string of bytes.\n   *   key: the secret key to use for encrypting a message.\n   */\n  kem.encrypt = function(publicKey, keyLength) {\n    // generate a random r where 1 < r < n\n    var byteLength = Math.ceil(publicKey.n.bitLength() / 8);\n    var r;\n    do {\n      r = new BigInteger(\n        forge.util.bytesToHex(prng.getBytesSync(byteLength)),\n        16).mod(publicKey.n);\n    } while(r.compareTo(BigInteger.ONE) <= 0);\n\n    // prepend r with zeros\n    r = forge.util.hexToBytes(r.toString(16));\n    var zeros = byteLength - r.length;\n    if(zeros > 0) {\n      r = forge.util.fillString(String.fromCharCode(0), zeros) + r;\n    }\n\n    // encrypt the random\n    var encapsulation = publicKey.encrypt(r, 'NONE');\n\n    // generate the secret key\n    var key = kdf.generate(r, keyLength);\n\n    return {encapsulation: encapsulation, key: key};\n  };\n\n  /**\n   * Decrypts an encapsulated secret key.\n   *\n   * @param privateKey the RSA private key to decrypt with.\n   * @param encapsulation the ciphertext for generating the secret key, as\n   *          a binary-encoded string of bytes.\n   * @param keyLength the length, in bytes, of the secret key to generate.\n   *\n   * @return the secret key as a binary-encoded string of bytes.\n   */\n  kem.decrypt = function(privateKey, encapsulation, keyLength) {\n    // decrypt the encapsulation and generate the secret key\n    var r = privateKey.decrypt(encapsulation, 'NONE');\n    return kdf.generate(r, keyLength);\n  };\n\n  return kem;\n};\n\n// TODO: add forge.kem.kdf.create('KDF1', {md: ..., ...}) API?\n\n/**\n * Creates a key derivation API object that implements KDF1 per ISO 18033-2.\n *\n * @param md the hash API to use.\n * @param [digestLength] an optional digest length that must be positive and\n *          less than or equal to md.digestLength.\n *\n * @return a KDF1 API object.\n */\nforge.kem.kdf1 = function(md, digestLength) {\n  _createKDF(this, md, 0, digestLength || md.digestLength);\n};\n\n/**\n * Creates a key derivation API object that implements KDF2 per ISO 18033-2.\n *\n * @param md the hash API to use.\n * @param [digestLength] an optional digest length that must be positive and\n *          less than or equal to md.digestLength.\n *\n * @return a KDF2 API object.\n */\nforge.kem.kdf2 = function(md, digestLength) {\n  _createKDF(this, md, 1, digestLength || md.digestLength);\n};\n\n/**\n * Creates a KDF1 or KDF2 API object.\n *\n * @param md the hash API to use.\n * @param counterStart the starting index for the counter.\n * @param digestLength the digest length to use.\n *\n * @return the KDF API object.\n */\nfunction _createKDF(kdf, md, counterStart, digestLength) {\n  /**\n   * Generate a key of the specified length.\n   *\n   * @param x the binary-encoded byte string to generate a key from.\n   * @param length the number of bytes to generate (the size of the key).\n   *\n   * @return the key as a binary-encoded string.\n   */\n  kdf.generate = function(x, length) {\n    var key = new forge.util.ByteBuffer();\n\n    // run counter from counterStart to ceil(length / Hash.len)\n    var k = Math.ceil(length / digestLength) + counterStart;\n\n    var c = new forge.util.ByteBuffer();\n    for(var i = counterStart; i < k; ++i) {\n      // I2OSP(i, 4): convert counter to an octet string of 4 octets\n      c.putInt32(i);\n\n      // digest 'x' and the counter and add the result to the key\n      md.start();\n      md.update(x + c.getBytes());\n      var hash = md.digest();\n      key.putBytes(hash.getBytes(digestLength));\n    }\n\n    // truncate to the correct key length\n    key.truncate(key.length() - length);\n    return key.getBytes();\n  };\n}\n","/**\n * Cross-browser support for logging in a web application.\n *\n * @author David I. Lehn <dlehn@digitalbazaar.com>\n *\n * Copyright (c) 2008-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\n/* LOG API */\nmodule.exports = forge.log = forge.log || {};\n\n/**\n * Application logging system.\n *\n * Each logger level available as it's own function of the form:\n *   forge.log.level(category, args...)\n * The category is an arbitrary string, and the args are the same as\n * Firebug's console.log API. By default the call will be output as:\n *   'LEVEL [category] <args[0]>, args[1], ...'\n * This enables proper % formatting via the first argument.\n * Each category is enabled by default but can be enabled or disabled with\n * the setCategoryEnabled() function.\n */\n// list of known levels\nforge.log.levels = [\n  'none', 'error', 'warning', 'info', 'debug', 'verbose', 'max'];\n// info on the levels indexed by name:\n//   index: level index\n//   name: uppercased display name\nvar sLevelInfo = {};\n// list of loggers\nvar sLoggers = [];\n/**\n * Standard console logger. If no console support is enabled this will\n * remain null. Check before using.\n */\nvar sConsoleLogger = null;\n\n// logger flags\n/**\n * Lock the level at the current value. Used in cases where user config may\n * set the level such that only critical messages are seen but more verbose\n * messages are needed for debugging or other purposes.\n */\nforge.log.LEVEL_LOCKED = (1 << 1);\n/**\n * Always call log function. By default, the logging system will check the\n * message level against logger.level before calling the log function. This\n * flag allows the function to do its own check.\n */\nforge.log.NO_LEVEL_CHECK = (1 << 2);\n/**\n * Perform message interpolation with the passed arguments. \"%\" style\n * fields in log messages will be replaced by arguments as needed. Some\n * loggers, such as Firebug, may do this automatically. The original log\n * message will be available as 'message' and the interpolated version will\n * be available as 'fullMessage'.\n */\nforge.log.INTERPOLATE = (1 << 3);\n\n// setup each log level\nfor(var i = 0; i < forge.log.levels.length; ++i) {\n  var level = forge.log.levels[i];\n  sLevelInfo[level] = {\n    index: i,\n    name: level.toUpperCase()\n  };\n}\n\n/**\n * Message logger. Will dispatch a message to registered loggers as needed.\n *\n * @param message message object\n */\nforge.log.logMessage = function(message) {\n  var messageLevelIndex = sLevelInfo[message.level].index;\n  for(var i = 0; i < sLoggers.length; ++i) {\n    var logger = sLoggers[i];\n    if(logger.flags & forge.log.NO_LEVEL_CHECK) {\n      logger.f(message);\n    } else {\n      // get logger level\n      var loggerLevelIndex = sLevelInfo[logger.level].index;\n      // check level\n      if(messageLevelIndex <= loggerLevelIndex) {\n        // message critical enough, call logger\n        logger.f(logger, message);\n      }\n    }\n  }\n};\n\n/**\n * Sets the 'standard' key on a message object to:\n * \"LEVEL [category] \" + message\n *\n * @param message a message log object\n */\nforge.log.prepareStandard = function(message) {\n  if(!('standard' in message)) {\n    message.standard =\n      sLevelInfo[message.level].name +\n      //' ' + +message.timestamp +\n      ' [' + message.category + '] ' +\n      message.message;\n  }\n};\n\n/**\n * Sets the 'full' key on a message object to the original message\n * interpolated via % formatting with the message arguments.\n *\n * @param message a message log object.\n */\nforge.log.prepareFull = function(message) {\n  if(!('full' in message)) {\n    // copy args and insert message at the front\n    var args = [message.message];\n    args = args.concat([] || message['arguments']);\n    // format the message\n    message.full = forge.util.format.apply(this, args);\n  }\n};\n\n/**\n * Applies both preparseStandard() and prepareFull() to a message object and\n * store result in 'standardFull'.\n *\n * @param message a message log object.\n */\nforge.log.prepareStandardFull = function(message) {\n  if(!('standardFull' in message)) {\n    // FIXME implement 'standardFull' logging\n    forge.log.prepareStandard(message);\n    message.standardFull = message.standard;\n  }\n};\n\n// create log level functions\nif(true) {\n  // levels for which we want functions\n  var levels = ['error', 'warning', 'info', 'debug', 'verbose'];\n  for(var i = 0; i < levels.length; ++i) {\n    // wrap in a function to ensure proper level var is passed\n    (function(level) {\n      // create function for this level\n      forge.log[level] = function(category, message/*, args...*/) {\n        // convert arguments to real array, remove category and message\n        var args = Array.prototype.slice.call(arguments).slice(2);\n        // create message object\n        // Note: interpolation and standard formatting is done lazily\n        var msg = {\n          timestamp: new Date(),\n          level: level,\n          category: category,\n          message: message,\n          'arguments': args\n          /*standard*/\n          /*full*/\n          /*fullMessage*/\n        };\n        // process this message\n        forge.log.logMessage(msg);\n      };\n    })(levels[i]);\n  }\n}\n\n/**\n * Creates a new logger with specified custom logging function.\n *\n * The logging function has a signature of:\n *   function(logger, message)\n * logger: current logger\n * message: object:\n *   level: level id\n *   category: category\n *   message: string message\n *   arguments: Array of extra arguments\n *   fullMessage: interpolated message and arguments if INTERPOLATE flag set\n *\n * @param logFunction a logging function which takes a log message object\n *          as a parameter.\n *\n * @return a logger object.\n */\nforge.log.makeLogger = function(logFunction) {\n  var logger = {\n    flags: 0,\n    f: logFunction\n  };\n  forge.log.setLevel(logger, 'none');\n  return logger;\n};\n\n/**\n * Sets the current log level on a logger.\n *\n * @param logger the target logger.\n * @param level the new maximum log level as a string.\n *\n * @return true if set, false if not.\n */\nforge.log.setLevel = function(logger, level) {\n  var rval = false;\n  if(logger && !(logger.flags & forge.log.LEVEL_LOCKED)) {\n    for(var i = 0; i < forge.log.levels.length; ++i) {\n      var aValidLevel = forge.log.levels[i];\n      if(level == aValidLevel) {\n        // set level\n        logger.level = level;\n        rval = true;\n        break;\n      }\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Locks the log level at its current value.\n *\n * @param logger the target logger.\n * @param lock boolean lock value, default to true.\n */\nforge.log.lock = function(logger, lock) {\n  if(typeof lock === 'undefined' || lock) {\n    logger.flags |= forge.log.LEVEL_LOCKED;\n  } else {\n    logger.flags &= ~forge.log.LEVEL_LOCKED;\n  }\n};\n\n/**\n * Adds a logger.\n *\n * @param logger the logger object.\n */\nforge.log.addLogger = function(logger) {\n  sLoggers.push(logger);\n};\n\n// setup the console logger if possible, else create fake console.log\nif(typeof(console) !== 'undefined' && 'log' in console) {\n  var logger;\n  if(console.error && console.warn && console.info && console.debug) {\n    // looks like Firebug-style logging is available\n    // level handlers map\n    var levelHandlers = {\n      error: console.error,\n      warning: console.warn,\n      info: console.info,\n      debug: console.debug,\n      verbose: console.debug\n    };\n    var f = function(logger, message) {\n      forge.log.prepareStandard(message);\n      var handler = levelHandlers[message.level];\n      // prepend standard message and concat args\n      var args = [message.standard];\n      args = args.concat(message['arguments'].slice());\n      // apply to low-level console function\n      handler.apply(console, args);\n    };\n    logger = forge.log.makeLogger(f);\n  } else {\n    // only appear to have basic console.log\n    var f = function(logger, message) {\n      forge.log.prepareStandardFull(message);\n      console.log(message.standardFull);\n    };\n    logger = forge.log.makeLogger(f);\n  }\n  forge.log.setLevel(logger, 'debug');\n  forge.log.addLogger(logger);\n  sConsoleLogger = logger;\n} else {\n  // define fake console.log to avoid potential script errors on\n  // browsers that do not have console logging\n  console = {\n    log: function() {}\n  };\n}\n\n/*\n * Check for logging control query vars in current URL.\n *\n * console.level=<level-name>\n * Set's the console log level by name.  Useful to override defaults and\n * allow more verbose logging before a user config is loaded.\n *\n * console.lock=<true|false>\n * Lock the console log level at whatever level it is set at.  This is run\n * after console.level is processed.  Useful to force a level of verbosity\n * that could otherwise be limited by a user config.\n */\nif(sConsoleLogger !== null &&\n  typeof window !== 'undefined' && window.location\n) {\n  var query = new URL(window.location.href).searchParams;\n  if(query.has('console.level')) {\n    // set with last value\n    forge.log.setLevel(\n      sConsoleLogger, query.get('console.level').slice(-1)[0]);\n  }\n  if(query.has('console.lock')) {\n    // set with last value\n    var lock = query.get('console.lock').slice(-1)[0];\n    if(lock == 'true') {\n      forge.log.lock(sConsoleLogger);\n    }\n  }\n}\n\n// provide public access to console logger\nforge.log.consoleLogger = sConsoleLogger;\n","/**\n * Node.js module for all known Forge message digests.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2017 Digital Bazaar, Inc.\n */\nmodule.exports = require('./md');\n\nrequire('./md5');\nrequire('./sha1');\nrequire('./sha256');\nrequire('./sha512');\n","/**\n * Node.js module for Forge message digests.\n *\n * @author Dave Longley\n *\n * Copyright 2011-2017 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\n\nmodule.exports = forge.md = forge.md || {};\nforge.md.algorithms = forge.md.algorithms || {};\n","/**\n * Message Digest Algorithm 5 with 128-bit digest (MD5) implementation.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar md5 = module.exports = forge.md5 = forge.md5 || {};\nforge.md.md5 = forge.md.algorithms.md5 = md5;\n\n/**\n * Creates an MD5 message digest object.\n *\n * @return a message digest object.\n */\nmd5.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // MD5 state contains four 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(16);\n\n  // message digest object\n  var md = {\n    algorithm: 'md5',\n    blockLength: 64,\n    digestLength: 16,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x67452301,\n      h1: 0xEFCDAB89,\n      h2: 0x98BADCFE,\n      h3: 0x10325476\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = (len[1] / 0x100000000) >>> 0;\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate MD5 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in little-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry\n    var bits, carry = 0;\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      bits = md.fullMessageLength[i] * 8 + carry;\n      carry = (bits / 0x100000000) >>> 0;\n      finalBlock.putInt32Le(bits >>> 0);\n    }\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32Le(s2.h0);\n    rval.putInt32Le(s2.h1);\n    rval.putInt32Le(s2.h2);\n    rval.putInt32Le(s2.h3);\n    return rval;\n  };\n\n  return md;\n};\n\n// padding, constant tables for calculating md5\nvar _padding = null;\nvar _g = null;\nvar _r = null;\nvar _k = null;\nvar _initialized = false;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // g values\n  _g = [\n    0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n    1, 6, 11, 0, 5, 10, 15, 4, 9, 14, 3, 8, 13, 2, 7, 12,\n    5, 8, 11, 14, 1, 4, 7, 10, 13, 0, 3, 6, 9, 12, 15, 2,\n    0, 7, 14, 5, 12, 3, 10, 1, 8, 15, 6, 13, 4, 11, 2, 9];\n\n  // rounds table\n  _r = [\n    7, 12, 17, 22,  7, 12, 17, 22,  7, 12, 17, 22,  7, 12, 17, 22,\n    5,  9, 14, 20,  5,  9, 14, 20,  5,  9, 14, 20,  5,  9, 14, 20,\n    4, 11, 16, 23,  4, 11, 16, 23,  4, 11, 16, 23,  4, 11, 16, 23,\n    6, 10, 15, 21,  6, 10, 15, 21,  6, 10, 15, 21,  6, 10, 15, 21];\n\n  // get the result of abs(sin(i + 1)) as a 32-bit integer\n  _k = new Array(64);\n  for(var i = 0; i < 64; ++i) {\n    _k[i] = Math.floor(Math.abs(Math.sin(i + 1)) * 0x100000000);\n  }\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates an MD5 state with the given byte buffer.\n *\n * @param s the MD5 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t, a, b, c, d, f, r, i;\n  var len = bytes.length();\n  while(len >= 64) {\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n\n    // round 1\n    for(i = 0; i < 16; ++i) {\n      w[i] = bytes.getInt32Le();\n      f = d ^ (b & (c ^ d));\n      t = (a + f + _k[i] + w[i]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n    // round 2\n    for(; i < 32; ++i) {\n      f = c ^ (d & (b ^ c));\n      t = (a + f + _k[i] + w[_g[i]]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n    // round 3\n    for(; i < 48; ++i) {\n      f = b ^ c ^ d;\n      t = (a + f + _k[i] + w[_g[i]]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n    // round 4\n    for(; i < 64; ++i) {\n      f = c ^ (b | ~d);\n      t = (a + f + _k[i] + w[_g[i]]);\n      r = _r[i];\n      a = d;\n      d = c;\n      c = b;\n      b += (t << r) | (t >>> (32 - r));\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n\n    len -= 64;\n  }\n}\n","/**\n * Node.js module for Forge mask generation functions.\n *\n * @author Stefan Siegl\n *\n * Copyright 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = require('./forge');\nrequire('./mgf1');\n\nmodule.exports = forge.mgf = forge.mgf || {};\nforge.mgf.mgf1 = forge.mgf1;\n","/**\n * Javascript implementation of mask generation function MGF1.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nforge.mgf = forge.mgf || {};\nvar mgf1 = module.exports = forge.mgf.mgf1 = forge.mgf1 = forge.mgf1 || {};\n\n/**\n * Creates a MGF1 mask generation function object.\n *\n * @param md the message digest API to use (eg: forge.md.sha1.create()).\n *\n * @return a mask generation function object.\n */\nmgf1.create = function(md) {\n  var mgf = {\n    /**\n     * Generate mask of specified length.\n     *\n     * @param {String} seed The seed for mask generation.\n     * @param maskLen Number of bytes to generate.\n     * @return {String} The generated mask.\n     */\n    generate: function(seed, maskLen) {\n      /* 2. Let T be the empty octet string. */\n      var t = new forge.util.ByteBuffer();\n\n      /* 3. For counter from 0 to ceil(maskLen / hLen), do the following: */\n      var len = Math.ceil(maskLen / md.digestLength);\n      for(var i = 0; i < len; i++) {\n        /* a. Convert counter to an octet string C of length 4 octets */\n        var c = new forge.util.ByteBuffer();\n        c.putInt32(i);\n\n        /* b. Concatenate the hash of the seed mgfSeed and C to the octet\n         * string T: */\n        md.start();\n        md.update(seed + c.getBytes());\n        t.putBuffer(md.digest());\n      }\n\n      /* Output the leading maskLen octets of T as the octet string mask. */\n      t.truncate(t.length() - maskLen);\n      return t.getBytes();\n    }\n  };\n\n  return mgf;\n};\n","/**\n * Object IDs for ASN.1.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\n\nforge.pki = forge.pki || {};\nvar oids = module.exports = forge.pki.oids = forge.oids = forge.oids || {};\n\n// set id to name mapping and name to id mapping\nfunction _IN(id, name) {\n  oids[id] = name;\n  oids[name] = id;\n}\n// set id to name mapping only\nfunction _I_(id, name) {\n  oids[id] = name;\n}\n\n// algorithm OIDs\n_IN('1.2.840.113549.1.1.1', 'rsaEncryption');\n// Note: md2 & md4 not implemented\n//_IN('1.2.840.113549.1.1.2', 'md2WithRSAEncryption');\n//_IN('1.2.840.113549.1.1.3', 'md4WithRSAEncryption');\n_IN('1.2.840.113549.1.1.4', 'md5WithRSAEncryption');\n_IN('1.2.840.113549.1.1.5', 'sha1WithRSAEncryption');\n_IN('1.2.840.113549.1.1.7', 'RSAES-OAEP');\n_IN('1.2.840.113549.1.1.8', 'mgf1');\n_IN('1.2.840.113549.1.1.9', 'pSpecified');\n_IN('1.2.840.113549.1.1.10', 'RSASSA-PSS');\n_IN('1.2.840.113549.1.1.11', 'sha256WithRSAEncryption');\n_IN('1.2.840.113549.1.1.12', 'sha384WithRSAEncryption');\n_IN('1.2.840.113549.1.1.13', 'sha512WithRSAEncryption');\n// Edwards-curve Digital Signature Algorithm (EdDSA) Ed25519\n_IN('1.3.101.112', 'EdDSA25519');\n\n_IN('1.2.840.10040.4.3', 'dsa-with-sha1');\n\n_IN('1.3.14.3.2.7', 'desCBC');\n\n_IN('1.3.14.3.2.26', 'sha1');\n// Deprecated equivalent of sha1WithRSAEncryption\n_IN('1.3.14.3.2.29', 'sha1WithRSASignature');\n_IN('2.16.840.1.101.3.4.2.1', 'sha256');\n_IN('2.16.840.1.101.3.4.2.2', 'sha384');\n_IN('2.16.840.1.101.3.4.2.3', 'sha512');\n_IN('2.16.840.1.101.3.4.2.4', 'sha224');\n_IN('2.16.840.1.101.3.4.2.5', 'sha512-224');\n_IN('2.16.840.1.101.3.4.2.6', 'sha512-256');\n_IN('1.2.840.113549.2.2', 'md2');\n_IN('1.2.840.113549.2.5', 'md5');\n\n// pkcs#7 content types\n_IN('1.2.840.113549.1.7.1', 'data');\n_IN('1.2.840.113549.1.7.2', 'signedData');\n_IN('1.2.840.113549.1.7.3', 'envelopedData');\n_IN('1.2.840.113549.1.7.4', 'signedAndEnvelopedData');\n_IN('1.2.840.113549.1.7.5', 'digestedData');\n_IN('1.2.840.113549.1.7.6', 'encryptedData');\n\n// pkcs#9 oids\n_IN('1.2.840.113549.1.9.1', 'emailAddress');\n_IN('1.2.840.113549.1.9.2', 'unstructuredName');\n_IN('1.2.840.113549.1.9.3', 'contentType');\n_IN('1.2.840.113549.1.9.4', 'messageDigest');\n_IN('1.2.840.113549.1.9.5', 'signingTime');\n_IN('1.2.840.113549.1.9.6', 'counterSignature');\n_IN('1.2.840.113549.1.9.7', 'challengePassword');\n_IN('1.2.840.113549.1.9.8', 'unstructuredAddress');\n_IN('1.2.840.113549.1.9.14', 'extensionRequest');\n\n_IN('1.2.840.113549.1.9.20', 'friendlyName');\n_IN('1.2.840.113549.1.9.21', 'localKeyId');\n_IN('1.2.840.113549.1.9.22.1', 'x509Certificate');\n\n// pkcs#12 safe bags\n_IN('1.2.840.113549.1.12.10.1.1', 'keyBag');\n_IN('1.2.840.113549.1.12.10.1.2', 'pkcs8ShroudedKeyBag');\n_IN('1.2.840.113549.1.12.10.1.3', 'certBag');\n_IN('1.2.840.113549.1.12.10.1.4', 'crlBag');\n_IN('1.2.840.113549.1.12.10.1.5', 'secretBag');\n_IN('1.2.840.113549.1.12.10.1.6', 'safeContentsBag');\n\n// password-based-encryption for pkcs#12\n_IN('1.2.840.113549.1.5.13', 'pkcs5PBES2');\n_IN('1.2.840.113549.1.5.12', 'pkcs5PBKDF2');\n\n_IN('1.2.840.113549.1.12.1.1', 'pbeWithSHAAnd128BitRC4');\n_IN('1.2.840.113549.1.12.1.2', 'pbeWithSHAAnd40BitRC4');\n_IN('1.2.840.113549.1.12.1.3', 'pbeWithSHAAnd3-KeyTripleDES-CBC');\n_IN('1.2.840.113549.1.12.1.4', 'pbeWithSHAAnd2-KeyTripleDES-CBC');\n_IN('1.2.840.113549.1.12.1.5', 'pbeWithSHAAnd128BitRC2-CBC');\n_IN('1.2.840.113549.1.12.1.6', 'pbewithSHAAnd40BitRC2-CBC');\n\n// hmac OIDs\n_IN('1.2.840.113549.2.7', 'hmacWithSHA1');\n_IN('1.2.840.113549.2.8', 'hmacWithSHA224');\n_IN('1.2.840.113549.2.9', 'hmacWithSHA256');\n_IN('1.2.840.113549.2.10', 'hmacWithSHA384');\n_IN('1.2.840.113549.2.11', 'hmacWithSHA512');\n\n// symmetric key algorithm oids\n_IN('1.2.840.113549.3.7', 'des-EDE3-CBC');\n_IN('2.16.840.1.101.3.4.1.2', 'aes128-CBC');\n_IN('2.16.840.1.101.3.4.1.22', 'aes192-CBC');\n_IN('2.16.840.1.101.3.4.1.42', 'aes256-CBC');\n\n// certificate issuer/subject OIDs\n_IN('2.5.4.3', 'commonName');\n_IN('2.5.4.4', 'surname');\n_IN('2.5.4.5', 'serialNumber');\n_IN('2.5.4.6', 'countryName');\n_IN('2.5.4.7', 'localityName');\n_IN('2.5.4.8', 'stateOrProvinceName');\n_IN('2.5.4.9', 'streetAddress');\n_IN('2.5.4.10', 'organizationName');\n_IN('2.5.4.11', 'organizationalUnitName');\n_IN('2.5.4.12', 'title');\n_IN('2.5.4.13', 'description');\n_IN('2.5.4.15', 'businessCategory');\n_IN('2.5.4.17', 'postalCode');\n_IN('2.5.4.42', 'givenName');\n_IN('1.3.6.1.4.1.311.60.2.1.2', 'jurisdictionOfIncorporationStateOrProvinceName');\n_IN('1.3.6.1.4.1.311.60.2.1.3', 'jurisdictionOfIncorporationCountryName');\n\n// X.509 extension OIDs\n_IN('2.16.840.1.113730.1.1', 'nsCertType');\n_IN('2.16.840.1.113730.1.13', 'nsComment'); // deprecated in theory; still widely used\n_I_('2.5.29.1', 'authorityKeyIdentifier'); // deprecated, use .35\n_I_('2.5.29.2', 'keyAttributes'); // obsolete use .37 or .15\n_I_('2.5.29.3', 'certificatePolicies'); // deprecated, use .32\n_I_('2.5.29.4', 'keyUsageRestriction'); // obsolete use .37 or .15\n_I_('2.5.29.5', 'policyMapping'); // deprecated use .33\n_I_('2.5.29.6', 'subtreesConstraint'); // obsolete use .30\n_I_('2.5.29.7', 'subjectAltName'); // deprecated use .17\n_I_('2.5.29.8', 'issuerAltName'); // deprecated use .18\n_I_('2.5.29.9', 'subjectDirectoryAttributes');\n_I_('2.5.29.10', 'basicConstraints'); // deprecated use .19\n_I_('2.5.29.11', 'nameConstraints'); // deprecated use .30\n_I_('2.5.29.12', 'policyConstraints'); // deprecated use .36\n_I_('2.5.29.13', 'basicConstraints'); // deprecated use .19\n_IN('2.5.29.14', 'subjectKeyIdentifier');\n_IN('2.5.29.15', 'keyUsage');\n_I_('2.5.29.16', 'privateKeyUsagePeriod');\n_IN('2.5.29.17', 'subjectAltName');\n_IN('2.5.29.18', 'issuerAltName');\n_IN('2.5.29.19', 'basicConstraints');\n_I_('2.5.29.20', 'cRLNumber');\n_I_('2.5.29.21', 'cRLReason');\n_I_('2.5.29.22', 'expirationDate');\n_I_('2.5.29.23', 'instructionCode');\n_I_('2.5.29.24', 'invalidityDate');\n_I_('2.5.29.25', 'cRLDistributionPoints'); // deprecated use .31\n_I_('2.5.29.26', 'issuingDistributionPoint'); // deprecated use .28\n_I_('2.5.29.27', 'deltaCRLIndicator');\n_I_('2.5.29.28', 'issuingDistributionPoint');\n_I_('2.5.29.29', 'certificateIssuer');\n_I_('2.5.29.30', 'nameConstraints');\n_IN('2.5.29.31', 'cRLDistributionPoints');\n_IN('2.5.29.32', 'certificatePolicies');\n_I_('2.5.29.33', 'policyMappings');\n_I_('2.5.29.34', 'policyConstraints'); // deprecated use .36\n_IN('2.5.29.35', 'authorityKeyIdentifier');\n_I_('2.5.29.36', 'policyConstraints');\n_IN('2.5.29.37', 'extKeyUsage');\n_I_('2.5.29.46', 'freshestCRL');\n_I_('2.5.29.54', 'inhibitAnyPolicy');\n\n// extKeyUsage purposes\n_IN('1.3.6.1.4.1.11129.2.4.2', 'timestampList');\n_IN('1.3.6.1.5.5.7.1.1', 'authorityInfoAccess');\n_IN('1.3.6.1.5.5.7.3.1', 'serverAuth');\n_IN('1.3.6.1.5.5.7.3.2', 'clientAuth');\n_IN('1.3.6.1.5.5.7.3.3', 'codeSigning');\n_IN('1.3.6.1.5.5.7.3.4', 'emailProtection');\n_IN('1.3.6.1.5.5.7.3.8', 'timeStamping');\n","/**\n * Password-based encryption functions.\n *\n * @author Dave Longley\n * @author Stefan Siegl <stesie@brokenpipe.de>\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * An EncryptedPrivateKeyInfo:\n *\n * EncryptedPrivateKeyInfo ::= SEQUENCE {\n *   encryptionAlgorithm  EncryptionAlgorithmIdentifier,\n *   encryptedData        EncryptedData }\n *\n * EncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedData ::= OCTET STRING\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./md');\nrequire('./oids');\nrequire('./pbkdf2');\nrequire('./pem');\nrequire('./random');\nrequire('./rc2');\nrequire('./rsa');\nrequire('./util');\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Password-based encryption implementation. */\nvar pki = forge.pki = forge.pki || {};\nmodule.exports = pki.pbe = forge.pbe = forge.pbe || {};\nvar oids = pki.oids;\n\n// validator for an EncryptedPrivateKeyInfo structure\n// Note: Currently only works w/algorithm params\nvar encryptedPrivateKeyValidator = {\n  name: 'EncryptedPrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedPrivateKeyInfo.encryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encryptionOid'\n    }, {\n      name: 'AlgorithmIdentifier.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'encryptionParams'\n    }]\n  }, {\n    // encryptedData\n    name: 'EncryptedPrivateKeyInfo.encryptedData',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encryptedData'\n  }]\n};\n\n// validator for a PBES2Algorithms structure\n// Note: Currently only works w/PBKDF2 + AES encryption schemes\nvar PBES2AlgorithmsValidator = {\n  name: 'PBES2Algorithms',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'PBES2Algorithms.keyDerivationFunc',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'PBES2Algorithms.keyDerivationFunc.oid',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'kdfOid'\n    }, {\n      name: 'PBES2Algorithms.params',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'PBES2Algorithms.params.salt',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OCTETSTRING,\n        constructed: false,\n        capture: 'kdfSalt'\n      }, {\n        name: 'PBES2Algorithms.params.iterationCount',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        capture: 'kdfIterationCount'\n      }, {\n        name: 'PBES2Algorithms.params.keyLength',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        optional: true,\n        capture: 'keyLength'\n      }, {\n        // prf\n        name: 'PBES2Algorithms.params.prf',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,\n        constructed: true,\n        optional: true,\n        value: [{\n          name: 'PBES2Algorithms.params.prf.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'prfOid'\n        }]\n      }]\n    }]\n  }, {\n    name: 'PBES2Algorithms.encryptionScheme',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'PBES2Algorithms.encryptionScheme.oid',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encOid'\n    }, {\n      name: 'PBES2Algorithms.encryptionScheme.iv',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OCTETSTRING,\n      constructed: false,\n      capture: 'encIv'\n    }]\n  }]\n};\n\nvar pkcs12PbeParamsValidator = {\n  name: 'pkcs-12PbeParams',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'pkcs-12PbeParams.salt',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'salt'\n  }, {\n    name: 'pkcs-12PbeParams.iterations',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'iterations'\n  }]\n};\n\n/**\n * Encrypts a ASN.1 PrivateKeyInfo object, producing an EncryptedPrivateKeyInfo.\n *\n * PBES2Algorithms ALGORITHM-IDENTIFIER ::=\n *   { {PBES2-params IDENTIFIED BY id-PBES2}, ...}\n *\n * id-PBES2 OBJECT IDENTIFIER ::= {pkcs-5 13}\n *\n * PBES2-params ::= SEQUENCE {\n *   keyDerivationFunc AlgorithmIdentifier {{PBES2-KDFs}},\n *   encryptionScheme AlgorithmIdentifier {{PBES2-Encs}}\n * }\n *\n * PBES2-KDFs ALGORITHM-IDENTIFIER ::=\n *   { {PBKDF2-params IDENTIFIED BY id-PBKDF2}, ... }\n *\n * PBES2-Encs ALGORITHM-IDENTIFIER ::= { ... }\n *\n * PBKDF2-params ::= SEQUENCE {\n *   salt CHOICE {\n *     specified OCTET STRING,\n *     otherSource AlgorithmIdentifier {{PBKDF2-SaltSources}}\n *   },\n *   iterationCount INTEGER (1..MAX),\n *   keyLength INTEGER (1..MAX) OPTIONAL,\n *   prf AlgorithmIdentifier {{PBKDF2-PRFs}} DEFAULT algid-hmacWithSHA1\n * }\n *\n * @param obj the ASN.1 PrivateKeyInfo object.\n * @param password the password to encrypt with.\n * @param options:\n *          algorithm the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des'), defaults to 'aes128'.\n *          count the iteration count to use.\n *          saltSize the salt size to use.\n *          prfAlgorithm the PRF message digest algorithm to use\n *            ('sha1', 'sha224', 'sha256', 'sha384', 'sha512')\n *\n * @return the ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptPrivateKeyInfo = function(obj, password, options) {\n  // set default options\n  options = options || {};\n  options.saltSize = options.saltSize || 8;\n  options.count = options.count || 2048;\n  options.algorithm = options.algorithm || 'aes128';\n  options.prfAlgorithm = options.prfAlgorithm || 'sha1';\n\n  // generate PBE params\n  var salt = forge.random.getBytesSync(options.saltSize);\n  var count = options.count;\n  var countBytes = asn1.integerToDer(count);\n  var dkLen;\n  var encryptionAlgorithm;\n  var encryptedData;\n  if(options.algorithm.indexOf('aes') === 0 || options.algorithm === 'des') {\n    // do PBES2\n    var ivLen, encOid, cipherFn;\n    switch(options.algorithm) {\n    case 'aes128':\n      dkLen = 16;\n      ivLen = 16;\n      encOid = oids['aes128-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'aes192':\n      dkLen = 24;\n      ivLen = 16;\n      encOid = oids['aes192-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'aes256':\n      dkLen = 32;\n      ivLen = 16;\n      encOid = oids['aes256-CBC'];\n      cipherFn = forge.aes.createEncryptionCipher;\n      break;\n    case 'des':\n      dkLen = 8;\n      ivLen = 8;\n      encOid = oids['desCBC'];\n      cipherFn = forge.des.createEncryptionCipher;\n      break;\n    default:\n      var error = new Error('Cannot encrypt private key. Unknown encryption algorithm.');\n      error.algorithm = options.algorithm;\n      throw error;\n    }\n\n    // get PRF message digest\n    var prfAlgorithm = 'hmacWith' + options.prfAlgorithm.toUpperCase();\n    var md = prfAlgorithmToMessageDigest(prfAlgorithm);\n\n    // encrypt private key using pbe SHA-1 and AES/DES\n    var dk = forge.pkcs5.pbkdf2(password, salt, count, dkLen, md);\n    var iv = forge.random.getBytesSync(ivLen);\n    var cipher = cipherFn(dk);\n    cipher.start(iv);\n    cipher.update(asn1.toDer(obj));\n    cipher.finish();\n    encryptedData = cipher.output.getBytes();\n\n    // get PBKDF2-params\n    var params = createPbkdf2Params(salt, countBytes, dkLen, prfAlgorithm);\n\n    encryptionAlgorithm = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(oids['pkcs5PBES2']).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // keyDerivationFunc\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(oids['pkcs5PBKDF2']).getBytes()),\n          // PBKDF2-params\n          params\n        ]),\n        // encryptionScheme\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(encOid).getBytes()),\n          // iv\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, iv)\n        ])\n      ])\n    ]);\n  } else if(options.algorithm === '3des') {\n    // Do PKCS12 PBE\n    dkLen = 24;\n\n    var saltBytes = new forge.util.ByteBuffer(salt);\n    var dk = pki.pbe.generatePkcs12Key(password, saltBytes, 1, count, dkLen);\n    var iv = pki.pbe.generatePkcs12Key(password, saltBytes, 2, count, dkLen);\n    var cipher = forge.des.createEncryptionCipher(dk);\n    cipher.start(iv);\n    cipher.update(asn1.toDer(obj));\n    cipher.finish();\n    encryptedData = cipher.output.getBytes();\n\n    encryptionAlgorithm = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(oids['pbeWithSHAAnd3-KeyTripleDES-CBC']).getBytes()),\n      // pkcs-12PbeParams\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // salt\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, salt),\n        // iteration count\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n          countBytes.getBytes())\n      ])\n    ]);\n  } else {\n    var error = new Error('Cannot encrypt private key. Unknown encryption algorithm.');\n    error.algorithm = options.algorithm;\n    throw error;\n  }\n\n  // EncryptedPrivateKeyInfo\n  var rval = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // encryptionAlgorithm\n    encryptionAlgorithm,\n    // encryptedData\n    asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, encryptedData)\n  ]);\n  return rval;\n};\n\n/**\n * Decrypts a ASN.1 PrivateKeyInfo object.\n *\n * @param obj the ASN.1 EncryptedPrivateKeyInfo object.\n * @param password the password to decrypt with.\n *\n * @return the ASN.1 PrivateKeyInfo on success, null on failure.\n */\npki.decryptPrivateKeyInfo = function(obj, password) {\n  var rval = null;\n\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, encryptedPrivateKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get cipher\n  var oid = asn1.derToOid(capture.encryptionOid);\n  var cipher = pki.pbe.getCipher(oid, capture.encryptionParams, password);\n\n  // get encrypted data\n  var encrypted = forge.util.createBuffer(capture.encryptedData);\n\n  cipher.update(encrypted);\n  if(cipher.finish()) {\n    rval = asn1.fromDer(cipher.output);\n  }\n\n  return rval;\n};\n\n/**\n * Converts a EncryptedPrivateKeyInfo to PEM format.\n *\n * @param epki the EncryptedPrivateKeyInfo.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted encrypted private key.\n */\npki.encryptedPrivateKeyToPem = function(epki, maxline) {\n  // convert to DER, then PEM-encode\n  var msg = {\n    type: 'ENCRYPTED PRIVATE KEY',\n    body: asn1.toDer(epki).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts a PEM-encoded EncryptedPrivateKeyInfo to ASN.1 format. Decryption\n * is not performed.\n *\n * @param pem the EncryptedPrivateKeyInfo in PEM-format.\n *\n * @return the ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptedPrivateKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'ENCRYPTED PRIVATE KEY') {\n    var error = new Error('Could not convert encrypted private key from PEM; ' +\n      'PEM header type is \"ENCRYPTED PRIVATE KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert encrypted private key from PEM; ' +\n      'PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  return asn1.fromDer(msg.body);\n};\n\n/**\n * Encrypts an RSA private key. By default, the key will be wrapped in\n * a PrivateKeyInfo and encrypted to produce a PKCS#8 EncryptedPrivateKeyInfo.\n * This is the standard, preferred way to encrypt a private key.\n *\n * To produce a non-standard PEM-encrypted private key that uses encapsulated\n * headers to indicate the encryption algorithm (old-style non-PKCS#8 OpenSSL\n * private key encryption), set the 'legacy' option to true. Note: Using this\n * option will cause the iteration count to be forced to 1.\n *\n * Note: The 'des' algorithm is supported, but it is not considered to be\n * secure because it only uses a single 56-bit key. If possible, it is highly\n * recommended that a different algorithm be used.\n *\n * @param rsaKey the RSA key to encrypt.\n * @param password the password to use.\n * @param options:\n *          algorithm: the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des', 'des').\n *          count: the iteration count to use.\n *          saltSize: the salt size to use.\n *          legacy: output an old non-PKCS#8 PEM-encrypted+encapsulated\n *            headers (DEK-Info) private key.\n *\n * @return the PEM-encoded ASN.1 EncryptedPrivateKeyInfo.\n */\npki.encryptRsaPrivateKey = function(rsaKey, password, options) {\n  // standard PKCS#8\n  options = options || {};\n  if(!options.legacy) {\n    // encrypt PrivateKeyInfo\n    var rval = pki.wrapRsaPrivateKey(pki.privateKeyToAsn1(rsaKey));\n    rval = pki.encryptPrivateKeyInfo(rval, password, options);\n    return pki.encryptedPrivateKeyToPem(rval);\n  }\n\n  // legacy non-PKCS#8\n  var algorithm;\n  var iv;\n  var dkLen;\n  var cipherFn;\n  switch(options.algorithm) {\n  case 'aes128':\n    algorithm = 'AES-128-CBC';\n    dkLen = 16;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case 'aes192':\n    algorithm = 'AES-192-CBC';\n    dkLen = 24;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case 'aes256':\n    algorithm = 'AES-256-CBC';\n    dkLen = 32;\n    iv = forge.random.getBytesSync(16);\n    cipherFn = forge.aes.createEncryptionCipher;\n    break;\n  case '3des':\n    algorithm = 'DES-EDE3-CBC';\n    dkLen = 24;\n    iv = forge.random.getBytesSync(8);\n    cipherFn = forge.des.createEncryptionCipher;\n    break;\n  case 'des':\n    algorithm = 'DES-CBC';\n    dkLen = 8;\n    iv = forge.random.getBytesSync(8);\n    cipherFn = forge.des.createEncryptionCipher;\n    break;\n  default:\n    var error = new Error('Could not encrypt RSA private key; unsupported ' +\n      'encryption algorithm \"' + options.algorithm + '\".');\n    error.algorithm = options.algorithm;\n    throw error;\n  }\n\n  // encrypt private key using OpenSSL legacy key derivation\n  var dk = forge.pbe.opensslDeriveBytes(password, iv.substr(0, 8), dkLen);\n  var cipher = cipherFn(dk);\n  cipher.start(iv);\n  cipher.update(asn1.toDer(pki.privateKeyToAsn1(rsaKey)));\n  cipher.finish();\n\n  var msg = {\n    type: 'RSA PRIVATE KEY',\n    procType: {\n      version: '4',\n      type: 'ENCRYPTED'\n    },\n    dekInfo: {\n      algorithm: algorithm,\n      parameters: forge.util.bytesToHex(iv).toUpperCase()\n    },\n    body: cipher.output.getBytes()\n  };\n  return forge.pem.encode(msg);\n};\n\n/**\n * Decrypts an RSA private key.\n *\n * @param pem the PEM-formatted EncryptedPrivateKeyInfo to decrypt.\n * @param password the password to use.\n *\n * @return the RSA key on success, null on failure.\n */\npki.decryptRsaPrivateKey = function(pem, password) {\n  var rval = null;\n\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'ENCRYPTED PRIVATE KEY' &&\n    msg.type !== 'PRIVATE KEY' &&\n    msg.type !== 'RSA PRIVATE KEY') {\n    var error = new Error('Could not convert private key from PEM; PEM header type ' +\n      'is not \"ENCRYPTED PRIVATE KEY\", \"PRIVATE KEY\", or \"RSA PRIVATE KEY\".');\n    error.headerType = error;\n    throw error;\n  }\n\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    var dkLen;\n    var cipherFn;\n    switch(msg.dekInfo.algorithm) {\n    case 'DES-CBC':\n      dkLen = 8;\n      cipherFn = forge.des.createDecryptionCipher;\n      break;\n    case 'DES-EDE3-CBC':\n      dkLen = 24;\n      cipherFn = forge.des.createDecryptionCipher;\n      break;\n    case 'AES-128-CBC':\n      dkLen = 16;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'AES-192-CBC':\n      dkLen = 24;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'AES-256-CBC':\n      dkLen = 32;\n      cipherFn = forge.aes.createDecryptionCipher;\n      break;\n    case 'RC2-40-CBC':\n      dkLen = 5;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 40);\n      };\n      break;\n    case 'RC2-64-CBC':\n      dkLen = 8;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 64);\n      };\n      break;\n    case 'RC2-128-CBC':\n      dkLen = 16;\n      cipherFn = function(key) {\n        return forge.rc2.createDecryptionCipher(key, 128);\n      };\n      break;\n    default:\n      var error = new Error('Could not decrypt private key; unsupported ' +\n        'encryption algorithm \"' + msg.dekInfo.algorithm + '\".');\n      error.algorithm = msg.dekInfo.algorithm;\n      throw error;\n    }\n\n    // use OpenSSL legacy key derivation\n    var iv = forge.util.hexToBytes(msg.dekInfo.parameters);\n    var dk = forge.pbe.opensslDeriveBytes(password, iv.substr(0, 8), dkLen);\n    var cipher = cipherFn(dk);\n    cipher.start(iv);\n    cipher.update(forge.util.createBuffer(msg.body));\n    if(cipher.finish()) {\n      rval = cipher.output.getBytes();\n    } else {\n      return rval;\n    }\n  } else {\n    rval = msg.body;\n  }\n\n  if(msg.type === 'ENCRYPTED PRIVATE KEY') {\n    rval = pki.decryptPrivateKeyInfo(asn1.fromDer(rval), password);\n  } else {\n    // decryption already performed above\n    rval = asn1.fromDer(rval);\n  }\n\n  if(rval !== null) {\n    rval = pki.privateKeyFromAsn1(rval);\n  }\n\n  return rval;\n};\n\n/**\n * Derives a PKCS#12 key.\n *\n * @param password the password to derive the key material from, null or\n *          undefined for none.\n * @param salt the salt, as a ByteBuffer, to use.\n * @param id the PKCS#12 ID byte (1 = key material, 2 = IV, 3 = MAC).\n * @param iter the iteration count.\n * @param n the number of bytes to derive from the password.\n * @param md the message digest to use, defaults to SHA-1.\n *\n * @return a ByteBuffer with the bytes derived from the password.\n */\npki.pbe.generatePkcs12Key = function(password, salt, id, iter, n, md) {\n  var j, l;\n\n  if(typeof md === 'undefined' || md === null) {\n    if(!('sha1' in forge.md)) {\n      throw new Error('\"sha1\" hash algorithm unavailable.');\n    }\n    md = forge.md.sha1.create();\n  }\n\n  var u = md.digestLength;\n  var v = md.blockLength;\n  var result = new forge.util.ByteBuffer();\n\n  /* Convert password to Unicode byte buffer + trailing 0-byte. */\n  var passBuf = new forge.util.ByteBuffer();\n  if(password !== null && password !== undefined) {\n    for(l = 0; l < password.length; l++) {\n      passBuf.putInt16(password.charCodeAt(l));\n    }\n    passBuf.putInt16(0);\n  }\n\n  /* Length of salt and password in BYTES. */\n  var p = passBuf.length();\n  var s = salt.length();\n\n  /* 1. Construct a string, D (the \"diversifier\"), by concatenating\n        v copies of ID. */\n  var D = new forge.util.ByteBuffer();\n  D.fillWithByte(id, v);\n\n  /* 2. Concatenate copies of the salt together to create a string S of length\n        v * ceil(s / v) bytes (the final copy of the salt may be trunacted\n        to create S).\n        Note that if the salt is the empty string, then so is S. */\n  var Slen = v * Math.ceil(s / v);\n  var S = new forge.util.ByteBuffer();\n  for(l = 0; l < Slen; l++) {\n    S.putByte(salt.at(l % s));\n  }\n\n  /* 3. Concatenate copies of the password together to create a string P of\n        length v * ceil(p / v) bytes (the final copy of the password may be\n        truncated to create P).\n        Note that if the password is the empty string, then so is P. */\n  var Plen = v * Math.ceil(p / v);\n  var P = new forge.util.ByteBuffer();\n  for(l = 0; l < Plen; l++) {\n    P.putByte(passBuf.at(l % p));\n  }\n\n  /* 4. Set I=S||P to be the concatenation of S and P. */\n  var I = S;\n  I.putBuffer(P);\n\n  /* 5. Set c=ceil(n / u). */\n  var c = Math.ceil(n / u);\n\n  /* 6. For i=1, 2, ..., c, do the following: */\n  for(var i = 1; i <= c; i++) {\n    /* a) Set Ai=H^r(D||I). (l.e. the rth hash of D||I, H(H(H(...H(D||I)))) */\n    var buf = new forge.util.ByteBuffer();\n    buf.putBytes(D.bytes());\n    buf.putBytes(I.bytes());\n    for(var round = 0; round < iter; round++) {\n      md.start();\n      md.update(buf.getBytes());\n      buf = md.digest();\n    }\n\n    /* b) Concatenate copies of Ai to create a string B of length v bytes (the\n          final copy of Ai may be truncated to create B). */\n    var B = new forge.util.ByteBuffer();\n    for(l = 0; l < v; l++) {\n      B.putByte(buf.at(l % u));\n    }\n\n    /* c) Treating I as a concatenation I0, I1, ..., Ik-1 of v-byte blocks,\n          where k=ceil(s / v) + ceil(p / v), modify I by setting\n          Ij=(Ij+B+1) mod 2v for each j.  */\n    var k = Math.ceil(s / v) + Math.ceil(p / v);\n    var Inew = new forge.util.ByteBuffer();\n    for(j = 0; j < k; j++) {\n      var chunk = new forge.util.ByteBuffer(I.getBytes(v));\n      var x = 0x1ff;\n      for(l = B.length() - 1; l >= 0; l--) {\n        x = x >> 8;\n        x += B.at(l) + chunk.at(l);\n        chunk.setAt(l, x & 0xff);\n      }\n      Inew.putBuffer(chunk);\n    }\n    I = Inew;\n\n    /* Add Ai to A. */\n    result.putBuffer(buf);\n  }\n\n  result.truncate(result.length() - n);\n  return result;\n};\n\n/**\n * Get new Forge cipher object instance.\n *\n * @param oid the OID (in string notation).\n * @param params the ASN.1 params object.\n * @param password the password to decrypt with.\n *\n * @return new cipher object instance.\n */\npki.pbe.getCipher = function(oid, params, password) {\n  switch(oid) {\n  case pki.oids['pkcs5PBES2']:\n    return pki.pbe.getCipherForPBES2(oid, params, password);\n\n  case pki.oids['pbeWithSHAAnd3-KeyTripleDES-CBC']:\n  case pki.oids['pbewithSHAAnd40BitRC2-CBC']:\n    return pki.pbe.getCipherForPKCS12PBE(oid, params, password);\n\n  default:\n    var error = new Error('Cannot read encrypted PBE data block. Unsupported OID.');\n    error.oid = oid;\n    error.supportedOids = [\n      'pkcs5PBES2',\n      'pbeWithSHAAnd3-KeyTripleDES-CBC',\n      'pbewithSHAAnd40BitRC2-CBC'\n    ];\n    throw error;\n  }\n};\n\n/**\n * Get new Forge cipher object instance according to PBES2 params block.\n *\n * The returned cipher instance is already started using the IV\n * from PBES2 parameter block.\n *\n * @param oid the PKCS#5 PBKDF2 OID (in string notation).\n * @param params the ASN.1 PBES2-params object.\n * @param password the password to decrypt with.\n *\n * @return new cipher object instance.\n */\npki.pbe.getCipherForPBES2 = function(oid, params, password) {\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(params, PBES2AlgorithmsValidator, capture, errors)) {\n    var error = new Error('Cannot read password-based-encryption algorithm ' +\n      'parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // check oids\n  oid = asn1.derToOid(capture.kdfOid);\n  if(oid !== pki.oids['pkcs5PBKDF2']) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'Unsupported key derivation function OID.');\n    error.oid = oid;\n    error.supportedOids = ['pkcs5PBKDF2'];\n    throw error;\n  }\n  oid = asn1.derToOid(capture.encOid);\n  if(oid !== pki.oids['aes128-CBC'] &&\n    oid !== pki.oids['aes192-CBC'] &&\n    oid !== pki.oids['aes256-CBC'] &&\n    oid !== pki.oids['des-EDE3-CBC'] &&\n    oid !== pki.oids['desCBC']) {\n    var error = new Error('Cannot read encrypted private key. ' +\n      'Unsupported encryption scheme OID.');\n    error.oid = oid;\n    error.supportedOids = [\n      'aes128-CBC', 'aes192-CBC', 'aes256-CBC', 'des-EDE3-CBC', 'desCBC'];\n    throw error;\n  }\n\n  // set PBE params\n  var salt = capture.kdfSalt;\n  var count = forge.util.createBuffer(capture.kdfIterationCount);\n  count = count.getInt(count.length() << 3);\n  var dkLen;\n  var cipherFn;\n  switch(pki.oids[oid]) {\n  case 'aes128-CBC':\n    dkLen = 16;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'aes192-CBC':\n    dkLen = 24;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'aes256-CBC':\n    dkLen = 32;\n    cipherFn = forge.aes.createDecryptionCipher;\n    break;\n  case 'des-EDE3-CBC':\n    dkLen = 24;\n    cipherFn = forge.des.createDecryptionCipher;\n    break;\n  case 'desCBC':\n    dkLen = 8;\n    cipherFn = forge.des.createDecryptionCipher;\n    break;\n  }\n\n  // get PRF message digest\n  var md = prfOidToMessageDigest(capture.prfOid);\n\n  // decrypt private key using pbe with chosen PRF and AES/DES\n  var dk = forge.pkcs5.pbkdf2(password, salt, count, dkLen, md);\n  var iv = capture.encIv;\n  var cipher = cipherFn(dk);\n  cipher.start(iv);\n\n  return cipher;\n};\n\n/**\n * Get new Forge cipher object instance for PKCS#12 PBE.\n *\n * The returned cipher instance is already started using the key & IV\n * derived from the provided password and PKCS#12 PBE salt.\n *\n * @param oid The PKCS#12 PBE OID (in string notation).\n * @param params The ASN.1 PKCS#12 PBE-params object.\n * @param password The password to decrypt with.\n *\n * @return the new cipher object instance.\n */\npki.pbe.getCipherForPKCS12PBE = function(oid, params, password) {\n  // get PBE params\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(params, pkcs12PbeParamsValidator, capture, errors)) {\n    var error = new Error('Cannot read password-based-encryption algorithm ' +\n      'parameters. ASN.1 object is not a supported EncryptedPrivateKeyInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var salt = forge.util.createBuffer(capture.salt);\n  var count = forge.util.createBuffer(capture.iterations);\n  count = count.getInt(count.length() << 3);\n\n  var dkLen, dIvLen, cipherFn;\n  switch(oid) {\n    case pki.oids['pbeWithSHAAnd3-KeyTripleDES-CBC']:\n      dkLen = 24;\n      dIvLen = 8;\n      cipherFn = forge.des.startDecrypting;\n      break;\n\n    case pki.oids['pbewithSHAAnd40BitRC2-CBC']:\n      dkLen = 5;\n      dIvLen = 8;\n      cipherFn = function(key, iv) {\n        var cipher = forge.rc2.createDecryptionCipher(key, 40);\n        cipher.start(iv, null);\n        return cipher;\n      };\n      break;\n\n    default:\n      var error = new Error('Cannot read PKCS #12 PBE data block. Unsupported OID.');\n      error.oid = oid;\n      throw error;\n  }\n\n  // get PRF message digest\n  var md = prfOidToMessageDigest(capture.prfOid);\n  var key = pki.pbe.generatePkcs12Key(password, salt, 1, count, dkLen, md);\n  md.start();\n  var iv = pki.pbe.generatePkcs12Key(password, salt, 2, count, dIvLen, md);\n\n  return cipherFn(key, iv);\n};\n\n/**\n * OpenSSL's legacy key derivation function.\n *\n * See: http://www.openssl.org/docs/crypto/EVP_BytesToKey.html\n *\n * @param password the password to derive the key from.\n * @param salt the salt to use, null for none.\n * @param dkLen the number of bytes needed for the derived key.\n * @param [options] the options to use:\n *          [md] an optional message digest object to use.\n */\npki.pbe.opensslDeriveBytes = function(password, salt, dkLen, md) {\n  if(typeof md === 'undefined' || md === null) {\n    if(!('md5' in forge.md)) {\n      throw new Error('\"md5\" hash algorithm unavailable.');\n    }\n    md = forge.md.md5.create();\n  }\n  if(salt === null) {\n    salt = '';\n  }\n  var digests = [hash(md, password + salt)];\n  for(var length = 16, i = 1; length < dkLen; ++i, length += 16) {\n    digests.push(hash(md, digests[i - 1] + password + salt));\n  }\n  return digests.join('').substr(0, dkLen);\n};\n\nfunction hash(md, bytes) {\n  return md.start().update(bytes).digest().getBytes();\n}\n\nfunction prfOidToMessageDigest(prfOid) {\n  // get PRF algorithm, default to SHA-1\n  var prfAlgorithm;\n  if(!prfOid) {\n    prfAlgorithm = 'hmacWithSHA1';\n  } else {\n    prfAlgorithm = pki.oids[asn1.derToOid(prfOid)];\n    if(!prfAlgorithm) {\n      var error = new Error('Unsupported PRF OID.');\n      error.oid = prfOid;\n      error.supported = [\n        'hmacWithSHA1', 'hmacWithSHA224', 'hmacWithSHA256', 'hmacWithSHA384',\n        'hmacWithSHA512'];\n      throw error;\n    }\n  }\n  return prfAlgorithmToMessageDigest(prfAlgorithm);\n}\n\nfunction prfAlgorithmToMessageDigest(prfAlgorithm) {\n  var factory = forge.md;\n  switch(prfAlgorithm) {\n  case 'hmacWithSHA224':\n    factory = forge.md.sha512;\n  case 'hmacWithSHA1':\n  case 'hmacWithSHA256':\n  case 'hmacWithSHA384':\n  case 'hmacWithSHA512':\n    prfAlgorithm = prfAlgorithm.substr(8).toLowerCase();\n    break;\n  default:\n    var error = new Error('Unsupported PRF algorithm.');\n    error.algorithm = prfAlgorithm;\n    error.supported = [\n      'hmacWithSHA1', 'hmacWithSHA224', 'hmacWithSHA256', 'hmacWithSHA384',\n      'hmacWithSHA512'];\n    throw error;\n  }\n  if(!factory || !(prfAlgorithm in factory)) {\n    throw new Error('Unknown hash algorithm: ' + prfAlgorithm);\n  }\n  return factory[prfAlgorithm].create();\n}\n\nfunction createPbkdf2Params(salt, countBytes, dkLen, prfAlgorithm) {\n  var params = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // salt\n    asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, salt),\n    // iteration count\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      countBytes.getBytes())\n  ]);\n  // when PRF algorithm is not SHA-1 default, add key length and PRF algorithm\n  if(prfAlgorithm !== 'hmacWithSHA1') {\n    params.value.push(\n      // key length\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(dkLen.toString(16))),\n      // AlgorithmIdentifier\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // algorithm\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids[prfAlgorithm]).getBytes()),\n        // parameters (null)\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n      ]));\n  }\n  return params;\n}\n","/**\n * Password-Based Key-Derivation Function #2 implementation.\n *\n * See RFC 2898 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./hmac');\nrequire('./md');\nrequire('./util');\n\nvar pkcs5 = forge.pkcs5 = forge.pkcs5 || {};\n\nvar crypto;\nif(forge.util.isNodejs && !forge.options.usePureJavaScript) {\n  crypto = require('crypto');\n}\n\n/**\n * Derives a key from a password.\n *\n * @param p the password as a binary-encoded string of bytes.\n * @param s the salt as a binary-encoded string of bytes.\n * @param c the iteration count, a positive integer.\n * @param dkLen the intended length, in bytes, of the derived key,\n *          (max: 2^32 - 1) * hash length of the PRF.\n * @param [md] the message digest (or algorithm identifier as a string) to use\n *          in the PRF, defaults to SHA-1.\n * @param [callback(err, key)] presence triggers asynchronous version, called\n *          once the operation completes.\n *\n * @return the derived key, as a binary-encoded string of bytes, for the\n *           synchronous version (if no callback is specified).\n */\nmodule.exports = forge.pbkdf2 = pkcs5.pbkdf2 = function(\n  p, s, c, dkLen, md, callback) {\n  if(typeof md === 'function') {\n    callback = md;\n    md = null;\n  }\n\n  // use native implementation if possible and not disabled, note that\n  // some node versions only support SHA-1, others allow digest to be changed\n  if(forge.util.isNodejs && !forge.options.usePureJavaScript &&\n    crypto.pbkdf2 && (md === null || typeof md !== 'object') &&\n    (crypto.pbkdf2Sync.length > 4 || (!md || md === 'sha1'))) {\n    if(typeof md !== 'string') {\n      // default prf to SHA-1\n      md = 'sha1';\n    }\n    p = Buffer.from(p, 'binary');\n    s = Buffer.from(s, 'binary');\n    if(!callback) {\n      if(crypto.pbkdf2Sync.length === 4) {\n        return crypto.pbkdf2Sync(p, s, c, dkLen).toString('binary');\n      }\n      return crypto.pbkdf2Sync(p, s, c, dkLen, md).toString('binary');\n    }\n    if(crypto.pbkdf2Sync.length === 4) {\n      return crypto.pbkdf2(p, s, c, dkLen, function(err, key) {\n        if(err) {\n          return callback(err);\n        }\n        callback(null, key.toString('binary'));\n      });\n    }\n    return crypto.pbkdf2(p, s, c, dkLen, md, function(err, key) {\n      if(err) {\n        return callback(err);\n      }\n      callback(null, key.toString('binary'));\n    });\n  }\n\n  if(typeof md === 'undefined' || md === null) {\n    // default prf to SHA-1\n    md = 'sha1';\n  }\n  if(typeof md === 'string') {\n    if(!(md in forge.md.algorithms)) {\n      throw new Error('Unknown hash algorithm: ' + md);\n    }\n    md = forge.md[md].create();\n  }\n\n  var hLen = md.digestLength;\n\n  /* 1. If dkLen > (2^32 - 1) * hLen, output \"derived key too long\" and\n    stop. */\n  if(dkLen > (0xFFFFFFFF * hLen)) {\n    var err = new Error('Derived key is too long.');\n    if(callback) {\n      return callback(err);\n    }\n    throw err;\n  }\n\n  /* 2. Let len be the number of hLen-octet blocks in the derived key,\n    rounding up, and let r be the number of octets in the last\n    block:\n\n    len = CEIL(dkLen / hLen),\n    r = dkLen - (len - 1) * hLen. */\n  var len = Math.ceil(dkLen / hLen);\n  var r = dkLen - (len - 1) * hLen;\n\n  /* 3. For each block of the derived key apply the function F defined\n    below to the password P, the salt S, the iteration count c, and\n    the block index to compute the block:\n\n    T_1 = F(P, S, c, 1),\n    T_2 = F(P, S, c, 2),\n    ...\n    T_len = F(P, S, c, len),\n\n    where the function F is defined as the exclusive-or sum of the\n    first c iterates of the underlying pseudorandom function PRF\n    applied to the password P and the concatenation of the salt S\n    and the block index i:\n\n    F(P, S, c, i) = u_1 XOR u_2 XOR ... XOR u_c\n\n    where\n\n    u_1 = PRF(P, S || INT(i)),\n    u_2 = PRF(P, u_1),\n    ...\n    u_c = PRF(P, u_{c-1}).\n\n    Here, INT(i) is a four-octet encoding of the integer i, most\n    significant octet first. */\n  var prf = forge.hmac.create();\n  prf.start(md, p);\n  var dk = '';\n  var xor, u_c, u_c1;\n\n  // sync version\n  if(!callback) {\n    for(var i = 1; i <= len; ++i) {\n      // PRF(P, S || INT(i)) (first iteration)\n      prf.start(null, null);\n      prf.update(s);\n      prf.update(forge.util.int32ToBytes(i));\n      xor = u_c1 = prf.digest().getBytes();\n\n      // PRF(P, u_{c-1}) (other iterations)\n      for(var j = 2; j <= c; ++j) {\n        prf.start(null, null);\n        prf.update(u_c1);\n        u_c = prf.digest().getBytes();\n        // F(p, s, c, i)\n        xor = forge.util.xorBytes(xor, u_c, hLen);\n        u_c1 = u_c;\n      }\n\n      /* 4. Concatenate the blocks and extract the first dkLen octets to\n        produce a derived key DK:\n\n        DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n      dk += (i < len) ? xor : xor.substr(0, r);\n    }\n    /* 5. Output the derived key DK. */\n    return dk;\n  }\n\n  // async version\n  var i = 1, j;\n  function outer() {\n    if(i > len) {\n      // done\n      return callback(null, dk);\n    }\n\n    // PRF(P, S || INT(i)) (first iteration)\n    prf.start(null, null);\n    prf.update(s);\n    prf.update(forge.util.int32ToBytes(i));\n    xor = u_c1 = prf.digest().getBytes();\n\n    // PRF(P, u_{c-1}) (other iterations)\n    j = 2;\n    inner();\n  }\n\n  function inner() {\n    if(j <= c) {\n      prf.start(null, null);\n      prf.update(u_c1);\n      u_c = prf.digest().getBytes();\n      // F(p, s, c, i)\n      xor = forge.util.xorBytes(xor, u_c, hLen);\n      u_c1 = u_c;\n      ++j;\n      return forge.util.setImmediate(inner);\n    }\n\n    /* 4. Concatenate the blocks and extract the first dkLen octets to\n      produce a derived key DK:\n\n      DK = T_1 || T_2 ||  ...  || T_len<0..r-1> */\n    dk += (i < len) ? xor : xor.substr(0, r);\n\n    ++i;\n    outer();\n  }\n\n  outer();\n};\n","/**\n * Javascript implementation of basic PEM (Privacy Enhanced Mail) algorithms.\n *\n * See: RFC 1421.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2013-2014 Digital Bazaar, Inc.\n *\n * A Forge PEM object has the following fields:\n *\n * type: identifies the type of message (eg: \"RSA PRIVATE KEY\").\n *\n * procType: identifies the type of processing performed on the message,\n *   it has two subfields: version and type, eg: 4,ENCRYPTED.\n *\n * contentDomain: identifies the type of content in the message, typically\n *   only uses the value: \"RFC822\".\n *\n * dekInfo: identifies the message encryption algorithm and mode and includes\n *   any parameters for the algorithm, it has two subfields: algorithm and\n *   parameters, eg: DES-CBC,F8143EDE5960C597.\n *\n * headers: contains all other PEM encapsulated headers -- where order is\n *   significant (for pairing data like recipient ID + key info).\n *\n * body: the binary-encoded body.\n */\nvar forge = require('./forge');\nrequire('./util');\n\n// shortcut for pem API\nvar pem = module.exports = forge.pem = forge.pem || {};\n\n/**\n * Encodes (serializes) the given PEM object.\n *\n * @param msg the PEM message object to encode.\n * @param options the options to use:\n *          maxline the maximum characters per line for the body, (default: 64).\n *\n * @return the PEM-formatted string.\n */\npem.encode = function(msg, options) {\n  options = options || {};\n  var rval = '-----BEGIN ' + msg.type + '-----\\r\\n';\n\n  // encode special headers\n  var header;\n  if(msg.procType) {\n    header = {\n      name: 'Proc-Type',\n      values: [String(msg.procType.version), msg.procType.type]\n    };\n    rval += foldHeader(header);\n  }\n  if(msg.contentDomain) {\n    header = {name: 'Content-Domain', values: [msg.contentDomain]};\n    rval += foldHeader(header);\n  }\n  if(msg.dekInfo) {\n    header = {name: 'DEK-Info', values: [msg.dekInfo.algorithm]};\n    if(msg.dekInfo.parameters) {\n      header.values.push(msg.dekInfo.parameters);\n    }\n    rval += foldHeader(header);\n  }\n\n  if(msg.headers) {\n    // encode all other headers\n    for(var i = 0; i < msg.headers.length; ++i) {\n      rval += foldHeader(msg.headers[i]);\n    }\n  }\n\n  // terminate header\n  if(msg.procType) {\n    rval += '\\r\\n';\n  }\n\n  // add body\n  rval += forge.util.encode64(msg.body, options.maxline || 64) + '\\r\\n';\n\n  rval += '-----END ' + msg.type + '-----\\r\\n';\n  return rval;\n};\n\n/**\n * Decodes (deserializes) all PEM messages found in the given string.\n *\n * @param str the PEM-formatted string to decode.\n *\n * @return the PEM message objects in an array.\n */\npem.decode = function(str) {\n  var rval = [];\n\n  // split string into PEM messages (be lenient w/EOF on BEGIN line)\n  var rMessage = /\\s*-----BEGIN ([A-Z0-9- ]+)-----\\r?\\n?([\\x21-\\x7e\\s]+?(?:\\r?\\n\\r?\\n))?([:A-Za-z0-9+\\/=\\s]+?)-----END \\1-----/g;\n  var rHeader = /([\\x21-\\x7e]+):\\s*([\\x21-\\x7e\\s^:]+)/;\n  var rCRLF = /\\r?\\n/;\n  var match;\n  while(true) {\n    match = rMessage.exec(str);\n    if(!match) {\n      break;\n    }\n\n    // accept \"NEW CERTIFICATE REQUEST\" as \"CERTIFICATE REQUEST\"\n    // https://datatracker.ietf.org/doc/html/rfc7468#section-7\n    var type = match[1];\n    if(type === 'NEW CERTIFICATE REQUEST') {\n      type = 'CERTIFICATE REQUEST';\n    }\n\n    var msg = {\n      type: type,\n      procType: null,\n      contentDomain: null,\n      dekInfo: null,\n      headers: [],\n      body: forge.util.decode64(match[3])\n    };\n    rval.push(msg);\n\n    // no headers\n    if(!match[2]) {\n      continue;\n    }\n\n    // parse headers\n    var lines = match[2].split(rCRLF);\n    var li = 0;\n    while(match && li < lines.length) {\n      // get line, trim any rhs whitespace\n      var line = lines[li].replace(/\\s+$/, '');\n\n      // RFC2822 unfold any following folded lines\n      for(var nl = li + 1; nl < lines.length; ++nl) {\n        var next = lines[nl];\n        if(!/\\s/.test(next[0])) {\n          break;\n        }\n        line += next;\n        li = nl;\n      }\n\n      // parse header\n      match = line.match(rHeader);\n      if(match) {\n        var header = {name: match[1], values: []};\n        var values = match[2].split(',');\n        for(var vi = 0; vi < values.length; ++vi) {\n          header.values.push(ltrim(values[vi]));\n        }\n\n        // Proc-Type must be the first header\n        if(!msg.procType) {\n          if(header.name !== 'Proc-Type') {\n            throw new Error('Invalid PEM formatted message. The first ' +\n              'encapsulated header must be \"Proc-Type\".');\n          } else if(header.values.length !== 2) {\n            throw new Error('Invalid PEM formatted message. The \"Proc-Type\" ' +\n              'header must have two subfields.');\n          }\n          msg.procType = {version: values[0], type: values[1]};\n        } else if(!msg.contentDomain && header.name === 'Content-Domain') {\n          // special-case Content-Domain\n          msg.contentDomain = values[0] || '';\n        } else if(!msg.dekInfo && header.name === 'DEK-Info') {\n          // special-case DEK-Info\n          if(header.values.length === 0) {\n            throw new Error('Invalid PEM formatted message. The \"DEK-Info\" ' +\n              'header must have at least one subfield.');\n          }\n          msg.dekInfo = {algorithm: values[0], parameters: values[1] || null};\n        } else {\n          msg.headers.push(header);\n        }\n      }\n\n      ++li;\n    }\n\n    if(msg.procType === 'ENCRYPTED' && !msg.dekInfo) {\n      throw new Error('Invalid PEM formatted message. The \"DEK-Info\" ' +\n        'header must be present if \"Proc-Type\" is \"ENCRYPTED\".');\n    }\n  }\n\n  if(rval.length === 0) {\n    throw new Error('Invalid PEM formatted message.');\n  }\n\n  return rval;\n};\n\nfunction foldHeader(header) {\n  var rval = header.name + ': ';\n\n  // ensure values with CRLF are folded\n  var values = [];\n  var insertSpace = function(match, $1) {\n    return ' ' + $1;\n  };\n  for(var i = 0; i < header.values.length; ++i) {\n    values.push(header.values[i].replace(/^(\\S+\\r\\n)/, insertSpace));\n  }\n  rval += values.join(',') + '\\r\\n';\n\n  // do folding\n  var length = 0;\n  var candidate = -1;\n  for(var i = 0; i < rval.length; ++i, ++length) {\n    if(length > 65 && candidate !== -1) {\n      var insert = rval[candidate];\n      if(insert === ',') {\n        ++candidate;\n        rval = rval.substr(0, candidate) + '\\r\\n ' + rval.substr(candidate);\n      } else {\n        rval = rval.substr(0, candidate) +\n          '\\r\\n' + insert + rval.substr(candidate + 1);\n      }\n      length = (i - candidate - 1);\n      candidate = -1;\n      ++i;\n    } else if(rval[i] === ' ' || rval[i] === '\\t' || rval[i] === ',') {\n      candidate = i;\n    }\n  }\n\n  return rval;\n}\n\nfunction ltrim(str) {\n  return str.replace(/^\\s+/, '');\n}\n","/**\n * Partial implementation of PKCS#1 v2.2: RSA-OEAP\n *\n * Modified but based on the following MIT and BSD licensed code:\n *\n * https://github.com/kjur/jsjws/blob/master/rsa.js:\n *\n * The 'jsjws'(JSON Web Signature JavaScript Library) License\n *\n * Copyright (c) 2012 Kenji Urushima\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * http://webrsa.cvs.sourceforge.net/viewvc/webrsa/Client/RSAES-OAEP.js?content-type=text%2Fplain:\n *\n * RSAES-OAEP.js\n * $Id: RSAES-OAEP.js,v 1.1.1.1 2003/03/19 15:37:20 ellispritchard Exp $\n * JavaScript Implementation of PKCS #1 v2.1 RSA CRYPTOGRAPHY STANDARD (RSA Laboratories, June 14, 2002)\n * Copyright (C) Ellis Pritchard, Guardian Unlimited 2003.\n * Contact: ellis@nukinetics.com\n * Distributed under the BSD License.\n *\n * Official documentation: http://www.rsa.com/rsalabs/node.asp?id=2125\n *\n * @author Evan Jones (http://evanjones.ca/)\n * @author Dave Longley\n *\n * Copyright (c) 2013-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./random');\nrequire('./sha1');\n\n// shortcut for PKCS#1 API\nvar pkcs1 = module.exports = forge.pkcs1 = forge.pkcs1 || {};\n\n/**\n * Encode the given RSAES-OAEP message (M) using key, with optional label (L)\n * and seed.\n *\n * This method does not perform RSA encryption, it only encodes the message\n * using RSAES-OAEP.\n *\n * @param key the RSA key to use.\n * @param message the message to encode.\n * @param options the options to use:\n *          label an optional label to use.\n *          seed the seed to use.\n *          md the message digest object to use, undefined for SHA-1.\n *          mgf1 optional mgf1 parameters:\n *            md the message digest object to use for MGF1.\n *\n * @return the encoded message bytes.\n */\npkcs1.encode_rsa_oaep = function(key, message, options) {\n  // parse arguments\n  var label;\n  var seed;\n  var md;\n  var mgf1Md;\n  // legacy args (label, seed, md)\n  if(typeof options === 'string') {\n    label = options;\n    seed = arguments[3] || undefined;\n    md = arguments[4] || undefined;\n  } else if(options) {\n    label = options.label || undefined;\n    seed = options.seed || undefined;\n    md = options.md || undefined;\n    if(options.mgf1 && options.mgf1.md) {\n      mgf1Md = options.mgf1.md;\n    }\n  }\n\n  // default OAEP to SHA-1 message digest\n  if(!md) {\n    md = forge.md.sha1.create();\n  } else {\n    md.start();\n  }\n\n  // default MGF-1 to same as OAEP\n  if(!mgf1Md) {\n    mgf1Md = md;\n  }\n\n  // compute length in bytes and check output\n  var keyLength = Math.ceil(key.n.bitLength() / 8);\n  var maxLength = keyLength - 2 * md.digestLength - 2;\n  if(message.length > maxLength) {\n    var error = new Error('RSAES-OAEP input message length is too long.');\n    error.length = message.length;\n    error.maxLength = maxLength;\n    throw error;\n  }\n\n  if(!label) {\n    label = '';\n  }\n  md.update(label, 'raw');\n  var lHash = md.digest();\n\n  var PS = '';\n  var PS_length = maxLength - message.length;\n  for(var i = 0; i < PS_length; i++) {\n    PS += '\\x00';\n  }\n\n  var DB = lHash.getBytes() + PS + '\\x01' + message;\n\n  if(!seed) {\n    seed = forge.random.getBytes(md.digestLength);\n  } else if(seed.length !== md.digestLength) {\n    var error = new Error('Invalid RSAES-OAEP seed. The seed length must ' +\n      'match the digest length.');\n    error.seedLength = seed.length;\n    error.digestLength = md.digestLength;\n    throw error;\n  }\n\n  var dbMask = rsa_mgf1(seed, keyLength - md.digestLength - 1, mgf1Md);\n  var maskedDB = forge.util.xorBytes(DB, dbMask, DB.length);\n\n  var seedMask = rsa_mgf1(maskedDB, md.digestLength, mgf1Md);\n  var maskedSeed = forge.util.xorBytes(seed, seedMask, seed.length);\n\n  // return encoded message\n  return '\\x00' + maskedSeed + maskedDB;\n};\n\n/**\n * Decode the given RSAES-OAEP encoded message (EM) using key, with optional\n * label (L).\n *\n * This method does not perform RSA decryption, it only decodes the message\n * using RSAES-OAEP.\n *\n * @param key the RSA key to use.\n * @param em the encoded message to decode.\n * @param options the options to use:\n *          label an optional label to use.\n *          md the message digest object to use for OAEP, undefined for SHA-1.\n *          mgf1 optional mgf1 parameters:\n *            md the message digest object to use for MGF1.\n *\n * @return the decoded message bytes.\n */\npkcs1.decode_rsa_oaep = function(key, em, options) {\n  // parse args\n  var label;\n  var md;\n  var mgf1Md;\n  // legacy args\n  if(typeof options === 'string') {\n    label = options;\n    md = arguments[3] || undefined;\n  } else if(options) {\n    label = options.label || undefined;\n    md = options.md || undefined;\n    if(options.mgf1 && options.mgf1.md) {\n      mgf1Md = options.mgf1.md;\n    }\n  }\n\n  // compute length in bytes\n  var keyLength = Math.ceil(key.n.bitLength() / 8);\n\n  if(em.length !== keyLength) {\n    var error = new Error('RSAES-OAEP encoded message length is invalid.');\n    error.length = em.length;\n    error.expectedLength = keyLength;\n    throw error;\n  }\n\n  // default OAEP to SHA-1 message digest\n  if(md === undefined) {\n    md = forge.md.sha1.create();\n  } else {\n    md.start();\n  }\n\n  // default MGF-1 to same as OAEP\n  if(!mgf1Md) {\n    mgf1Md = md;\n  }\n\n  if(keyLength < 2 * md.digestLength + 2) {\n    throw new Error('RSAES-OAEP key is too short for the hash function.');\n  }\n\n  if(!label) {\n    label = '';\n  }\n  md.update(label, 'raw');\n  var lHash = md.digest().getBytes();\n\n  // split the message into its parts\n  var y = em.charAt(0);\n  var maskedSeed = em.substring(1, md.digestLength + 1);\n  var maskedDB = em.substring(1 + md.digestLength);\n\n  var seedMask = rsa_mgf1(maskedDB, md.digestLength, mgf1Md);\n  var seed = forge.util.xorBytes(maskedSeed, seedMask, maskedSeed.length);\n\n  var dbMask = rsa_mgf1(seed, keyLength - md.digestLength - 1, mgf1Md);\n  var db = forge.util.xorBytes(maskedDB, dbMask, maskedDB.length);\n\n  var lHashPrime = db.substring(0, md.digestLength);\n\n  // constant time check that all values match what is expected\n  var error = (y !== '\\x00');\n\n  // constant time check lHash vs lHashPrime\n  for(var i = 0; i < md.digestLength; ++i) {\n    error |= (lHash.charAt(i) !== lHashPrime.charAt(i));\n  }\n\n  // \"constant time\" find the 0x1 byte separating the padding (zeros) from the\n  // message\n  // TODO: It must be possible to do this in a better/smarter way?\n  var in_ps = 1;\n  var index = md.digestLength;\n  for(var j = md.digestLength; j < db.length; j++) {\n    var code = db.charCodeAt(j);\n\n    var is_0 = (code & 0x1) ^ 0x1;\n\n    // non-zero if not 0 or 1 in the ps section\n    var error_mask = in_ps ? 0xfffe : 0x0000;\n    error |= (code & error_mask);\n\n    // latch in_ps to zero after we find 0x1\n    in_ps = in_ps & is_0;\n    index += in_ps;\n  }\n\n  if(error || db.charCodeAt(index) !== 0x1) {\n    throw new Error('Invalid RSAES-OAEP padding.');\n  }\n\n  return db.substring(index + 1);\n};\n\nfunction rsa_mgf1(seed, maskLength, hash) {\n  // default to SHA-1 message digest\n  if(!hash) {\n    hash = forge.md.sha1.create();\n  }\n  var t = '';\n  var count = Math.ceil(maskLength / hash.digestLength);\n  for(var i = 0; i < count; ++i) {\n    var c = String.fromCharCode(\n      (i >> 24) & 0xFF, (i >> 16) & 0xFF, (i >> 8) & 0xFF, i & 0xFF);\n    hash.start();\n    hash.update(seed + c);\n    t += hash.digest().getBytes();\n  }\n  return t.substring(0, maskLength);\n}\n","/**\n * Javascript implementation of PKCS#12.\n *\n * @author Dave Longley\n * @author Stefan Siegl <stesie@brokenpipe.de>\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#12 is as follows\n * (see ftp://ftp.rsasecurity.com/pub/pkcs/pkcs-12/pkcs-12-tc1.pdf for details)\n *\n * PFX ::= SEQUENCE {\n *   version  INTEGER {v3(3)}(v3,...),\n *   authSafe ContentInfo,\n *   macData  MacData OPTIONAL\n * }\n *\n * MacData ::= SEQUENCE {\n *   mac DigestInfo,\n *   macSalt OCTET STRING,\n *   iterations INTEGER DEFAULT 1\n * }\n * Note: The iterations default is for historical reasons and its use is\n * deprecated. A higher value, like 1024, is recommended.\n *\n * DigestInfo is defined in PKCS#7 as follows:\n *\n * DigestInfo ::= SEQUENCE {\n *   digestAlgorithm DigestAlgorithmIdentifier,\n *   digest Digest\n * }\n *\n * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of SHA1 there is none.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * Digest ::= OCTET STRING\n *\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType ContentType,\n *   content     [0] EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * AuthenticatedSafe ::= SEQUENCE OF ContentInfo\n * -- Data if unencrypted\n * -- EncryptedData if password-encrypted\n * -- EnvelopedData if public key-encrypted\n *\n *\n * SafeContents ::= SEQUENCE OF SafeBag\n *\n * SafeBag ::= SEQUENCE {\n *   bagId     BAG-TYPE.&id ({PKCS12BagSet})\n *   bagValue  [0] EXPLICIT BAG-TYPE.&Type({PKCS12BagSet}{@bagId}),\n *   bagAttributes SET OF PKCS12Attribute OPTIONAL\n * }\n *\n * PKCS12Attribute ::= SEQUENCE {\n *   attrId ATTRIBUTE.&id ({PKCS12AttrSet}),\n *   attrValues SET OF ATTRIBUTE.&Type ({PKCS12AttrSet}{@attrId})\n * } -- This type is compatible with the X.500 type 'Attribute'\n *\n * PKCS12AttrSet ATTRIBUTE ::= {\n *   friendlyName | -- from PKCS #9\n *   localKeyId, -- from PKCS #9\n *   ... -- Other attributes are allowed\n * }\n *\n * CertBag ::= SEQUENCE {\n *   certId    BAG-TYPE.&id   ({CertTypes}),\n *   certValue [0] EXPLICIT BAG-TYPE.&Type ({CertTypes}{@certId})\n * }\n *\n * x509Certificate BAG-TYPE ::= {OCTET STRING IDENTIFIED BY {certTypes 1}}\n *   -- DER-encoded X.509 certificate stored in OCTET STRING\n *\n * sdsiCertificate BAG-TYPE ::= {IA5String IDENTIFIED BY {certTypes 2}}\n * -- Base64-encoded SDSI certificate stored in IA5String\n *\n * CertTypes BAG-TYPE ::= {\n *   x509Certificate |\n *   sdsiCertificate,\n *   ... -- For future extensions\n * }\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./hmac');\nrequire('./oids');\nrequire('./pkcs7asn1');\nrequire('./pbe');\nrequire('./random');\nrequire('./rsa');\nrequire('./sha1');\nrequire('./util');\nrequire('./x509');\n\n// shortcut for asn.1 & PKI API\nvar asn1 = forge.asn1;\nvar pki = forge.pki;\n\n// shortcut for PKCS#12 API\nvar p12 = module.exports = forge.pkcs12 = forge.pkcs12 || {};\n\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,  // a ContentInfo\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    captureAsn1: 'content'\n  }]\n};\n\nvar pfxValidator = {\n  name: 'PFX',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'PFX.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  },\n  contentInfoValidator, {\n    name: 'PFX.macData',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'mac',\n    value: [{\n      name: 'PFX.macData.mac',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,  // DigestInfo\n      constructed: true,\n      value: [{\n        name: 'PFX.macData.mac.digestAlgorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,  // DigestAlgorithmIdentifier\n        constructed: true,\n        value: [{\n          name: 'PFX.macData.mac.digestAlgorithm.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'macAlgorithm'\n        }, {\n          name: 'PFX.macData.mac.digestAlgorithm.parameters',\n          tagClass: asn1.Class.UNIVERSAL,\n          captureAsn1: 'macAlgorithmParameters'\n        }]\n      }, {\n        name: 'PFX.macData.mac.digest',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OCTETSTRING,\n        constructed: false,\n        capture: 'macDigest'\n      }]\n    }, {\n      name: 'PFX.macData.macSalt',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OCTETSTRING,\n      constructed: false,\n      capture: 'macSalt'\n    }, {\n      name: 'PFX.macData.iterations',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      optional: true,\n      capture: 'macIterations'\n    }]\n  }]\n};\n\nvar safeBagValidator = {\n  name: 'SafeBag',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SafeBag.bagId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'bagId'\n  }, {\n    name: 'SafeBag.bagValue',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    captureAsn1: 'bagValue'\n  }, {\n    name: 'SafeBag.bagAttributes',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    optional: true,\n    capture: 'bagAttributes'\n  }]\n};\n\nvar attributeValidator = {\n  name: 'Attribute',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'Attribute.attrId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'oid'\n  }, {\n    name: 'Attribute.attrValues',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    capture: 'values'\n  }]\n};\n\nvar certBagValidator = {\n  name: 'CertBag',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'CertBag.certId',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'certId'\n  }, {\n    name: 'CertBag.certValue',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    constructed: true,\n    /* So far we only support X.509 certificates (which are wrapped in\n       an OCTET STRING, hence hard code that here). */\n    value: [{\n      name: 'CertBag.certValue[0]',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.OCTETSTRING,\n      constructed: false,\n      capture: 'cert'\n    }]\n  }]\n};\n\n/**\n * Search SafeContents structure for bags with matching attributes.\n *\n * The search can optionally be narrowed by a certain bag type.\n *\n * @param safeContents the SafeContents structure to search in.\n * @param attrName the name of the attribute to compare against.\n * @param attrValue the attribute value to search for.\n * @param [bagType] bag type to narrow search by.\n *\n * @return an array of matching bags.\n */\nfunction _getBagsByAttribute(safeContents, attrName, attrValue, bagType) {\n  var result = [];\n\n  for(var i = 0; i < safeContents.length; i++) {\n    for(var j = 0; j < safeContents[i].safeBags.length; j++) {\n      var bag = safeContents[i].safeBags[j];\n      if(bagType !== undefined && bag.type !== bagType) {\n        continue;\n      }\n      // only filter by bag type, no attribute specified\n      if(attrName === null) {\n        result.push(bag);\n        continue;\n      }\n      if(bag.attributes[attrName] !== undefined &&\n        bag.attributes[attrName].indexOf(attrValue) >= 0) {\n        result.push(bag);\n      }\n    }\n  }\n\n  return result;\n}\n\n/**\n * Converts a PKCS#12 PFX in ASN.1 notation into a PFX object.\n *\n * @param obj The PKCS#12 PFX in ASN.1 notation.\n * @param strict true to use strict DER decoding, false not to (default: true).\n * @param {String} password Password to decrypt with (optional).\n *\n * @return PKCS#12 PFX object.\n */\np12.pkcs12FromAsn1 = function(obj, strict, password) {\n  // handle args\n  if(typeof strict === 'string') {\n    password = strict;\n    strict = true;\n  } else if(strict === undefined) {\n    strict = true;\n  }\n\n  // validate PFX and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, pfxValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#12 PFX. ' +\n      'ASN.1 object is not an PKCS#12 PFX.');\n    error.errors = error;\n    throw error;\n  }\n\n  var pfx = {\n    version: capture.version.charCodeAt(0),\n    safeContents: [],\n\n    /**\n     * Gets bags with matching attributes.\n     *\n     * @param filter the attributes to filter by:\n     *          [localKeyId] the localKeyId to search for.\n     *          [localKeyIdHex] the localKeyId in hex to search for.\n     *          [friendlyName] the friendly name to search for.\n     *          [bagType] bag type to narrow each attribute search by.\n     *\n     * @return a map of attribute type to an array of matching bags or, if no\n     *           attribute was given but a bag type, the map key will be the\n     *           bag type.\n     */\n    getBags: function(filter) {\n      var rval = {};\n\n      var localKeyId;\n      if('localKeyId' in filter) {\n        localKeyId = filter.localKeyId;\n      } else if('localKeyIdHex' in filter) {\n        localKeyId = forge.util.hexToBytes(filter.localKeyIdHex);\n      }\n\n      // filter on bagType only\n      if(localKeyId === undefined && !('friendlyName' in filter) &&\n        'bagType' in filter) {\n        rval[filter.bagType] = _getBagsByAttribute(\n          pfx.safeContents, null, null, filter.bagType);\n      }\n\n      if(localKeyId !== undefined) {\n        rval.localKeyId = _getBagsByAttribute(\n          pfx.safeContents, 'localKeyId',\n          localKeyId, filter.bagType);\n      }\n      if('friendlyName' in filter) {\n        rval.friendlyName = _getBagsByAttribute(\n          pfx.safeContents, 'friendlyName',\n          filter.friendlyName, filter.bagType);\n      }\n\n      return rval;\n    },\n\n    /**\n     * DEPRECATED: use getBags() instead.\n     *\n     * Get bags with matching friendlyName attribute.\n     *\n     * @param friendlyName the friendly name to search for.\n     * @param [bagType] bag type to narrow search by.\n     *\n     * @return an array of bags with matching friendlyName attribute.\n     */\n    getBagsByFriendlyName: function(friendlyName, bagType) {\n      return _getBagsByAttribute(\n        pfx.safeContents, 'friendlyName', friendlyName, bagType);\n    },\n\n    /**\n     * DEPRECATED: use getBags() instead.\n     *\n     * Get bags with matching localKeyId attribute.\n     *\n     * @param localKeyId the localKeyId to search for.\n     * @param [bagType] bag type to narrow search by.\n     *\n     * @return an array of bags with matching localKeyId attribute.\n     */\n    getBagsByLocalKeyId: function(localKeyId, bagType) {\n      return _getBagsByAttribute(\n        pfx.safeContents, 'localKeyId', localKeyId, bagType);\n    }\n  };\n\n  if(capture.version.charCodeAt(0) !== 3) {\n    var error = new Error('PKCS#12 PFX of version other than 3 not supported.');\n    error.version = capture.version.charCodeAt(0);\n    throw error;\n  }\n\n  if(asn1.derToOid(capture.contentType) !== pki.oids.data) {\n    var error = new Error('Only PKCS#12 PFX in password integrity mode supported.');\n    error.oid = asn1.derToOid(capture.contentType);\n    throw error;\n  }\n\n  var data = capture.content.value[0];\n  if(data.tagClass !== asn1.Class.UNIVERSAL ||\n     data.type !== asn1.Type.OCTETSTRING) {\n    throw new Error('PKCS#12 authSafe content data is not an OCTET STRING.');\n  }\n  data = _decodePkcs7Data(data);\n\n  // check for MAC\n  if(capture.mac) {\n    var md = null;\n    var macKeyBytes = 0;\n    var macAlgorithm = asn1.derToOid(capture.macAlgorithm);\n    switch(macAlgorithm) {\n    case pki.oids.sha1:\n      md = forge.md.sha1.create();\n      macKeyBytes = 20;\n      break;\n    case pki.oids.sha256:\n      md = forge.md.sha256.create();\n      macKeyBytes = 32;\n      break;\n    case pki.oids.sha384:\n      md = forge.md.sha384.create();\n      macKeyBytes = 48;\n      break;\n    case pki.oids.sha512:\n      md = forge.md.sha512.create();\n      macKeyBytes = 64;\n      break;\n    case pki.oids.md5:\n      md = forge.md.md5.create();\n      macKeyBytes = 16;\n      break;\n    }\n    if(md === null) {\n      throw new Error('PKCS#12 uses unsupported MAC algorithm: ' + macAlgorithm);\n    }\n\n    // verify MAC (iterations default to 1)\n    var macSalt = new forge.util.ByteBuffer(capture.macSalt);\n    var macIterations = (('macIterations' in capture) ?\n      parseInt(forge.util.bytesToHex(capture.macIterations), 16) : 1);\n    var macKey = p12.generateKey(\n      password, macSalt, 3, macIterations, macKeyBytes, md);\n    var mac = forge.hmac.create();\n    mac.start(md, macKey);\n    mac.update(data.value);\n    var macValue = mac.getMac();\n    if(macValue.getBytes() !== capture.macDigest) {\n      throw new Error('PKCS#12 MAC could not be verified. Invalid password?');\n    }\n  }\n\n  _decodeAuthenticatedSafe(pfx, data.value, strict, password);\n  return pfx;\n};\n\n/**\n * Decodes PKCS#7 Data. PKCS#7 (RFC 2315) defines \"Data\" as an OCTET STRING,\n * but it is sometimes an OCTET STRING that is composed/constructed of chunks,\n * each its own OCTET STRING. This is BER-encoding vs. DER-encoding. This\n * function transforms this corner-case into the usual simple,\n * non-composed/constructed OCTET STRING.\n *\n * This function may be moved to ASN.1 at some point to better deal with\n * more BER-encoding issues, should they arise.\n *\n * @param data the ASN.1 Data object to transform.\n */\nfunction _decodePkcs7Data(data) {\n  // handle special case of \"chunked\" data content: an octet string composed\n  // of other octet strings\n  if(data.composed || data.constructed) {\n    var value = forge.util.createBuffer();\n    for(var i = 0; i < data.value.length; ++i) {\n      value.putBytes(data.value[i].value);\n    }\n    data.composed = data.constructed = false;\n    data.value = value.getBytes();\n  }\n  return data;\n}\n\n/**\n * Decode PKCS#12 AuthenticatedSafe (BER encoded) into PFX object.\n *\n * The AuthenticatedSafe is a BER-encoded SEQUENCE OF ContentInfo.\n *\n * @param pfx The PKCS#12 PFX object to fill.\n * @param {String} authSafe BER-encoded AuthenticatedSafe.\n * @param strict true to use strict DER decoding, false not to.\n * @param {String} password Password to decrypt with (optional).\n */\nfunction _decodeAuthenticatedSafe(pfx, authSafe, strict, password) {\n  authSafe = asn1.fromDer(authSafe, strict);  /* actually it's BER encoded */\n\n  if(authSafe.tagClass !== asn1.Class.UNIVERSAL ||\n     authSafe.type !== asn1.Type.SEQUENCE ||\n     authSafe.constructed !== true) {\n    throw new Error('PKCS#12 AuthenticatedSafe expected to be a ' +\n      'SEQUENCE OF ContentInfo');\n  }\n\n  for(var i = 0; i < authSafe.value.length; i++) {\n    var contentInfo = authSafe.value[i];\n\n    // validate contentInfo and capture data\n    var capture = {};\n    var errors = [];\n    if(!asn1.validate(contentInfo, contentInfoValidator, capture, errors)) {\n      var error = new Error('Cannot read ContentInfo.');\n      error.errors = errors;\n      throw error;\n    }\n\n    var obj = {\n      encrypted: false\n    };\n    var safeContents = null;\n    var data = capture.content.value[0];\n    switch(asn1.derToOid(capture.contentType)) {\n    case pki.oids.data:\n      if(data.tagClass !== asn1.Class.UNIVERSAL ||\n         data.type !== asn1.Type.OCTETSTRING) {\n        throw new Error('PKCS#12 SafeContents Data is not an OCTET STRING.');\n      }\n      safeContents = _decodePkcs7Data(data).value;\n      break;\n    case pki.oids.encryptedData:\n      safeContents = _decryptSafeContents(data, password);\n      obj.encrypted = true;\n      break;\n    default:\n      var error = new Error('Unsupported PKCS#12 contentType.');\n      error.contentType = asn1.derToOid(capture.contentType);\n      throw error;\n    }\n\n    obj.safeBags = _decodeSafeContents(safeContents, strict, password);\n    pfx.safeContents.push(obj);\n  }\n}\n\n/**\n * Decrypt PKCS#7 EncryptedData structure.\n *\n * @param data ASN.1 encoded EncryptedContentInfo object.\n * @param password The user-provided password.\n *\n * @return The decrypted SafeContents (ASN.1 object).\n */\nfunction _decryptSafeContents(data, password) {\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(\n    data, forge.pkcs7.asn1.encryptedDataValidator, capture, errors)) {\n    var error = new Error('Cannot read EncryptedContentInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var oid = asn1.derToOid(capture.contentType);\n  if(oid !== pki.oids.data) {\n    var error = new Error(\n      'PKCS#12 EncryptedContentInfo ContentType is not Data.');\n    error.oid = oid;\n    throw error;\n  }\n\n  // get cipher\n  oid = asn1.derToOid(capture.encAlgorithm);\n  var cipher = pki.pbe.getCipher(oid, capture.encParameter, password);\n\n  // get encrypted data\n  var encryptedContentAsn1 = _decodePkcs7Data(capture.encryptedContentAsn1);\n  var encrypted = forge.util.createBuffer(encryptedContentAsn1.value);\n\n  cipher.update(encrypted);\n  if(!cipher.finish()) {\n    throw new Error('Failed to decrypt PKCS#12 SafeContents.');\n  }\n\n  return cipher.output.getBytes();\n}\n\n/**\n * Decode PKCS#12 SafeContents (BER-encoded) into array of Bag objects.\n *\n * The safeContents is a BER-encoded SEQUENCE OF SafeBag.\n *\n * @param {String} safeContents BER-encoded safeContents.\n * @param strict true to use strict DER decoding, false not to.\n * @param {String} password Password to decrypt with (optional).\n *\n * @return {Array} Array of Bag objects.\n */\nfunction _decodeSafeContents(safeContents, strict, password) {\n  // if strict and no safe contents, return empty safes\n  if(!strict && safeContents.length === 0) {\n    return [];\n  }\n\n  // actually it's BER-encoded\n  safeContents = asn1.fromDer(safeContents, strict);\n\n  if(safeContents.tagClass !== asn1.Class.UNIVERSAL ||\n    safeContents.type !== asn1.Type.SEQUENCE ||\n    safeContents.constructed !== true) {\n    throw new Error(\n      'PKCS#12 SafeContents expected to be a SEQUENCE OF SafeBag.');\n  }\n\n  var res = [];\n  for(var i = 0; i < safeContents.value.length; i++) {\n    var safeBag = safeContents.value[i];\n\n    // validate SafeBag and capture data\n    var capture = {};\n    var errors = [];\n    if(!asn1.validate(safeBag, safeBagValidator, capture, errors)) {\n      var error = new Error('Cannot read SafeBag.');\n      error.errors = errors;\n      throw error;\n    }\n\n    /* Create bag object and push to result array. */\n    var bag = {\n      type: asn1.derToOid(capture.bagId),\n      attributes: _decodeBagAttributes(capture.bagAttributes)\n    };\n    res.push(bag);\n\n    var validator, decoder;\n    var bagAsn1 = capture.bagValue.value[0];\n    switch(bag.type) {\n      case pki.oids.pkcs8ShroudedKeyBag:\n        /* bagAsn1 has a EncryptedPrivateKeyInfo, which we need to decrypt.\n           Afterwards we can handle it like a keyBag,\n           which is a PrivateKeyInfo. */\n        bagAsn1 = pki.decryptPrivateKeyInfo(bagAsn1, password);\n        if(bagAsn1 === null) {\n          throw new Error(\n            'Unable to decrypt PKCS#8 ShroudedKeyBag, wrong password?');\n        }\n\n        /* fall through */\n      case pki.oids.keyBag:\n        /* A PKCS#12 keyBag is a simple PrivateKeyInfo as understood by our\n           PKI module, hence we don't have to do validation/capturing here,\n           just pass what we already got. */\n        try {\n          bag.key = pki.privateKeyFromAsn1(bagAsn1);\n        } catch(e) {\n          // ignore unknown key type, pass asn1 value\n          bag.key = null;\n          bag.asn1 = bagAsn1;\n        }\n        continue;  /* Nothing more to do. */\n\n      case pki.oids.certBag:\n        /* A PKCS#12 certBag can wrap both X.509 and sdsi certificates.\n           Therefore put the SafeBag content through another validator to\n           capture the fields.  Afterwards check & store the results. */\n        validator = certBagValidator;\n        decoder = function() {\n          if(asn1.derToOid(capture.certId) !== pki.oids.x509Certificate) {\n            var error = new Error(\n              'Unsupported certificate type, only X.509 supported.');\n            error.oid = asn1.derToOid(capture.certId);\n            throw error;\n          }\n\n          // true=produce cert hash\n          var certAsn1 = asn1.fromDer(capture.cert, strict);\n          try {\n            bag.cert = pki.certificateFromAsn1(certAsn1, true);\n          } catch(e) {\n            // ignore unknown cert type, pass asn1 value\n            bag.cert = null;\n            bag.asn1 = certAsn1;\n          }\n        };\n        break;\n\n      default:\n        var error = new Error('Unsupported PKCS#12 SafeBag type.');\n        error.oid = bag.type;\n        throw error;\n    }\n\n    /* Validate SafeBag value (i.e. CertBag, etc.) and capture data if needed. */\n    if(validator !== undefined &&\n       !asn1.validate(bagAsn1, validator, capture, errors)) {\n      var error = new Error('Cannot read PKCS#12 ' + validator.name);\n      error.errors = errors;\n      throw error;\n    }\n\n    /* Call decoder function from above to store the results. */\n    decoder();\n  }\n\n  return res;\n}\n\n/**\n * Decode PKCS#12 SET OF PKCS12Attribute into JavaScript object.\n *\n * @param attributes SET OF PKCS12Attribute (ASN.1 object).\n *\n * @return the decoded attributes.\n */\nfunction _decodeBagAttributes(attributes) {\n  var decodedAttrs = {};\n\n  if(attributes !== undefined) {\n    for(var i = 0; i < attributes.length; ++i) {\n      var capture = {};\n      var errors = [];\n      if(!asn1.validate(attributes[i], attributeValidator, capture, errors)) {\n        var error = new Error('Cannot read PKCS#12 BagAttribute.');\n        error.errors = errors;\n        throw error;\n      }\n\n      var oid = asn1.derToOid(capture.oid);\n      if(pki.oids[oid] === undefined) {\n        // unsupported attribute type, ignore.\n        continue;\n      }\n\n      decodedAttrs[pki.oids[oid]] = [];\n      for(var j = 0; j < capture.values.length; ++j) {\n        decodedAttrs[pki.oids[oid]].push(capture.values[j].value);\n      }\n    }\n  }\n\n  return decodedAttrs;\n}\n\n/**\n * Wraps a private key and certificate in a PKCS#12 PFX wrapper. If a\n * password is provided then the private key will be encrypted.\n *\n * An entire certificate chain may also be included. To do this, pass\n * an array for the \"cert\" parameter where the first certificate is\n * the one that is paired with the private key and each subsequent one\n * verifies the previous one. The certificates may be in PEM format or\n * have been already parsed by Forge.\n *\n * @todo implement password-based-encryption for the whole package\n *\n * @param key the private key.\n * @param cert the certificate (may be an array of certificates in order\n *          to specify a certificate chain).\n * @param password the password to use, null for none.\n * @param options:\n *          algorithm the encryption algorithm to use\n *            ('aes128', 'aes192', 'aes256', '3des'), defaults to 'aes128'.\n *          count the iteration count to use.\n *          saltSize the salt size to use.\n *          useMac true to include a MAC, false not to, defaults to true.\n *          localKeyId the local key ID to use, in hex.\n *          friendlyName the friendly name to use.\n *          generateLocalKeyId true to generate a random local key ID,\n *            false not to, defaults to true.\n *\n * @return the PKCS#12 PFX ASN.1 object.\n */\np12.toPkcs12Asn1 = function(key, cert, password, options) {\n  // set default options\n  options = options || {};\n  options.saltSize = options.saltSize || 8;\n  options.count = options.count || 2048;\n  options.algorithm = options.algorithm || options.encAlgorithm || 'aes128';\n  if(!('useMac' in options)) {\n    options.useMac = true;\n  }\n  if(!('localKeyId' in options)) {\n    options.localKeyId = null;\n  }\n  if(!('generateLocalKeyId' in options)) {\n    options.generateLocalKeyId = true;\n  }\n\n  var localKeyId = options.localKeyId;\n  var bagAttrs;\n  if(localKeyId !== null) {\n    localKeyId = forge.util.hexToBytes(localKeyId);\n  } else if(options.generateLocalKeyId) {\n    // use SHA-1 of paired cert, if available\n    if(cert) {\n      var pairedCert = forge.util.isArray(cert) ? cert[0] : cert;\n      if(typeof pairedCert === 'string') {\n        pairedCert = pki.certificateFromPem(pairedCert);\n      }\n      var sha1 = forge.md.sha1.create();\n      sha1.update(asn1.toDer(pki.certificateToAsn1(pairedCert)).getBytes());\n      localKeyId = sha1.digest().getBytes();\n    } else {\n      // FIXME: consider using SHA-1 of public key (which can be generated\n      // from private key components), see: cert.generateSubjectKeyIdentifier\n      // generate random bytes\n      localKeyId = forge.random.getBytes(20);\n    }\n  }\n\n  var attrs = [];\n  if(localKeyId !== null) {\n    attrs.push(\n      // localKeyID\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // attrId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.localKeyId).getBytes()),\n        // attrValues\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            localKeyId)\n        ])\n      ]));\n  }\n  if('friendlyName' in options) {\n    attrs.push(\n      // friendlyName\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // attrId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.friendlyName).getBytes()),\n        // attrValues\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BMPSTRING, false,\n            options.friendlyName)\n        ])\n      ]));\n  }\n\n  if(attrs.length > 0) {\n    bagAttrs = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, attrs);\n  }\n\n  // collect contents for AuthenticatedSafe\n  var contents = [];\n\n  // create safe bag(s) for certificate chain\n  var chain = [];\n  if(cert !== null) {\n    if(forge.util.isArray(cert)) {\n      chain = cert;\n    } else {\n      chain = [cert];\n    }\n  }\n\n  var certSafeBags = [];\n  for(var i = 0; i < chain.length; ++i) {\n    // convert cert from PEM as necessary\n    cert = chain[i];\n    if(typeof cert === 'string') {\n      cert = pki.certificateFromPem(cert);\n    }\n\n    // SafeBag\n    var certBagAttrs = (i === 0) ? bagAttrs : undefined;\n    var certAsn1 = pki.certificateToAsn1(cert);\n    var certSafeBag =\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.certBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // CertBag\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // certId\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(pki.oids.x509Certificate).getBytes()),\n            // certValue (x509Certificate)\n            asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n              asn1.create(\n                asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n                asn1.toDer(certAsn1).getBytes())\n            ])])]),\n        // bagAttributes (OPTIONAL)\n        certBagAttrs\n      ]);\n    certSafeBags.push(certSafeBag);\n  }\n\n  if(certSafeBags.length > 0) {\n    // SafeContents\n    var certSafeContents = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, certSafeBags);\n\n    // ContentInfo\n    var certCI =\n      // PKCS#7 ContentInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // contentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          // OID for the content type is 'data'\n          asn1.oidToDer(pki.oids.data).getBytes()),\n        // content\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            asn1.toDer(certSafeContents).getBytes())\n        ])\n      ]);\n    contents.push(certCI);\n  }\n\n  // create safe contents for private key\n  var keyBag = null;\n  if(key !== null) {\n    // SafeBag\n    var pkAsn1 = pki.wrapRsaPrivateKey(pki.privateKeyToAsn1(key));\n    if(password === null) {\n      // no encryption\n      keyBag = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.keyBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // PrivateKeyInfo\n          pkAsn1\n        ]),\n        // bagAttributes (OPTIONAL)\n        bagAttrs\n      ]);\n    } else {\n      // encrypted PrivateKeyInfo\n      keyBag = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // bagId\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(pki.oids.pkcs8ShroudedKeyBag).getBytes()),\n        // bagValue\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          // EncryptedPrivateKeyInfo\n          pki.encryptPrivateKeyInfo(pkAsn1, password, options)\n        ]),\n        // bagAttributes (OPTIONAL)\n        bagAttrs\n      ]);\n    }\n\n    // SafeContents\n    var keySafeContents =\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [keyBag]);\n\n    // ContentInfo\n    var keyCI =\n      // PKCS#7 ContentInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // contentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          // OID for the content type is 'data'\n          asn1.oidToDer(pki.oids.data).getBytes()),\n        // content\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n            asn1.toDer(keySafeContents).getBytes())\n        ])\n      ]);\n    contents.push(keyCI);\n  }\n\n  // create AuthenticatedSafe by stringing together the contents\n  var safe = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, contents);\n\n  var macData;\n  if(options.useMac) {\n    // MacData\n    var sha1 = forge.md.sha1.create();\n    var macSalt = new forge.util.ByteBuffer(\n      forge.random.getBytes(options.saltSize));\n    var count = options.count;\n    // 160-bit key\n    var key = p12.generateKey(password, macSalt, 3, count, 20);\n    var mac = forge.hmac.create();\n    mac.start(sha1, key);\n    mac.update(asn1.toDer(safe).getBytes());\n    var macValue = mac.getMac();\n    macData = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // mac DigestInfo\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // digestAlgorithm\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // algorithm = SHA-1\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(pki.oids.sha1).getBytes()),\n          // parameters = Null\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n        ]),\n        // digest\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING,\n          false, macValue.getBytes())\n      ]),\n      // macSalt OCTET STRING\n      asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, macSalt.getBytes()),\n      // iterations INTEGER (XXX: Only support count < 65536)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(count).getBytes()\n      )\n    ]);\n  }\n\n  // PFX\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (3)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(3).getBytes()),\n    // PKCS#7 ContentInfo\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // contentType\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        // OID for the content type is 'data'\n        asn1.oidToDer(pki.oids.data).getBytes()),\n      // content\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n          asn1.toDer(safe).getBytes())\n      ])\n    ]),\n    macData\n  ]);\n};\n\n/**\n * Derives a PKCS#12 key.\n *\n * @param password the password to derive the key material from, null or\n *          undefined for none.\n * @param salt the salt, as a ByteBuffer, to use.\n * @param id the PKCS#12 ID byte (1 = key material, 2 = IV, 3 = MAC).\n * @param iter the iteration count.\n * @param n the number of bytes to derive from the password.\n * @param md the message digest to use, defaults to SHA-1.\n *\n * @return a ByteBuffer with the bytes derived from the password.\n */\np12.generateKey = forge.pbe.generatePkcs12Key;\n","/**\n * Javascript implementation of PKCS#7 v1.5.\n *\n * @author Stefan Siegl\n * @author Dave Longley\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n *\n * Currently this implementation only supports ContentType of EnvelopedData,\n * EncryptedData, or SignedData at the root level. The top level elements may\n * contain only a ContentInfo of ContentType Data, i.e. plain data. Further\n * nesting is not (yet) supported.\n *\n * The Forge validators for PKCS #7's ASN.1 structures are available from\n * a separate file pkcs7asn1.js, since those are referenced from other\n * PKCS standards like PKCS #12.\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./oids');\nrequire('./pem');\nrequire('./pkcs7asn1');\nrequire('./random');\nrequire('./util');\nrequire('./x509');\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7 = module.exports = forge.pkcs7 = forge.pkcs7 || {};\n\n/**\n * Converts a PKCS#7 message from PEM format.\n *\n * @param pem the PEM-formatted PKCS#7 message.\n *\n * @return the PKCS#7 message.\n */\np7.messageFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PKCS7') {\n    var error = new Error('Could not convert PKCS#7 message from PEM; PEM ' +\n      'header type is not \"PKCS#7\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert PKCS#7 message from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return p7.messageFromAsn1(obj);\n};\n\n/**\n * Converts a PKCS#7 message to PEM format.\n *\n * @param msg The PKCS#7 message object\n * @param maxline The maximum characters per line, defaults to 64.\n *\n * @return The PEM-formatted PKCS#7 message.\n */\np7.messageToPem = function(msg, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var pemObj = {\n    type: 'PKCS7',\n    body: asn1.toDer(msg.toAsn1()).getBytes()\n  };\n  return forge.pem.encode(pemObj, {maxline: maxline});\n};\n\n/**\n * Converts a PKCS#7 message from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a ContentInfo.\n *\n * @return the PKCS#7 message.\n */\np7.messageFromAsn1 = function(obj) {\n  // validate root level ContentInfo and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.contentInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 message. ' +\n      'ASN.1 object is not an PKCS#7 ContentInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var contentType = asn1.derToOid(capture.contentType);\n  var msg;\n\n  switch(contentType) {\n    case forge.pki.oids.envelopedData:\n      msg = p7.createEnvelopedData();\n      break;\n\n    case forge.pki.oids.encryptedData:\n      msg = p7.createEncryptedData();\n      break;\n\n    case forge.pki.oids.signedData:\n      msg = p7.createSignedData();\n      break;\n\n    default:\n      throw new Error('Cannot read PKCS#7 message. ContentType with OID ' +\n        contentType + ' is not (yet) supported.');\n  }\n\n  msg.fromAsn1(capture.content.value[0]);\n  return msg;\n};\n\np7.createSignedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.signedData,\n    version: 1,\n    certificates: [],\n    crls: [],\n    // TODO: add json-formatted signer stuff here?\n    signers: [],\n    // populated during sign()\n    digestAlgorithmIdentifiers: [],\n    contentInfo: null,\n    signerInfos: [],\n\n    fromAsn1: function(obj) {\n      // validate SignedData content block and capture data.\n      _fromAsn1(msg, obj, p7.asn1.signedDataValidator);\n      msg.certificates = [];\n      msg.crls = [];\n      msg.digestAlgorithmIdentifiers = [];\n      msg.contentInfo = null;\n      msg.signerInfos = [];\n\n      if(msg.rawCapture.certificates) {\n        var certs = msg.rawCapture.certificates.value;\n        for(var i = 0; i < certs.length; ++i) {\n          msg.certificates.push(forge.pki.certificateFromAsn1(certs[i]));\n        }\n      }\n\n      // TODO: parse crls\n    },\n\n    toAsn1: function() {\n      // degenerate case with no content\n      if(!msg.contentInfo) {\n        msg.sign();\n      }\n\n      var certs = [];\n      for(var i = 0; i < msg.certificates.length; ++i) {\n        certs.push(forge.pki.certificateToAsn1(msg.certificates[i]));\n      }\n\n      var crls = [];\n      // TODO: implement CRLs\n\n      // [0] SignedData\n      var signedData = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // Version\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n            asn1.integerToDer(msg.version).getBytes()),\n          // DigestAlgorithmIdentifiers\n          asn1.create(\n            asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n            msg.digestAlgorithmIdentifiers),\n          // ContentInfo\n          msg.contentInfo\n        ])\n      ]);\n      if(certs.length > 0) {\n        // [0] IMPLICIT ExtendedCertificatesAndCertificates OPTIONAL\n        signedData.value[0].value.push(\n          asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, certs));\n      }\n      if(crls.length > 0) {\n        // [1] IMPLICIT CertificateRevocationLists OPTIONAL\n        signedData.value[0].value.push(\n          asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, crls));\n      }\n      // SignerInfos\n      signedData.value[0].value.push(\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n          msg.signerInfos));\n\n      // ContentInfo\n      return asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // ContentType\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(msg.type).getBytes()),\n          // [0] SignedData\n          signedData\n        ]);\n    },\n\n    /**\n     * Add (another) entity to list of signers.\n     *\n     * Note: If authenticatedAttributes are provided, then, per RFC 2315,\n     * they must include at least two attributes: content type and\n     * message digest. The message digest attribute value will be\n     * auto-calculated during signing and will be ignored if provided.\n     *\n     * Here's an example of providing these two attributes:\n     *\n     * forge.pkcs7.createSignedData();\n     * p7.addSigner({\n     *   issuer: cert.issuer.attributes,\n     *   serialNumber: cert.serialNumber,\n     *   key: privateKey,\n     *   digestAlgorithm: forge.pki.oids.sha1,\n     *   authenticatedAttributes: [{\n     *     type: forge.pki.oids.contentType,\n     *     value: forge.pki.oids.data\n     *   }, {\n     *     type: forge.pki.oids.messageDigest\n     *   }]\n     * });\n     *\n     * TODO: Support [subjectKeyIdentifier] as signer's ID.\n     *\n     * @param signer the signer information:\n     *          key the signer's private key.\n     *          [certificate] a certificate containing the public key\n     *            associated with the signer's private key; use this option as\n     *            an alternative to specifying signer.issuer and\n     *            signer.serialNumber.\n     *          [issuer] the issuer attributes (eg: cert.issuer.attributes).\n     *          [serialNumber] the signer's certificate's serial number in\n     *           hexadecimal (eg: cert.serialNumber).\n     *          [digestAlgorithm] the message digest OID, as a string, to use\n     *            (eg: forge.pki.oids.sha1).\n     *          [authenticatedAttributes] an optional array of attributes\n     *            to also sign along with the content.\n     */\n    addSigner: function(signer) {\n      var issuer = signer.issuer;\n      var serialNumber = signer.serialNumber;\n      if(signer.certificate) {\n        var cert = signer.certificate;\n        if(typeof cert === 'string') {\n          cert = forge.pki.certificateFromPem(cert);\n        }\n        issuer = cert.issuer.attributes;\n        serialNumber = cert.serialNumber;\n      }\n      var key = signer.key;\n      if(!key) {\n        throw new Error(\n          'Could not add PKCS#7 signer; no private key specified.');\n      }\n      if(typeof key === 'string') {\n        key = forge.pki.privateKeyFromPem(key);\n      }\n\n      // ensure OID known for digest algorithm\n      var digestAlgorithm = signer.digestAlgorithm || forge.pki.oids.sha1;\n      switch(digestAlgorithm) {\n      case forge.pki.oids.sha1:\n      case forge.pki.oids.sha256:\n      case forge.pki.oids.sha384:\n      case forge.pki.oids.sha512:\n      case forge.pki.oids.md5:\n        break;\n      default:\n        throw new Error(\n          'Could not add PKCS#7 signer; unknown message digest algorithm: ' +\n          digestAlgorithm);\n      }\n\n      // if authenticatedAttributes is present, then the attributes\n      // must contain at least PKCS #9 content-type and message-digest\n      var authenticatedAttributes = signer.authenticatedAttributes || [];\n      if(authenticatedAttributes.length > 0) {\n        var contentType = false;\n        var messageDigest = false;\n        for(var i = 0; i < authenticatedAttributes.length; ++i) {\n          var attr = authenticatedAttributes[i];\n          if(!contentType && attr.type === forge.pki.oids.contentType) {\n            contentType = true;\n            if(messageDigest) {\n              break;\n            }\n            continue;\n          }\n          if(!messageDigest && attr.type === forge.pki.oids.messageDigest) {\n            messageDigest = true;\n            if(contentType) {\n              break;\n            }\n            continue;\n          }\n        }\n\n        if(!contentType || !messageDigest) {\n          throw new Error('Invalid signer.authenticatedAttributes. If ' +\n            'signer.authenticatedAttributes is specified, then it must ' +\n            'contain at least two attributes, PKCS #9 content-type and ' +\n            'PKCS #9 message-digest.');\n        }\n      }\n\n      msg.signers.push({\n        key: key,\n        version: 1,\n        issuer: issuer,\n        serialNumber: serialNumber,\n        digestAlgorithm: digestAlgorithm,\n        signatureAlgorithm: forge.pki.oids.rsaEncryption,\n        signature: null,\n        authenticatedAttributes: authenticatedAttributes,\n        unauthenticatedAttributes: []\n      });\n    },\n\n    /**\n     * Signs the content.\n     * @param options Options to apply when signing:\n     *    [detached] boolean. If signing should be done in detached mode. Defaults to false.\n     */\n    sign: function(options) {\n      options = options || {};\n      // auto-generate content info\n      if(typeof msg.content !== 'object' || msg.contentInfo === null) {\n        // use Data ContentInfo\n        msg.contentInfo = asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // ContentType\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(forge.pki.oids.data).getBytes())\n          ]);\n\n        // add actual content, if present\n        if('content' in msg) {\n          var content;\n          if(msg.content instanceof forge.util.ByteBuffer) {\n            content = msg.content.bytes();\n          } else if(typeof msg.content === 'string') {\n            content = forge.util.encodeUtf8(msg.content);\n          }\n\n          if (options.detached) {\n            msg.detachedContent = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, content);\n          } else {\n            msg.contentInfo.value.push(\n              // [0] EXPLICIT content\n              asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n                asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n                  content)\n              ]));\n          }\n        }\n      }\n\n      // no signers, return early (degenerate case for certificate container)\n      if(msg.signers.length === 0) {\n        return;\n      }\n\n      // generate digest algorithm identifiers\n      var mds = addDigestAlgorithmIds();\n\n      // generate signerInfos\n      addSignerInfos(mds);\n    },\n\n    verify: function() {\n      throw new Error('PKCS#7 signature verification not yet implemented.');\n    },\n\n    /**\n     * Add a certificate.\n     *\n     * @param cert the certificate to add.\n     */\n    addCertificate: function(cert) {\n      // convert from PEM\n      if(typeof cert === 'string') {\n        cert = forge.pki.certificateFromPem(cert);\n      }\n      msg.certificates.push(cert);\n    },\n\n    /**\n     * Add a certificate revokation list.\n     *\n     * @param crl the certificate revokation list to add.\n     */\n    addCertificateRevokationList: function(crl) {\n      throw new Error('PKCS#7 CRL support not yet implemented.');\n    }\n  };\n  return msg;\n\n  function addDigestAlgorithmIds() {\n    var mds = {};\n\n    for(var i = 0; i < msg.signers.length; ++i) {\n      var signer = msg.signers[i];\n      var oid = signer.digestAlgorithm;\n      if(!(oid in mds)) {\n        // content digest\n        mds[oid] = forge.md[forge.pki.oids[oid]].create();\n      }\n      if(signer.authenticatedAttributes.length === 0) {\n        // no custom attributes to digest; use content message digest\n        signer.md = mds[oid];\n      } else {\n        // custom attributes to be digested; use own message digest\n        // TODO: optimize to just copy message digest state if that\n        // feature is ever supported with message digests\n        signer.md = forge.md[forge.pki.oids[oid]].create();\n      }\n    }\n\n    // add unique digest algorithm identifiers\n    msg.digestAlgorithmIdentifiers = [];\n    for(var oid in mds) {\n      msg.digestAlgorithmIdentifiers.push(\n        // AlgorithmIdentifier\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n          // algorithm\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n            asn1.oidToDer(oid).getBytes()),\n          // parameters (null)\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n        ]));\n    }\n\n    return mds;\n  }\n\n  function addSignerInfos(mds) {\n    var content;\n\n    if (msg.detachedContent) {\n      // Signature has been made in detached mode.\n      content = msg.detachedContent;\n    } else {\n      // Note: ContentInfo is a SEQUENCE with 2 values, second value is\n      // the content field and is optional for a ContentInfo but required here\n      // since signers are present\n      // get ContentInfo content\n      content = msg.contentInfo.value[1];\n      // skip [0] EXPLICIT content wrapper\n      content = content.value[0];\n    }\n\n    if(!content) {\n      throw new Error(\n        'Could not sign PKCS#7 message; there is no content to sign.');\n    }\n\n    // get ContentInfo content type\n    var contentType = asn1.derToOid(msg.contentInfo.value[0].value);\n\n    // serialize content\n    var bytes = asn1.toDer(content);\n\n    // skip identifier and length per RFC 2315 9.3\n    // skip identifier (1 byte)\n    bytes.getByte();\n    // read and discard length bytes\n    asn1.getBerValueLength(bytes);\n    bytes = bytes.getBytes();\n\n    // digest content DER value bytes\n    for(var oid in mds) {\n      mds[oid].start().update(bytes);\n    }\n\n    // sign content\n    var signingTime = new Date();\n    for(var i = 0; i < msg.signers.length; ++i) {\n      var signer = msg.signers[i];\n\n      if(signer.authenticatedAttributes.length === 0) {\n        // if ContentInfo content type is not \"Data\", then\n        // authenticatedAttributes must be present per RFC 2315\n        if(contentType !== forge.pki.oids.data) {\n          throw new Error(\n            'Invalid signer; authenticatedAttributes must be present ' +\n            'when the ContentInfo content type is not PKCS#7 Data.');\n        }\n      } else {\n        // process authenticated attributes\n        // [0] IMPLICIT\n        signer.authenticatedAttributesAsn1 = asn1.create(\n          asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n\n        // per RFC 2315, attributes are to be digested using a SET container\n        // not the above [0] IMPLICIT container\n        var attrsAsn1 = asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.SET, true, []);\n\n        for(var ai = 0; ai < signer.authenticatedAttributes.length; ++ai) {\n          var attr = signer.authenticatedAttributes[ai];\n          if(attr.type === forge.pki.oids.messageDigest) {\n            // use content message digest as value\n            attr.value = mds[signer.digestAlgorithm].digest();\n          } else if(attr.type === forge.pki.oids.signingTime) {\n            // auto-populate signing time if not already set\n            if(!attr.value) {\n              attr.value = signingTime;\n            }\n          }\n\n          // convert to ASN.1 and push onto Attributes SET (for signing) and\n          // onto authenticatedAttributesAsn1 to complete SignedData ASN.1\n          // TODO: optimize away duplication\n          attrsAsn1.value.push(_attributeToAsn1(attr));\n          signer.authenticatedAttributesAsn1.value.push(_attributeToAsn1(attr));\n        }\n\n        // DER-serialize and digest SET OF attributes only\n        bytes = asn1.toDer(attrsAsn1).getBytes();\n        signer.md.start().update(bytes);\n      }\n\n      // sign digest\n      signer.signature = signer.key.sign(signer.md, 'RSASSA-PKCS1-V1_5');\n    }\n\n    // add signer info\n    msg.signerInfos = _signersToAsn1(msg.signers);\n  }\n};\n\n/**\n * Creates an empty PKCS#7 message of type EncryptedData.\n *\n * @return the message.\n */\np7.createEncryptedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.encryptedData,\n    version: 0,\n    encryptedContent: {\n      algorithm: forge.pki.oids['aes256-CBC']\n    },\n\n    /**\n     * Reads an EncryptedData content block (in ASN.1 format)\n     *\n     * @param obj The ASN.1 representation of the EncryptedData content block\n     */\n    fromAsn1: function(obj) {\n      // Validate EncryptedData content block and capture data.\n      _fromAsn1(msg, obj, p7.asn1.encryptedDataValidator);\n    },\n\n    /**\n     * Decrypt encrypted content\n     *\n     * @param key The (symmetric) key as a byte buffer\n     */\n    decrypt: function(key) {\n      if(key !== undefined) {\n        msg.encryptedContent.key = key;\n      }\n      _decryptContent(msg);\n    }\n  };\n  return msg;\n};\n\n/**\n * Creates an empty PKCS#7 message of type EnvelopedData.\n *\n * @return the message.\n */\np7.createEnvelopedData = function() {\n  var msg = null;\n  msg = {\n    type: forge.pki.oids.envelopedData,\n    version: 0,\n    recipients: [],\n    encryptedContent: {\n      algorithm: forge.pki.oids['aes256-CBC']\n    },\n\n    /**\n     * Reads an EnvelopedData content block (in ASN.1 format)\n     *\n     * @param obj the ASN.1 representation of the EnvelopedData content block.\n     */\n    fromAsn1: function(obj) {\n      // validate EnvelopedData content block and capture data\n      var capture = _fromAsn1(msg, obj, p7.asn1.envelopedDataValidator);\n      msg.recipients = _recipientsFromAsn1(capture.recipientInfos.value);\n    },\n\n    toAsn1: function() {\n      // ContentInfo\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // ContentType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(msg.type).getBytes()),\n        // [0] EnvelopedData\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            // Version\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n              asn1.integerToDer(msg.version).getBytes()),\n            // RecipientInfos\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true,\n              _recipientsToAsn1(msg.recipients)),\n            // EncryptedContentInfo\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true,\n              _encryptedContentToAsn1(msg.encryptedContent))\n          ])\n        ])\n      ]);\n    },\n\n    /**\n     * Find recipient by X.509 certificate's issuer.\n     *\n     * @param cert the certificate with the issuer to look for.\n     *\n     * @return the recipient object.\n     */\n    findRecipient: function(cert) {\n      var sAttr = cert.issuer.attributes;\n\n      for(var i = 0; i < msg.recipients.length; ++i) {\n        var r = msg.recipients[i];\n        var rAttr = r.issuer;\n\n        if(r.serialNumber !== cert.serialNumber) {\n          continue;\n        }\n\n        if(rAttr.length !== sAttr.length) {\n          continue;\n        }\n\n        var match = true;\n        for(var j = 0; j < sAttr.length; ++j) {\n          if(rAttr[j].type !== sAttr[j].type ||\n            rAttr[j].value !== sAttr[j].value) {\n            match = false;\n            break;\n          }\n        }\n\n        if(match) {\n          return r;\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Decrypt enveloped content\n     *\n     * @param recipient The recipient object related to the private key\n     * @param privKey The (RSA) private key object\n     */\n    decrypt: function(recipient, privKey) {\n      if(msg.encryptedContent.key === undefined && recipient !== undefined &&\n        privKey !== undefined) {\n        switch(recipient.encryptedContent.algorithm) {\n          case forge.pki.oids.rsaEncryption:\n          case forge.pki.oids.desCBC:\n            var key = privKey.decrypt(recipient.encryptedContent.content);\n            msg.encryptedContent.key = forge.util.createBuffer(key);\n            break;\n\n          default:\n            throw new Error('Unsupported asymmetric cipher, ' +\n              'OID ' + recipient.encryptedContent.algorithm);\n        }\n      }\n\n      _decryptContent(msg);\n    },\n\n    /**\n     * Add (another) entity to list of recipients.\n     *\n     * @param cert The certificate of the entity to add.\n     */\n    addRecipient: function(cert) {\n      msg.recipients.push({\n        version: 0,\n        issuer: cert.issuer.attributes,\n        serialNumber: cert.serialNumber,\n        encryptedContent: {\n          // We simply assume rsaEncryption here, since forge.pki only\n          // supports RSA so far.  If the PKI module supports other\n          // ciphers one day, we need to modify this one as well.\n          algorithm: forge.pki.oids.rsaEncryption,\n          key: cert.publicKey\n        }\n      });\n    },\n\n    /**\n     * Encrypt enveloped content.\n     *\n     * This function supports two optional arguments, cipher and key, which\n     * can be used to influence symmetric encryption.  Unless cipher is\n     * provided, the cipher specified in encryptedContent.algorithm is used\n     * (defaults to AES-256-CBC).  If no key is provided, encryptedContent.key\n     * is (re-)used.  If that one's not set, a random key will be generated\n     * automatically.\n     *\n     * @param [key] The key to be used for symmetric encryption.\n     * @param [cipher] The OID of the symmetric cipher to use.\n     */\n    encrypt: function(key, cipher) {\n      // Part 1: Symmetric encryption\n      if(msg.encryptedContent.content === undefined) {\n        cipher = cipher || msg.encryptedContent.algorithm;\n        key = key || msg.encryptedContent.key;\n\n        var keyLen, ivLen, ciphFn;\n        switch(cipher) {\n          case forge.pki.oids['aes128-CBC']:\n            keyLen = 16;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['aes192-CBC']:\n            keyLen = 24;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['aes256-CBC']:\n            keyLen = 32;\n            ivLen = 16;\n            ciphFn = forge.aes.createEncryptionCipher;\n            break;\n\n          case forge.pki.oids['des-EDE3-CBC']:\n            keyLen = 24;\n            ivLen = 8;\n            ciphFn = forge.des.createEncryptionCipher;\n            break;\n\n          default:\n            throw new Error('Unsupported symmetric cipher, OID ' + cipher);\n        }\n\n        if(key === undefined) {\n          key = forge.util.createBuffer(forge.random.getBytes(keyLen));\n        } else if(key.length() != keyLen) {\n          throw new Error('Symmetric key has wrong length; ' +\n            'got ' + key.length() + ' bytes, expected ' + keyLen + '.');\n        }\n\n        // Keep a copy of the key & IV in the object, so the caller can\n        // use it for whatever reason.\n        msg.encryptedContent.algorithm = cipher;\n        msg.encryptedContent.key = key;\n        msg.encryptedContent.parameter = forge.util.createBuffer(\n          forge.random.getBytes(ivLen));\n\n        var ciph = ciphFn(key);\n        ciph.start(msg.encryptedContent.parameter.copy());\n        ciph.update(msg.content);\n\n        // The finish function does PKCS#7 padding by default, therefore\n        // no action required by us.\n        if(!ciph.finish()) {\n          throw new Error('Symmetric encryption failed.');\n        }\n\n        msg.encryptedContent.content = ciph.output;\n      }\n\n      // Part 2: asymmetric encryption for each recipient\n      for(var i = 0; i < msg.recipients.length; ++i) {\n        var recipient = msg.recipients[i];\n\n        // Nothing to do, encryption already done.\n        if(recipient.encryptedContent.content !== undefined) {\n          continue;\n        }\n\n        switch(recipient.encryptedContent.algorithm) {\n          case forge.pki.oids.rsaEncryption:\n            recipient.encryptedContent.content =\n              recipient.encryptedContent.key.encrypt(\n                msg.encryptedContent.key.data);\n            break;\n\n          default:\n            throw new Error('Unsupported asymmetric cipher, OID ' +\n              recipient.encryptedContent.algorithm);\n        }\n      }\n    }\n  };\n  return msg;\n};\n\n/**\n * Converts a single recipient from an ASN.1 object.\n *\n * @param obj the ASN.1 RecipientInfo.\n *\n * @return the recipient object.\n */\nfunction _recipientFromAsn1(obj) {\n  // validate EnvelopedData content block and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.recipientInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 RecipientInfo. ' +\n      'ASN.1 object is not an PKCS#7 RecipientInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  return {\n    version: capture.version.charCodeAt(0),\n    issuer: forge.pki.RDNAttributesAsArray(capture.issuer),\n    serialNumber: forge.util.createBuffer(capture.serial).toHex(),\n    encryptedContent: {\n      algorithm: asn1.derToOid(capture.encAlgorithm),\n      parameter: capture.encParameter ? capture.encParameter.value : undefined,\n      content: capture.encKey\n    }\n  };\n}\n\n/**\n * Converts a single recipient object to an ASN.1 object.\n *\n * @param obj the recipient object.\n *\n * @return the ASN.1 RecipientInfo.\n */\nfunction _recipientToAsn1(obj) {\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // Version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(obj.version).getBytes()),\n    // IssuerAndSerialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Name\n      forge.pki.distinguishedNameToAsn1({attributes: obj.issuer}),\n      // Serial\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(obj.serialNumber))\n    ]),\n    // KeyEncryptionAlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(obj.encryptedContent.algorithm).getBytes()),\n      // Parameter, force NULL, only RSA supported for now.\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // EncryptedKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      obj.encryptedContent.content)\n  ]);\n}\n\n/**\n * Map a set of RecipientInfo ASN.1 objects to recipient objects.\n *\n * @param infos an array of ASN.1 representations RecipientInfo (i.e. SET OF).\n *\n * @return an array of recipient objects.\n */\nfunction _recipientsFromAsn1(infos) {\n  var ret = [];\n  for(var i = 0; i < infos.length; ++i) {\n    ret.push(_recipientFromAsn1(infos[i]));\n  }\n  return ret;\n}\n\n/**\n * Map an array of recipient objects to ASN.1 RecipientInfo objects.\n *\n * @param recipients an array of recipientInfo objects.\n *\n * @return an array of ASN.1 RecipientInfos.\n */\nfunction _recipientsToAsn1(recipients) {\n  var ret = [];\n  for(var i = 0; i < recipients.length; ++i) {\n    ret.push(_recipientToAsn1(recipients[i]));\n  }\n  return ret;\n}\n\n/**\n * Converts a single signer from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a SignerInfo.\n *\n * @return the signer object.\n */\nfunction _signerFromAsn1(obj) {\n  // validate EnvelopedData content block and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, p7.asn1.signerInfoValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 SignerInfo. ' +\n      'ASN.1 object is not an PKCS#7 SignerInfo.');\n    error.errors = errors;\n    throw error;\n  }\n\n  var rval = {\n    version: capture.version.charCodeAt(0),\n    issuer: forge.pki.RDNAttributesAsArray(capture.issuer),\n    serialNumber: forge.util.createBuffer(capture.serial).toHex(),\n    digestAlgorithm: asn1.derToOid(capture.digestAlgorithm),\n    signatureAlgorithm: asn1.derToOid(capture.signatureAlgorithm),\n    signature: capture.signature,\n    authenticatedAttributes: [],\n    unauthenticatedAttributes: []\n  };\n\n  // TODO: convert attributes\n  var authenticatedAttributes = capture.authenticatedAttributes || [];\n  var unauthenticatedAttributes = capture.unauthenticatedAttributes || [];\n\n  return rval;\n}\n\n/**\n * Converts a single signerInfo object to an ASN.1 object.\n *\n * @param obj the signerInfo object.\n *\n * @return the ASN.1 representation of a SignerInfo.\n */\nfunction _signerToAsn1(obj) {\n  // SignerInfo\n  var rval = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(obj.version).getBytes()),\n    // issuerAndSerialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // name\n      forge.pki.distinguishedNameToAsn1({attributes: obj.issuer}),\n      // serial\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        forge.util.hexToBytes(obj.serialNumber))\n    ]),\n    // digestAlgorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(obj.digestAlgorithm).getBytes()),\n      // parameters (null)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ])\n  ]);\n\n  // authenticatedAttributes (OPTIONAL)\n  if(obj.authenticatedAttributesAsn1) {\n    // add ASN.1 previously generated during signing\n    rval.value.push(obj.authenticatedAttributesAsn1);\n  }\n\n  // digestEncryptionAlgorithm\n  rval.value.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // algorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(obj.signatureAlgorithm).getBytes()),\n    // parameters (null)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n  ]));\n\n  // encryptedDigest\n  rval.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, obj.signature));\n\n  // unauthenticatedAttributes (OPTIONAL)\n  if(obj.unauthenticatedAttributes.length > 0) {\n    // [1] IMPLICIT\n    var attrsAsn1 = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, []);\n    for(var i = 0; i < obj.unauthenticatedAttributes.length; ++i) {\n      var attr = obj.unauthenticatedAttributes[i];\n      attrsAsn1.values.push(_attributeToAsn1(attr));\n    }\n    rval.value.push(attrsAsn1);\n  }\n\n  return rval;\n}\n\n/**\n * Map a set of SignerInfo ASN.1 objects to an array of signer objects.\n *\n * @param signerInfoAsn1s an array of ASN.1 SignerInfos (i.e. SET OF).\n *\n * @return an array of signers objects.\n */\nfunction _signersFromAsn1(signerInfoAsn1s) {\n  var ret = [];\n  for(var i = 0; i < signerInfoAsn1s.length; ++i) {\n    ret.push(_signerFromAsn1(signerInfoAsn1s[i]));\n  }\n  return ret;\n}\n\n/**\n * Map an array of signer objects to ASN.1 objects.\n *\n * @param signers an array of signer objects.\n *\n * @return an array of ASN.1 SignerInfos.\n */\nfunction _signersToAsn1(signers) {\n  var ret = [];\n  for(var i = 0; i < signers.length; ++i) {\n    ret.push(_signerToAsn1(signers[i]));\n  }\n  return ret;\n}\n\n/**\n * Convert an attribute object to an ASN.1 Attribute.\n *\n * @param attr the attribute object.\n *\n * @return the ASN.1 Attribute.\n */\nfunction _attributeToAsn1(attr) {\n  var value;\n\n  // TODO: generalize to support more attributes\n  if(attr.type === forge.pki.oids.contentType) {\n    value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(attr.value).getBytes());\n  } else if(attr.type === forge.pki.oids.messageDigest) {\n    value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      attr.value.bytes());\n  } else if(attr.type === forge.pki.oids.signingTime) {\n    /* Note per RFC 2985: Dates between 1 January 1950 and 31 December 2049\n      (inclusive) MUST be encoded as UTCTime. Any dates with year values\n      before 1950 or after 2049 MUST be encoded as GeneralizedTime. [Further,]\n      UTCTime values MUST be expressed in Greenwich Mean Time (Zulu) and MUST\n      include seconds (i.e., times are YYMMDDHHMMSSZ), even where the\n      number of seconds is zero.  Midnight (GMT) must be represented as\n      \"YYMMDD000000Z\". */\n    // TODO: make these module-level constants\n    var jan_1_1950 = new Date('1950-01-01T00:00:00Z');\n    var jan_1_2050 = new Date('2050-01-01T00:00:00Z');\n    var date = attr.value;\n    if(typeof date === 'string') {\n      // try to parse date\n      var timestamp = Date.parse(date);\n      if(!isNaN(timestamp)) {\n        date = new Date(timestamp);\n      } else if(date.length === 13) {\n        // YYMMDDHHMMSSZ (13 chars for UTCTime)\n        date = asn1.utcTimeToDate(date);\n      } else {\n        // assume generalized time\n        date = asn1.generalizedTimeToDate(date);\n      }\n    }\n\n    if(date >= jan_1_1950 && date < jan_1_2050) {\n      value = asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n        asn1.dateToUtcTime(date));\n    } else {\n      value = asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.GENERALIZEDTIME, false,\n        asn1.dateToGeneralizedTime(date));\n    }\n  }\n\n  // TODO: expose as common API call\n  // create a RelativeDistinguishedName set\n  // each value in the set is an AttributeTypeAndValue first\n  // containing the type (an OID) and second the value\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // AttributeType\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(attr.type).getBytes()),\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n      // AttributeValue\n      value\n    ])\n  ]);\n}\n\n/**\n * Map messages encrypted content to ASN.1 objects.\n *\n * @param ec The encryptedContent object of the message.\n *\n * @return ASN.1 representation of the encryptedContent object (SEQUENCE).\n */\nfunction _encryptedContentToAsn1(ec) {\n  return [\n    // ContentType, always Data for the moment\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n      asn1.oidToDer(forge.pki.oids.data).getBytes()),\n    // ContentEncryptionAlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // Algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(ec.algorithm).getBytes()),\n      // Parameters (IV)\n      !ec.parameter ?\n        undefined :\n        asn1.create(\n          asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n          ec.parameter.getBytes())\n    ]),\n    // [0] EncryptedContent\n    asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n        ec.content.getBytes())\n    ])\n  ];\n}\n\n/**\n * Reads the \"common part\" of an PKCS#7 content block (in ASN.1 format)\n *\n * This function reads the \"common part\" of the PKCS#7 content blocks\n * EncryptedData and EnvelopedData, i.e. version number and symmetrically\n * encrypted content block.\n *\n * The result of the ASN.1 validate and capture process is returned\n * to allow the caller to extract further data, e.g. the list of recipients\n * in case of a EnvelopedData object.\n *\n * @param msg the PKCS#7 object to read the data to.\n * @param obj the ASN.1 representation of the content block.\n * @param validator the ASN.1 structure validator object to use.\n *\n * @return the value map captured by validator object.\n */\nfunction _fromAsn1(msg, obj, validator) {\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, validator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#7 message. ' +\n      'ASN.1 object is not a supported PKCS#7 message.');\n    error.errors = error;\n    throw error;\n  }\n\n  // Check contentType, so far we only support (raw) Data.\n  var contentType = asn1.derToOid(capture.contentType);\n  if(contentType !== forge.pki.oids.data) {\n    throw new Error('Unsupported PKCS#7 message. ' +\n      'Only wrapped ContentType Data supported.');\n  }\n\n  if(capture.encryptedContent) {\n    var content = '';\n    if(forge.util.isArray(capture.encryptedContent)) {\n      for(var i = 0; i < capture.encryptedContent.length; ++i) {\n        if(capture.encryptedContent[i].type !== asn1.Type.OCTETSTRING) {\n          throw new Error('Malformed PKCS#7 message, expecting encrypted ' +\n            'content constructed of only OCTET STRING objects.');\n        }\n        content += capture.encryptedContent[i].value;\n      }\n    } else {\n      content = capture.encryptedContent;\n    }\n    msg.encryptedContent = {\n      algorithm: asn1.derToOid(capture.encAlgorithm),\n      parameter: forge.util.createBuffer(capture.encParameter.value),\n      content: forge.util.createBuffer(content)\n    };\n  }\n\n  if(capture.content) {\n    var content = '';\n    if(forge.util.isArray(capture.content)) {\n      for(var i = 0; i < capture.content.length; ++i) {\n        if(capture.content[i].type !== asn1.Type.OCTETSTRING) {\n          throw new Error('Malformed PKCS#7 message, expecting ' +\n            'content constructed of only OCTET STRING objects.');\n        }\n        content += capture.content[i].value;\n      }\n    } else {\n      content = capture.content;\n    }\n    msg.content = forge.util.createBuffer(content);\n  }\n\n  msg.version = capture.version.charCodeAt(0);\n  msg.rawCapture = capture;\n\n  return capture;\n}\n\n/**\n * Decrypt the symmetrically encrypted content block of the PKCS#7 message.\n *\n * Decryption is skipped in case the PKCS#7 message object already has a\n * (decrypted) content attribute.  The algorithm, key and cipher parameters\n * (probably the iv) are taken from the encryptedContent attribute of the\n * message object.\n *\n * @param The PKCS#7 message object.\n */\nfunction _decryptContent(msg) {\n  if(msg.encryptedContent.key === undefined) {\n    throw new Error('Symmetric key not available.');\n  }\n\n  if(msg.content === undefined) {\n    var ciph;\n\n    switch(msg.encryptedContent.algorithm) {\n      case forge.pki.oids['aes128-CBC']:\n      case forge.pki.oids['aes192-CBC']:\n      case forge.pki.oids['aes256-CBC']:\n        ciph = forge.aes.createDecryptionCipher(msg.encryptedContent.key);\n        break;\n\n      case forge.pki.oids['desCBC']:\n      case forge.pki.oids['des-EDE3-CBC']:\n        ciph = forge.des.createDecryptionCipher(msg.encryptedContent.key);\n        break;\n\n      default:\n        throw new Error('Unsupported symmetric cipher, OID ' +\n          msg.encryptedContent.algorithm);\n    }\n    ciph.start(msg.encryptedContent.parameter);\n    ciph.update(msg.encryptedContent.content);\n\n    if(!ciph.finish()) {\n      throw new Error('Symmetric decryption failed.');\n    }\n\n    msg.content = ciph.output;\n  }\n}\n","/**\n * Javascript implementation of ASN.1 validators for PKCS#7 v1.5.\n *\n * @author Dave Longley\n * @author Stefan Siegl\n *\n * Copyright (c) 2012-2015 Digital Bazaar, Inc.\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * The ASN.1 representation of PKCS#7 is as follows\n * (see RFC #2315 for details, http://www.ietf.org/rfc/rfc2315.txt):\n *\n * A PKCS#7 message consists of a ContentInfo on root level, which may\n * contain any number of further ContentInfo nested into it.\n *\n * ContentInfo ::= SEQUENCE {\n *   contentType                ContentType,\n *   content               [0]  EXPLICIT ANY DEFINED BY contentType OPTIONAL\n * }\n *\n * ContentType ::= OBJECT IDENTIFIER\n *\n * EnvelopedData ::= SEQUENCE {\n *   version                    Version,\n *   recipientInfos             RecipientInfos,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * EncryptedData ::= SEQUENCE {\n *   version                    Version,\n *   encryptedContentInfo       EncryptedContentInfo\n * }\n *\n * id-signedData OBJECT IDENTIFIER ::= { iso(1) member-body(2)\n *   us(840) rsadsi(113549) pkcs(1) pkcs7(7) 2 }\n *\n * SignedData ::= SEQUENCE {\n *   version           INTEGER,\n *   digestAlgorithms  DigestAlgorithmIdentifiers,\n *   contentInfo       ContentInfo,\n *   certificates      [0] IMPLICIT Certificates OPTIONAL,\n *   crls              [1] IMPLICIT CertificateRevocationLists OPTIONAL,\n *   signerInfos       SignerInfos\n * }\n *\n * SignerInfos ::= SET OF SignerInfo\n *\n * SignerInfo ::= SEQUENCE {\n *   version                    Version,\n *   issuerAndSerialNumber      IssuerAndSerialNumber,\n *   digestAlgorithm            DigestAlgorithmIdentifier,\n *   authenticatedAttributes    [0] IMPLICIT Attributes OPTIONAL,\n *   digestEncryptionAlgorithm  DigestEncryptionAlgorithmIdentifier,\n *   encryptedDigest            EncryptedDigest,\n *   unauthenticatedAttributes  [1] IMPLICIT Attributes OPTIONAL\n * }\n *\n * EncryptedDigest ::= OCTET STRING\n *\n * Attributes ::= SET OF Attribute\n *\n * Attribute ::= SEQUENCE {\n *   attrType    OBJECT IDENTIFIER,\n *   attrValues  SET OF AttributeValue\n * }\n *\n * AttributeValue ::= ANY\n *\n * Version ::= INTEGER\n *\n * RecipientInfos ::= SET OF RecipientInfo\n *\n * EncryptedContentInfo ::= SEQUENCE {\n *   contentType                 ContentType,\n *   contentEncryptionAlgorithm  ContentEncryptionAlgorithmIdentifier,\n *   encryptedContent       [0]  IMPLICIT EncryptedContent OPTIONAL\n * }\n *\n * ContentEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of AES and DES3, there is only one,\n * the IV.\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *    algorithm OBJECT IDENTIFIER,\n *    parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * EncryptedContent ::= OCTET STRING\n *\n * RecipientInfo ::= SEQUENCE {\n *   version                     Version,\n *   issuerAndSerialNumber       IssuerAndSerialNumber,\n *   keyEncryptionAlgorithm      KeyEncryptionAlgorithmIdentifier,\n *   encryptedKey                EncryptedKey\n * }\n *\n * IssuerAndSerialNumber ::= SEQUENCE {\n *   issuer                      Name,\n *   serialNumber                CertificateSerialNumber\n * }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * KeyEncryptionAlgorithmIdentifier ::= AlgorithmIdentifier\n *\n * EncryptedKey ::= OCTET STRING\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./util');\n\n// shortcut for ASN.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for PKCS#7 API\nvar p7v = module.exports = forge.pkcs7asn1 = forge.pkcs7asn1 || {};\nforge.pkcs7 = forge.pkcs7 || {};\nforge.pkcs7.asn1 = p7v;\n\nvar contentInfoValidator = {\n  name: 'ContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'ContentInfo.ContentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'ContentInfo.content',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    captureAsn1: 'content'\n  }]\n};\np7v.contentInfoValidator = contentInfoValidator;\n\nvar encryptedContentInfoValidator = {\n  name: 'EncryptedContentInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedContentInfo.contentType',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OID,\n    constructed: false,\n    capture: 'contentType'\n  }, {\n    name: 'EncryptedContentInfo.contentEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'EncryptedContentInfo.contentEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      captureAsn1: 'encParameter'\n    }]\n  }, {\n    name: 'EncryptedContentInfo.encryptedContent',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    /* The PKCS#7 structure output by OpenSSL somewhat differs from what\n     * other implementations do generate.\n     *\n     * OpenSSL generates a structure like this:\n     * SEQUENCE {\n     *    ...\n     *    [0]\n     *       26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *       C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *       ...\n     * }\n     *\n     * Whereas other implementations (and this PKCS#7 module) generate:\n     * SEQUENCE {\n     *    ...\n     *    [0] {\n     *       OCTET STRING\n     *          26 DA 67 D2 17 9C 45 3C B1 2A A8 59 2F 29 33 38\n     *          C3 C3 DF 86 71 74 7A 19 9F 40 D0 29 BE 85 90 45\n     *          ...\n     *    }\n     * }\n     *\n     * In order to support both, we just capture the context specific\n     * field here.  The OCTET STRING bit is removed below.\n     */\n    capture: 'encryptedContent',\n    captureAsn1: 'encryptedContentAsn1'\n  }]\n};\n\np7v.envelopedDataValidator = {\n  name: 'EnvelopedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EnvelopedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'EnvelopedData.RecipientInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'recipientInfos'\n  }].concat(encryptedContentInfoValidator)\n};\n\np7v.encryptedDataValidator = {\n  name: 'EncryptedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'EncryptedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }].concat(encryptedContentInfoValidator)\n};\n\nvar signerValidator = {\n  name: 'SignerInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignerInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false\n  }, {\n    name: 'SignerInfo.issuerAndSerialNumber',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.issuerAndSerialNumber.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'SignerInfo.issuerAndSerialNumber.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'SignerInfo.digestAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'SignerInfo.digestAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'digestAlgorithm'\n    }, {\n      name: 'SignerInfo.digestAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'digestParameter',\n      optional: true\n    }]\n  }, {\n    name: 'SignerInfo.authenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'authenticatedAttributes'\n  }, {\n    name: 'SignerInfo.digestEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    capture: 'signatureAlgorithm'\n  }, {\n    name: 'SignerInfo.encryptedDigest',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'signature'\n  }, {\n    name: 'SignerInfo.unauthenticatedAttributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    optional: true,\n    capture: 'unauthenticatedAttributes'\n  }]\n};\n\np7v.signedDataValidator = {\n  name: 'SignedData',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'SignedData.Version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'SignedData.DigestAlgorithms',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    constructed: true,\n    captureAsn1: 'digestAlgorithms'\n  },\n  contentInfoValidator,\n  {\n    name: 'SignedData.Certificates',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    optional: true,\n    captureAsn1: 'certificates'\n  }, {\n    name: 'SignedData.CertificateRevocationLists',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    optional: true,\n    captureAsn1: 'crls'\n  }, {\n    name: 'SignedData.SignerInfos',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SET,\n    capture: 'signerInfos',\n    optional: true,\n    value: [signerValidator]\n  }]\n};\n\np7v.recipientInfoValidator = {\n  name: 'RecipientInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'RecipientInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'version'\n  }, {\n    name: 'RecipientInfo.issuerAndSerial',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.issuerAndSerial.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'issuer'\n    }, {\n      name: 'RecipientInfo.issuerAndSerial.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'serial'\n    }]\n  }, {\n    name: 'RecipientInfo.keyEncryptionAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'RecipientInfo.keyEncryptionAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'encAlgorithm'\n    }, {\n      name: 'RecipientInfo.keyEncryptionAlgorithm.parameter',\n      tagClass: asn1.Class.UNIVERSAL,\n      constructed: false,\n      captureAsn1: 'encParameter',\n      optional: true\n    }]\n  }, {\n    name: 'RecipientInfo.encryptedKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'encKey'\n  }]\n};\n","/**\n * Javascript implementation of a basic Public Key Infrastructure, including\n * support for RSA public and private keys.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2013 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./oids');\nrequire('./pbe');\nrequire('./pem');\nrequire('./pbkdf2');\nrequire('./pkcs12');\nrequire('./pss');\nrequire('./rsa');\nrequire('./util');\nrequire('./x509');\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Public Key Infrastructure (PKI) implementation. */\nvar pki = module.exports = forge.pki = forge.pki || {};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED. Use pem.decode() instead.\n *\n * Converts PEM-formatted data to DER.\n *\n * @param pem the PEM-formatted data.\n *\n * @return the DER-formatted data.\n */\npki.pemToDer = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert PEM to DER; PEM is encrypted.');\n  }\n  return forge.util.createBuffer(msg.body);\n};\n\n/**\n * Converts an RSA private key from PEM format.\n *\n * @param pem the PEM-formatted private key.\n *\n * @return the private key.\n */\npki.privateKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PRIVATE KEY' && msg.type !== 'RSA PRIVATE KEY') {\n    var error = new Error('Could not convert private key from PEM; PEM ' +\n      'header type is not \"PRIVATE KEY\" or \"RSA PRIVATE KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert private key from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return pki.privateKeyFromAsn1(obj);\n};\n\n/**\n * Converts an RSA private key to PEM format.\n *\n * @param key the private key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted private key.\n */\npki.privateKeyToPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'RSA PRIVATE KEY',\n    body: asn1.toDer(pki.privateKeyToAsn1(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts a PrivateKeyInfo to PEM format.\n *\n * @param pki the PrivateKeyInfo.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted private key.\n */\npki.privateKeyInfoToPem = function(pki, maxline) {\n  // convert to DER, then PEM-encode\n  var msg = {\n    type: 'PRIVATE KEY',\n    body: asn1.toDer(pki).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n","/**\n * Prime number generation API.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\nrequire('./jsbn');\nrequire('./random');\n\n(function() {\n\n// forge.prime already defined\nif(forge.prime) {\n  module.exports = forge.prime;\n  return;\n}\n\n/* PRIME API */\nvar prime = module.exports = forge.prime = forge.prime || {};\n\nvar BigInteger = forge.jsbn.BigInteger;\n\n// primes are 30k+i for i = 1, 7, 11, 13, 17, 19, 23, 29\nvar GCD_30_DELTA = [6, 4, 2, 4, 2, 4, 6, 2];\nvar THIRTY = new BigInteger(null);\nTHIRTY.fromInt(30);\nvar op_or = function(x, y) {return x|y;};\n\n/**\n * Generates a random probable prime with the given number of bits.\n *\n * Alternative algorithms can be specified by name as a string or as an\n * object with custom options like so:\n *\n * {\n *   name: 'PRIMEINC',\n *   options: {\n *     maxBlockTime: <the maximum amount of time to block the main\n *       thread before allowing I/O other JS to run>,\n *     millerRabinTests: <the number of miller-rabin tests to run>,\n *     workerScript: <the worker script URL>,\n *     workers: <the number of web workers (if supported) to use,\n *       -1 to use estimated cores minus one>.\n *     workLoad: the size of the work load, ie: number of possible prime\n *       numbers for each web worker to check per work assignment,\n *       (default: 100).\n *   }\n * }\n *\n * @param bits the number of bits for the prime number.\n * @param options the options to use.\n *          [algorithm] the algorithm to use (default: 'PRIMEINC').\n *          [prng] a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n *\n * @return callback(err, num) called once the operation completes.\n */\nprime.generateProbablePrime = function(bits, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  // default to PRIMEINC algorithm\n  var algorithm = options.algorithm || 'PRIMEINC';\n  if(typeof algorithm === 'string') {\n    algorithm = {name: algorithm};\n  }\n  algorithm.options = algorithm.options || {};\n\n  // create prng with api that matches BigInteger secure random\n  var prng = options.prng || forge.random;\n  var rng = {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      var b = prng.getBytesSync(x.length);\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = b.charCodeAt(i);\n      }\n    }\n  };\n\n  if(algorithm.name === 'PRIMEINC') {\n    return primeincFindPrime(bits, rng, algorithm.options, callback);\n  }\n\n  throw new Error('Invalid prime generation algorithm: ' + algorithm.name);\n};\n\nfunction primeincFindPrime(bits, rng, options, callback) {\n  if('workers' in options) {\n    return primeincFindPrimeWithWorkers(bits, rng, options, callback);\n  }\n  return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n}\n\nfunction primeincFindPrimeWithoutWorkers(bits, rng, options, callback) {\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  /* Note: All primes are of the form 30k+i for i < 30 and gcd(30, i)=1. The\n  number we are given is always aligned at 30k + 1. Each time the number is\n  determined not to be prime we add to get to the next 'i', eg: if the number\n  was at 30k + 1 we add 6. */\n  var deltaIdx = 0;\n\n  // get required number of MR tests\n  var mrTests = getMillerRabinTests(num.bitLength());\n  if('millerRabinTests' in options) {\n    mrTests = options.millerRabinTests;\n  }\n\n  // find prime nearest to 'num' for maxBlockTime ms\n  // 10 ms gives 5ms of leeway for other calculations before dropping\n  // below 60fps (1000/60 == 16.67), but in reality, the number will\n  // likely be higher due to an 'atomic' big int modPow\n  var maxBlockTime = 10;\n  if('maxBlockTime' in options) {\n    maxBlockTime = options.maxBlockTime;\n  }\n\n  _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback);\n}\n\nfunction _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback) {\n  var start = +new Date();\n  do {\n    // overflow, regenerate random number\n    if(num.bitLength() > bits) {\n      num = generateRandom(bits, rng);\n    }\n    // do primality test\n    if(num.isProbablePrime(mrTests)) {\n      return callback(null, num);\n    }\n    // get next potential prime\n    num.dAddOffset(GCD_30_DELTA[deltaIdx++ % 8], 0);\n  } while(maxBlockTime < 0 || (+new Date() - start < maxBlockTime));\n\n  // keep trying later\n  forge.util.setImmediate(function() {\n    _primeinc(num, bits, rng, deltaIdx, mrTests, maxBlockTime, callback);\n  });\n}\n\n// NOTE: This algorithm is indeterminate in nature because workers\n// run in parallel looking at different segments of numbers. Even if this\n// algorithm is run twice with the same input from a predictable RNG, it\n// may produce different outputs.\nfunction primeincFindPrimeWithWorkers(bits, rng, options, callback) {\n  // web workers unavailable\n  if(typeof Worker === 'undefined') {\n    return primeincFindPrimeWithoutWorkers(bits, rng, options, callback);\n  }\n\n  // initialize random number\n  var num = generateRandom(bits, rng);\n\n  // use web workers to generate keys\n  var numWorkers = options.workers;\n  var workLoad = options.workLoad || 100;\n  var range = workLoad * 30 / 8;\n  var workerScript = options.workerScript || 'forge/prime.worker.js';\n  if(numWorkers === -1) {\n    return forge.util.estimateCores(function(err, cores) {\n      if(err) {\n        // default to 2\n        cores = 2;\n      }\n      numWorkers = cores - 1;\n      generate();\n    });\n  }\n  generate();\n\n  function generate() {\n    // require at least 1 worker\n    numWorkers = Math.max(1, numWorkers);\n\n    // TODO: consider optimizing by starting workers outside getPrime() ...\n    // note that in order to clean up they will have to be made internally\n    // asynchronous which may actually be slower\n\n    // start workers immediately\n    var workers = [];\n    for(var i = 0; i < numWorkers; ++i) {\n      // FIXME: fix path or use blob URLs\n      workers[i] = new Worker(workerScript);\n    }\n    var running = numWorkers;\n\n    // listen for requests from workers and assign ranges to find prime\n    for(var i = 0; i < numWorkers; ++i) {\n      workers[i].addEventListener('message', workerMessage);\n    }\n\n    /* Note: The distribution of random numbers is unknown. Therefore, each\n    web worker is continuously allocated a range of numbers to check for a\n    random number until one is found.\n\n    Every 30 numbers will be checked just 8 times, because prime numbers\n    have the form:\n\n    30k+i, for i < 30 and gcd(30, i)=1 (there are 8 values of i for this)\n\n    Therefore, if we want a web worker to run N checks before asking for\n    a new range of numbers, each range must contain N*30/8 numbers.\n\n    For 100 checks (workLoad), this is a range of 375. */\n\n    var found = false;\n    function workerMessage(e) {\n      // ignore message, prime already found\n      if(found) {\n        return;\n      }\n\n      --running;\n      var data = e.data;\n      if(data.found) {\n        // terminate all workers\n        for(var i = 0; i < workers.length; ++i) {\n          workers[i].terminate();\n        }\n        found = true;\n        return callback(null, new BigInteger(data.prime, 16));\n      }\n\n      // overflow, regenerate random number\n      if(num.bitLength() > bits) {\n        num = generateRandom(bits, rng);\n      }\n\n      // assign new range to check\n      var hex = num.toString(16);\n\n      // start prime search\n      e.target.postMessage({\n        hex: hex,\n        workLoad: workLoad\n      });\n\n      num.dAddOffset(range, 0);\n    }\n  }\n}\n\n/**\n * Generates a random number using the given number of bits and RNG.\n *\n * @param bits the number of bits for the number.\n * @param rng the random number generator to use.\n *\n * @return the random number.\n */\nfunction generateRandom(bits, rng) {\n  var num = new BigInteger(bits, rng);\n  // force MSB set\n  var bits1 = bits - 1;\n  if(!num.testBit(bits1)) {\n    num.bitwiseTo(BigInteger.ONE.shiftLeft(bits1), op_or, num);\n  }\n  // align number on 30k+1 boundary\n  num.dAddOffset(31 - num.mod(THIRTY).byteValue(), 0);\n  return num;\n}\n\n/**\n * Returns the required number of Miller-Rabin tests to generate a\n * prime with an error probability of (1/2)^80.\n *\n * See Handbook of Applied Cryptography Chapter 4, Table 4.4.\n *\n * @param bits the bit size.\n *\n * @return the required number of iterations.\n */\nfunction getMillerRabinTests(bits) {\n  if(bits <= 100) return 27;\n  if(bits <= 150) return 18;\n  if(bits <= 200) return 15;\n  if(bits <= 250) return 12;\n  if(bits <= 300) return 9;\n  if(bits <= 350) return 8;\n  if(bits <= 400) return 7;\n  if(bits <= 500) return 6;\n  if(bits <= 600) return 5;\n  if(bits <= 800) return 4;\n  if(bits <= 1250) return 3;\n  return 2;\n}\n\n})();\n","/**\n * A javascript implementation of a cryptographically-secure\n * Pseudo Random Number Generator (PRNG). The Fortuna algorithm is followed\n * here though the use of SHA-256 is not enforced; when generating an\n * a PRNG context, the hashing algorithm and block cipher used for\n * the generator are specified via a plugin.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./util');\n\nvar _crypto = null;\nif(forge.util.isNodejs && !forge.options.usePureJavaScript &&\n  !process.versions['node-webkit']) {\n  _crypto = require('crypto');\n}\n\n/* PRNG API */\nvar prng = module.exports = forge.prng = forge.prng || {};\n\n/**\n * Creates a new PRNG context.\n *\n * A PRNG plugin must be passed in that will provide:\n *\n * 1. A function that initializes the key and seed of a PRNG context. It\n *   will be given a 16 byte key and a 16 byte seed. Any key expansion\n *   or transformation of the seed from a byte string into an array of\n *   integers (or similar) should be performed.\n * 2. The cryptographic function used by the generator. It takes a key and\n *   a seed.\n * 3. A seed increment function. It takes the seed and returns seed + 1.\n * 4. An api to create a message digest.\n *\n * For an example, see random.js.\n *\n * @param plugin the PRNG plugin to use.\n */\nprng.create = function(plugin) {\n  var ctx = {\n    plugin: plugin,\n    key: null,\n    seed: null,\n    time: null,\n    // number of reseeds so far\n    reseeds: 0,\n    // amount of data generated so far\n    generated: 0,\n    // no initial key bytes\n    keyBytes: ''\n  };\n\n  // create 32 entropy pools (each is a message digest)\n  var md = plugin.md;\n  var pools = new Array(32);\n  for(var i = 0; i < 32; ++i) {\n    pools[i] = md.create();\n  }\n  ctx.pools = pools;\n\n  // entropy pools are written to cyclically, starting at index 0\n  ctx.pool = 0;\n\n  /**\n   * Generates random bytes. The bytes may be generated synchronously or\n   * asynchronously. Web workers must use the asynchronous interface or\n   * else the behavior is undefined.\n   *\n   * @param count the number of random bytes to generate.\n   * @param [callback(err, bytes)] called once the operation completes.\n   *\n   * @return count random bytes as a string.\n   */\n  ctx.generate = function(count, callback) {\n    // do synchronously\n    if(!callback) {\n      return ctx.generateSync(count);\n    }\n\n    // simple generator using counter-based CBC\n    var cipher = ctx.plugin.cipher;\n    var increment = ctx.plugin.increment;\n    var formatKey = ctx.plugin.formatKey;\n    var formatSeed = ctx.plugin.formatSeed;\n    var b = forge.util.createBuffer();\n\n    // paranoid deviation from Fortuna:\n    // reset key for every request to protect previously\n    // generated random bytes should the key be discovered;\n    // there is no 100ms based reseeding because of this\n    // forced reseed for every `generate` call\n    ctx.key = null;\n\n    generate();\n\n    function generate(err) {\n      if(err) {\n        return callback(err);\n      }\n\n      // sufficient bytes generated\n      if(b.length() >= count) {\n        return callback(null, b.getBytes(count));\n      }\n\n      // if amount of data generated is greater than 1 MiB, trigger reseed\n      if(ctx.generated > 0xfffff) {\n        ctx.key = null;\n      }\n\n      if(ctx.key === null) {\n        // prevent stack overflow\n        return forge.util.nextTick(function() {\n          _reseed(generate);\n        });\n      }\n\n      // generate the random bytes\n      var bytes = cipher(ctx.key, ctx.seed);\n      ctx.generated += bytes.length;\n      b.putBytes(bytes);\n\n      // generate bytes for a new key and seed\n      ctx.key = formatKey(cipher(ctx.key, increment(ctx.seed)));\n      ctx.seed = formatSeed(cipher(ctx.key, ctx.seed));\n\n      forge.util.setImmediate(generate);\n    }\n  };\n\n  /**\n   * Generates random bytes synchronously.\n   *\n   * @param count the number of random bytes to generate.\n   *\n   * @return count random bytes as a string.\n   */\n  ctx.generateSync = function(count) {\n    // simple generator using counter-based CBC\n    var cipher = ctx.plugin.cipher;\n    var increment = ctx.plugin.increment;\n    var formatKey = ctx.plugin.formatKey;\n    var formatSeed = ctx.plugin.formatSeed;\n\n    // paranoid deviation from Fortuna:\n    // reset key for every request to protect previously\n    // generated random bytes should the key be discovered;\n    // there is no 100ms based reseeding because of this\n    // forced reseed for every `generateSync` call\n    ctx.key = null;\n\n    var b = forge.util.createBuffer();\n    while(b.length() < count) {\n      // if amount of data generated is greater than 1 MiB, trigger reseed\n      if(ctx.generated > 0xfffff) {\n        ctx.key = null;\n      }\n\n      if(ctx.key === null) {\n        _reseedSync();\n      }\n\n      // generate the random bytes\n      var bytes = cipher(ctx.key, ctx.seed);\n      ctx.generated += bytes.length;\n      b.putBytes(bytes);\n\n      // generate bytes for a new key and seed\n      ctx.key = formatKey(cipher(ctx.key, increment(ctx.seed)));\n      ctx.seed = formatSeed(cipher(ctx.key, ctx.seed));\n    }\n\n    return b.getBytes(count);\n  };\n\n  /**\n   * Private function that asynchronously reseeds a generator.\n   *\n   * @param callback(err) called once the operation completes.\n   */\n  function _reseed(callback) {\n    if(ctx.pools[0].messageLength >= 32) {\n      _seed();\n      return callback();\n    }\n    // not enough seed data...\n    var needed = (32 - ctx.pools[0].messageLength) << 5;\n    ctx.seedFile(needed, function(err, bytes) {\n      if(err) {\n        return callback(err);\n      }\n      ctx.collect(bytes);\n      _seed();\n      callback();\n    });\n  }\n\n  /**\n   * Private function that synchronously reseeds a generator.\n   */\n  function _reseedSync() {\n    if(ctx.pools[0].messageLength >= 32) {\n      return _seed();\n    }\n    // not enough seed data...\n    var needed = (32 - ctx.pools[0].messageLength) << 5;\n    ctx.collect(ctx.seedFileSync(needed));\n    _seed();\n  }\n\n  /**\n   * Private function that seeds a generator once enough bytes are available.\n   */\n  function _seed() {\n    // update reseed count\n    ctx.reseeds = (ctx.reseeds === 0xffffffff) ? 0 : ctx.reseeds + 1;\n\n    // goal is to update `key` via:\n    // key = hash(key + s)\n    //   where 's' is all collected entropy from selected pools, then...\n\n    // create a plugin-based message digest\n    var md = ctx.plugin.md.create();\n\n    // consume current key bytes\n    md.update(ctx.keyBytes);\n\n    // digest the entropy of pools whose index k meet the\n    // condition 'n mod 2^k == 0' where n is the number of reseeds\n    var _2powK = 1;\n    for(var k = 0; k < 32; ++k) {\n      if(ctx.reseeds % _2powK === 0) {\n        md.update(ctx.pools[k].digest().getBytes());\n        ctx.pools[k].start();\n      }\n      _2powK = _2powK << 1;\n    }\n\n    // get digest for key bytes\n    ctx.keyBytes = md.digest().getBytes();\n\n    // paranoid deviation from Fortuna:\n    // update `seed` via `seed = hash(key)`\n    // instead of initializing to zero once and only\n    // ever incrementing it\n    md.start();\n    md.update(ctx.keyBytes);\n    var seedBytes = md.digest().getBytes();\n\n    // update state\n    ctx.key = ctx.plugin.formatKey(ctx.keyBytes);\n    ctx.seed = ctx.plugin.formatSeed(seedBytes);\n    ctx.generated = 0;\n  }\n\n  /**\n   * The built-in default seedFile. This seedFile is used when entropy\n   * is needed immediately.\n   *\n   * @param needed the number of bytes that are needed.\n   *\n   * @return the random bytes.\n   */\n  function defaultSeedFile(needed) {\n    // use window.crypto.getRandomValues strong source of entropy if available\n    var getRandomValues = null;\n    var globalScope = forge.util.globalScope;\n    var _crypto = globalScope.crypto || globalScope.msCrypto;\n    if(_crypto && _crypto.getRandomValues) {\n      getRandomValues = function(arr) {\n        return _crypto.getRandomValues(arr);\n      };\n    }\n\n    var b = forge.util.createBuffer();\n    if(getRandomValues) {\n      while(b.length() < needed) {\n        // max byte length is 65536 before QuotaExceededError is thrown\n        // http://www.w3.org/TR/WebCryptoAPI/#RandomSource-method-getRandomValues\n        var count = Math.max(1, Math.min(needed - b.length(), 65536) / 4);\n        var entropy = new Uint32Array(Math.floor(count));\n        try {\n          getRandomValues(entropy);\n          for(var i = 0; i < entropy.length; ++i) {\n            b.putInt32(entropy[i]);\n          }\n        } catch(e) {\n          /* only ignore QuotaExceededError */\n          if(!(typeof QuotaExceededError !== 'undefined' &&\n            e instanceof QuotaExceededError)) {\n            throw e;\n          }\n        }\n      }\n    }\n\n    // be sad and add some weak random data\n    if(b.length() < needed) {\n      /* Draws from Park-Miller \"minimal standard\" 31 bit PRNG,\n      implemented with David G. Carta's optimization: with 32 bit math\n      and without division (Public Domain). */\n      var hi, lo, next;\n      var seed = Math.floor(Math.random() * 0x010000);\n      while(b.length() < needed) {\n        lo = 16807 * (seed & 0xFFFF);\n        hi = 16807 * (seed >> 16);\n        lo += (hi & 0x7FFF) << 16;\n        lo += hi >> 15;\n        lo = (lo & 0x7FFFFFFF) + (lo >> 31);\n        seed = lo & 0xFFFFFFFF;\n\n        // consume lower 3 bytes of seed\n        for(var i = 0; i < 3; ++i) {\n          // throw in more pseudo random\n          next = seed >>> (i << 3);\n          next ^= Math.floor(Math.random() * 0x0100);\n          b.putByte(next & 0xFF);\n        }\n      }\n    }\n\n    return b.getBytes(needed);\n  }\n  // initialize seed file APIs\n  if(_crypto) {\n    // use nodejs async API\n    ctx.seedFile = function(needed, callback) {\n      _crypto.randomBytes(needed, function(err, bytes) {\n        if(err) {\n          return callback(err);\n        }\n        callback(null, bytes.toString());\n      });\n    };\n    // use nodejs sync API\n    ctx.seedFileSync = function(needed) {\n      return _crypto.randomBytes(needed).toString();\n    };\n  } else {\n    ctx.seedFile = function(needed, callback) {\n      try {\n        callback(null, defaultSeedFile(needed));\n      } catch(e) {\n        callback(e);\n      }\n    };\n    ctx.seedFileSync = defaultSeedFile;\n  }\n\n  /**\n   * Adds entropy to a prng ctx's accumulator.\n   *\n   * @param bytes the bytes of entropy as a string.\n   */\n  ctx.collect = function(bytes) {\n    // iterate over pools distributing entropy cyclically\n    var count = bytes.length;\n    for(var i = 0; i < count; ++i) {\n      ctx.pools[ctx.pool].update(bytes.substr(i, 1));\n      ctx.pool = (ctx.pool === 31) ? 0 : ctx.pool + 1;\n    }\n  };\n\n  /**\n   * Collects an integer of n bits.\n   *\n   * @param i the integer entropy.\n   * @param n the number of bits in the integer.\n   */\n  ctx.collectInt = function(i, n) {\n    var bytes = '';\n    for(var x = 0; x < n; x += 8) {\n      bytes += String.fromCharCode((i >> x) & 0xFF);\n    }\n    ctx.collect(bytes);\n  };\n\n  /**\n   * Registers a Web Worker to receive immediate entropy from the main thread.\n   * This method is required until Web Workers can access the native crypto\n   * API. This method should be called twice for each created worker, once in\n   * the main thread, and once in the worker itself.\n   *\n   * @param worker the worker to register.\n   */\n  ctx.registerWorker = function(worker) {\n    // worker receives random bytes\n    if(worker === self) {\n      ctx.seedFile = function(needed, callback) {\n        function listener(e) {\n          var data = e.data;\n          if(data.forge && data.forge.prng) {\n            self.removeEventListener('message', listener);\n            callback(data.forge.prng.err, data.forge.prng.bytes);\n          }\n        }\n        self.addEventListener('message', listener);\n        self.postMessage({forge: {prng: {needed: needed}}});\n      };\n    } else {\n      // main thread sends random bytes upon request\n      var listener = function(e) {\n        var data = e.data;\n        if(data.forge && data.forge.prng) {\n          ctx.seedFile(data.forge.prng.needed, function(err, bytes) {\n            worker.postMessage({forge: {prng: {err: err, bytes: bytes}}});\n          });\n        }\n      };\n      // TODO: do we need to remove the event listener when the worker dies?\n      worker.addEventListener('message', listener);\n    }\n  };\n\n  return ctx;\n};\n","/**\n * Javascript implementation of PKCS#1 PSS signature padding.\n *\n * @author Stefan Siegl\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n */\nvar forge = require('./forge');\nrequire('./random');\nrequire('./util');\n\n// shortcut for PSS API\nvar pss = module.exports = forge.pss = forge.pss || {};\n\n/**\n * Creates a PSS signature scheme object.\n *\n * There are several ways to provide a salt for encoding:\n *\n * 1. Specify the saltLength only and the built-in PRNG will generate it.\n * 2. Specify the saltLength and a custom PRNG with 'getBytesSync' defined that\n *   will be used.\n * 3. Specify the salt itself as a forge.util.ByteBuffer.\n *\n * @param options the options to use:\n *          md the message digest object to use, a forge md instance.\n *          mgf the mask generation function to use, a forge mgf instance.\n *          [saltLength] the length of the salt in octets.\n *          [prng] the pseudo-random number generator to use to produce a salt.\n *          [salt] the salt to use when encoding.\n *\n * @return a signature scheme object.\n */\npss.create = function(options) {\n  // backwards compatibility w/legacy args: hash, mgf, sLen\n  if(arguments.length === 3) {\n    options = {\n      md: arguments[0],\n      mgf: arguments[1],\n      saltLength: arguments[2]\n    };\n  }\n\n  var hash = options.md;\n  var mgf = options.mgf;\n  var hLen = hash.digestLength;\n\n  var salt_ = options.salt || null;\n  if(typeof salt_ === 'string') {\n    // assume binary-encoded string\n    salt_ = forge.util.createBuffer(salt_);\n  }\n\n  var sLen;\n  if('saltLength' in options) {\n    sLen = options.saltLength;\n  } else if(salt_ !== null) {\n    sLen = salt_.length();\n  } else {\n    throw new Error('Salt length not specified or specific salt not given.');\n  }\n\n  if(salt_ !== null && salt_.length() !== sLen) {\n    throw new Error('Given salt length does not match length of given salt.');\n  }\n\n  var prng = options.prng || forge.random;\n\n  var pssobj = {};\n\n  /**\n   * Encodes a PSS signature.\n   *\n   * This function implements EMSA-PSS-ENCODE as per RFC 3447, section 9.1.1.\n   *\n   * @param md the message digest object with the hash to sign.\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return the encoded message as a binary-encoded string of length\n   *           ceil((modBits - 1) / 8).\n   */\n  pssobj.encode = function(md, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* 2. Let mHash = Hash(M), an octet string of length hLen. */\n    var mHash = md.digest().getBytes();\n\n    /* 3. If emLen < hLen + sLen + 2, output \"encoding error\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Message is too long to encrypt.');\n    }\n\n    /* 4. Generate a random octet string salt of length sLen; if sLen = 0,\n     *    then salt is the empty string. */\n    var salt;\n    if(salt_ === null) {\n      salt = prng.getBytesSync(sLen);\n    } else {\n      salt = salt_.bytes();\n    }\n\n    /* 5. Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt; */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 6. Let H = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h = hash.digest().getBytes();\n\n    /* 7. Generate an octet string PS consisting of emLen - sLen - hLen - 2\n     *    zero octets.  The length of PS may be 0. */\n    var ps = new forge.util.ByteBuffer();\n    ps.fillWithByte(0, emLen - sLen - hLen - 2);\n\n    /* 8. Let DB = PS || 0x01 || salt; DB is an octet string of length\n     *    emLen - hLen - 1. */\n    ps.putByte(0x01);\n    ps.putBytes(salt);\n    var db = ps.getBytes();\n\n    /* 9. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var maskLen = emLen - hLen - 1;\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 10. Let maskedDB = DB \\xor dbMask. */\n    var maskedDB = '';\n    for(i = 0; i < maskLen; i++) {\n      maskedDB += String.fromCharCode(db.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 11. Set the leftmost 8emLen - emBits bits of the leftmost octet in\n     *     maskedDB to zero. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    maskedDB = String.fromCharCode(maskedDB.charCodeAt(0) & ~mask) +\n      maskedDB.substr(1);\n\n    /* 12. Let EM = maskedDB || H || 0xbc.\n     * 13. Output EM. */\n    return maskedDB + h + String.fromCharCode(0xbc);\n  };\n\n  /**\n   * Verifies a PSS signature.\n   *\n   * This function implements EMSA-PSS-VERIFY as per RFC 3447, section 9.1.2.\n   *\n   * @param mHash the message digest hash, as a binary-encoded string, to\n   *         compare against the signature.\n   * @param em the encoded message, as a binary-encoded string\n   *          (RSA decryption result).\n   * @param modsBits the length of the RSA modulus in bits.\n   *\n   * @return true if the signature was verified, false if not.\n   */\n  pssobj.verify = function(mHash, em, modBits) {\n    var i;\n    var emBits = modBits - 1;\n    var emLen = Math.ceil(emBits / 8);\n\n    /* c. Convert the message representative m to an encoded message EM\n     *    of length emLen = ceil((modBits - 1) / 8) octets, where modBits\n     *    is the length in bits of the RSA modulus n */\n    em = em.substr(-emLen);\n\n    /* 3. If emLen < hLen + sLen + 2, output \"inconsistent\" and stop. */\n    if(emLen < hLen + sLen + 2) {\n      throw new Error('Inconsistent parameters to PSS signature verification.');\n    }\n\n    /* 4. If the rightmost octet of EM does not have hexadecimal value\n     *    0xbc, output \"inconsistent\" and stop. */\n    if(em.charCodeAt(emLen - 1) !== 0xbc) {\n      throw new Error('Encoded message does not end in 0xBC.');\n    }\n\n    /* 5. Let maskedDB be the leftmost emLen - hLen - 1 octets of EM, and\n     *    let H be the next hLen octets. */\n    var maskLen = emLen - hLen - 1;\n    var maskedDB = em.substr(0, maskLen);\n    var h = em.substr(maskLen, hLen);\n\n    /* 6. If the leftmost 8emLen - emBits bits of the leftmost octet in\n     *    maskedDB are not all equal to zero, output \"inconsistent\" and stop. */\n    var mask = (0xFF00 >> (8 * emLen - emBits)) & 0xFF;\n    if((maskedDB.charCodeAt(0) & mask) !== 0) {\n      throw new Error('Bits beyond keysize not zero as expected.');\n    }\n\n    /* 7. Let dbMask = MGF(H, emLen - hLen - 1). */\n    var dbMask = mgf.generate(h, maskLen);\n\n    /* 8. Let DB = maskedDB \\xor dbMask. */\n    var db = '';\n    for(i = 0; i < maskLen; i++) {\n      db += String.fromCharCode(maskedDB.charCodeAt(i) ^ dbMask.charCodeAt(i));\n    }\n\n    /* 9. Set the leftmost 8emLen - emBits bits of the leftmost octet\n     * in DB to zero. */\n    db = String.fromCharCode(db.charCodeAt(0) & ~mask) + db.substr(1);\n\n    /* 10. If the emLen - hLen - sLen - 2 leftmost octets of DB are not zero\n     * or if the octet at position emLen - hLen - sLen - 1 (the leftmost\n     * position is \"position 1\") does not have hexadecimal value 0x01,\n     * output \"inconsistent\" and stop. */\n    var checkLen = emLen - hLen - sLen - 2;\n    for(i = 0; i < checkLen; i++) {\n      if(db.charCodeAt(i) !== 0x00) {\n        throw new Error('Leftmost octets not zero as expected');\n      }\n    }\n\n    if(db.charCodeAt(checkLen) !== 0x01) {\n      throw new Error('Inconsistent PSS signature, 0x01 marker not found');\n    }\n\n    /* 11. Let salt be the last sLen octets of DB. */\n    var salt = db.substr(-sLen);\n\n    /* 12.  Let M' = (0x)00 00 00 00 00 00 00 00 || mHash || salt */\n    var m_ = new forge.util.ByteBuffer();\n    m_.fillWithByte(0, 8);\n    m_.putBytes(mHash);\n    m_.putBytes(salt);\n\n    /* 13. Let H' = Hash(M'), an octet string of length hLen. */\n    hash.start();\n    hash.update(m_.getBytes());\n    var h_ = hash.digest().getBytes();\n\n    /* 14. If H = H', output \"consistent.\" Otherwise, output \"inconsistent.\" */\n    return h === h_;\n  };\n\n  return pssobj;\n};\n","/**\n * An API for getting cryptographically-secure random bytes. The bytes are\n * generated using the Fortuna algorithm devised by Bruce Schneier and\n * Niels Ferguson.\n *\n * Getting strong random bytes is not yet easy to do in javascript. The only\n * truish random entropy that can be collected is from the mouse, keyboard, or\n * from timing with respect to page loads, etc. This generator makes a poor\n * attempt at providing random bytes when those sources haven't yet provided\n * enough entropy to initially seed or to reseed the PRNG.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2009-2014 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./sha256');\nrequire('./prng');\nrequire('./util');\n\n(function() {\n\n// forge.random already defined\nif(forge.random && forge.random.getBytes) {\n  module.exports = forge.random;\n  return;\n}\n\n(function(jQuery) {\n\n// the default prng plugin, uses AES-128\nvar prng_aes = {};\nvar _prng_aes_output = new Array(4);\nvar _prng_aes_buffer = forge.util.createBuffer();\nprng_aes.formatKey = function(key) {\n  // convert the key into 32-bit integers\n  var tmp = forge.util.createBuffer(key);\n  key = new Array(4);\n  key[0] = tmp.getInt32();\n  key[1] = tmp.getInt32();\n  key[2] = tmp.getInt32();\n  key[3] = tmp.getInt32();\n\n  // return the expanded key\n  return forge.aes._expandKey(key, false);\n};\nprng_aes.formatSeed = function(seed) {\n  // convert seed into 32-bit integers\n  var tmp = forge.util.createBuffer(seed);\n  seed = new Array(4);\n  seed[0] = tmp.getInt32();\n  seed[1] = tmp.getInt32();\n  seed[2] = tmp.getInt32();\n  seed[3] = tmp.getInt32();\n  return seed;\n};\nprng_aes.cipher = function(key, seed) {\n  forge.aes._updateBlock(key, seed, _prng_aes_output, false);\n  _prng_aes_buffer.putInt32(_prng_aes_output[0]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[1]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[2]);\n  _prng_aes_buffer.putInt32(_prng_aes_output[3]);\n  return _prng_aes_buffer.getBytes();\n};\nprng_aes.increment = function(seed) {\n  // FIXME: do we care about carry or signed issues?\n  ++seed[3];\n  return seed;\n};\nprng_aes.md = forge.md.sha256;\n\n/**\n * Creates a new PRNG.\n */\nfunction spawnPrng() {\n  var ctx = forge.prng.create(prng_aes);\n\n  /**\n   * Gets random bytes. If a native secure crypto API is unavailable, this\n   * method tries to make the bytes more unpredictable by drawing from data that\n   * can be collected from the user of the browser, eg: mouse movement.\n   *\n   * If a callback is given, this method will be called asynchronously.\n   *\n   * @param count the number of random bytes to get.\n   * @param [callback(err, bytes)] called once the operation completes.\n   *\n   * @return the random bytes in a string.\n   */\n  ctx.getBytes = function(count, callback) {\n    return ctx.generate(count, callback);\n  };\n\n  /**\n   * Gets random bytes asynchronously. If a native secure crypto API is\n   * unavailable, this method tries to make the bytes more unpredictable by\n   * drawing from data that can be collected from the user of the browser,\n   * eg: mouse movement.\n   *\n   * @param count the number of random bytes to get.\n   *\n   * @return the random bytes in a string.\n   */\n  ctx.getBytesSync = function(count) {\n    return ctx.generate(count);\n  };\n\n  return ctx;\n}\n\n// create default prng context\nvar _ctx = spawnPrng();\n\n// add other sources of entropy only if window.crypto.getRandomValues is not\n// available -- otherwise this source will be automatically used by the prng\nvar getRandomValues = null;\nvar globalScope = forge.util.globalScope;\nvar _crypto = globalScope.crypto || globalScope.msCrypto;\nif(_crypto && _crypto.getRandomValues) {\n  getRandomValues = function(arr) {\n    return _crypto.getRandomValues(arr);\n  };\n}\n\nif(forge.options.usePureJavaScript ||\n  (!forge.util.isNodejs && !getRandomValues)) {\n  // if this is a web worker, do not use weak entropy, instead register to\n  // receive strong entropy asynchronously from the main thread\n  if(typeof window === 'undefined' || window.document === undefined) {\n    // FIXME:\n  }\n\n  // get load time entropy\n  _ctx.collectInt(+new Date(), 32);\n\n  // add some entropy from navigator object\n  if(typeof(navigator) !== 'undefined') {\n    var _navBytes = '';\n    for(var key in navigator) {\n      try {\n        if(typeof(navigator[key]) == 'string') {\n          _navBytes += navigator[key];\n        }\n      } catch(e) {\n        /* Some navigator keys might not be accessible, e.g. the geolocation\n          attribute throws an exception if touched in Mozilla chrome://\n          context.\n\n          Silently ignore this and just don't use this as a source of\n          entropy. */\n      }\n    }\n    _ctx.collect(_navBytes);\n    _navBytes = null;\n  }\n\n  // add mouse and keyboard collectors if jquery is available\n  if(jQuery) {\n    // set up mouse entropy capture\n    jQuery().mousemove(function(e) {\n      // add mouse coords\n      _ctx.collectInt(e.clientX, 16);\n      _ctx.collectInt(e.clientY, 16);\n    });\n\n    // set up keyboard entropy capture\n    jQuery().keypress(function(e) {\n      _ctx.collectInt(e.charCode, 8);\n    });\n  }\n}\n\n/* Random API */\nif(!forge.random) {\n  forge.random = _ctx;\n} else {\n  // extend forge.random with _ctx\n  for(var key in _ctx) {\n    forge.random[key] = _ctx[key];\n  }\n}\n\n// expose spawn PRNG\nforge.random.createInstance = spawnPrng;\n\nmodule.exports = forge.random;\n\n})(typeof(jQuery) !== 'undefined' ? jQuery : null);\n\n})();\n","/**\n * RC2 implementation.\n *\n * @author Stefan Siegl\n *\n * Copyright (c) 2012 Stefan Siegl <stesie@brokenpipe.de>\n *\n * Information on the RC2 cipher is available from RFC #2268,\n * http://www.ietf.org/rfc/rfc2268.txt\n */\nvar forge = require('./forge');\nrequire('./util');\n\nvar piTable = [\n  0xd9, 0x78, 0xf9, 0xc4, 0x19, 0xdd, 0xb5, 0xed, 0x28, 0xe9, 0xfd, 0x79, 0x4a, 0xa0, 0xd8, 0x9d,\n  0xc6, 0x7e, 0x37, 0x83, 0x2b, 0x76, 0x53, 0x8e, 0x62, 0x4c, 0x64, 0x88, 0x44, 0x8b, 0xfb, 0xa2,\n  0x17, 0x9a, 0x59, 0xf5, 0x87, 0xb3, 0x4f, 0x13, 0x61, 0x45, 0x6d, 0x8d, 0x09, 0x81, 0x7d, 0x32,\n  0xbd, 0x8f, 0x40, 0xeb, 0x86, 0xb7, 0x7b, 0x0b, 0xf0, 0x95, 0x21, 0x22, 0x5c, 0x6b, 0x4e, 0x82,\n  0x54, 0xd6, 0x65, 0x93, 0xce, 0x60, 0xb2, 0x1c, 0x73, 0x56, 0xc0, 0x14, 0xa7, 0x8c, 0xf1, 0xdc,\n  0x12, 0x75, 0xca, 0x1f, 0x3b, 0xbe, 0xe4, 0xd1, 0x42, 0x3d, 0xd4, 0x30, 0xa3, 0x3c, 0xb6, 0x26,\n  0x6f, 0xbf, 0x0e, 0xda, 0x46, 0x69, 0x07, 0x57, 0x27, 0xf2, 0x1d, 0x9b, 0xbc, 0x94, 0x43, 0x03,\n  0xf8, 0x11, 0xc7, 0xf6, 0x90, 0xef, 0x3e, 0xe7, 0x06, 0xc3, 0xd5, 0x2f, 0xc8, 0x66, 0x1e, 0xd7,\n  0x08, 0xe8, 0xea, 0xde, 0x80, 0x52, 0xee, 0xf7, 0x84, 0xaa, 0x72, 0xac, 0x35, 0x4d, 0x6a, 0x2a,\n  0x96, 0x1a, 0xd2, 0x71, 0x5a, 0x15, 0x49, 0x74, 0x4b, 0x9f, 0xd0, 0x5e, 0x04, 0x18, 0xa4, 0xec,\n  0xc2, 0xe0, 0x41, 0x6e, 0x0f, 0x51, 0xcb, 0xcc, 0x24, 0x91, 0xaf, 0x50, 0xa1, 0xf4, 0x70, 0x39,\n  0x99, 0x7c, 0x3a, 0x85, 0x23, 0xb8, 0xb4, 0x7a, 0xfc, 0x02, 0x36, 0x5b, 0x25, 0x55, 0x97, 0x31,\n  0x2d, 0x5d, 0xfa, 0x98, 0xe3, 0x8a, 0x92, 0xae, 0x05, 0xdf, 0x29, 0x10, 0x67, 0x6c, 0xba, 0xc9,\n  0xd3, 0x00, 0xe6, 0xcf, 0xe1, 0x9e, 0xa8, 0x2c, 0x63, 0x16, 0x01, 0x3f, 0x58, 0xe2, 0x89, 0xa9,\n  0x0d, 0x38, 0x34, 0x1b, 0xab, 0x33, 0xff, 0xb0, 0xbb, 0x48, 0x0c, 0x5f, 0xb9, 0xb1, 0xcd, 0x2e,\n  0xc5, 0xf3, 0xdb, 0x47, 0xe5, 0xa5, 0x9c, 0x77, 0x0a, 0xa6, 0x20, 0x68, 0xfe, 0x7f, 0xc1, 0xad\n];\n\nvar s = [1, 2, 3, 5];\n\n/**\n * Rotate a word left by given number of bits.\n *\n * Bits that are shifted out on the left are put back in on the right\n * hand side.\n *\n * @param word The word to shift left.\n * @param bits The number of bits to shift by.\n * @return The rotated word.\n */\nvar rol = function(word, bits) {\n  return ((word << bits) & 0xffff) | ((word & 0xffff) >> (16 - bits));\n};\n\n/**\n * Rotate a word right by given number of bits.\n *\n * Bits that are shifted out on the right are put back in on the left\n * hand side.\n *\n * @param word The word to shift right.\n * @param bits The number of bits to shift by.\n * @return The rotated word.\n */\nvar ror = function(word, bits) {\n  return ((word & 0xffff) >> bits) | ((word << (16 - bits)) & 0xffff);\n};\n\n/* RC2 API */\nmodule.exports = forge.rc2 = forge.rc2 || {};\n\n/**\n * Perform RC2 key expansion as per RFC #2268, section 2.\n *\n * @param key variable-length user key (between 1 and 128 bytes)\n * @param effKeyBits number of effective key bits (default: 128)\n * @return the expanded RC2 key (ByteBuffer of 128 bytes)\n */\nforge.rc2.expandKey = function(key, effKeyBits) {\n  if(typeof key === 'string') {\n    key = forge.util.createBuffer(key);\n  }\n  effKeyBits = effKeyBits || 128;\n\n  /* introduce variables that match the names used in RFC #2268 */\n  var L = key;\n  var T = key.length();\n  var T1 = effKeyBits;\n  var T8 = Math.ceil(T1 / 8);\n  var TM = 0xff >> (T1 & 0x07);\n  var i;\n\n  for(i = T; i < 128; i++) {\n    L.putByte(piTable[(L.at(i - 1) + L.at(i - T)) & 0xff]);\n  }\n\n  L.setAt(128 - T8, piTable[L.at(128 - T8) & TM]);\n\n  for(i = 127 - T8; i >= 0; i--) {\n    L.setAt(i, piTable[L.at(i + 1) ^ L.at(i + T8)]);\n  }\n\n  return L;\n};\n\n/**\n * Creates a RC2 cipher object.\n *\n * @param key the symmetric key to use (as base for key generation).\n * @param bits the number of effective key bits.\n * @param encrypt false for decryption, true for encryption.\n *\n * @return the cipher.\n */\nvar createCipher = function(key, bits, encrypt) {\n  var _finish = false, _input = null, _output = null, _iv = null;\n  var mixRound, mashRound;\n  var i, j, K = [];\n\n  /* Expand key and fill into K[] Array */\n  key = forge.rc2.expandKey(key, bits);\n  for(i = 0; i < 64; i++) {\n    K.push(key.getInt16Le());\n  }\n\n  if(encrypt) {\n    /**\n     * Perform one mixing round \"in place\".\n     *\n     * @param R Array of four words to perform mixing on.\n     */\n    mixRound = function(R) {\n      for(i = 0; i < 4; i++) {\n        R[i] += K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) +\n          ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n        R[i] = rol(R[i], s[i]);\n        j++;\n      }\n    };\n\n    /**\n     * Perform one mashing round \"in place\".\n     *\n     * @param R Array of four words to perform mashing on.\n     */\n    mashRound = function(R) {\n      for(i = 0; i < 4; i++) {\n        R[i] += K[R[(i + 3) % 4] & 63];\n      }\n    };\n  } else {\n    /**\n     * Perform one r-mixing round \"in place\".\n     *\n     * @param R Array of four words to perform mixing on.\n     */\n    mixRound = function(R) {\n      for(i = 3; i >= 0; i--) {\n        R[i] = ror(R[i], s[i]);\n        R[i] -= K[j] + (R[(i + 3) % 4] & R[(i + 2) % 4]) +\n          ((~R[(i + 3) % 4]) & R[(i + 1) % 4]);\n        j--;\n      }\n    };\n\n    /**\n     * Perform one r-mashing round \"in place\".\n     *\n     * @param R Array of four words to perform mashing on.\n     */\n    mashRound = function(R) {\n      for(i = 3; i >= 0; i--) {\n        R[i] -= K[R[(i + 3) % 4] & 63];\n      }\n    };\n  }\n\n  /**\n   * Run the specified cipher execution plan.\n   *\n   * This function takes four words from the input buffer, applies the IV on\n   * it (if requested) and runs the provided execution plan.\n   *\n   * The plan must be put together in form of a array of arrays.  Where the\n   * outer one is simply a list of steps to perform and the inner one needs\n   * to have two elements: the first one telling how many rounds to perform,\n   * the second one telling what to do (i.e. the function to call).\n   *\n   * @param {Array} plan The plan to execute.\n   */\n  var runPlan = function(plan) {\n    var R = [];\n\n    /* Get data from input buffer and fill the four words into R */\n    for(i = 0; i < 4; i++) {\n      var val = _input.getInt16Le();\n\n      if(_iv !== null) {\n        if(encrypt) {\n          /* We're encrypting, apply the IV first. */\n          val ^= _iv.getInt16Le();\n        } else {\n          /* We're decryption, keep cipher text for next block. */\n          _iv.putInt16Le(val);\n        }\n      }\n\n      R.push(val & 0xffff);\n    }\n\n    /* Reset global \"j\" variable as per spec. */\n    j = encrypt ? 0 : 63;\n\n    /* Run execution plan. */\n    for(var ptr = 0; ptr < plan.length; ptr++) {\n      for(var ctr = 0; ctr < plan[ptr][0]; ctr++) {\n        plan[ptr][1](R);\n      }\n    }\n\n    /* Write back result to output buffer. */\n    for(i = 0; i < 4; i++) {\n      if(_iv !== null) {\n        if(encrypt) {\n          /* We're encrypting in CBC-mode, feed back encrypted bytes into\n             IV buffer to carry it forward to next block. */\n          _iv.putInt16Le(R[i]);\n        } else {\n          R[i] ^= _iv.getInt16Le();\n        }\n      }\n\n      _output.putInt16Le(R[i]);\n    }\n  };\n\n  /* Create cipher object */\n  var cipher = null;\n  cipher = {\n    /**\n     * Starts or restarts the encryption or decryption process, whichever\n     * was previously configured.\n     *\n     * To use the cipher in CBC mode, iv may be given either as a string\n     * of bytes, or as a byte buffer.  For ECB mode, give null as iv.\n     *\n     * @param iv the initialization vector to use, null for ECB mode.\n     * @param output the output the buffer to write to, null to create one.\n     */\n    start: function(iv, output) {\n      if(iv) {\n        /* CBC mode */\n        if(typeof iv === 'string') {\n          iv = forge.util.createBuffer(iv);\n        }\n      }\n\n      _finish = false;\n      _input = forge.util.createBuffer();\n      _output = output || new forge.util.createBuffer();\n      _iv = iv;\n\n      cipher.output = _output;\n    },\n\n    /**\n     * Updates the next block.\n     *\n     * @param input the buffer to read from.\n     */\n    update: function(input) {\n      if(!_finish) {\n        // not finishing, so fill the input buffer with more input\n        _input.putBuffer(input);\n      }\n\n      while(_input.length() >= 8) {\n        runPlan([\n            [ 5, mixRound ],\n            [ 1, mashRound ],\n            [ 6, mixRound ],\n            [ 1, mashRound ],\n            [ 5, mixRound ]\n          ]);\n      }\n    },\n\n    /**\n     * Finishes encrypting or decrypting.\n     *\n     * @param pad a padding function to use, null for PKCS#7 padding,\n     *           signature(blockSize, buffer, decrypt).\n     *\n     * @return true if successful, false on error.\n     */\n    finish: function(pad) {\n      var rval = true;\n\n      if(encrypt) {\n        if(pad) {\n          rval = pad(8, _input, !encrypt);\n        } else {\n          // add PKCS#7 padding to block (each pad byte is the\n          // value of the number of pad bytes)\n          var padding = (_input.length() === 8) ? 8 : (8 - _input.length());\n          _input.fillWithByte(padding, padding);\n        }\n      }\n\n      if(rval) {\n        // do final update\n        _finish = true;\n        cipher.update();\n      }\n\n      if(!encrypt) {\n        // check for error: input data not a multiple of block size\n        rval = (_input.length() === 0);\n        if(rval) {\n          if(pad) {\n            rval = pad(8, _output, !encrypt);\n          } else {\n            // ensure padding byte count is valid\n            var len = _output.length();\n            var count = _output.at(len - 1);\n\n            if(count > len) {\n              rval = false;\n            } else {\n              // trim off padding bytes\n              _output.truncate(count);\n            }\n          }\n        }\n      }\n\n      return rval;\n    }\n  };\n\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to encrypt data in ECB or CBC mode using the\n * given symmetric key. The output will be stored in the 'output' member\n * of the returned cipher.\n *\n * The key and iv may be given as a string of bytes or a byte buffer.\n * The cipher is initialized to use 128 effective key bits.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n *\n * @return the cipher.\n */\nforge.rc2.startEncrypting = function(key, iv, output) {\n  var cipher = forge.rc2.createEncryptionCipher(key, 128);\n  cipher.start(iv, output);\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to encrypt data in ECB or CBC mode using the\n * given symmetric key.\n *\n * The key may be given as a string of bytes or a byte buffer.\n *\n * To start encrypting call start() on the cipher with an iv and optional\n * output buffer.\n *\n * @param key the symmetric key to use.\n *\n * @return the cipher.\n */\nforge.rc2.createEncryptionCipher = function(key, bits) {\n  return createCipher(key, bits, true);\n};\n\n/**\n * Creates an RC2 cipher object to decrypt data in ECB or CBC mode using the\n * given symmetric key. The output will be stored in the 'output' member\n * of the returned cipher.\n *\n * The key and iv may be given as a string of bytes or a byte buffer.\n * The cipher is initialized to use 128 effective key bits.\n *\n * @param key the symmetric key to use.\n * @param iv the initialization vector to use.\n * @param output the buffer to write to, null to create one.\n *\n * @return the cipher.\n */\nforge.rc2.startDecrypting = function(key, iv, output) {\n  var cipher = forge.rc2.createDecryptionCipher(key, 128);\n  cipher.start(iv, output);\n  return cipher;\n};\n\n/**\n * Creates an RC2 cipher object to decrypt data in ECB or CBC mode using the\n * given symmetric key.\n *\n * The key may be given as a string of bytes or a byte buffer.\n *\n * To start decrypting call start() on the cipher with an iv and optional\n * output buffer.\n *\n * @param key the symmetric key to use.\n *\n * @return the cipher.\n */\nforge.rc2.createDecryptionCipher = function(key, bits) {\n  return createCipher(key, bits, false);\n};\n","/**\n * Javascript implementation of basic RSA algorithms.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n *\n * The only algorithm currently supported for PKI is RSA.\n *\n * An RSA key is often stored in ASN.1 DER format. The SubjectPublicKeyInfo\n * ASN.1 structure is composed of an algorithm of type AlgorithmIdentifier\n * and a subjectPublicKey of type bit string.\n *\n * The AlgorithmIdentifier contains an Object Identifier (OID) and parameters\n * for the algorithm, if any. In the case of RSA, there aren't any.\n *\n * SubjectPublicKeyInfo ::= SEQUENCE {\n *   algorithm AlgorithmIdentifier,\n *   subjectPublicKey BIT STRING\n * }\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *   algorithm OBJECT IDENTIFIER,\n *   parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * For an RSA public key, the subjectPublicKey is:\n *\n * RSAPublicKey ::= SEQUENCE {\n *   modulus            INTEGER,    -- n\n *   publicExponent     INTEGER     -- e\n * }\n *\n * PrivateKeyInfo ::= SEQUENCE {\n *   version                   Version,\n *   privateKeyAlgorithm       PrivateKeyAlgorithmIdentifier,\n *   privateKey                PrivateKey,\n *   attributes           [0]  IMPLICIT Attributes OPTIONAL\n * }\n *\n * Version ::= INTEGER\n * PrivateKeyAlgorithmIdentifier ::= AlgorithmIdentifier\n * PrivateKey ::= OCTET STRING\n * Attributes ::= SET OF Attribute\n *\n * An RSA private key as the following structure:\n *\n * RSAPrivateKey ::= SEQUENCE {\n *   version Version,\n *   modulus INTEGER, -- n\n *   publicExponent INTEGER, -- e\n *   privateExponent INTEGER, -- d\n *   prime1 INTEGER, -- p\n *   prime2 INTEGER, -- q\n *   exponent1 INTEGER, -- d mod (p-1)\n *   exponent2 INTEGER, -- d mod (q-1)\n *   coefficient INTEGER -- (inverse of q) mod p\n * }\n *\n * Version ::= INTEGER\n *\n * The OID for the RSA key algorithm is: 1.2.840.113549.1.1.1\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./jsbn');\nrequire('./oids');\nrequire('./pkcs1');\nrequire('./prime');\nrequire('./random');\nrequire('./util');\n\nif(typeof BigInteger === 'undefined') {\n  var BigInteger = forge.jsbn.BigInteger;\n}\n\nvar _crypto = forge.util.isNodejs ? require('crypto') : null;\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n// shortcut for util API\nvar util = forge.util;\n\n/*\n * RSA encryption and decryption, see RFC 2313.\n */\nforge.pki = forge.pki || {};\nmodule.exports = forge.pki.rsa = forge.rsa = forge.rsa || {};\nvar pki = forge.pki;\n\n// for finding primes, which are 30k+i for i = 1, 7, 11, 13, 17, 19, 23, 29\nvar GCD_30_DELTA = [6, 4, 2, 4, 2, 4, 6, 2];\n\n// validator for a PrivateKeyInfo structure\nvar privateKeyValidator = {\n  // PrivateKeyInfo\n  name: 'PrivateKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'PrivateKeyInfo.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // privateKeyAlgorithm\n    name: 'PrivateKeyInfo.privateKeyAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'privateKeyOid'\n    }]\n  }, {\n    // PrivateKey\n    name: 'PrivateKeyInfo',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'privateKey'\n  }]\n};\n\n// validator for an RSA private key\nvar rsaPrivateKeyValidator = {\n  // RSAPrivateKey\n  name: 'RSAPrivateKey',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // Version (INTEGER)\n    name: 'RSAPrivateKey.version',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyVersion'\n  }, {\n    // modulus (n)\n    name: 'RSAPrivateKey.modulus',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyModulus'\n  }, {\n    // publicExponent (e)\n    name: 'RSAPrivateKey.publicExponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPublicExponent'\n  }, {\n    // privateExponent (d)\n    name: 'RSAPrivateKey.privateExponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrivateExponent'\n  }, {\n    // prime1 (p)\n    name: 'RSAPrivateKey.prime1',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrime1'\n  }, {\n    // prime2 (q)\n    name: 'RSAPrivateKey.prime2',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyPrime2'\n  }, {\n    // exponent1 (d mod (p-1))\n    name: 'RSAPrivateKey.exponent1',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyExponent1'\n  }, {\n    // exponent2 (d mod (q-1))\n    name: 'RSAPrivateKey.exponent2',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyExponent2'\n  }, {\n    // coefficient ((inverse of q) mod p)\n    name: 'RSAPrivateKey.coefficient',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'privateKeyCoefficient'\n  }]\n};\n\n// validator for an RSA public key\nvar rsaPublicKeyValidator = {\n  // RSAPublicKey\n  name: 'RSAPublicKey',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    // modulus (n)\n    name: 'RSAPublicKey.modulus',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'publicKeyModulus'\n  }, {\n    // publicExponent (e)\n    name: 'RSAPublicKey.exponent',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'publicKeyExponent'\n  }]\n};\n\n// validator for an SubjectPublicKeyInfo structure\n// Note: Currently only works with an RSA public key\nvar publicKeyValidator = forge.pki.rsa.publicKeyValidator = {\n  name: 'SubjectPublicKeyInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'subjectPublicKeyInfo',\n  value: [{\n    name: 'SubjectPublicKeyInfo.AlgorithmIdentifier',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'AlgorithmIdentifier.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'publicKeyOid'\n    }]\n  }, {\n    // subjectPublicKey\n    name: 'SubjectPublicKeyInfo.subjectPublicKey',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    value: [{\n      // RSAPublicKey\n      name: 'SubjectPublicKeyInfo.subjectPublicKey.RSAPublicKey',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      optional: true,\n      captureAsn1: 'rsaPublicKey'\n    }]\n  }]\n};\n\n// validator for a DigestInfo structure\nvar digestInfoValidator = {\n  name: 'DigestInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'DigestInfo.DigestAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      name: 'DigestInfo.DigestAlgorithm.algorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'algorithmIdentifier'\n    }, {\n      // NULL paramters\n      name: 'DigestInfo.DigestAlgorithm.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.NULL,\n      // captured only to check existence for md2 and md5\n      capture: 'parameters',\n      optional: true,\n      constructed: false\n    }]\n  }, {\n    // digest\n    name: 'DigestInfo.digest',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.OCTETSTRING,\n    constructed: false,\n    capture: 'digest'\n  }]\n};\n\n/**\n * Wrap digest in DigestInfo object.\n *\n * This function implements EMSA-PKCS1-v1_5-ENCODE as per RFC 3447.\n *\n * DigestInfo ::= SEQUENCE {\n *   digestAlgorithm DigestAlgorithmIdentifier,\n *   digest Digest\n * }\n *\n * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n * Digest ::= OCTET STRING\n *\n * @param md the message digest object with the hash to sign.\n *\n * @return the encoded message (ready for RSA encrytion)\n */\nvar emsaPkcs1v15encode = function(md) {\n  // get the oid for the algorithm\n  var oid;\n  if(md.algorithm in pki.oids) {\n    oid = pki.oids[md.algorithm];\n  } else {\n    var error = new Error('Unknown message digest algorithm.');\n    error.algorithm = md.algorithm;\n    throw error;\n  }\n  var oidBytes = asn1.oidToDer(oid).getBytes();\n\n  // create the digest info\n  var digestInfo = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  var digestAlgorithm = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  digestAlgorithm.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OID, false, oidBytes));\n  digestAlgorithm.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.NULL, false, ''));\n  var digest = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING,\n    false, md.digest().getBytes());\n  digestInfo.value.push(digestAlgorithm);\n  digestInfo.value.push(digest);\n\n  // encode digest info\n  return asn1.toDer(digestInfo).getBytes();\n};\n\n/**\n * Performs x^c mod n (RSA encryption or decryption operation).\n *\n * @param x the number to raise and mod.\n * @param key the key to use.\n * @param pub true if the key is public, false if private.\n *\n * @return the result of x^c mod n.\n */\nvar _modPow = function(x, key, pub) {\n  if(pub) {\n    return x.modPow(key.e, key.n);\n  }\n\n  if(!key.p || !key.q) {\n    // allow calculation without CRT params (slow)\n    return x.modPow(key.d, key.n);\n  }\n\n  // pre-compute dP, dQ, and qInv if necessary\n  if(!key.dP) {\n    key.dP = key.d.mod(key.p.subtract(BigInteger.ONE));\n  }\n  if(!key.dQ) {\n    key.dQ = key.d.mod(key.q.subtract(BigInteger.ONE));\n  }\n  if(!key.qInv) {\n    key.qInv = key.q.modInverse(key.p);\n  }\n\n  /* Chinese remainder theorem (CRT) states:\n\n    Suppose n1, n2, ..., nk are positive integers which are pairwise\n    coprime (n1 and n2 have no common factors other than 1). For any\n    integers x1, x2, ..., xk there exists an integer x solving the\n    system of simultaneous congruences (where ~= means modularly\n    congruent so a ~= b mod n means a mod n = b mod n):\n\n    x ~= x1 mod n1\n    x ~= x2 mod n2\n    ...\n    x ~= xk mod nk\n\n    This system of congruences has a single simultaneous solution x\n    between 0 and n - 1. Furthermore, each xk solution and x itself\n    is congruent modulo the product n = n1*n2*...*nk.\n    So x1 mod n = x2 mod n = xk mod n = x mod n.\n\n    The single simultaneous solution x can be solved with the following\n    equation:\n\n    x = sum(xi*ri*si) mod n where ri = n/ni and si = ri^-1 mod ni.\n\n    Where x is less than n, xi = x mod ni.\n\n    For RSA we are only concerned with k = 2. The modulus n = pq, where\n    p and q are coprime. The RSA decryption algorithm is:\n\n    y = x^d mod n\n\n    Given the above:\n\n    x1 = x^d mod p\n    r1 = n/p = q\n    s1 = q^-1 mod p\n    x2 = x^d mod q\n    r2 = n/q = p\n    s2 = p^-1 mod q\n\n    So y = (x1r1s1 + x2r2s2) mod n\n         = ((x^d mod p)q(q^-1 mod p) + (x^d mod q)p(p^-1 mod q)) mod n\n\n    According to Fermat's Little Theorem, if the modulus P is prime,\n    for any integer A not evenly divisible by P, A^(P-1) ~= 1 mod P.\n    Since A is not divisible by P it follows that if:\n    N ~= M mod (P - 1), then A^N mod P = A^M mod P. Therefore:\n\n    A^N mod P = A^(M mod (P - 1)) mod P. (The latter takes less effort\n    to calculate). In order to calculate x^d mod p more quickly the\n    exponent d mod (p - 1) is stored in the RSA private key (the same\n    is done for x^d mod q). These values are referred to as dP and dQ\n    respectively. Therefore we now have:\n\n    y = ((x^dP mod p)q(q^-1 mod p) + (x^dQ mod q)p(p^-1 mod q)) mod n\n\n    Since we'll be reducing x^dP by modulo p (same for q) we can also\n    reduce x by p (and q respectively) before hand. Therefore, let\n\n    xp = ((x mod p)^dP mod p), and\n    xq = ((x mod q)^dQ mod q), yielding:\n\n    y = (xp*q*(q^-1 mod p) + xq*p*(p^-1 mod q)) mod n\n\n    This can be further reduced to a simple algorithm that only\n    requires 1 inverse (the q inverse is used) to be used and stored.\n    The algorithm is called Garner's algorithm. If qInv is the\n    inverse of q, we simply calculate:\n\n    y = (qInv*(xp - xq) mod p) * q + xq\n\n    However, there are two further complications. First, we need to\n    ensure that xp > xq to prevent signed BigIntegers from being used\n    so we add p until this is true (since we will be mod'ing with\n    p anyway). Then, there is a known timing attack on algorithms\n    using the CRT. To mitigate this risk, \"cryptographic blinding\"\n    should be used. This requires simply generating a random number r\n    between 0 and n-1 and its inverse and multiplying x by r^e before\n    calculating y and then multiplying y by r^-1 afterwards. Note that\n    r must be coprime with n (gcd(r, n) === 1) in order to have an\n    inverse.\n  */\n\n  // cryptographic blinding\n  var r;\n  do {\n    r = new BigInteger(\n      forge.util.bytesToHex(forge.random.getBytes(key.n.bitLength() / 8)),\n      16);\n  } while(r.compareTo(key.n) >= 0 || !r.gcd(key.n).equals(BigInteger.ONE));\n  x = x.multiply(r.modPow(key.e, key.n)).mod(key.n);\n\n  // calculate xp and xq\n  var xp = x.mod(key.p).modPow(key.dP, key.p);\n  var xq = x.mod(key.q).modPow(key.dQ, key.q);\n\n  // xp must be larger than xq to avoid signed bit usage\n  while(xp.compareTo(xq) < 0) {\n    xp = xp.add(key.p);\n  }\n\n  // do last step\n  var y = xp.subtract(xq)\n    .multiply(key.qInv).mod(key.p)\n    .multiply(key.q).add(xq);\n\n  // remove effect of random for cryptographic blinding\n  y = y.multiply(r.modInverse(key.n)).mod(key.n);\n\n  return y;\n};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED, use 'sign' on a private key object or\n * 'encrypt' on a public key object instead.\n *\n * Performs RSA encryption.\n *\n * The parameter bt controls whether to put padding bytes before the\n * message passed in. Set bt to either true or false to disable padding\n * completely (in order to handle e.g. EMSA-PSS encoding seperately before),\n * signaling whether the encryption operation is a public key operation\n * (i.e. encrypting data) or not, i.e. private key operation (data signing).\n *\n * For PKCS#1 v1.5 padding pass in the block type to use, i.e. either 0x01\n * (for signing) or 0x02 (for encryption). The key operation mode (private\n * or public) is derived from this flag in that case).\n *\n * @param m the message to encrypt as a byte string.\n * @param key the RSA key to use.\n * @param bt for PKCS#1 v1.5 padding, the block type to use\n *   (0x01 for private key, 0x02 for public),\n *   to disable padding: true = public key, false = private key.\n *\n * @return the encrypted bytes as a string.\n */\npki.rsa.encrypt = function(m, key, bt) {\n  var pub = bt;\n  var eb;\n\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  if(bt !== false && bt !== true) {\n    // legacy, default to PKCS#1 v1.5 padding\n    pub = (bt === 0x02);\n    eb = _encodePkcs1_v1_5(m, key, bt);\n  } else {\n    eb = forge.util.createBuffer();\n    eb.putBytes(m);\n  }\n\n  // load encryption block as big integer 'x'\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var x = new BigInteger(eb.toHex(), 16);\n\n  // do RSA encryption\n  var y = _modPow(x, key, pub);\n\n  // convert y into the encrypted data byte string, if y is shorter in\n  // bytes than k, then prepend zero bytes to fill up ed\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var yhex = y.toString(16);\n  var ed = forge.util.createBuffer();\n  var zeros = k - Math.ceil(yhex.length / 2);\n  while(zeros > 0) {\n    ed.putByte(0x00);\n    --zeros;\n  }\n  ed.putBytes(forge.util.hexToBytes(yhex));\n  return ed.getBytes();\n};\n\n/**\n * NOTE: THIS METHOD IS DEPRECATED, use 'decrypt' on a private key object or\n * 'verify' on a public key object instead.\n *\n * Performs RSA decryption.\n *\n * The parameter ml controls whether to apply PKCS#1 v1.5 padding\n * or not.  Set ml = false to disable padding removal completely\n * (in order to handle e.g. EMSA-PSS later on) and simply pass back\n * the RSA encryption block.\n *\n * @param ed the encrypted data to decrypt in as a byte string.\n * @param key the RSA key to use.\n * @param pub true for a public key operation, false for private.\n * @param ml the message length, if known, false to disable padding.\n *\n * @return the decrypted message as a byte string.\n */\npki.rsa.decrypt = function(ed, key, pub, ml) {\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  // error if the length of the encrypted data ED is not k\n  if(ed.length !== k) {\n    var error = new Error('Encrypted message length is invalid.');\n    error.length = ed.length;\n    error.expected = k;\n    throw error;\n  }\n\n  // convert encrypted data into a big integer\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var y = new BigInteger(forge.util.createBuffer(ed).toHex(), 16);\n\n  // y must be less than the modulus or it wasn't the result of\n  // a previous mod operation (encryption) using that modulus\n  if(y.compareTo(key.n) >= 0) {\n    throw new Error('Encrypted message is invalid.');\n  }\n\n  // do RSA decryption\n  var x = _modPow(y, key, pub);\n\n  // create the encryption block, if x is shorter in bytes than k, then\n  // prepend zero bytes to fill up eb\n  // FIXME: hex conversion inefficient, get BigInteger w/byte strings\n  var xhex = x.toString(16);\n  var eb = forge.util.createBuffer();\n  var zeros = k - Math.ceil(xhex.length / 2);\n  while(zeros > 0) {\n    eb.putByte(0x00);\n    --zeros;\n  }\n  eb.putBytes(forge.util.hexToBytes(xhex));\n\n  if(ml !== false) {\n    // legacy, default to PKCS#1 v1.5 padding\n    return _decodePkcs1_v1_5(eb.getBytes(), key, pub);\n  }\n\n  // return message\n  return eb.getBytes();\n};\n\n/**\n * Creates an RSA key-pair generation state object. It is used to allow\n * key-generation to be performed in steps. It also allows for a UI to\n * display progress updates.\n *\n * @param bits the size for the private key in bits, defaults to 2048.\n * @param e the public exponent to use, defaults to 65537 (0x10001).\n * @param [options] the options to use.\n *          prng a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\".\n *          algorithm the algorithm to use (default: 'PRIMEINC').\n *\n * @return the state object to use to generate the key-pair.\n */\npki.rsa.createKeyPairGenerationState = function(bits, e, options) {\n  // TODO: migrate step-based prime generation code to forge.prime\n\n  // set default bits\n  if(typeof(bits) === 'string') {\n    bits = parseInt(bits, 10);\n  }\n  bits = bits || 2048;\n\n  // create prng with api that matches BigInteger secure random\n  options = options || {};\n  var prng = options.prng || forge.random;\n  var rng = {\n    // x is an array to fill with bytes\n    nextBytes: function(x) {\n      var b = prng.getBytesSync(x.length);\n      for(var i = 0; i < x.length; ++i) {\n        x[i] = b.charCodeAt(i);\n      }\n    }\n  };\n\n  var algorithm = options.algorithm || 'PRIMEINC';\n\n  // create PRIMEINC algorithm state\n  var rval;\n  if(algorithm === 'PRIMEINC') {\n    rval = {\n      algorithm: algorithm,\n      state: 0,\n      bits: bits,\n      rng: rng,\n      eInt: e || 65537,\n      e: new BigInteger(null),\n      p: null,\n      q: null,\n      qBits: bits >> 1,\n      pBits: bits - (bits >> 1),\n      pqState: 0,\n      num: null,\n      keys: null\n    };\n    rval.e.fromInt(rval.eInt);\n  } else {\n    throw new Error('Invalid key generation algorithm: ' + algorithm);\n  }\n\n  return rval;\n};\n\n/**\n * Attempts to runs the key-generation algorithm for at most n seconds\n * (approximately) using the given state. When key-generation has completed,\n * the keys will be stored in state.keys.\n *\n * To use this function to update a UI while generating a key or to prevent\n * causing browser lockups/warnings, set \"n\" to a value other than 0. A\n * simple pattern for generating a key and showing a progress indicator is:\n *\n * var state = pki.rsa.createKeyPairGenerationState(2048);\n * var step = function() {\n *   // step key-generation, run algorithm for 100 ms, repeat\n *   if(!forge.pki.rsa.stepKeyPairGenerationState(state, 100)) {\n *     setTimeout(step, 1);\n *   } else {\n *     // key-generation complete\n *     // TODO: turn off progress indicator here\n *     // TODO: use the generated key-pair in \"state.keys\"\n *   }\n * };\n * // TODO: turn on progress indicator here\n * setTimeout(step, 0);\n *\n * @param state the state to use.\n * @param n the maximum number of milliseconds to run the algorithm for, 0\n *          to run the algorithm to completion.\n *\n * @return true if the key-generation completed, false if not.\n */\npki.rsa.stepKeyPairGenerationState = function(state, n) {\n  // set default algorithm if not set\n  if(!('algorithm' in state)) {\n    state.algorithm = 'PRIMEINC';\n  }\n\n  // TODO: migrate step-based prime generation code to forge.prime\n  // TODO: abstract as PRIMEINC algorithm\n\n  // do key generation (based on Tom Wu's rsa.js, see jsbn.js license)\n  // with some minor optimizations and designed to run in steps\n\n  // local state vars\n  var THIRTY = new BigInteger(null);\n  THIRTY.fromInt(30);\n  var deltaIdx = 0;\n  var op_or = function(x, y) {return x | y;};\n\n  // keep stepping until time limit is reached or done\n  var t1 = +new Date();\n  var t2;\n  var total = 0;\n  while(state.keys === null && (n <= 0 || total < n)) {\n    // generate p or q\n    if(state.state === 0) {\n      /* Note: All primes are of the form:\n\n        30k+i, for i < 30 and gcd(30, i)=1, where there are 8 values for i\n\n        When we generate a random number, we always align it at 30k + 1. Each\n        time the number is determined not to be prime we add to get to the\n        next 'i', eg: if the number was at 30k + 1 we add 6. */\n      var bits = (state.p === null) ? state.pBits : state.qBits;\n      var bits1 = bits - 1;\n\n      // get a random number\n      if(state.pqState === 0) {\n        state.num = new BigInteger(bits, state.rng);\n        // force MSB set\n        if(!state.num.testBit(bits1)) {\n          state.num.bitwiseTo(\n            BigInteger.ONE.shiftLeft(bits1), op_or, state.num);\n        }\n        // align number on 30k+1 boundary\n        state.num.dAddOffset(31 - state.num.mod(THIRTY).byteValue(), 0);\n        deltaIdx = 0;\n\n        ++state.pqState;\n      } else if(state.pqState === 1) {\n        // try to make the number a prime\n        if(state.num.bitLength() > bits) {\n          // overflow, try again\n          state.pqState = 0;\n          // do primality test\n        } else if(state.num.isProbablePrime(\n          _getMillerRabinTests(state.num.bitLength()))) {\n          ++state.pqState;\n        } else {\n          // get next potential prime\n          state.num.dAddOffset(GCD_30_DELTA[deltaIdx++ % 8], 0);\n        }\n      } else if(state.pqState === 2) {\n        // ensure number is coprime with e\n        state.pqState =\n          (state.num.subtract(BigInteger.ONE).gcd(state.e)\n            .compareTo(BigInteger.ONE) === 0) ? 3 : 0;\n      } else if(state.pqState === 3) {\n        // store p or q\n        state.pqState = 0;\n        if(state.p === null) {\n          state.p = state.num;\n        } else {\n          state.q = state.num;\n        }\n\n        // advance state if both p and q are ready\n        if(state.p !== null && state.q !== null) {\n          ++state.state;\n        }\n        state.num = null;\n      }\n    } else if(state.state === 1) {\n      // ensure p is larger than q (swap them if not)\n      if(state.p.compareTo(state.q) < 0) {\n        state.num = state.p;\n        state.p = state.q;\n        state.q = state.num;\n      }\n      ++state.state;\n    } else if(state.state === 2) {\n      // compute phi: (p - 1)(q - 1) (Euler's totient function)\n      state.p1 = state.p.subtract(BigInteger.ONE);\n      state.q1 = state.q.subtract(BigInteger.ONE);\n      state.phi = state.p1.multiply(state.q1);\n      ++state.state;\n    } else if(state.state === 3) {\n      // ensure e and phi are coprime\n      if(state.phi.gcd(state.e).compareTo(BigInteger.ONE) === 0) {\n        // phi and e are coprime, advance\n        ++state.state;\n      } else {\n        // phi and e aren't coprime, so generate a new p and q\n        state.p = null;\n        state.q = null;\n        state.state = 0;\n      }\n    } else if(state.state === 4) {\n      // create n, ensure n is has the right number of bits\n      state.n = state.p.multiply(state.q);\n\n      // ensure n is right number of bits\n      if(state.n.bitLength() === state.bits) {\n        // success, advance\n        ++state.state;\n      } else {\n        // failed, get new q\n        state.q = null;\n        state.state = 0;\n      }\n    } else if(state.state === 5) {\n      // set keys\n      var d = state.e.modInverse(state.phi);\n      state.keys = {\n        privateKey: pki.rsa.setPrivateKey(\n          state.n, state.e, d, state.p, state.q,\n          d.mod(state.p1), d.mod(state.q1),\n          state.q.modInverse(state.p)),\n        publicKey: pki.rsa.setPublicKey(state.n, state.e)\n      };\n    }\n\n    // update timing\n    t2 = +new Date();\n    total += t2 - t1;\n    t1 = t2;\n  }\n\n  return state.keys !== null;\n};\n\n/**\n * Generates an RSA public-private key pair in a single call.\n *\n * To generate a key-pair in steps (to allow for progress updates and to\n * prevent blocking or warnings in slow browsers) then use the key-pair\n * generation state functions.\n *\n * To generate a key-pair asynchronously (either through web-workers, if\n * available, or by breaking up the work on the main thread), pass a\n * callback function.\n *\n * @param [bits] the size for the private key in bits, defaults to 2048.\n * @param [e] the public exponent to use, defaults to 65537.\n * @param [options] options for key-pair generation, if given then 'bits'\n *            and 'e' must *not* be given:\n *          bits the size for the private key in bits, (default: 2048).\n *          e the public exponent to use, (default: 65537 (0x10001)).\n *          workerScript the worker script URL.\n *          workers the number of web workers (if supported) to use,\n *            (default: 2).\n *          workLoad the size of the work load, ie: number of possible prime\n *            numbers for each web worker to check per work assignment,\n *            (default: 100).\n *          prng a custom crypto-secure pseudo-random number generator to use,\n *            that must define \"getBytesSync\". Disables use of native APIs.\n *          algorithm the algorithm to use (default: 'PRIMEINC').\n * @param [callback(err, keypair)] called once the operation completes.\n *\n * @return an object with privateKey and publicKey properties.\n */\npki.rsa.generateKeyPair = function(bits, e, options, callback) {\n  // (bits), (options), (callback)\n  if(arguments.length === 1) {\n    if(typeof bits === 'object') {\n      options = bits;\n      bits = undefined;\n    } else if(typeof bits === 'function') {\n      callback = bits;\n      bits = undefined;\n    }\n  } else if(arguments.length === 2) {\n    // (bits, e), (bits, options), (bits, callback), (options, callback)\n    if(typeof bits === 'number') {\n      if(typeof e === 'function') {\n        callback = e;\n        e = undefined;\n      } else if(typeof e !== 'number') {\n        options = e;\n        e = undefined;\n      }\n    } else {\n      options = bits;\n      callback = e;\n      bits = undefined;\n      e = undefined;\n    }\n  } else if(arguments.length === 3) {\n    // (bits, e, options), (bits, e, callback), (bits, options, callback)\n    if(typeof e === 'number') {\n      if(typeof options === 'function') {\n        callback = options;\n        options = undefined;\n      }\n    } else {\n      callback = options;\n      options = e;\n      e = undefined;\n    }\n  }\n  options = options || {};\n  if(bits === undefined) {\n    bits = options.bits || 2048;\n  }\n  if(e === undefined) {\n    e = options.e || 0x10001;\n  }\n\n  // use native code if permitted, available, and parameters are acceptable\n  if(!forge.options.usePureJavaScript && !options.prng &&\n    bits >= 256 && bits <= 16384 && (e === 0x10001 || e === 3)) {\n    if(callback) {\n      // try native async\n      if(_detectNodeCrypto('generateKeyPair')) {\n        return _crypto.generateKeyPair('rsa', {\n          modulusLength: bits,\n          publicExponent: e,\n          publicKeyEncoding: {\n            type: 'spki',\n            format: 'pem'\n          },\n          privateKeyEncoding: {\n            type: 'pkcs8',\n            format: 'pem'\n          }\n        }, function(err, pub, priv) {\n          if(err) {\n            return callback(err);\n          }\n          callback(null, {\n            privateKey: pki.privateKeyFromPem(priv),\n            publicKey: pki.publicKeyFromPem(pub)\n          });\n        });\n      }\n      if(_detectSubtleCrypto('generateKey') &&\n        _detectSubtleCrypto('exportKey')) {\n        // use standard native generateKey\n        return util.globalScope.crypto.subtle.generateKey({\n          name: 'RSASSA-PKCS1-v1_5',\n          modulusLength: bits,\n          publicExponent: _intToUint8Array(e),\n          hash: {name: 'SHA-256'}\n        }, true /* key can be exported*/, ['sign', 'verify'])\n        .then(function(pair) {\n          return util.globalScope.crypto.subtle.exportKey(\n            'pkcs8', pair.privateKey);\n        // avoiding catch(function(err) {...}) to support IE <= 8\n        }).then(undefined, function(err) {\n          callback(err);\n        }).then(function(pkcs8) {\n          if(pkcs8) {\n            var privateKey = pki.privateKeyFromAsn1(\n              asn1.fromDer(forge.util.createBuffer(pkcs8)));\n            callback(null, {\n              privateKey: privateKey,\n              publicKey: pki.setRsaPublicKey(privateKey.n, privateKey.e)\n            });\n          }\n        });\n      }\n      if(_detectSubtleMsCrypto('generateKey') &&\n        _detectSubtleMsCrypto('exportKey')) {\n        var genOp = util.globalScope.msCrypto.subtle.generateKey({\n          name: 'RSASSA-PKCS1-v1_5',\n          modulusLength: bits,\n          publicExponent: _intToUint8Array(e),\n          hash: {name: 'SHA-256'}\n        }, true /* key can be exported*/, ['sign', 'verify']);\n        genOp.oncomplete = function(e) {\n          var pair = e.target.result;\n          var exportOp = util.globalScope.msCrypto.subtle.exportKey(\n            'pkcs8', pair.privateKey);\n          exportOp.oncomplete = function(e) {\n            var pkcs8 = e.target.result;\n            var privateKey = pki.privateKeyFromAsn1(\n              asn1.fromDer(forge.util.createBuffer(pkcs8)));\n            callback(null, {\n              privateKey: privateKey,\n              publicKey: pki.setRsaPublicKey(privateKey.n, privateKey.e)\n            });\n          };\n          exportOp.onerror = function(err) {\n            callback(err);\n          };\n        };\n        genOp.onerror = function(err) {\n          callback(err);\n        };\n        return;\n      }\n    } else {\n      // try native sync\n      if(_detectNodeCrypto('generateKeyPairSync')) {\n        var keypair = _crypto.generateKeyPairSync('rsa', {\n          modulusLength: bits,\n          publicExponent: e,\n          publicKeyEncoding: {\n            type: 'spki',\n            format: 'pem'\n          },\n          privateKeyEncoding: {\n            type: 'pkcs8',\n            format: 'pem'\n          }\n        });\n        return {\n          privateKey: pki.privateKeyFromPem(keypair.privateKey),\n          publicKey: pki.publicKeyFromPem(keypair.publicKey)\n        };\n      }\n    }\n  }\n\n  // use JavaScript implementation\n  var state = pki.rsa.createKeyPairGenerationState(bits, e, options);\n  if(!callback) {\n    pki.rsa.stepKeyPairGenerationState(state, 0);\n    return state.keys;\n  }\n  _generateKeyPair(state, options, callback);\n};\n\n/**\n * Sets an RSA public key from BigIntegers modulus and exponent.\n *\n * @param n the modulus.\n * @param e the exponent.\n *\n * @return the public key.\n */\npki.setRsaPublicKey = pki.rsa.setPublicKey = function(n, e) {\n  var key = {\n    n: n,\n    e: e\n  };\n\n  /**\n   * Encrypts the given data with this public key. Newer applications\n   * should use the 'RSA-OAEP' decryption scheme, 'RSAES-PKCS1-V1_5' is for\n   * legacy applications.\n   *\n   * @param data the byte string to encrypt.\n   * @param scheme the encryption scheme to use:\n   *          'RSAES-PKCS1-V1_5' (default),\n   *          'RSA-OAEP',\n   *          'RAW', 'NONE', or null to perform raw RSA encryption,\n   *          an object with an 'encode' property set to a function\n   *          with the signature 'function(data, key)' that returns\n   *          a binary-encoded string representing the encoded data.\n   * @param schemeOptions any scheme-specific options.\n   *\n   * @return the encrypted byte string.\n   */\n  key.encrypt = function(data, scheme, schemeOptions) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSAES-PKCS1-V1_5';\n    }\n\n    if(scheme === 'RSAES-PKCS1-V1_5') {\n      scheme = {\n        encode: function(m, key, pub) {\n          return _encodePkcs1_v1_5(m, key, 0x02).getBytes();\n        }\n      };\n    } else if(scheme === 'RSA-OAEP' || scheme === 'RSAES-OAEP') {\n      scheme = {\n        encode: function(m, key) {\n          return forge.pkcs1.encode_rsa_oaep(key, m, schemeOptions);\n        }\n      };\n    } else if(['RAW', 'NONE', 'NULL', null].indexOf(scheme) !== -1) {\n      scheme = {encode: function(e) {return e;}};\n    } else if(typeof scheme === 'string') {\n      throw new Error('Unsupported encryption scheme: \"' + scheme + '\".');\n    }\n\n    // do scheme-based encoding then rsa encryption\n    var e = scheme.encode(data, key, true);\n    return pki.rsa.encrypt(e, key, true);\n  };\n\n  /**\n   * Verifies the given signature against the given digest.\n   *\n   * PKCS#1 supports multiple (currently two) signature schemes:\n   * RSASSA-PKCS1-V1_5 and RSASSA-PSS.\n   *\n   * By default this implementation uses the \"old scheme\", i.e.\n   * RSASSA-PKCS1-V1_5, in which case once RSA-decrypted, the\n   * signature is an OCTET STRING that holds a DigestInfo.\n   *\n   * DigestInfo ::= SEQUENCE {\n   *   digestAlgorithm DigestAlgorithmIdentifier,\n   *   digest Digest\n   * }\n   * DigestAlgorithmIdentifier ::= AlgorithmIdentifier\n   * Digest ::= OCTET STRING\n   *\n   * To perform PSS signature verification, provide an instance\n   * of Forge PSS object as the scheme parameter.\n   *\n   * @param digest the message digest hash to compare against the signature,\n   *          as a binary-encoded string.\n   * @param signature the signature to verify, as a binary-encoded string.\n   * @param scheme signature verification scheme to use:\n   *          'RSASSA-PKCS1-V1_5' or undefined for RSASSA PKCS#1 v1.5,\n   *          a Forge PSS object for RSASSA-PSS,\n   *          'NONE' or null for none, DigestInfo will not be expected, but\n   *            PKCS#1 v1.5 padding will still be used.\n   * @param options optional verify options\n   *          _parseAllDigestBytes testing flag to control parsing of all\n   *            digest bytes. Unsupported and not for general usage.\n   *            (default: true)\n   *\n   * @return true if the signature was verified, false if not.\n   */\n  key.verify = function(digest, signature, scheme, options) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSASSA-PKCS1-V1_5';\n    }\n    if(options === undefined) {\n      options = {\n        _parseAllDigestBytes: true\n      };\n    }\n    if(!('_parseAllDigestBytes' in options)) {\n      options._parseAllDigestBytes = true;\n    }\n\n    if(scheme === 'RSASSA-PKCS1-V1_5') {\n      scheme = {\n        verify: function(digest, d) {\n          // remove padding\n          d = _decodePkcs1_v1_5(d, key, true);\n          // d is ASN.1 BER-encoded DigestInfo\n          var obj = asn1.fromDer(d, {\n            parseAllBytes: options._parseAllDigestBytes\n          });\n\n          // validate DigestInfo\n          var capture = {};\n          var errors = [];\n          if(!asn1.validate(obj, digestInfoValidator, capture, errors)) {\n            var error = new Error(\n              'ASN.1 object does not contain a valid RSASSA-PKCS1-v1_5 ' +\n              'DigestInfo value.');\n            error.errors = errors;\n            throw error;\n          }\n          // check hash algorithm identifier\n          // see PKCS1-v1-5DigestAlgorithms in RFC 8017\n          // FIXME: add support to vaidator for strict value choices\n          var oid = asn1.derToOid(capture.algorithmIdentifier);\n          if(!(oid === forge.oids.md2 ||\n            oid === forge.oids.md5 ||\n            oid === forge.oids.sha1 ||\n            oid === forge.oids.sha224 ||\n            oid === forge.oids.sha256 ||\n            oid === forge.oids.sha384 ||\n            oid === forge.oids.sha512 ||\n            oid === forge.oids['sha512-224'] ||\n            oid === forge.oids['sha512-256'])) {\n            var error = new Error(\n              'Unknown RSASSA-PKCS1-v1_5 DigestAlgorithm identifier.');\n            error.oid = oid;\n            throw error;\n          }\n\n          // special check for md2 and md5 that NULL parameters exist\n          if(oid === forge.oids.md2 || oid === forge.oids.md5) {\n            if(!('parameters' in capture)) {\n              throw new Error(\n                'ASN.1 object does not contain a valid RSASSA-PKCS1-v1_5 ' +\n                'DigestInfo value. ' +\n                'Missing algorithm identifer NULL parameters.');\n            }\n          }\n\n          // compare the given digest to the decrypted one\n          return digest === capture.digest;\n        }\n      };\n    } else if(scheme === 'NONE' || scheme === 'NULL' || scheme === null) {\n      scheme = {\n        verify: function(digest, d) {\n          // remove padding\n          d = _decodePkcs1_v1_5(d, key, true);\n          return digest === d;\n        }\n      };\n    }\n\n    // do rsa decryption w/o any decoding, then verify -- which does decoding\n    var d = pki.rsa.decrypt(signature, key, true, false);\n    return scheme.verify(digest, d, key.n.bitLength());\n  };\n\n  return key;\n};\n\n/**\n * Sets an RSA private key from BigIntegers modulus, exponent, primes,\n * prime exponents, and modular multiplicative inverse.\n *\n * @param n the modulus.\n * @param e the public exponent.\n * @param d the private exponent ((inverse of e) mod n).\n * @param p the first prime.\n * @param q the second prime.\n * @param dP exponent1 (d mod (p-1)).\n * @param dQ exponent2 (d mod (q-1)).\n * @param qInv ((inverse of q) mod p)\n *\n * @return the private key.\n */\npki.setRsaPrivateKey = pki.rsa.setPrivateKey = function(\n  n, e, d, p, q, dP, dQ, qInv) {\n  var key = {\n    n: n,\n    e: e,\n    d: d,\n    p: p,\n    q: q,\n    dP: dP,\n    dQ: dQ,\n    qInv: qInv\n  };\n\n  /**\n   * Decrypts the given data with this private key. The decryption scheme\n   * must match the one used to encrypt the data.\n   *\n   * @param data the byte string to decrypt.\n   * @param scheme the decryption scheme to use:\n   *          'RSAES-PKCS1-V1_5' (default),\n   *          'RSA-OAEP',\n   *          'RAW', 'NONE', or null to perform raw RSA decryption.\n   * @param schemeOptions any scheme-specific options.\n   *\n   * @return the decrypted byte string.\n   */\n  key.decrypt = function(data, scheme, schemeOptions) {\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    } else if(scheme === undefined) {\n      scheme = 'RSAES-PKCS1-V1_5';\n    }\n\n    // do rsa decryption w/o any decoding\n    var d = pki.rsa.decrypt(data, key, false, false);\n\n    if(scheme === 'RSAES-PKCS1-V1_5') {\n      scheme = {decode: _decodePkcs1_v1_5};\n    } else if(scheme === 'RSA-OAEP' || scheme === 'RSAES-OAEP') {\n      scheme = {\n        decode: function(d, key) {\n          return forge.pkcs1.decode_rsa_oaep(key, d, schemeOptions);\n        }\n      };\n    } else if(['RAW', 'NONE', 'NULL', null].indexOf(scheme) !== -1) {\n      scheme = {decode: function(d) {return d;}};\n    } else {\n      throw new Error('Unsupported encryption scheme: \"' + scheme + '\".');\n    }\n\n    // decode according to scheme\n    return scheme.decode(d, key, false);\n  };\n\n  /**\n   * Signs the given digest, producing a signature.\n   *\n   * PKCS#1 supports multiple (currently two) signature schemes:\n   * RSASSA-PKCS1-V1_5 and RSASSA-PSS.\n   *\n   * By default this implementation uses the \"old scheme\", i.e.\n   * RSASSA-PKCS1-V1_5. In order to generate a PSS signature, provide\n   * an instance of Forge PSS object as the scheme parameter.\n   *\n   * @param md the message digest object with the hash to sign.\n   * @param scheme the signature scheme to use:\n   *          'RSASSA-PKCS1-V1_5' or undefined for RSASSA PKCS#1 v1.5,\n   *          a Forge PSS object for RSASSA-PSS,\n   *          'NONE' or null for none, DigestInfo will not be used but\n   *            PKCS#1 v1.5 padding will still be used.\n   *\n   * @return the signature as a byte string.\n   */\n  key.sign = function(md, scheme) {\n    /* Note: The internal implementation of RSA operations is being\n      transitioned away from a PKCS#1 v1.5 hard-coded scheme. Some legacy\n      code like the use of an encoding block identifier 'bt' will eventually\n      be removed. */\n\n    // private key operation\n    var bt = false;\n\n    if(typeof scheme === 'string') {\n      scheme = scheme.toUpperCase();\n    }\n\n    if(scheme === undefined || scheme === 'RSASSA-PKCS1-V1_5') {\n      scheme = {encode: emsaPkcs1v15encode};\n      bt = 0x01;\n    } else if(scheme === 'NONE' || scheme === 'NULL' || scheme === null) {\n      scheme = {encode: function() {return md;}};\n      bt = 0x01;\n    }\n\n    // encode and then encrypt\n    var d = scheme.encode(md, key.n.bitLength());\n    return pki.rsa.encrypt(d, key, bt);\n  };\n\n  return key;\n};\n\n/**\n * Wraps an RSAPrivateKey ASN.1 object in an ASN.1 PrivateKeyInfo object.\n *\n * @param rsaKey the ASN.1 RSAPrivateKey.\n *\n * @return the ASN.1 PrivateKeyInfo.\n */\npki.wrapRsaPrivateKey = function(rsaKey) {\n  // PrivateKeyInfo\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (0)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(0).getBytes()),\n    // privateKeyAlgorithm\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(pki.oids.rsaEncryption).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // PrivateKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false,\n      asn1.toDer(rsaKey).getBytes())\n  ]);\n};\n\n/**\n * Converts a private key from an ASN.1 object.\n *\n * @param obj the ASN.1 representation of a PrivateKeyInfo containing an\n *          RSAPrivateKey or an RSAPrivateKey.\n *\n * @return the private key.\n */\npki.privateKeyFromAsn1 = function(obj) {\n  // get PrivateKeyInfo\n  var capture = {};\n  var errors = [];\n  if(asn1.validate(obj, privateKeyValidator, capture, errors)) {\n    obj = asn1.fromDer(forge.util.createBuffer(capture.privateKey));\n  }\n\n  // get RSAPrivateKey\n  capture = {};\n  errors = [];\n  if(!asn1.validate(obj, rsaPrivateKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read private key. ' +\n      'ASN.1 object does not contain an RSAPrivateKey.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // Note: Version is currently ignored.\n  // capture.privateKeyVersion\n  // FIXME: inefficient, get a BigInteger that uses byte strings\n  var n, e, d, p, q, dP, dQ, qInv;\n  n = forge.util.createBuffer(capture.privateKeyModulus).toHex();\n  e = forge.util.createBuffer(capture.privateKeyPublicExponent).toHex();\n  d = forge.util.createBuffer(capture.privateKeyPrivateExponent).toHex();\n  p = forge.util.createBuffer(capture.privateKeyPrime1).toHex();\n  q = forge.util.createBuffer(capture.privateKeyPrime2).toHex();\n  dP = forge.util.createBuffer(capture.privateKeyExponent1).toHex();\n  dQ = forge.util.createBuffer(capture.privateKeyExponent2).toHex();\n  qInv = forge.util.createBuffer(capture.privateKeyCoefficient).toHex();\n\n  // set private key\n  return pki.setRsaPrivateKey(\n    new BigInteger(n, 16),\n    new BigInteger(e, 16),\n    new BigInteger(d, 16),\n    new BigInteger(p, 16),\n    new BigInteger(q, 16),\n    new BigInteger(dP, 16),\n    new BigInteger(dQ, 16),\n    new BigInteger(qInv, 16));\n};\n\n/**\n * Converts a private key to an ASN.1 RSAPrivateKey.\n *\n * @param key the private key.\n *\n * @return the ASN.1 representation of an RSAPrivateKey.\n */\npki.privateKeyToAsn1 = pki.privateKeyToRSAPrivateKey = function(key) {\n  // RSAPrivateKey\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version (0 = only 2 primes, 1 multiple primes)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(0).getBytes()),\n    // modulus (n)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.n)),\n    // publicExponent (e)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.e)),\n    // privateExponent (d)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.d)),\n    // privateKeyPrime1 (p)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.p)),\n    // privateKeyPrime2 (q)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.q)),\n    // privateKeyExponent1 (dP)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.dP)),\n    // privateKeyExponent2 (dQ)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.dQ)),\n    // coefficient (qInv)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.qInv))\n  ]);\n};\n\n/**\n * Converts a public key from an ASN.1 SubjectPublicKeyInfo or RSAPublicKey.\n *\n * @param obj the asn1 representation of a SubjectPublicKeyInfo or RSAPublicKey.\n *\n * @return the public key.\n */\npki.publicKeyFromAsn1 = function(obj) {\n  // get SubjectPublicKeyInfo\n  var capture = {};\n  var errors = [];\n  if(asn1.validate(obj, publicKeyValidator, capture, errors)) {\n    // get oid\n    var oid = asn1.derToOid(capture.publicKeyOid);\n    if(oid !== pki.oids.rsaEncryption) {\n      var error = new Error('Cannot read public key. Unknown OID.');\n      error.oid = oid;\n      throw error;\n    }\n    obj = capture.rsaPublicKey;\n  }\n\n  // get RSA params\n  errors = [];\n  if(!asn1.validate(obj, rsaPublicKeyValidator, capture, errors)) {\n    var error = new Error('Cannot read public key. ' +\n      'ASN.1 object does not contain an RSAPublicKey.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // FIXME: inefficient, get a BigInteger that uses byte strings\n  var n = forge.util.createBuffer(capture.publicKeyModulus).toHex();\n  var e = forge.util.createBuffer(capture.publicKeyExponent).toHex();\n\n  // set public key\n  return pki.setRsaPublicKey(\n    new BigInteger(n, 16),\n    new BigInteger(e, 16));\n};\n\n/**\n * Converts a public key to an ASN.1 SubjectPublicKeyInfo.\n *\n * @param key the public key.\n *\n * @return the asn1 representation of a SubjectPublicKeyInfo.\n */\npki.publicKeyToAsn1 = pki.publicKeyToSubjectPublicKeyInfo = function(key) {\n  // SubjectPublicKeyInfo\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // AlgorithmIdentifier\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(pki.oids.rsaEncryption).getBytes()),\n      // parameters (null)\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n    ]),\n    // subjectPublicKey\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, [\n      pki.publicKeyToRSAPublicKey(key)\n    ])\n  ]);\n};\n\n/**\n * Converts a public key to an ASN.1 RSAPublicKey.\n *\n * @param key the public key.\n *\n * @return the asn1 representation of a RSAPublicKey.\n */\npki.publicKeyToRSAPublicKey = function(key) {\n  // RSAPublicKey\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // modulus (n)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.n)),\n    // publicExponent (e)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      _bnToBytes(key.e))\n  ]);\n};\n\n/**\n * Encodes a message using PKCS#1 v1.5 padding.\n *\n * @param m the message to encode.\n * @param key the RSA key to use.\n * @param bt the block type to use, i.e. either 0x01 (for signing) or 0x02\n *          (for encryption).\n *\n * @return the padded byte buffer.\n */\nfunction _encodePkcs1_v1_5(m, key, bt) {\n  var eb = forge.util.createBuffer();\n\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  /* use PKCS#1 v1.5 padding */\n  if(m.length > (k - 11)) {\n    var error = new Error('Message is too long for PKCS#1 v1.5 padding.');\n    error.length = m.length;\n    error.max = k - 11;\n    throw error;\n  }\n\n  /* A block type BT, a padding string PS, and the data D shall be\n    formatted into an octet string EB, the encryption block:\n\n    EB = 00 || BT || PS || 00 || D\n\n    The block type BT shall be a single octet indicating the structure of\n    the encryption block. For this version of the document it shall have\n    value 00, 01, or 02. For a private-key operation, the block type\n    shall be 00 or 01. For a public-key operation, it shall be 02.\n\n    The padding string PS shall consist of k-3-||D|| octets. For block\n    type 00, the octets shall have value 00; for block type 01, they\n    shall have value FF; and for block type 02, they shall be\n    pseudorandomly generated and nonzero. This makes the length of the\n    encryption block EB equal to k. */\n\n  // build the encryption block\n  eb.putByte(0x00);\n  eb.putByte(bt);\n\n  // create the padding\n  var padNum = k - 3 - m.length;\n  var padByte;\n  // private key op\n  if(bt === 0x00 || bt === 0x01) {\n    padByte = (bt === 0x00) ? 0x00 : 0xFF;\n    for(var i = 0; i < padNum; ++i) {\n      eb.putByte(padByte);\n    }\n  } else {\n    // public key op\n    // pad with random non-zero values\n    while(padNum > 0) {\n      var numZeros = 0;\n      var padBytes = forge.random.getBytes(padNum);\n      for(var i = 0; i < padNum; ++i) {\n        padByte = padBytes.charCodeAt(i);\n        if(padByte === 0) {\n          ++numZeros;\n        } else {\n          eb.putByte(padByte);\n        }\n      }\n      padNum = numZeros;\n    }\n  }\n\n  // zero followed by message\n  eb.putByte(0x00);\n  eb.putBytes(m);\n\n  return eb;\n}\n\n/**\n * Decodes a message using PKCS#1 v1.5 padding.\n *\n * @param em the message to decode.\n * @param key the RSA key to use.\n * @param pub true if the key is a public key, false if it is private.\n * @param ml the message length, if specified.\n *\n * @return the decoded bytes.\n */\nfunction _decodePkcs1_v1_5(em, key, pub, ml) {\n  // get the length of the modulus in bytes\n  var k = Math.ceil(key.n.bitLength() / 8);\n\n  /* It is an error if any of the following conditions occurs:\n\n    1. The encryption block EB cannot be parsed unambiguously.\n    2. The padding string PS consists of fewer than eight octets\n      or is inconsisent with the block type BT.\n    3. The decryption process is a public-key operation and the block\n      type BT is not 00 or 01, or the decryption process is a\n      private-key operation and the block type is not 02.\n   */\n\n  // parse the encryption block\n  var eb = forge.util.createBuffer(em);\n  var first = eb.getByte();\n  var bt = eb.getByte();\n  if(first !== 0x00 ||\n    (pub && bt !== 0x00 && bt !== 0x01) ||\n    (!pub && bt != 0x02) ||\n    (pub && bt === 0x00 && typeof(ml) === 'undefined')) {\n    throw new Error('Encryption block is invalid.');\n  }\n\n  var padNum = 0;\n  if(bt === 0x00) {\n    // check all padding bytes for 0x00\n    padNum = k - 3 - ml;\n    for(var i = 0; i < padNum; ++i) {\n      if(eb.getByte() !== 0x00) {\n        throw new Error('Encryption block is invalid.');\n      }\n    }\n  } else if(bt === 0x01) {\n    // find the first byte that isn't 0xFF, should be after all padding\n    padNum = 0;\n    while(eb.length() > 1) {\n      if(eb.getByte() !== 0xFF) {\n        --eb.read;\n        break;\n      }\n      ++padNum;\n    }\n  } else if(bt === 0x02) {\n    // look for 0x00 byte\n    padNum = 0;\n    while(eb.length() > 1) {\n      if(eb.getByte() === 0x00) {\n        --eb.read;\n        break;\n      }\n      ++padNum;\n    }\n  }\n\n  // zero must be 0x00 and padNum must be (k - 3 - message length)\n  var zero = eb.getByte();\n  if(zero !== 0x00 || padNum !== (k - 3 - eb.length())) {\n    throw new Error('Encryption block is invalid.');\n  }\n\n  return eb.getBytes();\n}\n\n/**\n * Runs the key-generation algorithm asynchronously, either in the background\n * via Web Workers, or using the main thread and setImmediate.\n *\n * @param state the key-pair generation state.\n * @param [options] options for key-pair generation:\n *          workerScript the worker script URL.\n *          workers the number of web workers (if supported) to use,\n *            (default: 2, -1 to use estimated cores minus one).\n *          workLoad the size of the work load, ie: number of possible prime\n *            numbers for each web worker to check per work assignment,\n *            (default: 100).\n * @param callback(err, keypair) called once the operation completes.\n */\nfunction _generateKeyPair(state, options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n\n  var opts = {\n    algorithm: {\n      name: options.algorithm || 'PRIMEINC',\n      options: {\n        workers: options.workers || 2,\n        workLoad: options.workLoad || 100,\n        workerScript: options.workerScript\n      }\n    }\n  };\n  if('prng' in options) {\n    opts.prng = options.prng;\n  }\n\n  generate();\n\n  function generate() {\n    // find p and then q (done in series to simplify)\n    getPrime(state.pBits, function(err, num) {\n      if(err) {\n        return callback(err);\n      }\n      state.p = num;\n      if(state.q !== null) {\n        return finish(err, state.q);\n      }\n      getPrime(state.qBits, finish);\n    });\n  }\n\n  function getPrime(bits, callback) {\n    forge.prime.generateProbablePrime(bits, opts, callback);\n  }\n\n  function finish(err, num) {\n    if(err) {\n      return callback(err);\n    }\n\n    // set q\n    state.q = num;\n\n    // ensure p is larger than q (swap them if not)\n    if(state.p.compareTo(state.q) < 0) {\n      var tmp = state.p;\n      state.p = state.q;\n      state.q = tmp;\n    }\n\n    // ensure p is coprime with e\n    if(state.p.subtract(BigInteger.ONE).gcd(state.e)\n      .compareTo(BigInteger.ONE) !== 0) {\n      state.p = null;\n      generate();\n      return;\n    }\n\n    // ensure q is coprime with e\n    if(state.q.subtract(BigInteger.ONE).gcd(state.e)\n      .compareTo(BigInteger.ONE) !== 0) {\n      state.q = null;\n      getPrime(state.qBits, finish);\n      return;\n    }\n\n    // compute phi: (p - 1)(q - 1) (Euler's totient function)\n    state.p1 = state.p.subtract(BigInteger.ONE);\n    state.q1 = state.q.subtract(BigInteger.ONE);\n    state.phi = state.p1.multiply(state.q1);\n\n    // ensure e and phi are coprime\n    if(state.phi.gcd(state.e).compareTo(BigInteger.ONE) !== 0) {\n      // phi and e aren't coprime, so generate a new p and q\n      state.p = state.q = null;\n      generate();\n      return;\n    }\n\n    // create n, ensure n is has the right number of bits\n    state.n = state.p.multiply(state.q);\n    if(state.n.bitLength() !== state.bits) {\n      // failed, get new q\n      state.q = null;\n      getPrime(state.qBits, finish);\n      return;\n    }\n\n    // set keys\n    var d = state.e.modInverse(state.phi);\n    state.keys = {\n      privateKey: pki.rsa.setPrivateKey(\n        state.n, state.e, d, state.p, state.q,\n        d.mod(state.p1), d.mod(state.q1),\n        state.q.modInverse(state.p)),\n      publicKey: pki.rsa.setPublicKey(state.n, state.e)\n    };\n\n    callback(null, state.keys);\n  }\n}\n\n/**\n * Converts a positive BigInteger into 2's-complement big-endian bytes.\n *\n * @param b the big integer to convert.\n *\n * @return the bytes.\n */\nfunction _bnToBytes(b) {\n  // prepend 0x00 if first byte >= 0x80\n  var hex = b.toString(16);\n  if(hex[0] >= '8') {\n    hex = '00' + hex;\n  }\n  var bytes = forge.util.hexToBytes(hex);\n\n  // ensure integer is minimally-encoded\n  if(bytes.length > 1 &&\n    // leading 0x00 for positive integer\n    ((bytes.charCodeAt(0) === 0 &&\n    (bytes.charCodeAt(1) & 0x80) === 0) ||\n    // leading 0xFF for negative integer\n    (bytes.charCodeAt(0) === 0xFF &&\n    (bytes.charCodeAt(1) & 0x80) === 0x80))) {\n    return bytes.substr(1);\n  }\n  return bytes;\n}\n\n/**\n * Returns the required number of Miller-Rabin tests to generate a\n * prime with an error probability of (1/2)^80.\n *\n * See Handbook of Applied Cryptography Chapter 4, Table 4.4.\n *\n * @param bits the bit size.\n *\n * @return the required number of iterations.\n */\nfunction _getMillerRabinTests(bits) {\n  if(bits <= 100) return 27;\n  if(bits <= 150) return 18;\n  if(bits <= 200) return 15;\n  if(bits <= 250) return 12;\n  if(bits <= 300) return 9;\n  if(bits <= 350) return 8;\n  if(bits <= 400) return 7;\n  if(bits <= 500) return 6;\n  if(bits <= 600) return 5;\n  if(bits <= 800) return 4;\n  if(bits <= 1250) return 3;\n  return 2;\n}\n\n/**\n * Performs feature detection on the Node crypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectNodeCrypto(fn) {\n  return forge.util.isNodejs && typeof _crypto[fn] === 'function';\n}\n\n/**\n * Performs feature detection on the SubtleCrypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectSubtleCrypto(fn) {\n  return (typeof util.globalScope !== 'undefined' &&\n    typeof util.globalScope.crypto === 'object' &&\n    typeof util.globalScope.crypto.subtle === 'object' &&\n    typeof util.globalScope.crypto.subtle[fn] === 'function');\n}\n\n/**\n * Performs feature detection on the deprecated Microsoft Internet Explorer\n * outdated SubtleCrypto interface. This function should only be used after\n * checking for the modern, standard SubtleCrypto interface.\n *\n * @param fn the feature (function) to detect.\n *\n * @return true if detected, false if not.\n */\nfunction _detectSubtleMsCrypto(fn) {\n  return (typeof util.globalScope !== 'undefined' &&\n    typeof util.globalScope.msCrypto === 'object' &&\n    typeof util.globalScope.msCrypto.subtle === 'object' &&\n    typeof util.globalScope.msCrypto.subtle[fn] === 'function');\n}\n\nfunction _intToUint8Array(x) {\n  var bytes = forge.util.hexToBytes(x.toString(16));\n  var buffer = new Uint8Array(bytes.length);\n  for(var i = 0; i < bytes.length; ++i) {\n    buffer[i] = bytes.charCodeAt(i);\n  }\n  return buffer;\n}\n\nfunction _privateKeyFromJwk(jwk) {\n  if(jwk.kty !== 'RSA') {\n    throw new Error(\n      'Unsupported key algorithm \"' + jwk.kty + '\"; algorithm must be \"RSA\".');\n  }\n  return pki.setRsaPrivateKey(\n    _base64ToBigInt(jwk.n),\n    _base64ToBigInt(jwk.e),\n    _base64ToBigInt(jwk.d),\n    _base64ToBigInt(jwk.p),\n    _base64ToBigInt(jwk.q),\n    _base64ToBigInt(jwk.dp),\n    _base64ToBigInt(jwk.dq),\n    _base64ToBigInt(jwk.qi));\n}\n\nfunction _publicKeyFromJwk(jwk) {\n  if(jwk.kty !== 'RSA') {\n    throw new Error('Key algorithm must be \"RSA\".');\n  }\n  return pki.setRsaPublicKey(\n    _base64ToBigInt(jwk.n),\n    _base64ToBigInt(jwk.e));\n}\n\nfunction _base64ToBigInt(b64) {\n  return new BigInteger(forge.util.bytesToHex(forge.util.decode64(b64)), 16);\n}\n","/**\n * Secure Hash Algorithm with 160-bit digest (SHA-1) implementation.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha1 = module.exports = forge.sha1 = forge.sha1 || {};\nforge.md.sha1 = forge.md.algorithms.sha1 = sha1;\n\n/**\n * Creates a SHA-1 message digest object.\n *\n * @return a message digest object.\n */\nsha1.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // SHA-1 state contains five 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(80);\n\n  // message digest object\n  var md = {\n    algorithm: 'sha1',\n    blockLength: 64,\n    digestLength: 20,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x67452301,\n      h1: 0xEFCDAB89,\n      h2: 0x98BADCFE,\n      h3: 0x10325476,\n      h4: 0xC3D2E1F0\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-1 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3,\n      h4: _state.h4\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32(s2.h0);\n    rval.putInt32(s2.h1);\n    rval.putInt32(s2.h2);\n    rval.putInt32(s2.h3);\n    rval.putInt32(s2.h4);\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-1 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-1 state with the given byte buffer.\n *\n * @param s the SHA-1 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t, a, b, c, d, e, f, i;\n  var len = bytes.length();\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 80 32-bit words according to SHA-1 algorithm\n    // and for 32-79 using Max Locktyukhin's optimization\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n\n    // round 1\n    for(i = 0; i < 16; ++i) {\n      t = bytes.getInt32();\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    for(; i < 20; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = d ^ (b & (c ^ d));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x5A827999 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 2\n    for(; i < 32; ++i) {\n      t = (w[i - 3] ^ w[i - 8] ^ w[i - 14] ^ w[i - 16]);\n      t = (t << 1) | (t >>> 31);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    for(; i < 40; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x6ED9EBA1 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 3\n    for(; i < 60; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = (b & c) | (d & (b ^ c));\n      t = ((a << 5) | (a >>> 27)) + f + e + 0x8F1BBCDC + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n    // round 4\n    for(; i < 80; ++i) {\n      t = (w[i - 6] ^ w[i - 16] ^ w[i - 28] ^ w[i - 32]);\n      t = (t << 2) | (t >>> 30);\n      w[i] = t;\n      f = b ^ c ^ d;\n      t = ((a << 5) | (a >>> 27)) + f + e + 0xCA62C1D6 + t;\n      e = d;\n      d = c;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      c = ((b << 30) | (b >>> 2)) >>> 0;\n      b = a;\n      a = t;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n\n    len -= 64;\n  }\n}\n","/**\n * Secure Hash Algorithm with 256-bit digest (SHA-256) implementation.\n *\n * See FIPS 180-2 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha256 = module.exports = forge.sha256 = forge.sha256 || {};\nforge.md.sha256 = forge.md.algorithms.sha256 = sha256;\n\n/**\n * Creates a SHA-256 message digest object.\n *\n * @return a message digest object.\n */\nsha256.create = function() {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  // SHA-256 state contains eight 32-bit integers\n  var _state = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for word storage\n  var _w = new Array(64);\n\n  // message digest object\n  var md = {\n    algorithm: 'sha256',\n    blockLength: 64,\n    digestLength: 32,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 8\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength64 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength64 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _state = {\n      h0: 0x6A09E667,\n      h1: 0xBB67AE85,\n      h2: 0x3C6EF372,\n      h3: 0xA54FF53A,\n      h4: 0x510E527F,\n      h5: 0x9B05688C,\n      h6: 0x1F83D9AB,\n      h7: 0x5BE0CD19\n    };\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_state, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-256 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 448 mod 512. In other words,\n    the data to be digested must be a multiple of 512 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 8 bytes (64\n    bits), that means that the last segment of the data must have 56 bytes\n    (448 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 448 mod 512 because\n    512 - 128 = 448.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 448 mod 512, then 512 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var s2 = {\n      h0: _state.h0,\n      h1: _state.h1,\n      h2: _state.h2,\n      h3: _state.h3,\n      h4: _state.h4,\n      h5: _state.h5,\n      h6: _state.h6,\n      h7: _state.h7\n    };\n    _update(s2, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    rval.putInt32(s2.h0);\n    rval.putInt32(s2.h1);\n    rval.putInt32(s2.h2);\n    rval.putInt32(s2.h3);\n    rval.putInt32(s2.h4);\n    rval.putInt32(s2.h5);\n    rval.putInt32(s2.h6);\n    rval.putInt32(s2.h7);\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-256 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n// table of constants\nvar _k = null;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 64);\n\n  // create K table for SHA-256\n  _k = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n    0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n    0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n    0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n    0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n    0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n    0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n    0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n    0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-256 state with the given byte buffer.\n *\n * @param s the SHA-256 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (64 byte) chunks\n  var t1, t2, s0, s1, ch, maj, i, a, b, c, d, e, f, g, h;\n  var len = bytes.length();\n  while(len >= 64) {\n    // the w array will be populated with sixteen 32-bit big-endian words\n    // and then extended into 64 32-bit words according to SHA-256\n    for(i = 0; i < 16; ++i) {\n      w[i] = bytes.getInt32();\n    }\n    for(; i < 64; ++i) {\n      // XOR word 2 words ago rot right 17, rot right 19, shft right 10\n      t1 = w[i - 2];\n      t1 =\n        ((t1 >>> 17) | (t1 << 15)) ^\n        ((t1 >>> 19) | (t1 << 13)) ^\n        (t1 >>> 10);\n      // XOR word 15 words ago rot right 7, rot right 18, shft right 3\n      t2 = w[i - 15];\n      t2 =\n        ((t2 >>> 7) | (t2 << 25)) ^\n        ((t2 >>> 18) | (t2 << 14)) ^\n        (t2 >>> 3);\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^32\n      w[i] = (t1 + w[i - 7] + t2 + w[i - 16]) | 0;\n    }\n\n    // initialize hash value for this chunk\n    a = s.h0;\n    b = s.h1;\n    c = s.h2;\n    d = s.h3;\n    e = s.h4;\n    f = s.h5;\n    g = s.h6;\n    h = s.h7;\n\n    // round function\n    for(i = 0; i < 64; ++i) {\n      // Sum1(e)\n      s1 =\n        ((e >>> 6) | (e << 26)) ^\n        ((e >>> 11) | (e << 21)) ^\n        ((e >>> 25) | (e << 7));\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch = g ^ (e & (f ^ g));\n      // Sum0(a)\n      s0 =\n        ((a >>> 2) | (a << 30)) ^\n        ((a >>> 13) | (a << 19)) ^\n        ((a >>> 22) | (a << 10));\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj = (a & b) | (c & (a ^ b));\n\n      // main algorithm\n      t1 = h + s1 + ch + _k[i] + w[i];\n      t2 = s0 + maj;\n      h = g;\n      g = f;\n      f = e;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      // can't truncate with `| 0`\n      e = (d + t1) >>> 0;\n      d = c;\n      c = b;\n      b = a;\n      // `>>> 0` necessary to avoid iOS/Safari 10 optimization bug\n      // can't truncate with `| 0`\n      a = (t1 + t2) >>> 0;\n    }\n\n    // update hash state\n    s.h0 = (s.h0 + a) | 0;\n    s.h1 = (s.h1 + b) | 0;\n    s.h2 = (s.h2 + c) | 0;\n    s.h3 = (s.h3 + d) | 0;\n    s.h4 = (s.h4 + e) | 0;\n    s.h5 = (s.h5 + f) | 0;\n    s.h6 = (s.h6 + g) | 0;\n    s.h7 = (s.h7 + h) | 0;\n    len -= 64;\n  }\n}\n","/**\n * Secure Hash Algorithm with a 1024-bit block size implementation.\n *\n * This includes: SHA-512, SHA-384, SHA-512/224, and SHA-512/256. For\n * SHA-256 (block size 512 bits), see sha256.js.\n *\n * See FIPS 180-4 for details.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2014-2015 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nrequire('./md');\nrequire('./util');\n\nvar sha512 = module.exports = forge.sha512 = forge.sha512 || {};\n\n// SHA-512\nforge.md.sha512 = forge.md.algorithms.sha512 = sha512;\n\n// SHA-384\nvar sha384 = forge.sha384 = forge.sha512.sha384 = forge.sha512.sha384 || {};\nsha384.create = function() {\n  return sha512.create('SHA-384');\n};\nforge.md.sha384 = forge.md.algorithms.sha384 = sha384;\n\n// SHA-512/256\nforge.sha512.sha256 = forge.sha512.sha256 || {\n  create: function() {\n    return sha512.create('SHA-512/256');\n  }\n};\nforge.md['sha512/256'] = forge.md.algorithms['sha512/256'] =\n  forge.sha512.sha256;\n\n// SHA-512/224\nforge.sha512.sha224 = forge.sha512.sha224 || {\n  create: function() {\n    return sha512.create('SHA-512/224');\n  }\n};\nforge.md['sha512/224'] = forge.md.algorithms['sha512/224'] =\n  forge.sha512.sha224;\n\n/**\n * Creates a SHA-2 message digest object.\n *\n * @param algorithm the algorithm to use (SHA-512, SHA-384, SHA-512/224,\n *          SHA-512/256).\n *\n * @return a message digest object.\n */\nsha512.create = function(algorithm) {\n  // do initialization as necessary\n  if(!_initialized) {\n    _init();\n  }\n\n  if(typeof algorithm === 'undefined') {\n    algorithm = 'SHA-512';\n  }\n\n  if(!(algorithm in _states)) {\n    throw new Error('Invalid SHA-512 algorithm: ' + algorithm);\n  }\n\n  // SHA-512 state contains eight 64-bit integers (each as two 32-bit ints)\n  var _state = _states[algorithm];\n  var _h = null;\n\n  // input buffer\n  var _input = forge.util.createBuffer();\n\n  // used for 64-bit word storage\n  var _w = new Array(80);\n  for(var wi = 0; wi < 80; ++wi) {\n    _w[wi] = new Array(2);\n  }\n\n  // determine digest length by algorithm name (default)\n  var digestLength = 64;\n  switch(algorithm) {\n    case 'SHA-384':\n      digestLength = 48;\n      break;\n    case 'SHA-512/256':\n      digestLength = 32;\n      break;\n    case 'SHA-512/224':\n      digestLength = 28;\n      break;\n  }\n\n  // message digest object\n  var md = {\n    // SHA-512 => sha512\n    algorithm: algorithm.replace('-', '').toLowerCase(),\n    blockLength: 128,\n    digestLength: digestLength,\n    // 56-bit length of message so far (does not including padding)\n    messageLength: 0,\n    // true message length\n    fullMessageLength: null,\n    // size of message length in bytes\n    messageLengthSize: 16\n  };\n\n  /**\n   * Starts the digest.\n   *\n   * @return this digest object.\n   */\n  md.start = function() {\n    // up to 56-bit message length for convenience\n    md.messageLength = 0;\n\n    // full message length (set md.messageLength128 for backwards-compatibility)\n    md.fullMessageLength = md.messageLength128 = [];\n    var int32s = md.messageLengthSize / 4;\n    for(var i = 0; i < int32s; ++i) {\n      md.fullMessageLength.push(0);\n    }\n    _input = forge.util.createBuffer();\n    _h = new Array(_state.length);\n    for(var i = 0; i < _state.length; ++i) {\n      _h[i] = _state[i].slice(0);\n    }\n    return md;\n  };\n  // start digest automatically for first time\n  md.start();\n\n  /**\n   * Updates the digest with the given message input. The given input can\n   * treated as raw input (no encoding will be applied) or an encoding of\n   * 'utf8' maybe given to encode the input using UTF-8.\n   *\n   * @param msg the message input to update with.\n   * @param encoding the encoding to use (default: 'raw', other: 'utf8').\n   *\n   * @return this digest object.\n   */\n  md.update = function(msg, encoding) {\n    if(encoding === 'utf8') {\n      msg = forge.util.encodeUtf8(msg);\n    }\n\n    // update message length\n    var len = msg.length;\n    md.messageLength += len;\n    len = [(len / 0x100000000) >>> 0, len >>> 0];\n    for(var i = md.fullMessageLength.length - 1; i >= 0; --i) {\n      md.fullMessageLength[i] += len[1];\n      len[1] = len[0] + ((md.fullMessageLength[i] / 0x100000000) >>> 0);\n      md.fullMessageLength[i] = md.fullMessageLength[i] >>> 0;\n      len[0] = ((len[1] / 0x100000000) >>> 0);\n    }\n\n    // add bytes to input buffer\n    _input.putBytes(msg);\n\n    // process bytes\n    _update(_h, _w, _input);\n\n    // compact input buffer every 2K or if empty\n    if(_input.read > 2048 || _input.length() === 0) {\n      _input.compact();\n    }\n\n    return md;\n  };\n\n  /**\n   * Produces the digest.\n   *\n   * @return a byte buffer containing the digest value.\n   */\n  md.digest = function() {\n    /* Note: Here we copy the remaining bytes in the input buffer and\n    add the appropriate SHA-512 padding. Then we do the final update\n    on a copy of the state so that if the user wants to get\n    intermediate digests they can do so. */\n\n    /* Determine the number of bytes that must be added to the message\n    to ensure its length is congruent to 896 mod 1024. In other words,\n    the data to be digested must be a multiple of 1024 bits (or 128 bytes).\n    This data includes the message, some padding, and the length of the\n    message. Since the length of the message will be encoded as 16 bytes (128\n    bits), that means that the last segment of the data must have 112 bytes\n    (896 bits) of message and padding. Therefore, the length of the message\n    plus the padding must be congruent to 896 mod 1024 because\n    1024 - 128 = 896.\n\n    In order to fill up the message length it must be filled with\n    padding that begins with 1 bit followed by all 0 bits. Padding\n    must *always* be present, so if the message length is already\n    congruent to 896 mod 1024, then 1024 padding bits must be added. */\n\n    var finalBlock = forge.util.createBuffer();\n    finalBlock.putBytes(_input.bytes());\n\n    // compute remaining size to be digested (include message length size)\n    var remaining = (\n      md.fullMessageLength[md.fullMessageLength.length - 1] +\n      md.messageLengthSize);\n\n    // add padding for overflow blockSize - overflow\n    // _padding starts with 1 byte with first bit is set (byte value 128), then\n    // there may be up to (blockSize - 1) other pad bytes\n    var overflow = remaining & (md.blockLength - 1);\n    finalBlock.putBytes(_padding.substr(0, md.blockLength - overflow));\n\n    // serialize message length in bits in big-endian order; since length\n    // is stored in bytes we multiply by 8 and add carry from next int\n    var next, carry;\n    var bits = md.fullMessageLength[0] * 8;\n    for(var i = 0; i < md.fullMessageLength.length - 1; ++i) {\n      next = md.fullMessageLength[i + 1] * 8;\n      carry = (next / 0x100000000) >>> 0;\n      bits += carry;\n      finalBlock.putInt32(bits >>> 0);\n      bits = next >>> 0;\n    }\n    finalBlock.putInt32(bits);\n\n    var h = new Array(_h.length);\n    for(var i = 0; i < _h.length; ++i) {\n      h[i] = _h[i].slice(0);\n    }\n    _update(h, _w, finalBlock);\n    var rval = forge.util.createBuffer();\n    var hlen;\n    if(algorithm === 'SHA-512') {\n      hlen = h.length;\n    } else if(algorithm === 'SHA-384') {\n      hlen = h.length - 2;\n    } else {\n      hlen = h.length - 4;\n    }\n    for(var i = 0; i < hlen; ++i) {\n      rval.putInt32(h[i][0]);\n      if(i !== hlen - 1 || algorithm !== 'SHA-512/224') {\n        rval.putInt32(h[i][1]);\n      }\n    }\n    return rval;\n  };\n\n  return md;\n};\n\n// sha-512 padding bytes not initialized yet\nvar _padding = null;\nvar _initialized = false;\n\n// table of constants\nvar _k = null;\n\n// initial hash states\nvar _states = null;\n\n/**\n * Initializes the constant tables.\n */\nfunction _init() {\n  // create padding\n  _padding = String.fromCharCode(128);\n  _padding += forge.util.fillString(String.fromCharCode(0x00), 128);\n\n  // create K table for SHA-512\n  _k = [\n    [0x428a2f98, 0xd728ae22], [0x71374491, 0x23ef65cd],\n    [0xb5c0fbcf, 0xec4d3b2f], [0xe9b5dba5, 0x8189dbbc],\n    [0x3956c25b, 0xf348b538], [0x59f111f1, 0xb605d019],\n    [0x923f82a4, 0xaf194f9b], [0xab1c5ed5, 0xda6d8118],\n    [0xd807aa98, 0xa3030242], [0x12835b01, 0x45706fbe],\n    [0x243185be, 0x4ee4b28c], [0x550c7dc3, 0xd5ffb4e2],\n    [0x72be5d74, 0xf27b896f], [0x80deb1fe, 0x3b1696b1],\n    [0x9bdc06a7, 0x25c71235], [0xc19bf174, 0xcf692694],\n    [0xe49b69c1, 0x9ef14ad2], [0xefbe4786, 0x384f25e3],\n    [0x0fc19dc6, 0x8b8cd5b5], [0x240ca1cc, 0x77ac9c65],\n    [0x2de92c6f, 0x592b0275], [0x4a7484aa, 0x6ea6e483],\n    [0x5cb0a9dc, 0xbd41fbd4], [0x76f988da, 0x831153b5],\n    [0x983e5152, 0xee66dfab], [0xa831c66d, 0x2db43210],\n    [0xb00327c8, 0x98fb213f], [0xbf597fc7, 0xbeef0ee4],\n    [0xc6e00bf3, 0x3da88fc2], [0xd5a79147, 0x930aa725],\n    [0x06ca6351, 0xe003826f], [0x14292967, 0x0a0e6e70],\n    [0x27b70a85, 0x46d22ffc], [0x2e1b2138, 0x5c26c926],\n    [0x4d2c6dfc, 0x5ac42aed], [0x53380d13, 0x9d95b3df],\n    [0x650a7354, 0x8baf63de], [0x766a0abb, 0x3c77b2a8],\n    [0x81c2c92e, 0x47edaee6], [0x92722c85, 0x1482353b],\n    [0xa2bfe8a1, 0x4cf10364], [0xa81a664b, 0xbc423001],\n    [0xc24b8b70, 0xd0f89791], [0xc76c51a3, 0x0654be30],\n    [0xd192e819, 0xd6ef5218], [0xd6990624, 0x5565a910],\n    [0xf40e3585, 0x5771202a], [0x106aa070, 0x32bbd1b8],\n    [0x19a4c116, 0xb8d2d0c8], [0x1e376c08, 0x5141ab53],\n    [0x2748774c, 0xdf8eeb99], [0x34b0bcb5, 0xe19b48a8],\n    [0x391c0cb3, 0xc5c95a63], [0x4ed8aa4a, 0xe3418acb],\n    [0x5b9cca4f, 0x7763e373], [0x682e6ff3, 0xd6b2b8a3],\n    [0x748f82ee, 0x5defb2fc], [0x78a5636f, 0x43172f60],\n    [0x84c87814, 0xa1f0ab72], [0x8cc70208, 0x1a6439ec],\n    [0x90befffa, 0x23631e28], [0xa4506ceb, 0xde82bde9],\n    [0xbef9a3f7, 0xb2c67915], [0xc67178f2, 0xe372532b],\n    [0xca273ece, 0xea26619c], [0xd186b8c7, 0x21c0c207],\n    [0xeada7dd6, 0xcde0eb1e], [0xf57d4f7f, 0xee6ed178],\n    [0x06f067aa, 0x72176fba], [0x0a637dc5, 0xa2c898a6],\n    [0x113f9804, 0xbef90dae], [0x1b710b35, 0x131c471b],\n    [0x28db77f5, 0x23047d84], [0x32caab7b, 0x40c72493],\n    [0x3c9ebe0a, 0x15c9bebc], [0x431d67c4, 0x9c100d4c],\n    [0x4cc5d4be, 0xcb3e42b6], [0x597f299c, 0xfc657e2a],\n    [0x5fcb6fab, 0x3ad6faec], [0x6c44198c, 0x4a475817]\n  ];\n\n  // initial hash states\n  _states = {};\n  _states['SHA-512'] = [\n    [0x6a09e667, 0xf3bcc908],\n    [0xbb67ae85, 0x84caa73b],\n    [0x3c6ef372, 0xfe94f82b],\n    [0xa54ff53a, 0x5f1d36f1],\n    [0x510e527f, 0xade682d1],\n    [0x9b05688c, 0x2b3e6c1f],\n    [0x1f83d9ab, 0xfb41bd6b],\n    [0x5be0cd19, 0x137e2179]\n  ];\n  _states['SHA-384'] = [\n    [0xcbbb9d5d, 0xc1059ed8],\n    [0x629a292a, 0x367cd507],\n    [0x9159015a, 0x3070dd17],\n    [0x152fecd8, 0xf70e5939],\n    [0x67332667, 0xffc00b31],\n    [0x8eb44a87, 0x68581511],\n    [0xdb0c2e0d, 0x64f98fa7],\n    [0x47b5481d, 0xbefa4fa4]\n  ];\n  _states['SHA-512/256'] = [\n    [0x22312194, 0xFC2BF72C],\n    [0x9F555FA3, 0xC84C64C2],\n    [0x2393B86B, 0x6F53B151],\n    [0x96387719, 0x5940EABD],\n    [0x96283EE2, 0xA88EFFE3],\n    [0xBE5E1E25, 0x53863992],\n    [0x2B0199FC, 0x2C85B8AA],\n    [0x0EB72DDC, 0x81C52CA2]\n  ];\n  _states['SHA-512/224'] = [\n    [0x8C3D37C8, 0x19544DA2],\n    [0x73E19966, 0x89DCD4D6],\n    [0x1DFAB7AE, 0x32FF9C82],\n    [0x679DD514, 0x582F9FCF],\n    [0x0F6D2B69, 0x7BD44DA8],\n    [0x77E36F73, 0x04C48942],\n    [0x3F9D85A8, 0x6A1D36C8],\n    [0x1112E6AD, 0x91D692A1]\n  ];\n\n  // now initialized\n  _initialized = true;\n}\n\n/**\n * Updates a SHA-512 state with the given byte buffer.\n *\n * @param s the SHA-512 state to update.\n * @param w the array to use to store words.\n * @param bytes the byte buffer to update with.\n */\nfunction _update(s, w, bytes) {\n  // consume 512 bit (128 byte) chunks\n  var t1_hi, t1_lo;\n  var t2_hi, t2_lo;\n  var s0_hi, s0_lo;\n  var s1_hi, s1_lo;\n  var ch_hi, ch_lo;\n  var maj_hi, maj_lo;\n  var a_hi, a_lo;\n  var b_hi, b_lo;\n  var c_hi, c_lo;\n  var d_hi, d_lo;\n  var e_hi, e_lo;\n  var f_hi, f_lo;\n  var g_hi, g_lo;\n  var h_hi, h_lo;\n  var i, hi, lo, w2, w7, w15, w16;\n  var len = bytes.length();\n  while(len >= 128) {\n    // the w array will be populated with sixteen 64-bit big-endian words\n    // and then extended into 64 64-bit words according to SHA-512\n    for(i = 0; i < 16; ++i) {\n      w[i][0] = bytes.getInt32() >>> 0;\n      w[i][1] = bytes.getInt32() >>> 0;\n    }\n    for(; i < 80; ++i) {\n      // for word 2 words ago: ROTR 19(x) ^ ROTR 61(x) ^ SHR 6(x)\n      w2 = w[i - 2];\n      hi = w2[0];\n      lo = w2[1];\n\n      // high bits\n      t1_hi = (\n        ((hi >>> 19) | (lo << 13)) ^ // ROTR 19\n        ((lo >>> 29) | (hi << 3)) ^ // ROTR 61/(swap + ROTR 29)\n        (hi >>> 6)) >>> 0; // SHR 6\n      // low bits\n      t1_lo = (\n        ((hi << 13) | (lo >>> 19)) ^ // ROTR 19\n        ((lo << 3) | (hi >>> 29)) ^ // ROTR 61/(swap + ROTR 29)\n        ((hi << 26) | (lo >>> 6))) >>> 0; // SHR 6\n\n      // for word 15 words ago: ROTR 1(x) ^ ROTR 8(x) ^ SHR 7(x)\n      w15 = w[i - 15];\n      hi = w15[0];\n      lo = w15[1];\n\n      // high bits\n      t2_hi = (\n        ((hi >>> 1) | (lo << 31)) ^ // ROTR 1\n        ((hi >>> 8) | (lo << 24)) ^ // ROTR 8\n        (hi >>> 7)) >>> 0; // SHR 7\n      // low bits\n      t2_lo = (\n        ((hi << 31) | (lo >>> 1)) ^ // ROTR 1\n        ((hi << 24) | (lo >>> 8)) ^ // ROTR 8\n        ((hi << 25) | (lo >>> 7))) >>> 0; // SHR 7\n\n      // sum(t1, word 7 ago, t2, word 16 ago) modulo 2^64 (carry lo overflow)\n      w7 = w[i - 7];\n      w16 = w[i - 16];\n      lo = (t1_lo + w7[1] + t2_lo + w16[1]);\n      w[i][0] = (t1_hi + w7[0] + t2_hi + w16[0] +\n        ((lo / 0x100000000) >>> 0)) >>> 0;\n      w[i][1] = lo >>> 0;\n    }\n\n    // initialize hash value for this chunk\n    a_hi = s[0][0];\n    a_lo = s[0][1];\n    b_hi = s[1][0];\n    b_lo = s[1][1];\n    c_hi = s[2][0];\n    c_lo = s[2][1];\n    d_hi = s[3][0];\n    d_lo = s[3][1];\n    e_hi = s[4][0];\n    e_lo = s[4][1];\n    f_hi = s[5][0];\n    f_lo = s[5][1];\n    g_hi = s[6][0];\n    g_lo = s[6][1];\n    h_hi = s[7][0];\n    h_lo = s[7][1];\n\n    // round function\n    for(i = 0; i < 80; ++i) {\n      // Sum1(e) = ROTR 14(e) ^ ROTR 18(e) ^ ROTR 41(e)\n      s1_hi = (\n        ((e_hi >>> 14) | (e_lo << 18)) ^ // ROTR 14\n        ((e_hi >>> 18) | (e_lo << 14)) ^ // ROTR 18\n        ((e_lo >>> 9) | (e_hi << 23))) >>> 0; // ROTR 41/(swap + ROTR 9)\n      s1_lo = (\n        ((e_hi << 18) | (e_lo >>> 14)) ^ // ROTR 14\n        ((e_hi << 14) | (e_lo >>> 18)) ^ // ROTR 18\n        ((e_lo << 23) | (e_hi >>> 9))) >>> 0; // ROTR 41/(swap + ROTR 9)\n\n      // Ch(e, f, g) (optimized the same way as SHA-1)\n      ch_hi = (g_hi ^ (e_hi & (f_hi ^ g_hi))) >>> 0;\n      ch_lo = (g_lo ^ (e_lo & (f_lo ^ g_lo))) >>> 0;\n\n      // Sum0(a) = ROTR 28(a) ^ ROTR 34(a) ^ ROTR 39(a)\n      s0_hi = (\n        ((a_hi >>> 28) | (a_lo << 4)) ^ // ROTR 28\n        ((a_lo >>> 2) | (a_hi << 30)) ^ // ROTR 34/(swap + ROTR 2)\n        ((a_lo >>> 7) | (a_hi << 25))) >>> 0; // ROTR 39/(swap + ROTR 7)\n      s0_lo = (\n        ((a_hi << 4) | (a_lo >>> 28)) ^ // ROTR 28\n        ((a_lo << 30) | (a_hi >>> 2)) ^ // ROTR 34/(swap + ROTR 2)\n        ((a_lo << 25) | (a_hi >>> 7))) >>> 0; // ROTR 39/(swap + ROTR 7)\n\n      // Maj(a, b, c) (optimized the same way as SHA-1)\n      maj_hi = ((a_hi & b_hi) | (c_hi & (a_hi ^ b_hi))) >>> 0;\n      maj_lo = ((a_lo & b_lo) | (c_lo & (a_lo ^ b_lo))) >>> 0;\n\n      // main algorithm\n      // t1 = (h + s1 + ch + _k[i] + _w[i]) modulo 2^64 (carry lo overflow)\n      lo = (h_lo + s1_lo + ch_lo + _k[i][1] + w[i][1]);\n      t1_hi = (h_hi + s1_hi + ch_hi + _k[i][0] + w[i][0] +\n        ((lo / 0x100000000) >>> 0)) >>> 0;\n      t1_lo = lo >>> 0;\n\n      // t2 = s0 + maj modulo 2^64 (carry lo overflow)\n      lo = s0_lo + maj_lo;\n      t2_hi = (s0_hi + maj_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      t2_lo = lo >>> 0;\n\n      h_hi = g_hi;\n      h_lo = g_lo;\n\n      g_hi = f_hi;\n      g_lo = f_lo;\n\n      f_hi = e_hi;\n      f_lo = e_lo;\n\n      // e = (d + t1) modulo 2^64 (carry lo overflow)\n      lo = d_lo + t1_lo;\n      e_hi = (d_hi + t1_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      e_lo = lo >>> 0;\n\n      d_hi = c_hi;\n      d_lo = c_lo;\n\n      c_hi = b_hi;\n      c_lo = b_lo;\n\n      b_hi = a_hi;\n      b_lo = a_lo;\n\n      // a = (t1 + t2) modulo 2^64 (carry lo overflow)\n      lo = t1_lo + t2_lo;\n      a_hi = (t1_hi + t2_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n      a_lo = lo >>> 0;\n    }\n\n    // update hash state (additional modulo 2^64)\n    lo = s[0][1] + a_lo;\n    s[0][0] = (s[0][0] + a_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[0][1] = lo >>> 0;\n\n    lo = s[1][1] + b_lo;\n    s[1][0] = (s[1][0] + b_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[1][1] = lo >>> 0;\n\n    lo = s[2][1] + c_lo;\n    s[2][0] = (s[2][0] + c_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[2][1] = lo >>> 0;\n\n    lo = s[3][1] + d_lo;\n    s[3][0] = (s[3][0] + d_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[3][1] = lo >>> 0;\n\n    lo = s[4][1] + e_lo;\n    s[4][0] = (s[4][0] + e_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[4][1] = lo >>> 0;\n\n    lo = s[5][1] + f_lo;\n    s[5][0] = (s[5][0] + f_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[5][1] = lo >>> 0;\n\n    lo = s[6][1] + g_lo;\n    s[6][0] = (s[6][0] + g_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[6][1] = lo >>> 0;\n\n    lo = s[7][1] + h_lo;\n    s[7][0] = (s[7][0] + h_hi + ((lo / 0x100000000) >>> 0)) >>> 0;\n    s[7][1] = lo >>> 0;\n\n    len -= 128;\n  }\n}\n","/**\n * Functions to output keys in SSH-friendly formats.\n *\n * This is part of the Forge project which may be used under the terms of\n * either the BSD License or the GNU General Public License (GPL) Version 2.\n *\n * See: https://github.com/digitalbazaar/forge/blob/cbebca3780658703d925b61b2caffb1d263a6c1d/LICENSE\n *\n * @author https://github.com/shellac\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./hmac');\nrequire('./md5');\nrequire('./sha1');\nrequire('./util');\n\nvar ssh = module.exports = forge.ssh = forge.ssh || {};\n\n/**\n * Encodes (and optionally encrypts) a private RSA key as a Putty PPK file.\n *\n * @param privateKey the key.\n * @param passphrase a passphrase to protect the key (falsy for no encryption).\n * @param comment a comment to include in the key file.\n *\n * @return the PPK file as a string.\n */\nssh.privateKeyToPutty = function(privateKey, passphrase, comment) {\n  comment = comment || '';\n  passphrase = passphrase || '';\n  var algorithm = 'ssh-rsa';\n  var encryptionAlgorithm = (passphrase === '') ? 'none' : 'aes256-cbc';\n\n  var ppk = 'PuTTY-User-Key-File-2: ' + algorithm + '\\r\\n';\n  ppk += 'Encryption: ' + encryptionAlgorithm + '\\r\\n';\n  ppk += 'Comment: ' + comment + '\\r\\n';\n\n  // public key into buffer for ppk\n  var pubbuffer = forge.util.createBuffer();\n  _addStringToBuffer(pubbuffer, algorithm);\n  _addBigIntegerToBuffer(pubbuffer, privateKey.e);\n  _addBigIntegerToBuffer(pubbuffer, privateKey.n);\n\n  // write public key\n  var pub = forge.util.encode64(pubbuffer.bytes(), 64);\n  var length = Math.floor(pub.length / 66) + 1; // 66 = 64 + \\r\\n\n  ppk += 'Public-Lines: ' + length + '\\r\\n';\n  ppk += pub;\n\n  // private key into a buffer\n  var privbuffer = forge.util.createBuffer();\n  _addBigIntegerToBuffer(privbuffer, privateKey.d);\n  _addBigIntegerToBuffer(privbuffer, privateKey.p);\n  _addBigIntegerToBuffer(privbuffer, privateKey.q);\n  _addBigIntegerToBuffer(privbuffer, privateKey.qInv);\n\n  // optionally encrypt the private key\n  var priv;\n  if(!passphrase) {\n    // use the unencrypted buffer\n    priv = forge.util.encode64(privbuffer.bytes(), 64);\n  } else {\n    // encrypt RSA key using passphrase\n    var encLen = privbuffer.length() + 16 - 1;\n    encLen -= encLen % 16;\n\n    // pad private key with sha1-d data -- needs to be a multiple of 16\n    var padding = _sha1(privbuffer.bytes());\n\n    padding.truncate(padding.length() - encLen + privbuffer.length());\n    privbuffer.putBuffer(padding);\n\n    var aeskey = forge.util.createBuffer();\n    aeskey.putBuffer(_sha1('\\x00\\x00\\x00\\x00', passphrase));\n    aeskey.putBuffer(_sha1('\\x00\\x00\\x00\\x01', passphrase));\n\n    // encrypt some bytes using CBC mode\n    // key is 40 bytes, so truncate *by* 8 bytes\n    var cipher = forge.aes.createEncryptionCipher(aeskey.truncate(8), 'CBC');\n    cipher.start(forge.util.createBuffer().fillWithByte(0, 16));\n    cipher.update(privbuffer.copy());\n    cipher.finish();\n    var encrypted = cipher.output;\n\n    // Note: this appears to differ from Putty -- is forge wrong, or putty?\n    // due to padding we finish as an exact multiple of 16\n    encrypted.truncate(16); // all padding\n\n    priv = forge.util.encode64(encrypted.bytes(), 64);\n  }\n\n  // output private key\n  length = Math.floor(priv.length / 66) + 1; // 64 + \\r\\n\n  ppk += '\\r\\nPrivate-Lines: ' + length + '\\r\\n';\n  ppk += priv;\n\n  // MAC\n  var mackey = _sha1('putty-private-key-file-mac-key', passphrase);\n\n  var macbuffer = forge.util.createBuffer();\n  _addStringToBuffer(macbuffer, algorithm);\n  _addStringToBuffer(macbuffer, encryptionAlgorithm);\n  _addStringToBuffer(macbuffer, comment);\n  macbuffer.putInt32(pubbuffer.length());\n  macbuffer.putBuffer(pubbuffer);\n  macbuffer.putInt32(privbuffer.length());\n  macbuffer.putBuffer(privbuffer);\n\n  var hmac = forge.hmac.create();\n  hmac.start('sha1', mackey);\n  hmac.update(macbuffer.bytes());\n\n  ppk += '\\r\\nPrivate-MAC: ' + hmac.digest().toHex() + '\\r\\n';\n\n  return ppk;\n};\n\n/**\n * Encodes a public RSA key as an OpenSSH file.\n *\n * @param key the key.\n * @param comment a comment.\n *\n * @return the public key in OpenSSH format.\n */\nssh.publicKeyToOpenSSH = function(key, comment) {\n  var type = 'ssh-rsa';\n  comment = comment || '';\n\n  var buffer = forge.util.createBuffer();\n  _addStringToBuffer(buffer, type);\n  _addBigIntegerToBuffer(buffer, key.e);\n  _addBigIntegerToBuffer(buffer, key.n);\n\n  return type + ' ' + forge.util.encode64(buffer.bytes()) + ' ' + comment;\n};\n\n/**\n * Encodes a private RSA key as an OpenSSH file.\n *\n * @param key the key.\n * @param passphrase a passphrase to protect the key (falsy for no encryption).\n *\n * @return the public key in OpenSSH format.\n */\nssh.privateKeyToOpenSSH = function(privateKey, passphrase) {\n  if(!passphrase) {\n    return forge.pki.privateKeyToPem(privateKey);\n  }\n  // OpenSSH private key is just a legacy format, it seems\n  return forge.pki.encryptRsaPrivateKey(privateKey, passphrase,\n    {legacy: true, algorithm: 'aes128'});\n};\n\n/**\n * Gets the SSH fingerprint for the given public key.\n *\n * @param options the options to use.\n *          [md] the message digest object to use (defaults to forge.md.md5).\n *          [encoding] an alternative output encoding, such as 'hex'\n *            (defaults to none, outputs a byte buffer).\n *          [delimiter] the delimiter to use between bytes for 'hex' encoded\n *            output, eg: ':' (defaults to none).\n *\n * @return the fingerprint as a byte buffer or other encoding based on options.\n */\nssh.getPublicKeyFingerprint = function(key, options) {\n  options = options || {};\n  var md = options.md || forge.md.md5.create();\n\n  var type = 'ssh-rsa';\n  var buffer = forge.util.createBuffer();\n  _addStringToBuffer(buffer, type);\n  _addBigIntegerToBuffer(buffer, key.e);\n  _addBigIntegerToBuffer(buffer, key.n);\n\n  // hash public key bytes\n  md.start();\n  md.update(buffer.getBytes());\n  var digest = md.digest();\n  if(options.encoding === 'hex') {\n    var hex = digest.toHex();\n    if(options.delimiter) {\n      return hex.match(/.{2}/g).join(options.delimiter);\n    }\n    return hex;\n  } else if(options.encoding === 'binary') {\n    return digest.getBytes();\n  } else if(options.encoding) {\n    throw new Error('Unknown encoding \"' + options.encoding + '\".');\n  }\n  return digest;\n};\n\n/**\n * Adds len(val) then val to a buffer.\n *\n * @param buffer the buffer to add to.\n * @param val a big integer.\n */\nfunction _addBigIntegerToBuffer(buffer, val) {\n  var hexVal = val.toString(16);\n  // ensure 2s complement +ve\n  if(hexVal[0] >= '8') {\n    hexVal = '00' + hexVal;\n  }\n  var bytes = forge.util.hexToBytes(hexVal);\n  buffer.putInt32(bytes.length);\n  buffer.putBytes(bytes);\n}\n\n/**\n * Adds len(val) then val to a buffer.\n *\n * @param buffer the buffer to add to.\n * @param val a string.\n */\nfunction _addStringToBuffer(buffer, val) {\n  buffer.putInt32(val.length);\n  buffer.putString(val);\n}\n\n/**\n * Hashes the arguments into one value using SHA-1.\n *\n * @return the sha1 hash of the provided arguments.\n */\nfunction _sha1() {\n  var sha = forge.md.sha1.create();\n  var num = arguments.length;\n  for (var i = 0; i < num; ++i) {\n    sha.update(arguments[i]);\n  }\n  return sha.digest();\n}\n","/**\n * A Javascript implementation of Transport Layer Security (TLS).\n *\n * @author Dave Longley\n *\n * Copyright (c) 2009-2014 Digital Bazaar, Inc.\n *\n * The TLS Handshake Protocol involves the following steps:\n *\n * - Exchange hello messages to agree on algorithms, exchange random values,\n * and check for session resumption.\n *\n * - Exchange the necessary cryptographic parameters to allow the client and\n * server to agree on a premaster secret.\n *\n * - Exchange certificates and cryptographic information to allow the client\n * and server to authenticate themselves.\n *\n * - Generate a master secret from the premaster secret and exchanged random\n * values.\n *\n * - Provide security parameters to the record layer.\n *\n * - Allow the client and server to verify that their peer has calculated the\n * same security parameters and that the handshake occurred without tampering\n * by an attacker.\n *\n * Up to 4 different messages may be sent during a key exchange. The server\n * certificate, the server key exchange, the client certificate, and the\n * client key exchange.\n *\n * A typical handshake (from the client's perspective).\n *\n * 1. Client sends ClientHello.\n * 2. Client receives ServerHello.\n * 3. Client receives optional Certificate.\n * 4. Client receives optional ServerKeyExchange.\n * 5. Client receives ServerHelloDone.\n * 6. Client sends optional Certificate.\n * 7. Client sends ClientKeyExchange.\n * 8. Client sends optional CertificateVerify.\n * 9. Client sends ChangeCipherSpec.\n * 10. Client sends Finished.\n * 11. Client receives ChangeCipherSpec.\n * 12. Client receives Finished.\n * 13. Client sends/receives application data.\n *\n * To reuse an existing session:\n *\n * 1. Client sends ClientHello with session ID for reuse.\n * 2. Client receives ServerHello with same session ID if reusing.\n * 3. Client receives ChangeCipherSpec message if reusing.\n * 4. Client receives Finished.\n * 5. Client sends ChangeCipherSpec.\n * 6. Client sends Finished.\n *\n * Note: Client ignores HelloRequest if in the middle of a handshake.\n *\n * Record Layer:\n *\n * The record layer fragments information blocks into TLSPlaintext records\n * carrying data in chunks of 2^14 bytes or less. Client message boundaries are\n * not preserved in the record layer (i.e., multiple client messages of the\n * same ContentType MAY be coalesced into a single TLSPlaintext record, or a\n * single message MAY be fragmented across several records).\n *\n * struct {\n *   uint8 major;\n *   uint8 minor;\n * } ProtocolVersion;\n *\n * struct {\n *   ContentType type;\n *   ProtocolVersion version;\n *   uint16 length;\n *   opaque fragment[TLSPlaintext.length];\n * } TLSPlaintext;\n *\n * type:\n *   The higher-level protocol used to process the enclosed fragment.\n *\n * version:\n *   The version of the protocol being employed. TLS Version 1.2 uses version\n *   {3, 3}. TLS Version 1.0 uses version {3, 1}. Note that a client that\n *   supports multiple versions of TLS may not know what version will be\n *   employed before it receives the ServerHello.\n *\n * length:\n *   The length (in bytes) of the following TLSPlaintext.fragment. The length\n *   MUST NOT exceed 2^14 = 16384 bytes.\n *\n * fragment:\n *   The application data. This data is transparent and treated as an\n *   independent block to be dealt with by the higher-level protocol specified\n *   by the type field.\n *\n * Implementations MUST NOT send zero-length fragments of Handshake, Alert, or\n * ChangeCipherSpec content types. Zero-length fragments of Application data\n * MAY be sent as they are potentially useful as a traffic analysis\n * countermeasure.\n *\n * Note: Data of different TLS record layer content types MAY be interleaved.\n * Application data is generally of lower precedence for transmission than\n * other content types. However, records MUST be delivered to the network in\n * the same order as they are protected by the record layer. Recipients MUST\n * receive and process interleaved application layer traffic during handshakes\n * subsequent to the first one on a connection.\n *\n * struct {\n *   ContentType type;       // same as TLSPlaintext.type\n *   ProtocolVersion version;// same as TLSPlaintext.version\n *   uint16 length;\n *   opaque fragment[TLSCompressed.length];\n * } TLSCompressed;\n *\n * length:\n *   The length (in bytes) of the following TLSCompressed.fragment.\n *   The length MUST NOT exceed 2^14 + 1024.\n *\n * fragment:\n *   The compressed form of TLSPlaintext.fragment.\n *\n * Note: A CompressionMethod.null operation is an identity operation; no fields\n * are altered. In this implementation, since no compression is supported,\n * uncompressed records are always the same as compressed records.\n *\n * Encryption Information:\n *\n * The encryption and MAC functions translate a TLSCompressed structure into a\n * TLSCiphertext. The decryption functions reverse the process. The MAC of the\n * record also includes a sequence number so that missing, extra, or repeated\n * messages are detectable.\n *\n * struct {\n *   ContentType type;\n *   ProtocolVersion version;\n *   uint16 length;\n *   select (SecurityParameters.cipher_type) {\n *     case stream: GenericStreamCipher;\n *     case block:  GenericBlockCipher;\n *     case aead:   GenericAEADCipher;\n *   } fragment;\n * } TLSCiphertext;\n *\n * type:\n *   The type field is identical to TLSCompressed.type.\n *\n * version:\n *   The version field is identical to TLSCompressed.version.\n *\n * length:\n *   The length (in bytes) of the following TLSCiphertext.fragment.\n *   The length MUST NOT exceed 2^14 + 2048.\n *\n * fragment:\n *   The encrypted form of TLSCompressed.fragment, with the MAC.\n *\n * Note: Only CBC Block Ciphers are supported by this implementation.\n *\n * The TLSCompressed.fragment structures are converted to/from block\n * TLSCiphertext.fragment structures.\n *\n * struct {\n *   opaque IV[SecurityParameters.record_iv_length];\n *   block-ciphered struct {\n *     opaque content[TLSCompressed.length];\n *     opaque MAC[SecurityParameters.mac_length];\n *     uint8 padding[GenericBlockCipher.padding_length];\n *     uint8 padding_length;\n *   };\n * } GenericBlockCipher;\n *\n * The MAC is generated as described in Section 6.2.3.1.\n *\n * IV:\n *   The Initialization Vector (IV) SHOULD be chosen at random, and MUST be\n *   unpredictable. Note that in versions of TLS prior to 1.1, there was no\n *   IV field, and the last ciphertext block of the previous record (the \"CBC\n *   residue\") was used as the IV. This was changed to prevent the attacks\n *   described in [CBCATT]. For block ciphers, the IV length is of length\n *   SecurityParameters.record_iv_length, which is equal to the\n *   SecurityParameters.block_size.\n *\n * padding:\n *   Padding that is added to force the length of the plaintext to be an\n *   integral multiple of the block cipher's block length. The padding MAY be\n *   any length up to 255 bytes, as long as it results in the\n *   TLSCiphertext.length being an integral multiple of the block length.\n *   Lengths longer than necessary might be desirable to frustrate attacks on\n *   a protocol that are based on analysis of the lengths of exchanged\n *   messages. Each uint8 in the padding data vector MUST be filled with the\n *   padding length value. The receiver MUST check this padding and MUST use\n *   the bad_record_mac alert to indicate padding errors.\n *\n * padding_length:\n *   The padding length MUST be such that the total size of the\n *   GenericBlockCipher structure is a multiple of the cipher's block length.\n *   Legal values range from zero to 255, inclusive. This length specifies the\n *   length of the padding field exclusive of the padding_length field itself.\n *\n * The encrypted data length (TLSCiphertext.length) is one more than the sum of\n * SecurityParameters.block_length, TLSCompressed.length,\n * SecurityParameters.mac_length, and padding_length.\n *\n * Example: If the block length is 8 bytes, the content length\n * (TLSCompressed.length) is 61 bytes, and the MAC length is 20 bytes, then the\n * length before padding is 82 bytes (this does not include the IV. Thus, the\n * padding length modulo 8 must be equal to 6 in order to make the total length\n * an even multiple of 8 bytes (the block length). The padding length can be\n * 6, 14, 22, and so on, through 254. If the padding length were the minimum\n * necessary, 6, the padding would be 6 bytes, each containing the value 6.\n * Thus, the last 8 octets of the GenericBlockCipher before block encryption\n * would be xx 06 06 06 06 06 06 06, where xx is the last octet of the MAC.\n *\n * Note: With block ciphers in CBC mode (Cipher Block Chaining), it is critical\n * that the entire plaintext of the record be known before any ciphertext is\n * transmitted. Otherwise, it is possible for the attacker to mount the attack\n * described in [CBCATT].\n *\n * Implementation note: Canvel et al. [CBCTIME] have demonstrated a timing\n * attack on CBC padding based on the time required to compute the MAC. In\n * order to defend against this attack, implementations MUST ensure that\n * record processing time is essentially the same whether or not the padding\n * is correct. In general, the best way to do this is to compute the MAC even\n * if the padding is incorrect, and only then reject the packet. For instance,\n * if the pad appears to be incorrect, the implementation might assume a\n * zero-length pad and then compute the MAC. This leaves a small timing\n * channel, since MAC performance depends, to some extent, on the size of the\n * data fragment, but it is not believed to be large enough to be exploitable,\n * due to the large block size of existing MACs and the small size of the\n * timing signal.\n */\nvar forge = require('./forge');\nrequire('./asn1');\nrequire('./hmac');\nrequire('./md5');\nrequire('./pem');\nrequire('./pki');\nrequire('./random');\nrequire('./sha1');\nrequire('./util');\n\n/**\n * Generates pseudo random bytes by mixing the result of two hash functions,\n * MD5 and SHA-1.\n *\n * prf_TLS1(secret, label, seed) =\n *   P_MD5(S1, label + seed) XOR P_SHA-1(S2, label + seed);\n *\n * Each P_hash function functions as follows:\n *\n * P_hash(secret, seed) = HMAC_hash(secret, A(1) + seed) +\n *                        HMAC_hash(secret, A(2) + seed) +\n *                        HMAC_hash(secret, A(3) + seed) + ...\n * A() is defined as:\n *   A(0) = seed\n *   A(i) = HMAC_hash(secret, A(i-1))\n *\n * The '+' operator denotes concatenation.\n *\n * As many iterations A(N) as are needed are performed to generate enough\n * pseudo random byte output. If an iteration creates more data than is\n * necessary, then it is truncated.\n *\n * Therefore:\n * A(1) = HMAC_hash(secret, A(0))\n *      = HMAC_hash(secret, seed)\n * A(2) = HMAC_hash(secret, A(1))\n *      = HMAC_hash(secret, HMAC_hash(secret, seed))\n *\n * Therefore:\n * P_hash(secret, seed) =\n *   HMAC_hash(secret, HMAC_hash(secret, A(0)) + seed) +\n *   HMAC_hash(secret, HMAC_hash(secret, A(1)) + seed) +\n *   ...\n *\n * Therefore:\n * P_hash(secret, seed) =\n *   HMAC_hash(secret, HMAC_hash(secret, seed) + seed) +\n *   HMAC_hash(secret, HMAC_hash(secret, HMAC_hash(secret, seed)) + seed) +\n *   ...\n *\n * @param secret the secret to use.\n * @param label the label to use.\n * @param seed the seed value to use.\n * @param length the number of bytes to generate.\n *\n * @return the pseudo random bytes in a byte buffer.\n */\nvar prf_TLS1 = function(secret, label, seed, length) {\n  var rval = forge.util.createBuffer();\n\n  /* For TLS 1.0, the secret is split in half, into two secrets of equal\n    length. If the secret has an odd length then the last byte of the first\n    half will be the same as the first byte of the second. The length of the\n    two secrets is half of the secret rounded up. */\n  var idx = (secret.length >> 1);\n  var slen = idx + (secret.length & 1);\n  var s1 = secret.substr(0, slen);\n  var s2 = secret.substr(idx, slen);\n  var ai = forge.util.createBuffer();\n  var hmac = forge.hmac.create();\n  seed = label + seed;\n\n  // determine the number of iterations that must be performed to generate\n  // enough output bytes, md5 creates 16 byte hashes, sha1 creates 20\n  var md5itr = Math.ceil(length / 16);\n  var sha1itr = Math.ceil(length / 20);\n\n  // do md5 iterations\n  hmac.start('MD5', s1);\n  var md5bytes = forge.util.createBuffer();\n  ai.putBytes(seed);\n  for(var i = 0; i < md5itr; ++i) {\n    // HMAC_hash(secret, A(i-1))\n    hmac.start(null, null);\n    hmac.update(ai.getBytes());\n    ai.putBuffer(hmac.digest());\n\n    // HMAC_hash(secret, A(i) + seed)\n    hmac.start(null, null);\n    hmac.update(ai.bytes() + seed);\n    md5bytes.putBuffer(hmac.digest());\n  }\n\n  // do sha1 iterations\n  hmac.start('SHA1', s2);\n  var sha1bytes = forge.util.createBuffer();\n  ai.clear();\n  ai.putBytes(seed);\n  for(var i = 0; i < sha1itr; ++i) {\n    // HMAC_hash(secret, A(i-1))\n    hmac.start(null, null);\n    hmac.update(ai.getBytes());\n    ai.putBuffer(hmac.digest());\n\n    // HMAC_hash(secret, A(i) + seed)\n    hmac.start(null, null);\n    hmac.update(ai.bytes() + seed);\n    sha1bytes.putBuffer(hmac.digest());\n  }\n\n  // XOR the md5 bytes with the sha1 bytes\n  rval.putBytes(forge.util.xorBytes(\n    md5bytes.getBytes(), sha1bytes.getBytes(), length));\n\n  return rval;\n};\n\n/**\n * Generates pseudo random bytes using a SHA256 algorithm. For TLS 1.2.\n *\n * @param secret the secret to use.\n * @param label the label to use.\n * @param seed the seed value to use.\n * @param length the number of bytes to generate.\n *\n * @return the pseudo random bytes in a byte buffer.\n */\nvar prf_sha256 = function(secret, label, seed, length) {\n   // FIXME: implement me for TLS 1.2\n};\n\n/**\n * Gets a MAC for a record using the SHA-1 hash algorithm.\n *\n * @param key the mac key.\n * @param state the sequence number (array of two 32-bit integers).\n * @param record the record.\n *\n * @return the sha-1 hash (20 bytes) for the given record.\n */\nvar hmac_sha1 = function(key, seqNum, record) {\n  /* MAC is computed like so:\n  HMAC_hash(\n    key, seqNum +\n      TLSCompressed.type +\n      TLSCompressed.version +\n      TLSCompressed.length +\n      TLSCompressed.fragment)\n  */\n  var hmac = forge.hmac.create();\n  hmac.start('SHA1', key);\n  var b = forge.util.createBuffer();\n  b.putInt32(seqNum[0]);\n  b.putInt32(seqNum[1]);\n  b.putByte(record.type);\n  b.putByte(record.version.major);\n  b.putByte(record.version.minor);\n  b.putInt16(record.length);\n  b.putBytes(record.fragment.bytes());\n  hmac.update(b.getBytes());\n  return hmac.digest().getBytes();\n};\n\n/**\n * Compresses the TLSPlaintext record into a TLSCompressed record using the\n * deflate algorithm.\n *\n * @param c the TLS connection.\n * @param record the TLSPlaintext record to compress.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nvar deflate = function(c, record, s) {\n  var rval = false;\n\n  try {\n    var bytes = c.deflate(record.fragment.getBytes());\n    record.fragment = forge.util.createBuffer(bytes);\n    record.length = bytes.length;\n    rval = true;\n  } catch(ex) {\n    // deflate error, fail out\n  }\n\n  return rval;\n};\n\n/**\n * Decompresses the TLSCompressed record into a TLSPlaintext record using the\n * deflate algorithm.\n *\n * @param c the TLS connection.\n * @param record the TLSCompressed record to decompress.\n * @param s the ConnectionState to use.\n *\n * @return true on success, false on failure.\n */\nvar inflate = function(c, record, s) {\n  var rval = false;\n\n  try {\n    var bytes = c.inflate(record.fragment.getBytes());\n    record.fragment = forge.util.createBuffer(bytes);\n    record.length = bytes.length;\n    rval = true;\n  } catch(ex) {\n    // inflate error, fail out\n  }\n\n  return rval;\n};\n\n/**\n * Reads a TLS variable-length vector from a byte buffer.\n *\n * Variable-length vectors are defined by specifying a subrange of legal\n * lengths, inclusively, using the notation <floor..ceiling>. When these are\n * encoded, the actual length precedes the vector's contents in the byte\n * stream. The length will be in the form of a number consuming as many bytes\n * as required to hold the vector's specified maximum (ceiling) length. A\n * variable-length vector with an actual length field of zero is referred to\n * as an empty vector.\n *\n * @param b the byte buffer.\n * @param lenBytes the number of bytes required to store the length.\n *\n * @return the resulting byte buffer.\n */\nvar readVector = function(b, lenBytes) {\n  var len = 0;\n  switch(lenBytes) {\n  case 1:\n    len = b.getByte();\n    break;\n  case 2:\n    len = b.getInt16();\n    break;\n  case 3:\n    len = b.getInt24();\n    break;\n  case 4:\n    len = b.getInt32();\n    break;\n  }\n\n  // read vector bytes into a new buffer\n  return forge.util.createBuffer(b.getBytes(len));\n};\n\n/**\n * Writes a TLS variable-length vector to a byte buffer.\n *\n * @param b the byte buffer.\n * @param lenBytes the number of bytes required to store the length.\n * @param v the byte buffer vector.\n */\nvar writeVector = function(b, lenBytes, v) {\n  // encode length at the start of the vector, where the number of bytes for\n  // the length is the maximum number of bytes it would take to encode the\n  // vector's ceiling\n  b.putInt(v.length(), lenBytes << 3);\n  b.putBuffer(v);\n};\n\n/**\n * The tls implementation.\n */\nvar tls = {};\n\n/**\n * Version: TLS 1.2 = 3.3, TLS 1.1 = 3.2, TLS 1.0 = 3.1. Both TLS 1.1 and\n * TLS 1.2 were still too new (ie: openSSL didn't implement them) at the time\n * of this implementation so TLS 1.0 was implemented instead.\n */\ntls.Versions = {\n  TLS_1_0: {major: 3, minor: 1},\n  TLS_1_1: {major: 3, minor: 2},\n  TLS_1_2: {major: 3, minor: 3}\n};\ntls.SupportedVersions = [\n  tls.Versions.TLS_1_1,\n  tls.Versions.TLS_1_0\n];\ntls.Version = tls.SupportedVersions[0];\n\n/**\n * Maximum fragment size. True maximum is 16384, but we fragment before that\n * to allow for unusual small increases during compression.\n */\ntls.MaxFragment = 16384 - 1024;\n\n/**\n * Whether this entity is considered the \"client\" or \"server\".\n * enum { server, client } ConnectionEnd;\n */\ntls.ConnectionEnd = {\n  server: 0,\n  client: 1\n};\n\n/**\n * Pseudo-random function algorithm used to generate keys from the master\n * secret.\n * enum { tls_prf_sha256 } PRFAlgorithm;\n */\ntls.PRFAlgorithm = {\n  tls_prf_sha256: 0\n};\n\n/**\n * Bulk encryption algorithms.\n * enum { null, rc4, des3, aes } BulkCipherAlgorithm;\n */\ntls.BulkCipherAlgorithm = {\n  none: null,\n  rc4: 0,\n  des3: 1,\n  aes: 2\n};\n\n/**\n * Cipher types.\n * enum { stream, block, aead } CipherType;\n */\ntls.CipherType = {\n  stream: 0,\n  block: 1,\n  aead: 2\n};\n\n/**\n * MAC (Message Authentication Code) algorithms.\n * enum { null, hmac_md5, hmac_sha1, hmac_sha256,\n *   hmac_sha384, hmac_sha512} MACAlgorithm;\n */\ntls.MACAlgorithm = {\n  none: null,\n  hmac_md5: 0,\n  hmac_sha1: 1,\n  hmac_sha256: 2,\n  hmac_sha384: 3,\n  hmac_sha512: 4\n};\n\n/**\n * Compression algorithms.\n * enum { null(0), deflate(1), (255) } CompressionMethod;\n */\ntls.CompressionMethod = {\n  none: 0,\n  deflate: 1\n};\n\n/**\n * TLS record content types.\n * enum {\n *   change_cipher_spec(20), alert(21), handshake(22),\n *   application_data(23), (255)\n * } ContentType;\n */\ntls.ContentType = {\n  change_cipher_spec: 20,\n  alert: 21,\n  handshake: 22,\n  application_data: 23,\n  heartbeat: 24\n};\n\n/**\n * TLS handshake types.\n * enum {\n *   hello_request(0), client_hello(1), server_hello(2),\n *   certificate(11), server_key_exchange (12),\n *   certificate_request(13), server_hello_done(14),\n *   certificate_verify(15), client_key_exchange(16),\n *   finished(20), (255)\n * } HandshakeType;\n */\ntls.HandshakeType = {\n  hello_request: 0,\n  client_hello: 1,\n  server_hello: 2,\n  certificate: 11,\n  server_key_exchange: 12,\n  certificate_request: 13,\n  server_hello_done: 14,\n  certificate_verify: 15,\n  client_key_exchange: 16,\n  finished: 20\n};\n\n/**\n * TLS Alert Protocol.\n *\n * enum { warning(1), fatal(2), (255) } AlertLevel;\n *\n * enum {\n *   close_notify(0),\n *   unexpected_message(10),\n *   bad_record_mac(20),\n *   decryption_failed(21),\n *   record_overflow(22),\n *   decompression_failure(30),\n *   handshake_failure(40),\n *   bad_certificate(42),\n *   unsupported_certificate(43),\n *   certificate_revoked(44),\n *   certificate_expired(45),\n *   certificate_unknown(46),\n *   illegal_parameter(47),\n *   unknown_ca(48),\n *   access_denied(49),\n *   decode_error(50),\n *   decrypt_error(51),\n *   export_restriction(60),\n *   protocol_version(70),\n *   insufficient_security(71),\n *   internal_error(80),\n *   user_canceled(90),\n *   no_renegotiation(100),\n *   (255)\n * } AlertDescription;\n *\n * struct {\n *   AlertLevel level;\n *   AlertDescription description;\n * } Alert;\n */\ntls.Alert = {};\ntls.Alert.Level = {\n  warning: 1,\n  fatal: 2\n};\ntls.Alert.Description = {\n  close_notify: 0,\n  unexpected_message: 10,\n  bad_record_mac: 20,\n  decryption_failed: 21,\n  record_overflow: 22,\n  decompression_failure: 30,\n  handshake_failure: 40,\n  bad_certificate: 42,\n  unsupported_certificate: 43,\n  certificate_revoked: 44,\n  certificate_expired: 45,\n  certificate_unknown: 46,\n  illegal_parameter: 47,\n  unknown_ca: 48,\n  access_denied: 49,\n  decode_error: 50,\n  decrypt_error: 51,\n  export_restriction: 60,\n  protocol_version: 70,\n  insufficient_security: 71,\n  internal_error: 80,\n  user_canceled: 90,\n  no_renegotiation: 100\n};\n\n/**\n * TLS Heartbeat Message types.\n * enum {\n *   heartbeat_request(1),\n *   heartbeat_response(2),\n *   (255)\n * } HeartbeatMessageType;\n */\ntls.HeartbeatMessageType = {\n  heartbeat_request: 1,\n  heartbeat_response: 2\n};\n\n/**\n * Supported cipher suites.\n */\ntls.CipherSuites = {};\n\n/**\n * Gets a supported cipher suite from its 2 byte ID.\n *\n * @param twoBytes two bytes in a string.\n *\n * @return the matching supported cipher suite or null.\n */\ntls.getCipherSuite = function(twoBytes) {\n  var rval = null;\n  for(var key in tls.CipherSuites) {\n    var cs = tls.CipherSuites[key];\n    if(cs.id[0] === twoBytes.charCodeAt(0) &&\n      cs.id[1] === twoBytes.charCodeAt(1)) {\n      rval = cs;\n      break;\n    }\n  }\n  return rval;\n};\n\n/**\n * Called when an unexpected record is encountered.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleUnexpected = function(c, record) {\n  // if connection is client and closed, ignore unexpected messages\n  var ignore = (!c.open && c.entity === tls.ConnectionEnd.client);\n  if(!ignore) {\n    c.error(c, {\n      message: 'Unexpected message. Received TLS record out of order.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.unexpected_message\n      }\n    });\n  }\n};\n\n/**\n * Called when a client receives a HelloRequest record.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleHelloRequest = function(c, record, length) {\n  // ignore renegotiation requests from the server during a handshake, but\n  // if handshaking, send a warning alert that renegotation is denied\n  if(!c.handshaking && c.handshakes > 0) {\n    // send alert warning\n    tls.queue(c, tls.createAlert(c, {\n       level: tls.Alert.Level.warning,\n       description: tls.Alert.Description.no_renegotiation\n    }));\n    tls.flush(c);\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * Parses a hello message from a ClientHello or ServerHello record.\n *\n * @param record the record to parse.\n *\n * @return the parsed message.\n */\ntls.parseHelloMessage = function(c, record, length) {\n  var msg = null;\n\n  var client = (c.entity === tls.ConnectionEnd.client);\n\n  // minimum of 38 bytes in message\n  if(length < 38) {\n    c.error(c, {\n      message: client ?\n        'Invalid ServerHello message. Message too short.' :\n        'Invalid ClientHello message. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  } else {\n    // use 'remaining' to calculate # of remaining bytes in the message\n    var b = record.fragment;\n    var remaining = b.length();\n    msg = {\n      version: {\n        major: b.getByte(),\n        minor: b.getByte()\n      },\n      random: forge.util.createBuffer(b.getBytes(32)),\n      session_id: readVector(b, 1),\n      extensions: []\n    };\n    if(client) {\n      msg.cipher_suite = b.getBytes(2);\n      msg.compression_method = b.getByte();\n    } else {\n      msg.cipher_suites = readVector(b, 2);\n      msg.compression_methods = readVector(b, 1);\n    }\n\n    // read extensions if there are any bytes left in the message\n    remaining = length - (remaining - b.length());\n    if(remaining > 0) {\n      // parse extensions\n      var exts = readVector(b, 2);\n      while(exts.length() > 0) {\n        msg.extensions.push({\n          type: [exts.getByte(), exts.getByte()],\n          data: readVector(exts, 2)\n        });\n      }\n\n      // TODO: make extension support modular\n      if(!client) {\n        for(var i = 0; i < msg.extensions.length; ++i) {\n          var ext = msg.extensions[i];\n\n          // support SNI extension\n          if(ext.type[0] === 0x00 && ext.type[1] === 0x00) {\n            // get server name list\n            var snl = readVector(ext.data, 2);\n            while(snl.length() > 0) {\n              // read server name type\n              var snType = snl.getByte();\n\n              // only HostName type (0x00) is known, break out if\n              // another type is detected\n              if(snType !== 0x00) {\n                break;\n              }\n\n              // add host name to server name list\n              c.session.extensions.server_name.serverNameList.push(\n                readVector(snl, 2).getBytes());\n            }\n          }\n        }\n      }\n    }\n\n    // version already set, do not allow version change\n    if(c.session.version) {\n      if(msg.version.major !== c.session.version.major ||\n        msg.version.minor !== c.session.version.minor) {\n        return c.error(c, {\n          message: 'TLS version change is disallowed during renegotiation.',\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.protocol_version\n          }\n        });\n      }\n    }\n\n    // get the chosen (ServerHello) cipher suite\n    if(client) {\n      // FIXME: should be checking configured acceptable cipher suites\n      c.session.cipherSuite = tls.getCipherSuite(msg.cipher_suite);\n    } else {\n      // get a supported preferred (ClientHello) cipher suite\n      // choose the first supported cipher suite\n      var tmp = forge.util.createBuffer(msg.cipher_suites.bytes());\n      while(tmp.length() > 0) {\n        // FIXME: should be checking configured acceptable suites\n        // cipher suites take up 2 bytes\n        c.session.cipherSuite = tls.getCipherSuite(tmp.getBytes(2));\n        if(c.session.cipherSuite !== null) {\n          break;\n        }\n      }\n    }\n\n    // cipher suite not supported\n    if(c.session.cipherSuite === null) {\n      return c.error(c, {\n        message: 'No cipher suites in common.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.handshake_failure\n        },\n        cipherSuite: forge.util.bytesToHex(msg.cipher_suite)\n      });\n    }\n\n    // TODO: handle compression methods\n    if(client) {\n      c.session.compressionMethod = msg.compression_method;\n    } else {\n      // no compression\n      c.session.compressionMethod = tls.CompressionMethod.none;\n    }\n  }\n\n  return msg;\n};\n\n/**\n * Creates security parameters for the given connection based on the given\n * hello message.\n *\n * @param c the TLS connection.\n * @param msg the hello message.\n */\ntls.createSecurityParameters = function(c, msg) {\n  /* Note: security params are from TLS 1.2, some values like prf_algorithm\n  are ignored for TLS 1.0/1.1 and the builtin as specified in the spec is\n  used. */\n\n  // TODO: handle other options from server when more supported\n\n  // get client and server randoms\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var msgRandom = msg.random.bytes();\n  var cRandom = client ? c.session.sp.client_random : msgRandom;\n  var sRandom = client ? msgRandom : tls.createRandom().getBytes();\n\n  // create new security parameters\n  c.session.sp = {\n    entity: c.entity,\n    prf_algorithm: tls.PRFAlgorithm.tls_prf_sha256,\n    bulk_cipher_algorithm: null,\n    cipher_type: null,\n    enc_key_length: null,\n    block_length: null,\n    fixed_iv_length: null,\n    record_iv_length: null,\n    mac_algorithm: null,\n    mac_length: null,\n    mac_key_length: null,\n    compression_algorithm: c.session.compressionMethod,\n    pre_master_secret: null,\n    master_secret: null,\n    client_random: cRandom,\n    server_random: sRandom\n  };\n};\n\n/**\n * Called when a client receives a ServerHello record.\n *\n * When a ServerHello message will be sent:\n *   The server will send this message in response to a client hello message\n *   when it was able to find an acceptable set of algorithms. If it cannot\n *   find such a match, it will respond with a handshake failure alert.\n *\n * uint24 length;\n * struct {\n *   ProtocolVersion server_version;\n *   Random random;\n *   SessionID session_id;\n *   CipherSuite cipher_suite;\n *   CompressionMethod compression_method;\n *   select(extensions_present) {\n *     case false:\n *       struct {};\n *     case true:\n *       Extension extensions<0..2^16-1>;\n *   };\n * } ServerHello;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleServerHello = function(c, record, length) {\n  var msg = tls.parseHelloMessage(c, record, length);\n  if(c.fail) {\n    return;\n  }\n\n  // ensure server version is compatible\n  if(msg.version.minor <= c.version.minor) {\n    c.version.minor = msg.version.minor;\n  } else {\n    return c.error(c, {\n      message: 'Incompatible TLS version.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.protocol_version\n      }\n    });\n  }\n\n  // indicate session version has been set\n  c.session.version = c.version;\n\n  // get the session ID from the message\n  var sessionId = msg.session_id.bytes();\n\n  // if the session ID is not blank and matches the cached one, resume\n  // the session\n  if(sessionId.length > 0 && sessionId === c.session.id) {\n    // resuming session, expect a ChangeCipherSpec next\n    c.expect = SCC;\n    c.session.resuming = true;\n\n    // get new server random\n    c.session.sp.server_random = msg.random.bytes();\n  } else {\n    // not resuming, expect a server Certificate message next\n    c.expect = SCE;\n    c.session.resuming = false;\n\n    // create new security parameters\n    tls.createSecurityParameters(c, msg);\n  }\n\n  // set new session ID\n  c.session.id = sessionId;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a server receives a ClientHello record.\n *\n * When a ClientHello message will be sent:\n *   When a client first connects to a server it is required to send the\n *   client hello as its first message. The client can also send a client\n *   hello in response to a hello request or on its own initiative in order\n *   to renegotiate the security parameters in an existing connection.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleClientHello = function(c, record, length) {\n  var msg = tls.parseHelloMessage(c, record, length);\n  if(c.fail) {\n    return;\n  }\n\n  // get the session ID from the message\n  var sessionId = msg.session_id.bytes();\n\n  // see if the given session ID is in the cache\n  var session = null;\n  if(c.sessionCache) {\n    session = c.sessionCache.getSession(sessionId);\n    if(session === null) {\n      // session ID not found\n      sessionId = '';\n    } else if(session.version.major !== msg.version.major ||\n      session.version.minor > msg.version.minor) {\n      // if session version is incompatible with client version, do not resume\n      session = null;\n      sessionId = '';\n    }\n  }\n\n  // no session found to resume, generate a new session ID\n  if(sessionId.length === 0) {\n    sessionId = forge.random.getBytes(32);\n  }\n\n  // update session\n  c.session.id = sessionId;\n  c.session.clientHelloVersion = msg.version;\n  c.session.sp = {};\n  if(session) {\n    // use version and security parameters from resumed session\n    c.version = c.session.version = session.version;\n    c.session.sp = session.sp;\n  } else {\n    // use highest compatible minor version\n    var version;\n    for(var i = 1; i < tls.SupportedVersions.length; ++i) {\n      version = tls.SupportedVersions[i];\n      if(version.minor <= msg.version.minor) {\n        break;\n      }\n    }\n    c.version = {major: version.major, minor: version.minor};\n    c.session.version = c.version;\n  }\n\n  // if a session is set, resume it\n  if(session !== null) {\n    // resuming session, expect a ChangeCipherSpec next\n    c.expect = CCC;\n    c.session.resuming = true;\n\n    // get new client random\n    c.session.sp.client_random = msg.random.bytes();\n  } else {\n    // not resuming, expect a Certificate or ClientKeyExchange\n    c.expect = (c.verifyClient !== false) ? CCE : CKE;\n    c.session.resuming = false;\n\n    // create new security parameters\n    tls.createSecurityParameters(c, msg);\n  }\n\n  // connection now open\n  c.open = true;\n\n  // queue server hello\n  tls.queue(c, tls.createRecord(c, {\n    type: tls.ContentType.handshake,\n    data: tls.createServerHello(c)\n  }));\n\n  if(c.session.resuming) {\n    // queue change cipher spec message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.change_cipher_spec,\n      data: tls.createChangeCipherSpec()\n    }));\n\n    // create pending state\n    c.state.pending = tls.createConnectionState(c);\n\n    // change current write state to pending write state\n    c.state.current.write = c.state.pending.write;\n\n    // queue finished\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createFinished(c)\n    }));\n  } else {\n    // queue server certificate\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createCertificate(c)\n    }));\n\n    if(!c.fail) {\n      // queue server key exchange\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createServerKeyExchange(c)\n      }));\n\n      // request client certificate if set\n      if(c.verifyClient !== false) {\n        // queue certificate request\n        tls.queue(c, tls.createRecord(c, {\n          type: tls.ContentType.handshake,\n          data: tls.createCertificateRequest(c)\n        }));\n      }\n\n      // queue server hello done\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createServerHelloDone(c)\n      }));\n    }\n  }\n\n  // send records\n  tls.flush(c);\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a Certificate record.\n *\n * When this message will be sent:\n *   The server must send a certificate whenever the agreed-upon key exchange\n *   method is not an anonymous one. This message will always immediately\n *   follow the server hello message.\n *\n * Meaning of this message:\n *   The certificate type must be appropriate for the selected cipher suite's\n *   key exchange algorithm, and is generally an X.509v3 certificate. It must\n *   contain a key which matches the key exchange method, as follows. Unless\n *   otherwise specified, the signing algorithm for the certificate must be\n *   the same as the algorithm for the certificate key. Unless otherwise\n *   specified, the public key may be of any length.\n *\n * opaque ASN.1Cert<1..2^24-1>;\n * struct {\n *   ASN.1Cert certificate_list<1..2^24-1>;\n * } Certificate;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleCertificate = function(c, record, length) {\n  // minimum of 3 bytes in message\n  if(length < 3) {\n    return c.error(c, {\n      message: 'Invalid Certificate message. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  var b = record.fragment;\n  var msg = {\n    certificate_list: readVector(b, 3)\n  };\n\n  /* The sender's certificate will be first in the list (chain), each\n    subsequent one that follows will certify the previous one, but root\n    certificates (self-signed) that specify the certificate authority may\n    be omitted under the assumption that clients must already possess it. */\n  var cert, asn1;\n  var certs = [];\n  try {\n    while(msg.certificate_list.length() > 0) {\n      // each entry in msg.certificate_list is a vector with 3 len bytes\n      cert = readVector(msg.certificate_list, 3);\n      asn1 = forge.asn1.fromDer(cert);\n      cert = forge.pki.certificateFromAsn1(asn1, true);\n      certs.push(cert);\n    }\n  } catch(ex) {\n    return c.error(c, {\n      message: 'Could not parse certificate list.',\n      cause: ex,\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.bad_certificate\n      }\n    });\n  }\n\n  // ensure at least 1 certificate was provided if in client-mode\n  // or if verifyClient was set to true to require a certificate\n  // (as opposed to 'optional')\n  var client = (c.entity === tls.ConnectionEnd.client);\n  if((client || c.verifyClient === true) && certs.length === 0) {\n    // error, no certificate\n    c.error(c, {\n      message: client ?\n        'No server certificate provided.' :\n        'No client certificate provided.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  } else if(certs.length === 0) {\n    // no certs to verify\n    // expect a ServerKeyExchange or ClientKeyExchange message next\n    c.expect = client ? SKE : CKE;\n  } else {\n    // save certificate in session\n    if(client) {\n      c.session.serverCertificate = certs[0];\n    } else {\n      c.session.clientCertificate = certs[0];\n    }\n\n    if(tls.verifyCertificateChain(c, certs)) {\n      // expect a ServerKeyExchange or ClientKeyExchange message next\n      c.expect = client ? SKE : CKE;\n    }\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a ServerKeyExchange record.\n *\n * When this message will be sent:\n *   This message will be sent immediately after the server certificate\n *   message (or the server hello message, if this is an anonymous\n *   negotiation).\n *\n *   The server key exchange message is sent by the server only when the\n *   server certificate message (if sent) does not contain enough data to\n *   allow the client to exchange a premaster secret.\n *\n * Meaning of this message:\n *   This message conveys cryptographic information to allow the client to\n *   communicate the premaster secret: either an RSA public key to encrypt\n *   the premaster secret with, or a Diffie-Hellman public key with which the\n *   client can complete a key exchange (with the result being the premaster\n *   secret.)\n *\n * enum {\n *   dhe_dss, dhe_rsa, dh_anon, rsa, dh_dss, dh_rsa\n * } KeyExchangeAlgorithm;\n *\n * struct {\n *   opaque dh_p<1..2^16-1>;\n *   opaque dh_g<1..2^16-1>;\n *   opaque dh_Ys<1..2^16-1>;\n * } ServerDHParams;\n *\n * struct {\n *   select(KeyExchangeAlgorithm) {\n *     case dh_anon:\n *       ServerDHParams params;\n *     case dhe_dss:\n *     case dhe_rsa:\n *       ServerDHParams params;\n *       digitally-signed struct {\n *         opaque client_random[32];\n *         opaque server_random[32];\n *         ServerDHParams params;\n *       } signed_params;\n *     case rsa:\n *     case dh_dss:\n *     case dh_rsa:\n *       struct {};\n *   };\n * } ServerKeyExchange;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleServerKeyExchange = function(c, record, length) {\n  // this implementation only supports RSA, no Diffie-Hellman support\n  // so any length > 0 is invalid\n  if(length > 0) {\n    return c.error(c, {\n      message: 'Invalid key parameters. Only RSA is supported.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.unsupported_certificate\n      }\n    });\n  }\n\n  // expect an optional CertificateRequest message next\n  c.expect = SCR;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a ClientKeyExchange record.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleClientKeyExchange = function(c, record, length) {\n  // this implementation only supports RSA, no Diffie-Hellman support\n  // so any length < 48 is invalid\n  if(length < 48) {\n    return c.error(c, {\n      message: 'Invalid key parameters. Only RSA is supported.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.unsupported_certificate\n      }\n    });\n  }\n\n  var b = record.fragment;\n  var msg = {\n    enc_pre_master_secret: readVector(b, 2).getBytes()\n  };\n\n  // do rsa decryption\n  var privateKey = null;\n  if(c.getPrivateKey) {\n    try {\n      privateKey = c.getPrivateKey(c, c.session.serverCertificate);\n      privateKey = forge.pki.privateKeyFromPem(privateKey);\n    } catch(ex) {\n      c.error(c, {\n        message: 'Could not get private key.',\n        cause: ex,\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    }\n  }\n\n  if(privateKey === null) {\n    return c.error(c, {\n      message: 'No private key set.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.internal_error\n      }\n    });\n  }\n\n  try {\n    // decrypt 48-byte pre-master secret\n    var sp = c.session.sp;\n    sp.pre_master_secret = privateKey.decrypt(msg.enc_pre_master_secret);\n\n    // ensure client hello version matches first 2 bytes\n    var version = c.session.clientHelloVersion;\n    if(version.major !== sp.pre_master_secret.charCodeAt(0) ||\n      version.minor !== sp.pre_master_secret.charCodeAt(1)) {\n      // error, do not send alert (see BLEI attack below)\n      throw new Error('TLS version rollback attack detected.');\n    }\n  } catch(ex) {\n    /* Note: Daniel Bleichenbacher [BLEI] can be used to attack a\n      TLS server which is using PKCS#1 encoded RSA, so instead of\n      failing here, we generate 48 random bytes and use that as\n      the pre-master secret. */\n    sp.pre_master_secret = forge.random.getBytes(48);\n  }\n\n  // expect a CertificateVerify message if a Certificate was received that\n  // does not have fixed Diffie-Hellman params, otherwise expect\n  // ChangeCipherSpec\n  c.expect = CCC;\n  if(c.session.clientCertificate !== null) {\n    // only RSA support, so expect CertificateVerify\n    // TODO: support Diffie-Hellman\n    c.expect = CCV;\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a CertificateRequest record.\n *\n * When this message will be sent:\n *   A non-anonymous server can optionally request a certificate from the\n *   client, if appropriate for the selected cipher suite. This message, if\n *   sent, will immediately follow the Server Key Exchange message (if it is\n *   sent; otherwise, the Server Certificate message).\n *\n * enum {\n *   rsa_sign(1), dss_sign(2), rsa_fixed_dh(3), dss_fixed_dh(4),\n *   rsa_ephemeral_dh_RESERVED(5), dss_ephemeral_dh_RESERVED(6),\n *   fortezza_dms_RESERVED(20), (255)\n * } ClientCertificateType;\n *\n * opaque DistinguishedName<1..2^16-1>;\n *\n * struct {\n *   ClientCertificateType certificate_types<1..2^8-1>;\n *   SignatureAndHashAlgorithm supported_signature_algorithms<2^16-1>;\n *   DistinguishedName certificate_authorities<0..2^16-1>;\n * } CertificateRequest;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleCertificateRequest = function(c, record, length) {\n  // minimum of 3 bytes in message\n  if(length < 3) {\n    return c.error(c, {\n      message: 'Invalid CertificateRequest. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  // TODO: TLS 1.2+ has different format including\n  // SignatureAndHashAlgorithm after cert types\n  var b = record.fragment;\n  var msg = {\n    certificate_types: readVector(b, 1),\n    certificate_authorities: readVector(b, 2)\n  };\n\n  // save certificate request in session\n  c.session.certificateRequest = msg;\n\n  // expect a ServerHelloDone message next\n  c.expect = SHD;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a server receives a CertificateVerify record.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleCertificateVerify = function(c, record, length) {\n  if(length < 2) {\n    return c.error(c, {\n      message: 'Invalid CertificateVerify. Message too short.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  // rewind to get full bytes for message so it can be manually\n  // digested below (special case for CertificateVerify messages because\n  // they must be digested *after* handling as opposed to all others)\n  var b = record.fragment;\n  b.read -= 4;\n  var msgBytes = b.bytes();\n  b.read += 4;\n\n  var msg = {\n    signature: readVector(b, 2).getBytes()\n  };\n\n  // TODO: add support for DSA\n\n  // generate data to verify\n  var verify = forge.util.createBuffer();\n  verify.putBuffer(c.session.md5.digest());\n  verify.putBuffer(c.session.sha1.digest());\n  verify = verify.getBytes();\n\n  try {\n    var cert = c.session.clientCertificate;\n    /*b = forge.pki.rsa.decrypt(\n      msg.signature, cert.publicKey, true, verify.length);\n    if(b !== verify) {*/\n    if(!cert.publicKey.verify(verify, msg.signature, 'NONE')) {\n      throw new Error('CertificateVerify signature does not match.');\n    }\n\n    // digest message now that it has been handled\n    c.session.md5.update(msgBytes);\n    c.session.sha1.update(msgBytes);\n  } catch(ex) {\n    return c.error(c, {\n      message: 'Bad signature in CertificateVerify.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.handshake_failure\n      }\n    });\n  }\n\n  // expect ChangeCipherSpec\n  c.expect = CCC;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a client receives a ServerHelloDone record.\n *\n * When this message will be sent:\n *   The server hello done message is sent by the server to indicate the end\n *   of the server hello and associated messages. After sending this message\n *   the server will wait for a client response.\n *\n * Meaning of this message:\n *   This message means that the server is done sending messages to support\n *   the key exchange, and the client can proceed with its phase of the key\n *   exchange.\n *\n *   Upon receipt of the server hello done message the client should verify\n *   that the server provided a valid certificate if required and check that\n *   the server hello parameters are acceptable.\n *\n * struct {} ServerHelloDone;\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleServerHelloDone = function(c, record, length) {\n  // len must be 0 bytes\n  if(length > 0) {\n    return c.error(c, {\n      message: 'Invalid ServerHelloDone message. Invalid length.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.record_overflow\n      }\n    });\n  }\n\n  if(c.serverCertificate === null) {\n    // no server certificate was provided\n    var error = {\n      message: 'No server certificate provided. Not enough security.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.insufficient_security\n      }\n    };\n\n    // call application callback\n    var depth = 0;\n    var ret = c.verify(c, error.alert.description, depth, []);\n    if(ret !== true) {\n      // check for custom alert info\n      if(ret || ret === 0) {\n        // set custom message and alert description\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          if(ret.message) {\n            error.message = ret.message;\n          }\n          if(ret.alert) {\n            error.alert.description = ret.alert;\n          }\n        } else if(typeof ret === 'number') {\n          // set custom alert description\n          error.alert.description = ret;\n        }\n      }\n\n      // send error\n      return c.error(c, error);\n    }\n  }\n\n  // create client certificate message if requested\n  if(c.session.certificateRequest !== null) {\n    record = tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createCertificate(c)\n    });\n    tls.queue(c, record);\n  }\n\n  // create client key exchange message\n  record = tls.createRecord(c, {\n     type: tls.ContentType.handshake,\n     data: tls.createClientKeyExchange(c)\n  });\n  tls.queue(c, record);\n\n  // expect no messages until the following callback has been called\n  c.expect = SER;\n\n  // create callback to handle client signature (for client-certs)\n  var callback = function(c, signature) {\n    if(c.session.certificateRequest !== null &&\n      c.session.clientCertificate !== null) {\n      // create certificate verify message\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createCertificateVerify(c, signature)\n      }));\n    }\n\n    // create change cipher spec message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.change_cipher_spec,\n      data: tls.createChangeCipherSpec()\n    }));\n\n    // create pending state\n    c.state.pending = tls.createConnectionState(c);\n\n    // change current write state to pending write state\n    c.state.current.write = c.state.pending.write;\n\n    // create finished message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createFinished(c)\n    }));\n\n    // expect a server ChangeCipherSpec message next\n    c.expect = SCC;\n\n    // send records\n    tls.flush(c);\n\n    // continue\n    c.process();\n  };\n\n  // if there is no certificate request or no client certificate, do\n  // callback immediately\n  if(c.session.certificateRequest === null ||\n    c.session.clientCertificate === null) {\n    return callback(c, null);\n  }\n\n  // otherwise get the client signature\n  tls.getClientSignature(c, callback);\n};\n\n/**\n * Called when a ChangeCipherSpec record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleChangeCipherSpec = function(c, record) {\n  if(record.fragment.getByte() !== 0x01) {\n    return c.error(c, {\n      message: 'Invalid ChangeCipherSpec message received.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.illegal_parameter\n      }\n    });\n  }\n\n  // create pending state if:\n  // 1. Resuming session in client mode OR\n  // 2. NOT resuming session in server mode\n  var client = (c.entity === tls.ConnectionEnd.client);\n  if((c.session.resuming && client) || (!c.session.resuming && !client)) {\n    c.state.pending = tls.createConnectionState(c);\n  }\n\n  // change current read state to pending read state\n  c.state.current.read = c.state.pending.read;\n\n  // clear pending state if:\n  // 1. NOT resuming session in client mode OR\n  // 2. resuming a session in server mode\n  if((!c.session.resuming && client) || (c.session.resuming && !client)) {\n    c.state.pending = null;\n  }\n\n  // expect a Finished record next\n  c.expect = client ? SFI : CFI;\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a Finished record is received.\n *\n * When this message will be sent:\n *   A finished message is always sent immediately after a change\n *   cipher spec message to verify that the key exchange and\n *   authentication processes were successful. It is essential that a\n *   change cipher spec message be received between the other\n *   handshake messages and the Finished message.\n *\n * Meaning of this message:\n *   The finished message is the first protected with the just-\n *   negotiated algorithms, keys, and secrets. Recipients of finished\n *   messages must verify that the contents are correct.  Once a side\n *   has sent its Finished message and received and validated the\n *   Finished message from its peer, it may begin to send and receive\n *   application data over the connection.\n *\n * struct {\n *   opaque verify_data[verify_data_length];\n * } Finished;\n *\n * verify_data\n *   PRF(master_secret, finished_label, Hash(handshake_messages))\n *     [0..verify_data_length-1];\n *\n * finished_label\n *   For Finished messages sent by the client, the string\n *   \"client finished\". For Finished messages sent by the server, the\n *   string \"server finished\".\n *\n * verify_data_length depends on the cipher suite. If it is not specified\n * by the cipher suite, then it is 12. Versions of TLS < 1.2 always used\n * 12 bytes.\n *\n * @param c the connection.\n * @param record the record.\n * @param length the length of the handshake message.\n */\ntls.handleFinished = function(c, record, length) {\n  // rewind to get full bytes for message so it can be manually\n  // digested below (special case for Finished messages because they\n  // must be digested *after* handling as opposed to all others)\n  var b = record.fragment;\n  b.read -= 4;\n  var msgBytes = b.bytes();\n  b.read += 4;\n\n  // message contains only verify_data\n  var vd = record.fragment.getBytes();\n\n  // ensure verify data is correct\n  b = forge.util.createBuffer();\n  b.putBuffer(c.session.md5.digest());\n  b.putBuffer(c.session.sha1.digest());\n\n  // set label based on entity type\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var label = client ? 'server finished' : 'client finished';\n\n  // TODO: determine prf function and verify length for TLS 1.2\n  var sp = c.session.sp;\n  var vdl = 12;\n  var prf = prf_TLS1;\n  b = prf(sp.master_secret, label, b.getBytes(), vdl);\n  if(b.getBytes() !== vd) {\n    return c.error(c, {\n      message: 'Invalid verify_data in Finished message.',\n      send: true,\n      alert: {\n        level: tls.Alert.Level.fatal,\n        description: tls.Alert.Description.decrypt_error\n      }\n    });\n  }\n\n  // digest finished message now that it has been handled\n  c.session.md5.update(msgBytes);\n  c.session.sha1.update(msgBytes);\n\n  // resuming session as client or NOT resuming session as server\n  if((c.session.resuming && client) || (!c.session.resuming && !client)) {\n    // create change cipher spec message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.change_cipher_spec,\n      data: tls.createChangeCipherSpec()\n    }));\n\n    // change current write state to pending write state, clear pending\n    c.state.current.write = c.state.pending.write;\n    c.state.pending = null;\n\n    // create finished message\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.handshake,\n      data: tls.createFinished(c)\n    }));\n  }\n\n  // expect application data next\n  c.expect = client ? SAD : CAD;\n\n  // handshake complete\n  c.handshaking = false;\n  ++c.handshakes;\n\n  // save access to peer certificate\n  c.peerCertificate = client ?\n    c.session.serverCertificate : c.session.clientCertificate;\n\n  // send records\n  tls.flush(c);\n\n  // now connected\n  c.isConnected = true;\n  c.connected(c);\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when an Alert record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleAlert = function(c, record) {\n  // read alert\n  var b = record.fragment;\n  var alert = {\n    level: b.getByte(),\n    description: b.getByte()\n  };\n\n  // TODO: consider using a table?\n  // get appropriate message\n  var msg;\n  switch(alert.description) {\n  case tls.Alert.Description.close_notify:\n    msg = 'Connection closed.';\n    break;\n  case tls.Alert.Description.unexpected_message:\n    msg = 'Unexpected message.';\n    break;\n  case tls.Alert.Description.bad_record_mac:\n    msg = 'Bad record MAC.';\n    break;\n  case tls.Alert.Description.decryption_failed:\n    msg = 'Decryption failed.';\n    break;\n  case tls.Alert.Description.record_overflow:\n    msg = 'Record overflow.';\n    break;\n  case tls.Alert.Description.decompression_failure:\n    msg = 'Decompression failed.';\n    break;\n  case tls.Alert.Description.handshake_failure:\n    msg = 'Handshake failure.';\n    break;\n  case tls.Alert.Description.bad_certificate:\n    msg = 'Bad certificate.';\n    break;\n  case tls.Alert.Description.unsupported_certificate:\n    msg = 'Unsupported certificate.';\n    break;\n  case tls.Alert.Description.certificate_revoked:\n    msg = 'Certificate revoked.';\n    break;\n  case tls.Alert.Description.certificate_expired:\n    msg = 'Certificate expired.';\n    break;\n  case tls.Alert.Description.certificate_unknown:\n    msg = 'Certificate unknown.';\n    break;\n  case tls.Alert.Description.illegal_parameter:\n    msg = 'Illegal parameter.';\n    break;\n  case tls.Alert.Description.unknown_ca:\n    msg = 'Unknown certificate authority.';\n    break;\n  case tls.Alert.Description.access_denied:\n    msg = 'Access denied.';\n    break;\n  case tls.Alert.Description.decode_error:\n    msg = 'Decode error.';\n    break;\n  case tls.Alert.Description.decrypt_error:\n    msg = 'Decrypt error.';\n    break;\n  case tls.Alert.Description.export_restriction:\n    msg = 'Export restriction.';\n    break;\n  case tls.Alert.Description.protocol_version:\n    msg = 'Unsupported protocol version.';\n    break;\n  case tls.Alert.Description.insufficient_security:\n    msg = 'Insufficient security.';\n    break;\n  case tls.Alert.Description.internal_error:\n    msg = 'Internal error.';\n    break;\n  case tls.Alert.Description.user_canceled:\n    msg = 'User canceled.';\n    break;\n  case tls.Alert.Description.no_renegotiation:\n    msg = 'Renegotiation not supported.';\n    break;\n  default:\n    msg = 'Unknown error.';\n    break;\n  }\n\n  // close connection on close_notify, not an error\n  if(alert.description === tls.Alert.Description.close_notify) {\n    return c.close();\n  }\n\n  // call error handler\n  c.error(c, {\n    message: msg,\n    send: false,\n    // origin is the opposite end\n    origin: (c.entity === tls.ConnectionEnd.client) ? 'server' : 'client',\n    alert: alert\n  });\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a Handshake record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleHandshake = function(c, record) {\n  // get the handshake type and message length\n  var b = record.fragment;\n  var type = b.getByte();\n  var length = b.getInt24();\n\n  // see if the record fragment doesn't yet contain the full message\n  if(length > b.length()) {\n    // cache the record, clear its fragment, and reset the buffer read\n    // pointer before the type and length were read\n    c.fragmented = record;\n    record.fragment = forge.util.createBuffer();\n    b.read -= 4;\n\n    // continue\n    return c.process();\n  }\n\n  // full message now available, clear cache, reset read pointer to\n  // before type and length\n  c.fragmented = null;\n  b.read -= 4;\n\n  // save the handshake bytes for digestion after handler is found\n  // (include type and length of handshake msg)\n  var bytes = b.bytes(length + 4);\n\n  // restore read pointer\n  b.read += 4;\n\n  // handle expected message\n  if(type in hsTable[c.entity][c.expect]) {\n    // initialize server session\n    if(c.entity === tls.ConnectionEnd.server && !c.open && !c.fail) {\n      c.handshaking = true;\n      c.session = {\n        version: null,\n        extensions: {\n          server_name: {\n            serverNameList: []\n          }\n        },\n        cipherSuite: null,\n        compressionMethod: null,\n        serverCertificate: null,\n        clientCertificate: null,\n        md5: forge.md.md5.create(),\n        sha1: forge.md.sha1.create()\n      };\n    }\n\n    /* Update handshake messages digest. Finished and CertificateVerify\n      messages are not digested here. They can't be digested as part of\n      the verify_data that they contain. These messages are manually\n      digested in their handlers. HelloRequest messages are simply never\n      included in the handshake message digest according to spec. */\n    if(type !== tls.HandshakeType.hello_request &&\n      type !== tls.HandshakeType.certificate_verify &&\n      type !== tls.HandshakeType.finished) {\n      c.session.md5.update(bytes);\n      c.session.sha1.update(bytes);\n    }\n\n    // handle specific handshake type record\n    hsTable[c.entity][c.expect][type](c, record, length);\n  } else {\n    // unexpected record\n    tls.handleUnexpected(c, record);\n  }\n};\n\n/**\n * Called when an ApplicationData record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleApplicationData = function(c, record) {\n  // buffer data, notify that its ready\n  c.data.putBuffer(record.fragment);\n  c.dataReady(c);\n\n  // continue\n  c.process();\n};\n\n/**\n * Called when a Heartbeat record is received.\n *\n * @param c the connection.\n * @param record the record.\n */\ntls.handleHeartbeat = function(c, record) {\n  // get the heartbeat type and payload\n  var b = record.fragment;\n  var type = b.getByte();\n  var length = b.getInt16();\n  var payload = b.getBytes(length);\n\n  if(type === tls.HeartbeatMessageType.heartbeat_request) {\n    // discard request during handshake or if length is too large\n    if(c.handshaking || length > payload.length) {\n      // continue\n      return c.process();\n    }\n    // retransmit payload\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.heartbeat,\n      data: tls.createHeartbeat(\n        tls.HeartbeatMessageType.heartbeat_response, payload)\n    }));\n    tls.flush(c);\n  } else if(type === tls.HeartbeatMessageType.heartbeat_response) {\n    // check payload against expected payload, discard heartbeat if no match\n    if(payload !== c.expectedHeartbeatPayload) {\n      // continue\n      return c.process();\n    }\n\n    // notify that a valid heartbeat was received\n    if(c.heartbeatReceived) {\n      c.heartbeatReceived(c, forge.util.createBuffer(payload));\n    }\n  }\n\n  // continue\n  c.process();\n};\n\n/**\n * The transistional state tables for receiving TLS records. It maps the\n * current TLS engine state and a received record to a function to handle the\n * record and update the state.\n *\n * For instance, if the current state is SHE, then the TLS engine is expecting\n * a ServerHello record. Once a record is received, the handler function is\n * looked up using the state SHE and the record's content type.\n *\n * The resulting function will either be an error handler or a record handler.\n * The function will take whatever action is appropriate and update the state\n * for the next record.\n *\n * The states are all based on possible server record types. Note that the\n * client will never specifically expect to receive a HelloRequest or an alert\n * from the server so there is no state that reflects this. These messages may\n * occur at any time.\n *\n * There are two tables for mapping states because there is a second tier of\n * types for handshake messages. Once a record with a content type of handshake\n * is received, the handshake record handler will look up the handshake type in\n * the secondary map to get its appropriate handler.\n *\n * Valid message orders are as follows:\n *\n * =======================FULL HANDSHAKE======================\n * Client                                               Server\n *\n * ClientHello                  -------->\n *                                                 ServerHello\n *                                                Certificate*\n *                                          ServerKeyExchange*\n *                                         CertificateRequest*\n *                              <--------      ServerHelloDone\n * Certificate*\n * ClientKeyExchange\n * CertificateVerify*\n * [ChangeCipherSpec]\n * Finished                     -------->\n *                                          [ChangeCipherSpec]\n *                              <--------             Finished\n * Application Data             <------->     Application Data\n *\n * =====================SESSION RESUMPTION=====================\n * Client                                                Server\n *\n * ClientHello                   -------->\n *                                                  ServerHello\n *                                           [ChangeCipherSpec]\n *                               <--------             Finished\n * [ChangeCipherSpec]\n * Finished                      -------->\n * Application Data              <------->     Application Data\n */\n// client expect states (indicate which records are expected to be received)\nvar SHE = 0; // rcv server hello\nvar SCE = 1; // rcv server certificate\nvar SKE = 2; // rcv server key exchange\nvar SCR = 3; // rcv certificate request\nvar SHD = 4; // rcv server hello done\nvar SCC = 5; // rcv change cipher spec\nvar SFI = 6; // rcv finished\nvar SAD = 7; // rcv application data\nvar SER = 8; // not expecting any messages at this point\n\n// server expect states\nvar CHE = 0; // rcv client hello\nvar CCE = 1; // rcv client certificate\nvar CKE = 2; // rcv client key exchange\nvar CCV = 3; // rcv certificate verify\nvar CCC = 4; // rcv change cipher spec\nvar CFI = 5; // rcv finished\nvar CAD = 6; // rcv application data\nvar CER = 7; // not expecting any messages at this point\n\n// map client current expect state and content type to function\nvar __ = tls.handleUnexpected;\nvar R0 = tls.handleChangeCipherSpec;\nvar R1 = tls.handleAlert;\nvar R2 = tls.handleHandshake;\nvar R3 = tls.handleApplicationData;\nvar R4 = tls.handleHeartbeat;\nvar ctTable = [];\nctTable[tls.ConnectionEnd.client] = [\n//      CC,AL,HS,AD,HB\n/*SHE*/[__,R1,R2,__,R4],\n/*SCE*/[__,R1,R2,__,R4],\n/*SKE*/[__,R1,R2,__,R4],\n/*SCR*/[__,R1,R2,__,R4],\n/*SHD*/[__,R1,R2,__,R4],\n/*SCC*/[R0,R1,__,__,R4],\n/*SFI*/[__,R1,R2,__,R4],\n/*SAD*/[__,R1,R2,R3,R4],\n/*SER*/[__,R1,R2,__,R4]\n];\n\n// map server current expect state and content type to function\nctTable[tls.ConnectionEnd.server] = [\n//      CC,AL,HS,AD\n/*CHE*/[__,R1,R2,__,R4],\n/*CCE*/[__,R1,R2,__,R4],\n/*CKE*/[__,R1,R2,__,R4],\n/*CCV*/[__,R1,R2,__,R4],\n/*CCC*/[R0,R1,__,__,R4],\n/*CFI*/[__,R1,R2,__,R4],\n/*CAD*/[__,R1,R2,R3,R4],\n/*CER*/[__,R1,R2,__,R4]\n];\n\n// map client current expect state and handshake type to function\nvar H0 = tls.handleHelloRequest;\nvar H1 = tls.handleServerHello;\nvar H2 = tls.handleCertificate;\nvar H3 = tls.handleServerKeyExchange;\nvar H4 = tls.handleCertificateRequest;\nvar H5 = tls.handleServerHelloDone;\nvar H6 = tls.handleFinished;\nvar hsTable = [];\nhsTable[tls.ConnectionEnd.client] = [\n//      HR,01,SH,03,04,05,06,07,08,09,10,SC,SK,CR,HD,15,CK,17,18,19,FI\n/*SHE*/[__,__,H1,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*SCE*/[H0,__,__,__,__,__,__,__,__,__,__,H2,H3,H4,H5,__,__,__,__,__,__],\n/*SKE*/[H0,__,__,__,__,__,__,__,__,__,__,__,H3,H4,H5,__,__,__,__,__,__],\n/*SCR*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,H4,H5,__,__,__,__,__,__],\n/*SHD*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,H5,__,__,__,__,__,__],\n/*SCC*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*SFI*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H6],\n/*SAD*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*SER*/[H0,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__]\n];\n\n// map server current expect state and handshake type to function\n// Note: CAD[CH] does not map to FB because renegotation is prohibited\nvar H7 = tls.handleClientHello;\nvar H8 = tls.handleClientKeyExchange;\nvar H9 = tls.handleCertificateVerify;\nhsTable[tls.ConnectionEnd.server] = [\n//      01,CH,02,03,04,05,06,07,08,09,10,CC,12,13,14,CV,CK,17,18,19,FI\n/*CHE*/[__,H7,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*CCE*/[__,__,__,__,__,__,__,__,__,__,__,H2,__,__,__,__,__,__,__,__,__],\n/*CKE*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H8,__,__,__,__],\n/*CCV*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H9,__,__,__,__,__],\n/*CCC*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*CFI*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,H6],\n/*CAD*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__],\n/*CER*/[__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__,__]\n];\n\n/**\n * Generates the master_secret and keys using the given security parameters.\n *\n * The security parameters for a TLS connection state are defined as such:\n *\n * struct {\n *   ConnectionEnd          entity;\n *   PRFAlgorithm           prf_algorithm;\n *   BulkCipherAlgorithm    bulk_cipher_algorithm;\n *   CipherType             cipher_type;\n *   uint8                  enc_key_length;\n *   uint8                  block_length;\n *   uint8                  fixed_iv_length;\n *   uint8                  record_iv_length;\n *   MACAlgorithm           mac_algorithm;\n *   uint8                  mac_length;\n *   uint8                  mac_key_length;\n *   CompressionMethod      compression_algorithm;\n *   opaque                 master_secret[48];\n *   opaque                 client_random[32];\n *   opaque                 server_random[32];\n * } SecurityParameters;\n *\n * Note that this definition is from TLS 1.2. In TLS 1.0 some of these\n * parameters are ignored because, for instance, the PRFAlgorithm is a\n * builtin-fixed algorithm combining iterations of MD5 and SHA-1 in TLS 1.0.\n *\n * The Record Protocol requires an algorithm to generate keys required by the\n * current connection state.\n *\n * The master secret is expanded into a sequence of secure bytes, which is then\n * split to a client write MAC key, a server write MAC key, a client write\n * encryption key, and a server write encryption key. In TLS 1.0 a client write\n * IV and server write IV are also generated. Each of these is generated from\n * the byte sequence in that order. Unused values are empty. In TLS 1.2, some\n * AEAD ciphers may additionally require a client write IV and a server write\n * IV (see Section 6.2.3.3).\n *\n * When keys, MAC keys, and IVs are generated, the master secret is used as an\n * entropy source.\n *\n * To generate the key material, compute:\n *\n * master_secret = PRF(pre_master_secret, \"master secret\",\n *                     ClientHello.random + ServerHello.random)\n *\n * key_block = PRF(SecurityParameters.master_secret,\n *                 \"key expansion\",\n *                 SecurityParameters.server_random +\n *                 SecurityParameters.client_random);\n *\n * until enough output has been generated. Then, the key_block is\n * partitioned as follows:\n *\n * client_write_MAC_key[SecurityParameters.mac_key_length]\n * server_write_MAC_key[SecurityParameters.mac_key_length]\n * client_write_key[SecurityParameters.enc_key_length]\n * server_write_key[SecurityParameters.enc_key_length]\n * client_write_IV[SecurityParameters.fixed_iv_length]\n * server_write_IV[SecurityParameters.fixed_iv_length]\n *\n * In TLS 1.2, the client_write_IV and server_write_IV are only generated for\n * implicit nonce techniques as described in Section 3.2.1 of [AEAD]. This\n * implementation uses TLS 1.0 so IVs are generated.\n *\n * Implementation note: The currently defined cipher suite which requires the\n * most material is AES_256_CBC_SHA256. It requires 2 x 32 byte keys and 2 x 32\n * byte MAC keys, for a total 128 bytes of key material. In TLS 1.0 it also\n * requires 2 x 16 byte IVs, so it actually takes 160 bytes of key material.\n *\n * @param c the connection.\n * @param sp the security parameters to use.\n *\n * @return the security keys.\n */\ntls.generateKeys = function(c, sp) {\n  // TLS_RSA_WITH_AES_128_CBC_SHA (required to be compliant with TLS 1.2) &\n  // TLS_RSA_WITH_AES_256_CBC_SHA are the only cipher suites implemented\n  // at present\n\n  // TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA is required to be compliant with\n  // TLS 1.0 but we don't care right now because AES is better and we have\n  // an implementation for it\n\n  // TODO: TLS 1.2 implementation\n  /*\n  // determine the PRF\n  var prf;\n  switch(sp.prf_algorithm) {\n  case tls.PRFAlgorithm.tls_prf_sha256:\n    prf = prf_sha256;\n    break;\n  default:\n    // should never happen\n    throw new Error('Invalid PRF');\n  }\n  */\n\n  // TLS 1.0/1.1 implementation\n  var prf = prf_TLS1;\n\n  // concatenate server and client random\n  var random = sp.client_random + sp.server_random;\n\n  // only create master secret if session is new\n  if(!c.session.resuming) {\n    // create master secret, clean up pre-master secret\n    sp.master_secret = prf(\n      sp.pre_master_secret, 'master secret', random, 48).bytes();\n    sp.pre_master_secret = null;\n  }\n\n  // generate the amount of key material needed\n  random = sp.server_random + sp.client_random;\n  var length = 2 * sp.mac_key_length + 2 * sp.enc_key_length;\n\n  // include IV for TLS/1.0\n  var tls10 = (c.version.major === tls.Versions.TLS_1_0.major &&\n    c.version.minor === tls.Versions.TLS_1_0.minor);\n  if(tls10) {\n    length += 2 * sp.fixed_iv_length;\n  }\n  var km = prf(sp.master_secret, 'key expansion', random, length);\n\n  // split the key material into the MAC and encryption keys\n  var rval = {\n    client_write_MAC_key: km.getBytes(sp.mac_key_length),\n    server_write_MAC_key: km.getBytes(sp.mac_key_length),\n    client_write_key: km.getBytes(sp.enc_key_length),\n    server_write_key: km.getBytes(sp.enc_key_length)\n  };\n\n  // include TLS 1.0 IVs\n  if(tls10) {\n    rval.client_write_IV = km.getBytes(sp.fixed_iv_length);\n    rval.server_write_IV = km.getBytes(sp.fixed_iv_length);\n  }\n\n  return rval;\n};\n\n/**\n * Creates a new initialized TLS connection state. A connection state has\n * a read mode and a write mode.\n *\n * compression state:\n *   The current state of the compression algorithm.\n *\n * cipher state:\n *   The current state of the encryption algorithm. This will consist of the\n *   scheduled key for that connection. For stream ciphers, this will also\n *   contain whatever state information is necessary to allow the stream to\n *   continue to encrypt or decrypt data.\n *\n * MAC key:\n *   The MAC key for the connection.\n *\n * sequence number:\n *   Each connection state contains a sequence number, which is maintained\n *   separately for read and write states. The sequence number MUST be set to\n *   zero whenever a connection state is made the active state. Sequence\n *   numbers are of type uint64 and may not exceed 2^64-1. Sequence numbers do\n *   not wrap. If a TLS implementation would need to wrap a sequence number,\n *   it must renegotiate instead. A sequence number is incremented after each\n *   record: specifically, the first record transmitted under a particular\n *   connection state MUST use sequence number 0.\n *\n * @param c the connection.\n *\n * @return the new initialized TLS connection state.\n */\ntls.createConnectionState = function(c) {\n  var client = (c.entity === tls.ConnectionEnd.client);\n\n  var createMode = function() {\n    var mode = {\n      // two 32-bit numbers, first is most significant\n      sequenceNumber: [0, 0],\n      macKey: null,\n      macLength: 0,\n      macFunction: null,\n      cipherState: null,\n      cipherFunction: function(record) {return true;},\n      compressionState: null,\n      compressFunction: function(record) {return true;},\n      updateSequenceNumber: function() {\n        if(mode.sequenceNumber[1] === 0xFFFFFFFF) {\n          mode.sequenceNumber[1] = 0;\n          ++mode.sequenceNumber[0];\n        } else {\n          ++mode.sequenceNumber[1];\n        }\n      }\n    };\n    return mode;\n  };\n  var state = {\n    read: createMode(),\n    write: createMode()\n  };\n\n  // update function in read mode will decrypt then decompress a record\n  state.read.update = function(c, record) {\n    if(!state.read.cipherFunction(record, state.read)) {\n      c.error(c, {\n        message: 'Could not decrypt record or bad MAC.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          // doesn't matter if decryption failed or MAC was\n          // invalid, return the same error so as not to reveal\n          // which one occurred\n          description: tls.Alert.Description.bad_record_mac\n        }\n      });\n    } else if(!state.read.compressFunction(c, record, state.read)) {\n      c.error(c, {\n        message: 'Could not decompress record.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.decompression_failure\n        }\n      });\n    }\n    return !c.fail;\n  };\n\n  // update function in write mode will compress then encrypt a record\n  state.write.update = function(c, record) {\n    if(!state.write.compressFunction(c, record, state.write)) {\n      // error, but do not send alert since it would require\n      // compression as well\n      c.error(c, {\n        message: 'Could not compress record.',\n        send: false,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    } else if(!state.write.cipherFunction(record, state.write)) {\n      // error, but do not send alert since it would require\n      // encryption as well\n      c.error(c, {\n        message: 'Could not encrypt record.',\n        send: false,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    }\n    return !c.fail;\n  };\n\n  // handle security parameters\n  if(c.session) {\n    var sp = c.session.sp;\n    c.session.cipherSuite.initSecurityParameters(sp);\n\n    // generate keys\n    sp.keys = tls.generateKeys(c, sp);\n    state.read.macKey = client ?\n      sp.keys.server_write_MAC_key : sp.keys.client_write_MAC_key;\n    state.write.macKey = client ?\n      sp.keys.client_write_MAC_key : sp.keys.server_write_MAC_key;\n\n    // cipher suite setup\n    c.session.cipherSuite.initConnectionState(state, c, sp);\n\n    // compression setup\n    switch(sp.compression_algorithm) {\n    case tls.CompressionMethod.none:\n      break;\n    case tls.CompressionMethod.deflate:\n      state.read.compressFunction = inflate;\n      state.write.compressFunction = deflate;\n      break;\n    default:\n      throw new Error('Unsupported compression algorithm.');\n    }\n  }\n\n  return state;\n};\n\n/**\n * Creates a Random structure.\n *\n * struct {\n *   uint32 gmt_unix_time;\n *   opaque random_bytes[28];\n * } Random;\n *\n * gmt_unix_time:\n *   The current time and date in standard UNIX 32-bit format (seconds since\n *   the midnight starting Jan 1, 1970, UTC, ignoring leap seconds) according\n *   to the sender's internal clock. Clocks are not required to be set\n *   correctly by the basic TLS protocol; higher-level or application\n *   protocols may define additional requirements. Note that, for historical\n *   reasons, the data element is named using GMT, the predecessor of the\n *   current worldwide time base, UTC.\n * random_bytes:\n *   28 bytes generated by a secure random number generator.\n *\n * @return the Random structure as a byte array.\n */\ntls.createRandom = function() {\n  // get UTC milliseconds\n  var d = new Date();\n  var utc = +d + d.getTimezoneOffset() * 60000;\n  var rval = forge.util.createBuffer();\n  rval.putInt32(utc);\n  rval.putBytes(forge.random.getBytes(28));\n  return rval;\n};\n\n/**\n * Creates a TLS record with the given type and data.\n *\n * @param c the connection.\n * @param options:\n *   type: the record type.\n *   data: the plain text data in a byte buffer.\n *\n * @return the created record.\n */\ntls.createRecord = function(c, options) {\n  if(!options.data) {\n    return null;\n  }\n  var record = {\n    type: options.type,\n    version: {\n      major: c.version.major,\n      minor: c.version.minor\n    },\n    length: options.data.length(),\n    fragment: options.data\n  };\n  return record;\n};\n\n/**\n * Creates a TLS alert record.\n *\n * @param c the connection.\n * @param alert:\n *   level: the TLS alert level.\n *   description: the TLS alert description.\n *\n * @return the created alert record.\n */\ntls.createAlert = function(c, alert) {\n  var b = forge.util.createBuffer();\n  b.putByte(alert.level);\n  b.putByte(alert.description);\n  return tls.createRecord(c, {\n    type: tls.ContentType.alert,\n    data: b\n  });\n};\n\n/* The structure of a TLS handshake message.\n *\n * struct {\n *    HandshakeType msg_type;    // handshake type\n *    uint24 length;             // bytes in message\n *    select(HandshakeType) {\n *       case hello_request:       HelloRequest;\n *       case client_hello:        ClientHello;\n *       case server_hello:        ServerHello;\n *       case certificate:         Certificate;\n *       case server_key_exchange: ServerKeyExchange;\n *       case certificate_request: CertificateRequest;\n *       case server_hello_done:   ServerHelloDone;\n *       case certificate_verify:  CertificateVerify;\n *       case client_key_exchange: ClientKeyExchange;\n *       case finished:            Finished;\n *    } body;\n * } Handshake;\n */\n\n/**\n * Creates a ClientHello message.\n *\n * opaque SessionID<0..32>;\n * enum { null(0), deflate(1), (255) } CompressionMethod;\n * uint8 CipherSuite[2];\n *\n * struct {\n *   ProtocolVersion client_version;\n *   Random random;\n *   SessionID session_id;\n *   CipherSuite cipher_suites<2..2^16-2>;\n *   CompressionMethod compression_methods<1..2^8-1>;\n *   select(extensions_present) {\n *     case false:\n *       struct {};\n *     case true:\n *       Extension extensions<0..2^16-1>;\n *   };\n * } ClientHello;\n *\n * The extension format for extended client hellos and server hellos is:\n *\n * struct {\n *   ExtensionType extension_type;\n *   opaque extension_data<0..2^16-1>;\n * } Extension;\n *\n * Here:\n *\n * - \"extension_type\" identifies the particular extension type.\n * - \"extension_data\" contains information specific to the particular\n * extension type.\n *\n * The extension types defined in this document are:\n *\n * enum {\n *   server_name(0), max_fragment_length(1),\n *   client_certificate_url(2), trusted_ca_keys(3),\n *   truncated_hmac(4), status_request(5), (65535)\n * } ExtensionType;\n *\n * @param c the connection.\n *\n * @return the ClientHello byte buffer.\n */\ntls.createClientHello = function(c) {\n  // save hello version\n  c.session.clientHelloVersion = {\n    major: c.version.major,\n    minor: c.version.minor\n  };\n\n  // create supported cipher suites\n  var cipherSuites = forge.util.createBuffer();\n  for(var i = 0; i < c.cipherSuites.length; ++i) {\n    var cs = c.cipherSuites[i];\n    cipherSuites.putByte(cs.id[0]);\n    cipherSuites.putByte(cs.id[1]);\n  }\n  var cSuites = cipherSuites.length();\n\n  // create supported compression methods, null always supported, but\n  // also support deflate if connection has inflate and deflate methods\n  var compressionMethods = forge.util.createBuffer();\n  compressionMethods.putByte(tls.CompressionMethod.none);\n  // FIXME: deflate support disabled until issues with raw deflate data\n  // without zlib headers are resolved\n  /*\n  if(c.inflate !== null && c.deflate !== null) {\n    compressionMethods.putByte(tls.CompressionMethod.deflate);\n  }\n  */\n  var cMethods = compressionMethods.length();\n\n  // create TLS SNI (server name indication) extension if virtual host\n  // has been specified, see RFC 3546\n  var extensions = forge.util.createBuffer();\n  if(c.virtualHost) {\n    // create extension struct\n    var ext = forge.util.createBuffer();\n    ext.putByte(0x00); // type server_name (ExtensionType is 2 bytes)\n    ext.putByte(0x00);\n\n    /* In order to provide the server name, clients MAY include an\n     * extension of type \"server_name\" in the (extended) client hello.\n     * The \"extension_data\" field of this extension SHALL contain\n     * \"ServerNameList\" where:\n     *\n     * struct {\n     *   NameType name_type;\n     *   select(name_type) {\n     *     case host_name: HostName;\n     *   } name;\n     * } ServerName;\n     *\n     * enum {\n     *   host_name(0), (255)\n     * } NameType;\n     *\n     * opaque HostName<1..2^16-1>;\n     *\n     * struct {\n     *   ServerName server_name_list<1..2^16-1>\n     * } ServerNameList;\n     */\n    var serverName = forge.util.createBuffer();\n    serverName.putByte(0x00); // type host_name\n    writeVector(serverName, 2, forge.util.createBuffer(c.virtualHost));\n\n    // ServerNameList is in extension_data\n    var snList = forge.util.createBuffer();\n    writeVector(snList, 2, serverName);\n    writeVector(ext, 2, snList);\n    extensions.putBuffer(ext);\n  }\n  var extLength = extensions.length();\n  if(extLength > 0) {\n    // add extension vector length\n    extLength += 2;\n  }\n\n  // determine length of the handshake message\n  // cipher suites and compression methods size will need to be\n  // updated if more get added to the list\n  var sessionId = c.session.id;\n  var length =\n    sessionId.length + 1 + // session ID vector\n    2 +                    // version (major + minor)\n    4 + 28 +               // random time and random bytes\n    2 + cSuites +          // cipher suites vector\n    1 + cMethods +         // compression methods vector\n    extLength;             // extensions vector\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.client_hello);\n  rval.putInt24(length);                     // handshake length\n  rval.putByte(c.version.major);             // major version\n  rval.putByte(c.version.minor);             // minor version\n  rval.putBytes(c.session.sp.client_random); // random time + bytes\n  writeVector(rval, 1, forge.util.createBuffer(sessionId));\n  writeVector(rval, 2, cipherSuites);\n  writeVector(rval, 1, compressionMethods);\n  if(extLength > 0) {\n    writeVector(rval, 2, extensions);\n  }\n  return rval;\n};\n\n/**\n * Creates a ServerHello message.\n *\n * @param c the connection.\n *\n * @return the ServerHello byte buffer.\n */\ntls.createServerHello = function(c) {\n  // determine length of the handshake message\n  var sessionId = c.session.id;\n  var length =\n    sessionId.length + 1 + // session ID vector\n    2 +                    // version (major + minor)\n    4 + 28 +               // random time and random bytes\n    2 +                    // chosen cipher suite\n    1;                     // chosen compression method\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.server_hello);\n  rval.putInt24(length);                     // handshake length\n  rval.putByte(c.version.major);             // major version\n  rval.putByte(c.version.minor);             // minor version\n  rval.putBytes(c.session.sp.server_random); // random time + bytes\n  writeVector(rval, 1, forge.util.createBuffer(sessionId));\n  rval.putByte(c.session.cipherSuite.id[0]);\n  rval.putByte(c.session.cipherSuite.id[1]);\n  rval.putByte(c.session.compressionMethod);\n  return rval;\n};\n\n/**\n * Creates a Certificate message.\n *\n * When this message will be sent:\n *   This is the first message the client can send after receiving a server\n *   hello done message and the first message the server can send after\n *   sending a ServerHello. This client message is only sent if the server\n *   requests a certificate. If no suitable certificate is available, the\n *   client should send a certificate message containing no certificates. If\n *   client authentication is required by the server for the handshake to\n *   continue, it may respond with a fatal handshake failure alert.\n *\n * opaque ASN.1Cert<1..2^24-1>;\n *\n * struct {\n *   ASN.1Cert certificate_list<0..2^24-1>;\n * } Certificate;\n *\n * @param c the connection.\n *\n * @return the Certificate byte buffer.\n */\ntls.createCertificate = function(c) {\n  // TODO: check certificate request to ensure types are supported\n\n  // get a certificate (a certificate as a PEM string)\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var cert = null;\n  if(c.getCertificate) {\n    var hint;\n    if(client) {\n      hint = c.session.certificateRequest;\n    } else {\n      hint = c.session.extensions.server_name.serverNameList;\n    }\n    cert = c.getCertificate(c, hint);\n  }\n\n  // buffer to hold certificate list\n  var certList = forge.util.createBuffer();\n  if(cert !== null) {\n    try {\n      // normalize cert to a chain of certificates\n      if(!forge.util.isArray(cert)) {\n        cert = [cert];\n      }\n      var asn1 = null;\n      for(var i = 0; i < cert.length; ++i) {\n        var msg = forge.pem.decode(cert[i])[0];\n        if(msg.type !== 'CERTIFICATE' &&\n          msg.type !== 'X509 CERTIFICATE' &&\n          msg.type !== 'TRUSTED CERTIFICATE') {\n          var error = new Error('Could not convert certificate from PEM; PEM ' +\n            'header type is not \"CERTIFICATE\", \"X509 CERTIFICATE\", or ' +\n            '\"TRUSTED CERTIFICATE\".');\n          error.headerType = msg.type;\n          throw error;\n        }\n        if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n          throw new Error('Could not convert certificate from PEM; PEM is encrypted.');\n        }\n\n        var der = forge.util.createBuffer(msg.body);\n        if(asn1 === null) {\n          asn1 = forge.asn1.fromDer(der.bytes(), false);\n        }\n\n        // certificate entry is itself a vector with 3 length bytes\n        var certBuffer = forge.util.createBuffer();\n        writeVector(certBuffer, 3, der);\n\n        // add cert vector to cert list vector\n        certList.putBuffer(certBuffer);\n      }\n\n      // save certificate\n      cert = forge.pki.certificateFromAsn1(asn1);\n      if(client) {\n        c.session.clientCertificate = cert;\n      } else {\n        c.session.serverCertificate = cert;\n      }\n    } catch(ex) {\n      return c.error(c, {\n        message: 'Could not send certificate list.',\n        cause: ex,\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.bad_certificate\n        }\n      });\n    }\n  }\n\n  // determine length of the handshake message\n  var length = 3 + certList.length(); // cert list vector\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.certificate);\n  rval.putInt24(length);\n  writeVector(rval, 3, certList);\n  return rval;\n};\n\n/**\n * Creates a ClientKeyExchange message.\n *\n * When this message will be sent:\n *   This message is always sent by the client. It will immediately follow the\n *   client certificate message, if it is sent. Otherwise it will be the first\n *   message sent by the client after it receives the server hello done\n *   message.\n *\n * Meaning of this message:\n *   With this message, the premaster secret is set, either though direct\n *   transmission of the RSA-encrypted secret, or by the transmission of\n *   Diffie-Hellman parameters which will allow each side to agree upon the\n *   same premaster secret. When the key exchange method is DH_RSA or DH_DSS,\n *   client certification has been requested, and the client was able to\n *   respond with a certificate which contained a Diffie-Hellman public key\n *   whose parameters (group and generator) matched those specified by the\n *   server in its certificate, this message will not contain any data.\n *\n * Meaning of this message:\n *   If RSA is being used for key agreement and authentication, the client\n *   generates a 48-byte premaster secret, encrypts it using the public key\n *   from the server's certificate or the temporary RSA key provided in a\n *   server key exchange message, and sends the result in an encrypted\n *   premaster secret message. This structure is a variant of the client\n *   key exchange message, not a message in itself.\n *\n * struct {\n *   select(KeyExchangeAlgorithm) {\n *     case rsa: EncryptedPreMasterSecret;\n *     case diffie_hellman: ClientDiffieHellmanPublic;\n *   } exchange_keys;\n * } ClientKeyExchange;\n *\n * struct {\n *   ProtocolVersion client_version;\n *   opaque random[46];\n * } PreMasterSecret;\n *\n * struct {\n *   public-key-encrypted PreMasterSecret pre_master_secret;\n * } EncryptedPreMasterSecret;\n *\n * A public-key-encrypted element is encoded as a vector <0..2^16-1>.\n *\n * @param c the connection.\n *\n * @return the ClientKeyExchange byte buffer.\n */\ntls.createClientKeyExchange = function(c) {\n  // create buffer to encrypt\n  var b = forge.util.createBuffer();\n\n  // add highest client-supported protocol to help server avoid version\n  // rollback attacks\n  b.putByte(c.session.clientHelloVersion.major);\n  b.putByte(c.session.clientHelloVersion.minor);\n\n  // generate and add 46 random bytes\n  b.putBytes(forge.random.getBytes(46));\n\n  // save pre-master secret\n  var sp = c.session.sp;\n  sp.pre_master_secret = b.getBytes();\n\n  // RSA-encrypt the pre-master secret\n  var key = c.session.serverCertificate.publicKey;\n  b = key.encrypt(sp.pre_master_secret);\n\n  /* Note: The encrypted pre-master secret will be stored in a\n    public-key-encrypted opaque vector that has the length prefixed using\n    2 bytes, so include those 2 bytes in the handshake message length. This\n    is done as a minor optimization instead of calling writeVector(). */\n\n  // determine length of the handshake message\n  var length = b.length + 2;\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.client_key_exchange);\n  rval.putInt24(length);\n  // add vector length bytes\n  rval.putInt16(b.length);\n  rval.putBytes(b);\n  return rval;\n};\n\n/**\n * Creates a ServerKeyExchange message.\n *\n * @param c the connection.\n *\n * @return the ServerKeyExchange byte buffer.\n */\ntls.createServerKeyExchange = function(c) {\n  // this implementation only supports RSA, no Diffie-Hellman support,\n  // so this record is empty\n\n  // determine length of the handshake message\n  var length = 0;\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  if(length > 0) {\n    rval.putByte(tls.HandshakeType.server_key_exchange);\n    rval.putInt24(length);\n  }\n  return rval;\n};\n\n/**\n * Gets the signed data used to verify a client-side certificate. See\n * tls.createCertificateVerify() for details.\n *\n * @param c the connection.\n * @param callback the callback to call once the signed data is ready.\n */\ntls.getClientSignature = function(c, callback) {\n  // generate data to RSA encrypt\n  var b = forge.util.createBuffer();\n  b.putBuffer(c.session.md5.digest());\n  b.putBuffer(c.session.sha1.digest());\n  b = b.getBytes();\n\n  // create default signing function as necessary\n  c.getSignature = c.getSignature || function(c, b, callback) {\n    // do rsa encryption, call callback\n    var privateKey = null;\n    if(c.getPrivateKey) {\n      try {\n        privateKey = c.getPrivateKey(c, c.session.clientCertificate);\n        privateKey = forge.pki.privateKeyFromPem(privateKey);\n      } catch(ex) {\n        c.error(c, {\n          message: 'Could not get private key.',\n          cause: ex,\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.internal_error\n          }\n        });\n      }\n    }\n    if(privateKey === null) {\n      c.error(c, {\n        message: 'No private key set.',\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: tls.Alert.Description.internal_error\n        }\n      });\n    } else {\n      b = privateKey.sign(b, null);\n    }\n    callback(c, b);\n  };\n\n  // get client signature\n  c.getSignature(c, b, callback);\n};\n\n/**\n * Creates a CertificateVerify message.\n *\n * Meaning of this message:\n *   This structure conveys the client's Diffie-Hellman public value\n *   (Yc) if it was not already included in the client's certificate.\n *   The encoding used for Yc is determined by the enumerated\n *   PublicValueEncoding. This structure is a variant of the client\n *   key exchange message, not a message in itself.\n *\n * When this message will be sent:\n *   This message is used to provide explicit verification of a client\n *   certificate. This message is only sent following a client\n *   certificate that has signing capability (i.e. all certificates\n *   except those containing fixed Diffie-Hellman parameters). When\n *   sent, it will immediately follow the client key exchange message.\n *\n * struct {\n *   Signature signature;\n * } CertificateVerify;\n *\n * CertificateVerify.signature.md5_hash\n *   MD5(handshake_messages);\n *\n * Certificate.signature.sha_hash\n *   SHA(handshake_messages);\n *\n * Here handshake_messages refers to all handshake messages sent or\n * received starting at client hello up to but not including this\n * message, including the type and length fields of the handshake\n * messages.\n *\n * select(SignatureAlgorithm) {\n *   case anonymous: struct { };\n *   case rsa:\n *     digitally-signed struct {\n *       opaque md5_hash[16];\n *       opaque sha_hash[20];\n *     };\n *   case dsa:\n *     digitally-signed struct {\n *       opaque sha_hash[20];\n *     };\n * } Signature;\n *\n * In digital signing, one-way hash functions are used as input for a\n * signing algorithm. A digitally-signed element is encoded as an opaque\n * vector <0..2^16-1>, where the length is specified by the signing\n * algorithm and key.\n *\n * In RSA signing, a 36-byte structure of two hashes (one SHA and one\n * MD5) is signed (encrypted with the private key). It is encoded with\n * PKCS #1 block type 0 or type 1 as described in [PKCS1].\n *\n * In DSS, the 20 bytes of the SHA hash are run directly through the\n * Digital Signing Algorithm with no additional hashing.\n *\n * @param c the connection.\n * @param signature the signature to include in the message.\n *\n * @return the CertificateVerify byte buffer.\n */\ntls.createCertificateVerify = function(c, signature) {\n  /* Note: The signature will be stored in a \"digitally-signed\" opaque\n    vector that has the length prefixed using 2 bytes, so include those\n    2 bytes in the handshake message length. This is done as a minor\n    optimization instead of calling writeVector(). */\n\n  // determine length of the handshake message\n  var length = signature.length + 2;\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.certificate_verify);\n  rval.putInt24(length);\n  // add vector length bytes\n  rval.putInt16(signature.length);\n  rval.putBytes(signature);\n  return rval;\n};\n\n/**\n * Creates a CertificateRequest message.\n *\n * @param c the connection.\n *\n * @return the CertificateRequest byte buffer.\n */\ntls.createCertificateRequest = function(c) {\n  // TODO: support other certificate types\n  var certTypes = forge.util.createBuffer();\n\n  // common RSA certificate type\n  certTypes.putByte(0x01);\n\n  // add distinguished names from CA store\n  var cAs = forge.util.createBuffer();\n  for(var key in c.caStore.certs) {\n    var cert = c.caStore.certs[key];\n    var dn = forge.pki.distinguishedNameToAsn1(cert.subject);\n    var byteBuffer = forge.asn1.toDer(dn);\n    cAs.putInt16(byteBuffer.length());\n    cAs.putBuffer(byteBuffer);\n  }\n\n  // TODO: TLS 1.2+ has a different format\n\n  // determine length of the handshake message\n  var length =\n    1 + certTypes.length() +\n    2 + cAs.length();\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.certificate_request);\n  rval.putInt24(length);\n  writeVector(rval, 1, certTypes);\n  writeVector(rval, 2, cAs);\n  return rval;\n};\n\n/**\n * Creates a ServerHelloDone message.\n *\n * @param c the connection.\n *\n * @return the ServerHelloDone byte buffer.\n */\ntls.createServerHelloDone = function(c) {\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.server_hello_done);\n  rval.putInt24(0);\n  return rval;\n};\n\n/**\n * Creates a ChangeCipherSpec message.\n *\n * The change cipher spec protocol exists to signal transitions in\n * ciphering strategies. The protocol consists of a single message,\n * which is encrypted and compressed under the current (not the pending)\n * connection state. The message consists of a single byte of value 1.\n *\n * struct {\n *   enum { change_cipher_spec(1), (255) } type;\n * } ChangeCipherSpec;\n *\n * @return the ChangeCipherSpec byte buffer.\n */\ntls.createChangeCipherSpec = function() {\n  var rval = forge.util.createBuffer();\n  rval.putByte(0x01);\n  return rval;\n};\n\n/**\n * Creates a Finished message.\n *\n * struct {\n *   opaque verify_data[12];\n * } Finished;\n *\n * verify_data\n *   PRF(master_secret, finished_label, MD5(handshake_messages) +\n *   SHA-1(handshake_messages)) [0..11];\n *\n * finished_label\n *   For Finished messages sent by the client, the string \"client\n *   finished\". For Finished messages sent by the server, the\n *   string \"server finished\".\n *\n * handshake_messages\n *   All of the data from all handshake messages up to but not\n *   including this message. This is only data visible at the\n *   handshake layer and does not include record layer headers.\n *   This is the concatenation of all the Handshake structures as\n *   defined in 7.4 exchanged thus far.\n *\n * @param c the connection.\n *\n * @return the Finished byte buffer.\n */\ntls.createFinished = function(c) {\n  // generate verify_data\n  var b = forge.util.createBuffer();\n  b.putBuffer(c.session.md5.digest());\n  b.putBuffer(c.session.sha1.digest());\n\n  // TODO: determine prf function and verify length for TLS 1.2\n  var client = (c.entity === tls.ConnectionEnd.client);\n  var sp = c.session.sp;\n  var vdl = 12;\n  var prf = prf_TLS1;\n  var label = client ? 'client finished' : 'server finished';\n  b = prf(sp.master_secret, label, b.getBytes(), vdl);\n\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(tls.HandshakeType.finished);\n  rval.putInt24(b.length());\n  rval.putBuffer(b);\n  return rval;\n};\n\n/**\n * Creates a HeartbeatMessage (See RFC 6520).\n *\n * struct {\n *   HeartbeatMessageType type;\n *   uint16 payload_length;\n *   opaque payload[HeartbeatMessage.payload_length];\n *   opaque padding[padding_length];\n * } HeartbeatMessage;\n *\n * The total length of a HeartbeatMessage MUST NOT exceed 2^14 or\n * max_fragment_length when negotiated as defined in [RFC6066].\n *\n * type: The message type, either heartbeat_request or heartbeat_response.\n *\n * payload_length: The length of the payload.\n *\n * payload: The payload consists of arbitrary content.\n *\n * padding: The padding is random content that MUST be ignored by the\n *   receiver. The length of a HeartbeatMessage is TLSPlaintext.length\n *   for TLS and DTLSPlaintext.length for DTLS. Furthermore, the\n *   length of the type field is 1 byte, and the length of the\n *   payload_length is 2. Therefore, the padding_length is\n *   TLSPlaintext.length - payload_length - 3 for TLS and\n *   DTLSPlaintext.length - payload_length - 3 for DTLS. The\n *   padding_length MUST be at least 16.\n *\n * The sender of a HeartbeatMessage MUST use a random padding of at\n * least 16 bytes. The padding of a received HeartbeatMessage message\n * MUST be ignored.\n *\n * If the payload_length of a received HeartbeatMessage is too large,\n * the received HeartbeatMessage MUST be discarded silently.\n *\n * @param c the connection.\n * @param type the tls.HeartbeatMessageType.\n * @param payload the heartbeat data to send as the payload.\n * @param [payloadLength] the payload length to use, defaults to the\n *          actual payload length.\n *\n * @return the HeartbeatRequest byte buffer.\n */\ntls.createHeartbeat = function(type, payload, payloadLength) {\n  if(typeof payloadLength === 'undefined') {\n    payloadLength = payload.length;\n  }\n  // build record fragment\n  var rval = forge.util.createBuffer();\n  rval.putByte(type);               // heartbeat message type\n  rval.putInt16(payloadLength);     // payload length\n  rval.putBytes(payload);           // payload\n  // padding\n  var plaintextLength = rval.length();\n  var paddingLength = Math.max(16, plaintextLength - payloadLength - 3);\n  rval.putBytes(forge.random.getBytes(paddingLength));\n  return rval;\n};\n\n/**\n * Fragments, compresses, encrypts, and queues a record for delivery.\n *\n * @param c the connection.\n * @param record the record to queue.\n */\ntls.queue = function(c, record) {\n  // error during record creation\n  if(!record) {\n    return;\n  }\n\n  if(record.fragment.length() === 0) {\n    if(record.type === tls.ContentType.handshake ||\n      record.type === tls.ContentType.alert ||\n      record.type === tls.ContentType.change_cipher_spec) {\n      // Empty handshake, alert of change cipher spec messages are not allowed per the TLS specification and should not be sent.\n      return;\n    }\n  }\n\n  // if the record is a handshake record, update handshake hashes\n  if(record.type === tls.ContentType.handshake) {\n    var bytes = record.fragment.bytes();\n    c.session.md5.update(bytes);\n    c.session.sha1.update(bytes);\n    bytes = null;\n  }\n\n  // handle record fragmentation\n  var records;\n  if(record.fragment.length() <= tls.MaxFragment) {\n    records = [record];\n  } else {\n    // fragment data as long as it is too long\n    records = [];\n    var data = record.fragment.bytes();\n    while(data.length > tls.MaxFragment) {\n      records.push(tls.createRecord(c, {\n        type: record.type,\n        data: forge.util.createBuffer(data.slice(0, tls.MaxFragment))\n      }));\n      data = data.slice(tls.MaxFragment);\n    }\n    // add last record\n    if(data.length > 0) {\n      records.push(tls.createRecord(c, {\n        type: record.type,\n        data: forge.util.createBuffer(data)\n      }));\n    }\n  }\n\n  // compress and encrypt all fragmented records\n  for(var i = 0; i < records.length && !c.fail; ++i) {\n    // update the record using current write state\n    var rec = records[i];\n    var s = c.state.current.write;\n    if(s.update(c, rec)) {\n      // store record\n      c.records.push(rec);\n    }\n  }\n};\n\n/**\n * Flushes all queued records to the output buffer and calls the\n * tlsDataReady() handler on the given connection.\n *\n * @param c the connection.\n *\n * @return true on success, false on failure.\n */\ntls.flush = function(c) {\n  for(var i = 0; i < c.records.length; ++i) {\n    var record = c.records[i];\n\n    // add record header and fragment\n    c.tlsData.putByte(record.type);\n    c.tlsData.putByte(record.version.major);\n    c.tlsData.putByte(record.version.minor);\n    c.tlsData.putInt16(record.fragment.length());\n    c.tlsData.putBuffer(c.records[i].fragment);\n  }\n  c.records = [];\n  return c.tlsDataReady(c);\n};\n\n/**\n * Maps a pki.certificateError to a tls.Alert.Description.\n *\n * @param error the error to map.\n *\n * @return the alert description.\n */\nvar _certErrorToAlertDesc = function(error) {\n  switch(error) {\n  case true:\n    return true;\n  case forge.pki.certificateError.bad_certificate:\n    return tls.Alert.Description.bad_certificate;\n  case forge.pki.certificateError.unsupported_certificate:\n    return tls.Alert.Description.unsupported_certificate;\n  case forge.pki.certificateError.certificate_revoked:\n    return tls.Alert.Description.certificate_revoked;\n  case forge.pki.certificateError.certificate_expired:\n    return tls.Alert.Description.certificate_expired;\n  case forge.pki.certificateError.certificate_unknown:\n    return tls.Alert.Description.certificate_unknown;\n  case forge.pki.certificateError.unknown_ca:\n    return tls.Alert.Description.unknown_ca;\n  default:\n    return tls.Alert.Description.bad_certificate;\n  }\n};\n\n/**\n * Maps a tls.Alert.Description to a pki.certificateError.\n *\n * @param desc the alert description.\n *\n * @return the certificate error.\n */\nvar _alertDescToCertError = function(desc) {\n  switch(desc) {\n  case true:\n    return true;\n  case tls.Alert.Description.bad_certificate:\n    return forge.pki.certificateError.bad_certificate;\n  case tls.Alert.Description.unsupported_certificate:\n    return forge.pki.certificateError.unsupported_certificate;\n  case tls.Alert.Description.certificate_revoked:\n    return forge.pki.certificateError.certificate_revoked;\n  case tls.Alert.Description.certificate_expired:\n    return forge.pki.certificateError.certificate_expired;\n  case tls.Alert.Description.certificate_unknown:\n    return forge.pki.certificateError.certificate_unknown;\n  case tls.Alert.Description.unknown_ca:\n    return forge.pki.certificateError.unknown_ca;\n  default:\n    return forge.pki.certificateError.bad_certificate;\n  }\n};\n\n/**\n * Verifies a certificate chain against the given connection's\n * Certificate Authority store.\n *\n * @param c the TLS connection.\n * @param chain the certificate chain to verify, with the root or highest\n *          authority at the end.\n *\n * @return true if successful, false if not.\n */\ntls.verifyCertificateChain = function(c, chain) {\n  try {\n    // Make a copy of c.verifyOptions so that we can modify options.verify\n    // without modifying c.verifyOptions.\n    var options = {};\n    for (var key in c.verifyOptions) {\n      options[key] = c.verifyOptions[key];\n    }\n\n    options.verify = function(vfd, depth, chain) {\n      // convert pki.certificateError to tls alert description\n      var desc = _certErrorToAlertDesc(vfd);\n\n      // call application callback\n      var ret = c.verify(c, vfd, depth, chain);\n      if(ret !== true) {\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          // throw custom error\n          var error = new Error('The application rejected the certificate.');\n          error.send = true;\n          error.alert = {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.bad_certificate\n          };\n          if(ret.message) {\n            error.message = ret.message;\n          }\n          if(ret.alert) {\n            error.alert.description = ret.alert;\n          }\n          throw error;\n        }\n\n        // convert tls alert description to pki.certificateError\n        if(ret !== vfd) {\n          ret = _alertDescToCertError(ret);\n        }\n      }\n\n      return ret;\n    };\n\n    // verify chain\n    forge.pki.verifyCertificateChain(c.caStore, chain, options);\n  } catch(ex) {\n    // build tls error if not already customized\n    var err = ex;\n    if(typeof err !== 'object' || forge.util.isArray(err)) {\n      err = {\n        send: true,\n        alert: {\n          level: tls.Alert.Level.fatal,\n          description: _certErrorToAlertDesc(ex)\n        }\n      };\n    }\n    if(!('send' in err)) {\n      err.send = true;\n    }\n    if(!('alert' in err)) {\n      err.alert = {\n        level: tls.Alert.Level.fatal,\n        description: _certErrorToAlertDesc(err.error)\n      };\n    }\n\n    // send error\n    c.error(c, err);\n  }\n\n  return !c.fail;\n};\n\n/**\n * Creates a new TLS session cache.\n *\n * @param cache optional map of session ID to cached session.\n * @param capacity the maximum size for the cache (default: 100).\n *\n * @return the new TLS session cache.\n */\ntls.createSessionCache = function(cache, capacity) {\n  var rval = null;\n\n  // assume input is already a session cache object\n  if(cache && cache.getSession && cache.setSession && cache.order) {\n    rval = cache;\n  } else {\n    // create cache\n    rval = {};\n    rval.cache = cache || {};\n    rval.capacity = Math.max(capacity || 100, 1);\n    rval.order = [];\n\n    // store order for sessions, delete session overflow\n    for(var key in cache) {\n      if(rval.order.length <= capacity) {\n        rval.order.push(key);\n      } else {\n        delete cache[key];\n      }\n    }\n\n    // get a session from a session ID (or get any session)\n    rval.getSession = function(sessionId) {\n      var session = null;\n      var key = null;\n\n      // if session ID provided, use it\n      if(sessionId) {\n        key = forge.util.bytesToHex(sessionId);\n      } else if(rval.order.length > 0) {\n        // get first session from cache\n        key = rval.order[0];\n      }\n\n      if(key !== null && key in rval.cache) {\n        // get cached session and remove from cache\n        session = rval.cache[key];\n        delete rval.cache[key];\n        for(var i in rval.order) {\n          if(rval.order[i] === key) {\n            rval.order.splice(i, 1);\n            break;\n          }\n        }\n      }\n\n      return session;\n    };\n\n    // set a session in the cache\n    rval.setSession = function(sessionId, session) {\n      // remove session from cache if at capacity\n      if(rval.order.length === rval.capacity) {\n        var key = rval.order.shift();\n        delete rval.cache[key];\n      }\n      // add session to cache\n      var key = forge.util.bytesToHex(sessionId);\n      rval.order.push(key);\n      rval.cache[key] = session;\n    };\n  }\n\n  return rval;\n};\n\n/**\n * Creates a new TLS connection.\n *\n * See public createConnection() docs for more details.\n *\n * @param options the options for this connection.\n *\n * @return the new TLS connection.\n */\ntls.createConnection = function(options) {\n  var caStore = null;\n  if(options.caStore) {\n    // if CA store is an array, convert it to a CA store object\n    if(forge.util.isArray(options.caStore)) {\n      caStore = forge.pki.createCaStore(options.caStore);\n    } else {\n      caStore = options.caStore;\n    }\n  } else {\n    // create empty CA store\n    caStore = forge.pki.createCaStore();\n  }\n\n  // setup default cipher suites\n  var cipherSuites = options.cipherSuites || null;\n  if(cipherSuites === null) {\n    cipherSuites = [];\n    for(var key in tls.CipherSuites) {\n      cipherSuites.push(tls.CipherSuites[key]);\n    }\n  }\n\n  // set default entity\n  var entity = (options.server || false) ?\n    tls.ConnectionEnd.server : tls.ConnectionEnd.client;\n\n  // create session cache if requested\n  var sessionCache = options.sessionCache ?\n    tls.createSessionCache(options.sessionCache) : null;\n\n  // create TLS connection\n  var c = {\n    version: {major: tls.Version.major, minor: tls.Version.minor},\n    entity: entity,\n    sessionId: options.sessionId,\n    caStore: caStore,\n    sessionCache: sessionCache,\n    cipherSuites: cipherSuites,\n    connected: options.connected,\n    virtualHost: options.virtualHost || null,\n    verifyClient: options.verifyClient || false,\n    verify: options.verify || function(cn, vfd, dpth, cts) {return vfd;},\n    verifyOptions: options.verifyOptions || {},\n    getCertificate: options.getCertificate || null,\n    getPrivateKey: options.getPrivateKey || null,\n    getSignature: options.getSignature || null,\n    input: forge.util.createBuffer(),\n    tlsData: forge.util.createBuffer(),\n    data: forge.util.createBuffer(),\n    tlsDataReady: options.tlsDataReady,\n    dataReady: options.dataReady,\n    heartbeatReceived: options.heartbeatReceived,\n    closed: options.closed,\n    error: function(c, ex) {\n      // set origin if not set\n      ex.origin = ex.origin ||\n        ((c.entity === tls.ConnectionEnd.client) ? 'client' : 'server');\n\n      // send TLS alert\n      if(ex.send) {\n        tls.queue(c, tls.createAlert(c, ex.alert));\n        tls.flush(c);\n      }\n\n      // error is fatal by default\n      var fatal = (ex.fatal !== false);\n      if(fatal) {\n        // set fail flag\n        c.fail = true;\n      }\n\n      // call error handler first\n      options.error(c, ex);\n\n      if(fatal) {\n        // fatal error, close connection, do not clear fail\n        c.close(false);\n      }\n    },\n    deflate: options.deflate || null,\n    inflate: options.inflate || null\n  };\n\n  /**\n   * Resets a closed TLS connection for reuse. Called in c.close().\n   *\n   * @param clearFail true to clear the fail flag (default: true).\n   */\n  c.reset = function(clearFail) {\n    c.version = {major: tls.Version.major, minor: tls.Version.minor};\n    c.record = null;\n    c.session = null;\n    c.peerCertificate = null;\n    c.state = {\n      pending: null,\n      current: null\n    };\n    c.expect = (c.entity === tls.ConnectionEnd.client) ? SHE : CHE;\n    c.fragmented = null;\n    c.records = [];\n    c.open = false;\n    c.handshakes = 0;\n    c.handshaking = false;\n    c.isConnected = false;\n    c.fail = !(clearFail || typeof(clearFail) === 'undefined');\n    c.input.clear();\n    c.tlsData.clear();\n    c.data.clear();\n    c.state.current = tls.createConnectionState(c);\n  };\n\n  // do initial reset of connection\n  c.reset();\n\n  /**\n   * Updates the current TLS engine state based on the given record.\n   *\n   * @param c the TLS connection.\n   * @param record the TLS record to act on.\n   */\n  var _update = function(c, record) {\n    // get record handler (align type in table by subtracting lowest)\n    var aligned = record.type - tls.ContentType.change_cipher_spec;\n    var handlers = ctTable[c.entity][c.expect];\n    if(aligned in handlers) {\n      handlers[aligned](c, record);\n    } else {\n      // unexpected record\n      tls.handleUnexpected(c, record);\n    }\n  };\n\n  /**\n   * Reads the record header and initializes the next record on the given\n   * connection.\n   *\n   * @param c the TLS connection with the next record.\n   *\n   * @return 0 if the input data could be processed, otherwise the\n   *         number of bytes required for data to be processed.\n   */\n  var _readRecordHeader = function(c) {\n    var rval = 0;\n\n    // get input buffer and its length\n    var b = c.input;\n    var len = b.length();\n\n    // need at least 5 bytes to initialize a record\n    if(len < 5) {\n      rval = 5 - len;\n    } else {\n      // enough bytes for header\n      // initialize record\n      c.record = {\n        type: b.getByte(),\n        version: {\n          major: b.getByte(),\n          minor: b.getByte()\n        },\n        length: b.getInt16(),\n        fragment: forge.util.createBuffer(),\n        ready: false\n      };\n\n      // check record version\n      var compatibleVersion = (c.record.version.major === c.version.major);\n      if(compatibleVersion && c.session && c.session.version) {\n        // session version already set, require same minor version\n        compatibleVersion = (c.record.version.minor === c.version.minor);\n      }\n      if(!compatibleVersion) {\n        c.error(c, {\n          message: 'Incompatible TLS version.',\n          send: true,\n          alert: {\n            level: tls.Alert.Level.fatal,\n            description: tls.Alert.Description.protocol_version\n          }\n        });\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Reads the next record's contents and appends its message to any\n   * previously fragmented message.\n   *\n   * @param c the TLS connection with the next record.\n   *\n   * @return 0 if the input data could be processed, otherwise the\n   *         number of bytes required for data to be processed.\n   */\n  var _readRecord = function(c) {\n    var rval = 0;\n\n    // ensure there is enough input data to get the entire record\n    var b = c.input;\n    var len = b.length();\n    if(len < c.record.length) {\n      // not enough data yet, return how much is required\n      rval = c.record.length - len;\n    } else {\n      // there is enough data to parse the pending record\n      // fill record fragment and compact input buffer\n      c.record.fragment.putBytes(b.getBytes(c.record.length));\n      b.compact();\n\n      // update record using current read state\n      var s = c.state.current.read;\n      if(s.update(c, c.record)) {\n        // see if there is a previously fragmented message that the\n        // new record's message fragment should be appended to\n        if(c.fragmented !== null) {\n          // if the record type matches a previously fragmented\n          // record, append the record fragment to it\n          if(c.fragmented.type === c.record.type) {\n            // concatenate record fragments\n            c.fragmented.fragment.putBuffer(c.record.fragment);\n            c.record = c.fragmented;\n          } else {\n            // error, invalid fragmented record\n            c.error(c, {\n              message: 'Invalid fragmented record.',\n              send: true,\n              alert: {\n                level: tls.Alert.Level.fatal,\n                description:\n                  tls.Alert.Description.unexpected_message\n              }\n            });\n          }\n        }\n\n        // record is now ready\n        c.record.ready = true;\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Performs a handshake using the TLS Handshake Protocol, as a client.\n   *\n   * This method should only be called if the connection is in client mode.\n   *\n   * @param sessionId the session ID to use, null to start a new one.\n   */\n  c.handshake = function(sessionId) {\n    // error to call this in non-client mode\n    if(c.entity !== tls.ConnectionEnd.client) {\n      // not fatal error\n      c.error(c, {\n        message: 'Cannot initiate handshake as a server.',\n        fatal: false\n      });\n    } else if(c.handshaking) {\n      // handshake is already in progress, fail but not fatal error\n      c.error(c, {\n        message: 'Handshake already in progress.',\n        fatal: false\n      });\n    } else {\n      // clear fail flag on reuse\n      if(c.fail && !c.open && c.handshakes === 0) {\n        c.fail = false;\n      }\n\n      // now handshaking\n      c.handshaking = true;\n\n      // default to blank (new session)\n      sessionId = sessionId || '';\n\n      // if a session ID was specified, try to find it in the cache\n      var session = null;\n      if(sessionId.length > 0) {\n        if(c.sessionCache) {\n          session = c.sessionCache.getSession(sessionId);\n        }\n\n        // matching session not found in cache, clear session ID\n        if(session === null) {\n          sessionId = '';\n        }\n      }\n\n      // no session given, grab a session from the cache, if available\n      if(sessionId.length === 0 && c.sessionCache) {\n        session = c.sessionCache.getSession();\n        if(session !== null) {\n          sessionId = session.id;\n        }\n      }\n\n      // set up session\n      c.session = {\n        id: sessionId,\n        version: null,\n        cipherSuite: null,\n        compressionMethod: null,\n        serverCertificate: null,\n        certificateRequest: null,\n        clientCertificate: null,\n        sp: {},\n        md5: forge.md.md5.create(),\n        sha1: forge.md.sha1.create()\n      };\n\n      // use existing session information\n      if(session) {\n        // only update version on connection, session version not yet set\n        c.version = session.version;\n        c.session.sp = session.sp;\n      }\n\n      // generate new client random\n      c.session.sp.client_random = tls.createRandom().getBytes();\n\n      // connection now open\n      c.open = true;\n\n      // send hello\n      tls.queue(c, tls.createRecord(c, {\n        type: tls.ContentType.handshake,\n        data: tls.createClientHello(c)\n      }));\n      tls.flush(c);\n    }\n  };\n\n  /**\n   * Called when TLS protocol data has been received from somewhere and should\n   * be processed by the TLS engine.\n   *\n   * @param data the TLS protocol data, as a string, to process.\n   *\n   * @return 0 if the data could be processed, otherwise the number of bytes\n   *         required for data to be processed.\n   */\n  c.process = function(data) {\n    var rval = 0;\n\n    // buffer input data\n    if(data) {\n      c.input.putBytes(data);\n    }\n\n    // process next record if no failure, process will be called after\n    // each record is handled (since handling can be asynchronous)\n    if(!c.fail) {\n      // reset record if ready and now empty\n      if(c.record !== null &&\n        c.record.ready && c.record.fragment.isEmpty()) {\n        c.record = null;\n      }\n\n      // if there is no pending record, try to read record header\n      if(c.record === null) {\n        rval = _readRecordHeader(c);\n      }\n\n      // read the next record (if record not yet ready)\n      if(!c.fail && c.record !== null && !c.record.ready) {\n        rval = _readRecord(c);\n      }\n\n      // record ready to be handled, update engine state\n      if(!c.fail && c.record !== null && c.record.ready) {\n        _update(c, c.record);\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Requests that application data be packaged into a TLS record. The\n   * tlsDataReady handler will be called when the TLS record(s) have been\n   * prepared.\n   *\n   * @param data the application data, as a raw 'binary' encoded string, to\n   *          be sent; to send utf-16/utf-8 string data, use the return value\n   *          of util.encodeUtf8(str).\n   *\n   * @return true on success, false on failure.\n   */\n  c.prepare = function(data) {\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.application_data,\n      data: forge.util.createBuffer(data)\n    }));\n    return tls.flush(c);\n  };\n\n  /**\n   * Requests that a heartbeat request be packaged into a TLS record for\n   * transmission. The tlsDataReady handler will be called when TLS record(s)\n   * have been prepared.\n   *\n   * When a heartbeat response has been received, the heartbeatReceived\n   * handler will be called with the matching payload. This handler can\n   * be used to clear a retransmission timer, etc.\n   *\n   * @param payload the heartbeat data to send as the payload in the message.\n   * @param [payloadLength] the payload length to use, defaults to the\n   *          actual payload length.\n   *\n   * @return true on success, false on failure.\n   */\n  c.prepareHeartbeatRequest = function(payload, payloadLength) {\n    if(payload instanceof forge.util.ByteBuffer) {\n      payload = payload.bytes();\n    }\n    if(typeof payloadLength === 'undefined') {\n      payloadLength = payload.length;\n    }\n    c.expectedHeartbeatPayload = payload;\n    tls.queue(c, tls.createRecord(c, {\n      type: tls.ContentType.heartbeat,\n      data: tls.createHeartbeat(\n        tls.HeartbeatMessageType.heartbeat_request, payload, payloadLength)\n    }));\n    return tls.flush(c);\n  };\n\n  /**\n   * Closes the connection (sends a close_notify alert).\n   *\n   * @param clearFail true to clear the fail flag (default: true).\n   */\n  c.close = function(clearFail) {\n    // save session if connection didn't fail\n    if(!c.fail && c.sessionCache && c.session) {\n      // only need to preserve session ID, version, and security params\n      var session = {\n        id: c.session.id,\n        version: c.session.version,\n        sp: c.session.sp\n      };\n      session.sp.keys = null;\n      c.sessionCache.setSession(session.id, session);\n    }\n\n    if(c.open) {\n      // connection no longer open, clear input\n      c.open = false;\n      c.input.clear();\n\n      // if connected or handshaking, send an alert\n      if(c.isConnected || c.handshaking) {\n        c.isConnected = c.handshaking = false;\n\n        // send close_notify alert\n        tls.queue(c, tls.createAlert(c, {\n          level: tls.Alert.Level.warning,\n          description: tls.Alert.Description.close_notify\n        }));\n        tls.flush(c);\n      }\n\n      // call handler\n      c.closed(c);\n    }\n\n    // reset TLS connection, do not clear fail flag\n    c.reset(clearFail);\n  };\n\n  return c;\n};\n\n/* TLS API */\nmodule.exports = forge.tls = forge.tls || {};\n\n// expose non-functions\nfor(var key in tls) {\n  if(typeof tls[key] !== 'function') {\n    forge.tls[key] = tls[key];\n  }\n}\n\n// expose prf_tls1 for testing\nforge.tls.prf_tls1 = prf_TLS1;\n\n// expose sha1 hmac method\nforge.tls.hmac_sha1 = hmac_sha1;\n\n// expose session cache creation\nforge.tls.createSessionCache = tls.createSessionCache;\n\n/**\n * Creates a new TLS connection. This does not make any assumptions about the\n * transport layer that TLS is working on top of, ie: it does not assume there\n * is a TCP/IP connection or establish one. A TLS connection is totally\n * abstracted away from the layer is runs on top of, it merely establishes a\n * secure channel between a client\" and a \"server\".\n *\n * A TLS connection contains 4 connection states: pending read and write, and\n * current read and write.\n *\n * At initialization, the current read and write states will be null. Only once\n * the security parameters have been set and the keys have been generated can\n * the pending states be converted into current states. Current states will be\n * updated for each record processed.\n *\n * A custom certificate verify callback may be provided to check information\n * like the common name on the server's certificate. It will be called for\n * every certificate in the chain. It has the following signature:\n *\n * variable func(c, certs, index, preVerify)\n * Where:\n * c         The TLS connection\n * verified  Set to true if certificate was verified, otherwise the alert\n *           tls.Alert.Description for why the certificate failed.\n * depth     The current index in the chain, where 0 is the server's cert.\n * certs     The certificate chain, *NOTE* if the server was anonymous then\n *           the chain will be empty.\n *\n * The function returns true on success and on failure either the appropriate\n * tls.Alert.Description or an object with 'alert' set to the appropriate\n * tls.Alert.Description and 'message' set to a custom error message. If true\n * is not returned then the connection will abort using, in order of\n * availability, first the returned alert description, second the preVerify\n * alert description, and lastly the default 'bad_certificate'.\n *\n * There are three callbacks that can be used to make use of client-side\n * certificates where each takes the TLS connection as the first parameter:\n *\n * getCertificate(conn, hint)\n *   The second parameter is a hint as to which certificate should be\n *   returned. If the connection entity is a client, then the hint will be\n *   the CertificateRequest message from the server that is part of the\n *   TLS protocol. If the connection entity is a server, then it will be\n *   the servername list provided via an SNI extension the ClientHello, if\n *   one was provided (empty array if not). The hint can be examined to\n *   determine which certificate to use (advanced). Most implementations\n *   will just return a certificate. The return value must be a\n *   PEM-formatted certificate or an array of PEM-formatted certificates\n *   that constitute a certificate chain, with the first in the array/chain\n *   being the client's certificate.\n * getPrivateKey(conn, certificate)\n *   The second parameter is an forge.pki X.509 certificate object that\n *   is associated with the requested private key. The return value must\n *   be a PEM-formatted private key.\n * getSignature(conn, bytes, callback)\n *   This callback can be used instead of getPrivateKey if the private key\n *   is not directly accessible in javascript or should not be. For\n *   instance, a secure external web service could provide the signature\n *   in exchange for appropriate credentials. The second parameter is a\n *   string of bytes to be signed that are part of the TLS protocol. These\n *   bytes are used to verify that the private key for the previously\n *   provided client-side certificate is accessible to the client. The\n *   callback is a function that takes 2 parameters, the TLS connection\n *   and the RSA encrypted (signed) bytes as a string. This callback must\n *   be called once the signature is ready.\n *\n * @param options the options for this connection:\n *   server: true if the connection is server-side, false for client.\n *   sessionId: a session ID to reuse, null for a new connection.\n *   caStore: an array of certificates to trust.\n *   sessionCache: a session cache to use.\n *   cipherSuites: an optional array of cipher suites to use,\n *     see tls.CipherSuites.\n *   connected: function(conn) called when the first handshake completes.\n *   virtualHost: the virtual server name to use in a TLS SNI extension.\n *   verifyClient: true to require a client certificate in server mode,\n *     'optional' to request one, false not to (default: false).\n *   verify: a handler used to custom verify certificates in the chain.\n *   verifyOptions: an object with options for the certificate chain validation.\n *     See documentation of pki.verifyCertificateChain for possible options.\n *     verifyOptions.verify is ignored. If you wish to specify a verify handler\n *     use the verify key.\n *   getCertificate: an optional callback used to get a certificate or\n *     a chain of certificates (as an array).\n *   getPrivateKey: an optional callback used to get a private key.\n *   getSignature: an optional callback used to get a signature.\n *   tlsDataReady: function(conn) called when TLS protocol data has been\n *     prepared and is ready to be used (typically sent over a socket\n *     connection to its destination), read from conn.tlsData buffer.\n *   dataReady: function(conn) called when application data has\n *     been parsed from a TLS record and should be consumed by the\n *     application, read from conn.data buffer.\n *   closed: function(conn) called when the connection has been closed.\n *   error: function(conn, error) called when there was an error.\n *   deflate: function(inBytes) if provided, will deflate TLS records using\n *     the deflate algorithm if the server supports it.\n *   inflate: function(inBytes) if provided, will inflate TLS records using\n *     the deflate algorithm if the server supports it.\n *\n * @return the new TLS connection.\n */\nforge.tls.createConnection = tls.createConnection;\n","/**\n * Utility functions for web applications.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2018 Digital Bazaar, Inc.\n */\nvar forge = require('./forge');\nvar baseN = require('./baseN');\n\n/* Utilities API */\nvar util = module.exports = forge.util = forge.util || {};\n\n// define setImmediate and nextTick\n(function() {\n  // use native nextTick (unless we're in webpack)\n  // webpack (or better node-libs-browser polyfill) sets process.browser.\n  // this way we can detect webpack properly\n  if(typeof process !== 'undefined' && process.nextTick && !process.browser) {\n    util.nextTick = process.nextTick;\n    if(typeof setImmediate === 'function') {\n      util.setImmediate = setImmediate;\n    } else {\n      // polyfill setImmediate with nextTick, older versions of node\n      // (those w/o setImmediate) won't totally starve IO\n      util.setImmediate = util.nextTick;\n    }\n    return;\n  }\n\n  // polyfill nextTick with native setImmediate\n  if(typeof setImmediate === 'function') {\n    util.setImmediate = function() { return setImmediate.apply(undefined, arguments); };\n    util.nextTick = function(callback) {\n      return setImmediate(callback);\n    };\n    return;\n  }\n\n  /* Note: A polyfill upgrade pattern is used here to allow combining\n  polyfills. For example, MutationObserver is fast, but blocks UI updates,\n  so it needs to allow UI updates periodically, so it falls back on\n  postMessage or setTimeout. */\n\n  // polyfill with setTimeout\n  util.setImmediate = function(callback) {\n    setTimeout(callback, 0);\n  };\n\n  // upgrade polyfill to use postMessage\n  if(typeof window !== 'undefined' &&\n    typeof window.postMessage === 'function') {\n    var msg = 'forge.setImmediate';\n    var callbacks = [];\n    util.setImmediate = function(callback) {\n      callbacks.push(callback);\n      // only send message when one hasn't been sent in\n      // the current turn of the event loop\n      if(callbacks.length === 1) {\n        window.postMessage(msg, '*');\n      }\n    };\n    function handler(event) {\n      if(event.source === window && event.data === msg) {\n        event.stopPropagation();\n        var copy = callbacks.slice();\n        callbacks.length = 0;\n        copy.forEach(function(callback) {\n          callback();\n        });\n      }\n    }\n    window.addEventListener('message', handler, true);\n  }\n\n  // upgrade polyfill to use MutationObserver\n  if(typeof MutationObserver !== 'undefined') {\n    // polyfill with MutationObserver\n    var now = Date.now();\n    var attr = true;\n    var div = document.createElement('div');\n    var callbacks = [];\n    new MutationObserver(function() {\n      var copy = callbacks.slice();\n      callbacks.length = 0;\n      copy.forEach(function(callback) {\n        callback();\n      });\n    }).observe(div, {attributes: true});\n    var oldSetImmediate = util.setImmediate;\n    util.setImmediate = function(callback) {\n      if(Date.now() - now > 15) {\n        now = Date.now();\n        oldSetImmediate(callback);\n      } else {\n        callbacks.push(callback);\n        // only trigger observer when it hasn't been triggered in\n        // the current turn of the event loop\n        if(callbacks.length === 1) {\n          div.setAttribute('a', attr = !attr);\n        }\n      }\n    };\n  }\n\n  util.nextTick = util.setImmediate;\n})();\n\n// check if running under Node.js\nutil.isNodejs =\n  typeof process !== 'undefined' && process.versions && process.versions.node;\n\n\n// 'self' will also work in Web Workers (instance of WorkerGlobalScope) while\n// it will point to `window` in the main thread.\n// To remain compatible with older browsers, we fall back to 'window' if 'self'\n// is not available.\nutil.globalScope = (function() {\n  if(util.isNodejs) {\n    return global;\n  }\n\n  return typeof self === 'undefined' ? window : self;\n})();\n\n// define isArray\nutil.isArray = Array.isArray || function(x) {\n  return Object.prototype.toString.call(x) === '[object Array]';\n};\n\n// define isArrayBuffer\nutil.isArrayBuffer = function(x) {\n  return typeof ArrayBuffer !== 'undefined' && x instanceof ArrayBuffer;\n};\n\n// define isArrayBufferView\nutil.isArrayBufferView = function(x) {\n  return x && util.isArrayBuffer(x.buffer) && x.byteLength !== undefined;\n};\n\n/**\n * Ensure a bits param is 8, 16, 24, or 32. Used to validate input for\n * algorithms where bit manipulation, JavaScript limitations, and/or algorithm\n * design only allow for byte operations of a limited size.\n *\n * @param n number of bits.\n *\n * Throw Error if n invalid.\n */\nfunction _checkBitsParam(n) {\n  if(!(n === 8 || n === 16 || n === 24 || n === 32)) {\n    throw new Error('Only 8, 16, 24, or 32 bits supported: ' + n);\n  }\n}\n\n// TODO: set ByteBuffer to best available backing\nutil.ByteBuffer = ByteStringBuffer;\n\n/** Buffer w/BinaryString backing */\n\n/**\n * Constructor for a binary string backed byte buffer.\n *\n * @param [b] the bytes to wrap (either encoded as string, one byte per\n *          character, or as an ArrayBuffer or Typed Array).\n */\nfunction ByteStringBuffer(b) {\n  // TODO: update to match DataBuffer API\n\n  // the data in this buffer\n  this.data = '';\n  // the pointer for reading from this buffer\n  this.read = 0;\n\n  if(typeof b === 'string') {\n    this.data = b;\n  } else if(util.isArrayBuffer(b) || util.isArrayBufferView(b)) {\n    if(typeof Buffer !== 'undefined' && b instanceof Buffer) {\n      this.data = b.toString('binary');\n    } else {\n      // convert native buffer to forge buffer\n      // FIXME: support native buffers internally instead\n      var arr = new Uint8Array(b);\n      try {\n        this.data = String.fromCharCode.apply(null, arr);\n      } catch(e) {\n        for(var i = 0; i < arr.length; ++i) {\n          this.putByte(arr[i]);\n        }\n      }\n    }\n  } else if(b instanceof ByteStringBuffer ||\n    (typeof b === 'object' && typeof b.data === 'string' &&\n    typeof b.read === 'number')) {\n    // copy existing buffer\n    this.data = b.data;\n    this.read = b.read;\n  }\n\n  // used for v8 optimization\n  this._constructedStringLength = 0;\n}\nutil.ByteStringBuffer = ByteStringBuffer;\n\n/* Note: This is an optimization for V8-based browsers. When V8 concatenates\n  a string, the strings are only joined logically using a \"cons string\" or\n  \"constructed/concatenated string\". These containers keep references to one\n  another and can result in very large memory usage. For example, if a 2MB\n  string is constructed by concatenating 4 bytes together at a time, the\n  memory usage will be ~44MB; so ~22x increase. The strings are only joined\n  together when an operation requiring their joining takes place, such as\n  substr(). This function is called when adding data to this buffer to ensure\n  these types of strings are periodically joined to reduce the memory\n  footprint. */\nvar _MAX_CONSTRUCTED_STRING_LENGTH = 4096;\nutil.ByteStringBuffer.prototype._optimizeConstructedString = function(x) {\n  this._constructedStringLength += x;\n  if(this._constructedStringLength > _MAX_CONSTRUCTED_STRING_LENGTH) {\n    // this substr() should cause the constructed string to join\n    this.data.substr(0, 1);\n    this._constructedStringLength = 0;\n  }\n};\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nutil.ByteStringBuffer.prototype.length = function() {\n  return this.data.length - this.read;\n};\n\n/**\n * Gets whether or not this buffer is empty.\n *\n * @return true if this buffer is empty, false if not.\n */\nutil.ByteStringBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\n/**\n * Puts a byte in this buffer.\n *\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putByte = function(b) {\n  return this.putBytes(String.fromCharCode(b));\n};\n\n/**\n * Puts a byte in this buffer N times.\n *\n * @param b the byte to put.\n * @param n the number of bytes of value b to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.fillWithByte = function(b, n) {\n  b = String.fromCharCode(b);\n  var d = this.data;\n  while(n > 0) {\n    if(n & 1) {\n      d += b;\n    }\n    n >>>= 1;\n    if(n > 0) {\n      b += b;\n    }\n  }\n  this.data = d;\n  this._optimizeConstructedString(n);\n  return this;\n};\n\n/**\n * Puts bytes in this buffer.\n *\n * @param bytes the bytes (as a binary encoded string) to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putBytes = function(bytes) {\n  this.data += bytes;\n  this._optimizeConstructedString(bytes.length);\n  return this;\n};\n\n/**\n * Puts a UTF-16 encoded string into this buffer.\n *\n * @param str the string to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putString = function(str) {\n  return this.putBytes(util.encodeUtf8(str));\n};\n\n/**\n * Puts a 16-bit integer in this buffer in big-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt16 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 24-bit integer in this buffer in big-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt24 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 32-bit integer in this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt32 = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n/**\n * Puts a 16-bit integer in this buffer in little-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt16Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF));\n};\n\n/**\n * Puts a 24-bit integer in this buffer in little-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt24Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF));\n};\n\n/**\n * Puts a 32-bit integer in this buffer in little-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt32Le = function(i) {\n  return this.putBytes(\n    String.fromCharCode(i & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 24 & 0xFF));\n};\n\n/**\n * Puts an n-bit integer in this buffer in big-endian order.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putInt = function(i, n) {\n  _checkBitsParam(n);\n  var bytes = '';\n  do {\n    n -= 8;\n    bytes += String.fromCharCode((i >> n) & 0xFF);\n  } while(n > 0);\n  return this.putBytes(bytes);\n};\n\n/**\n * Puts a signed n-bit integer in this buffer in big-endian order. Two's\n * complement representation is used.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putSignedInt = function(i, n) {\n  // putInt checks n\n  if(i < 0) {\n    i += 2 << (n - 1);\n  }\n  return this.putInt(i, n);\n};\n\n/**\n * Puts the given buffer into this buffer.\n *\n * @param buffer the buffer to put into this one.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.putBuffer = function(buffer) {\n  return this.putBytes(buffer.getBytes());\n};\n\n/**\n * Gets a byte from this buffer and advances the read pointer by 1.\n *\n * @return the byte.\n */\nutil.ByteStringBuffer.prototype.getByte = function() {\n  return this.data.charCodeAt(this.read++);\n};\n\n/**\n * Gets a uint16 from this buffer in big-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.ByteStringBuffer.prototype.getInt16 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 8 ^\n    this.data.charCodeAt(this.read + 1));\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in big-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.ByteStringBuffer.prototype.getInt24 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 16 ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2));\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in big-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.ByteStringBuffer.prototype.getInt32 = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) << 24 ^\n    this.data.charCodeAt(this.read + 1) << 16 ^\n    this.data.charCodeAt(this.read + 2) << 8 ^\n    this.data.charCodeAt(this.read + 3));\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets a uint16 from this buffer in little-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.ByteStringBuffer.prototype.getInt16Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in little-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.ByteStringBuffer.prototype.getInt24Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2) << 16);\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in little-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.ByteStringBuffer.prototype.getInt32Le = function() {\n  var rval = (\n    this.data.charCodeAt(this.read) ^\n    this.data.charCodeAt(this.read + 1) << 8 ^\n    this.data.charCodeAt(this.read + 2) << 16 ^\n    this.data.charCodeAt(this.read + 3) << 24);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets an n-bit integer from this buffer in big-endian order and advances the\n * read pointer by ceil(n/8).\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.ByteStringBuffer.prototype.getInt = function(n) {\n  _checkBitsParam(n);\n  var rval = 0;\n  do {\n    // TODO: Use (rval * 0x100) if adding support for 33 to 53 bits.\n    rval = (rval << 8) + this.data.charCodeAt(this.read++);\n    n -= 8;\n  } while(n > 0);\n  return rval;\n};\n\n/**\n * Gets a signed n-bit integer from this buffer in big-endian order, using\n * two's complement, and advances the read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.ByteStringBuffer.prototype.getSignedInt = function(n) {\n  // getInt checks n\n  var x = this.getInt(n);\n  var max = 2 << (n - 2);\n  if(x >= max) {\n    x -= max << 1;\n  }\n  return x;\n};\n\n/**\n * Reads bytes out as a binary encoded string and clears them from the\n * buffer. Note that the resulting string is binary encoded (in node.js this\n * encoding is referred to as `binary`, it is *not* `utf8`).\n *\n * @param count the number of bytes to read, undefined or null for all.\n *\n * @return a binary encoded string of bytes.\n */\nutil.ByteStringBuffer.prototype.getBytes = function(count) {\n  var rval;\n  if(count) {\n    // read count bytes\n    count = Math.min(this.length(), count);\n    rval = this.data.slice(this.read, this.read + count);\n    this.read += count;\n  } else if(count === 0) {\n    rval = '';\n  } else {\n    // read all bytes, optimize to only copy when needed\n    rval = (this.read === 0) ? this.data : this.data.slice(this.read);\n    this.clear();\n  }\n  return rval;\n};\n\n/**\n * Gets a binary encoded string of the bytes from this buffer without\n * modifying the read pointer.\n *\n * @param count the number of bytes to get, omit to get all.\n *\n * @return a string full of binary encoded characters.\n */\nutil.ByteStringBuffer.prototype.bytes = function(count) {\n  return (typeof(count) === 'undefined' ?\n    this.data.slice(this.read) :\n    this.data.slice(this.read, this.read + count));\n};\n\n/**\n * Gets a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n *\n * @return the byte.\n */\nutil.ByteStringBuffer.prototype.at = function(i) {\n  return this.data.charCodeAt(this.read + i);\n};\n\n/**\n * Puts a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.setAt = function(i, b) {\n  this.data = this.data.substr(0, this.read + i) +\n    String.fromCharCode(b) +\n    this.data.substr(this.read + i + 1);\n  return this;\n};\n\n/**\n * Gets the last byte without modifying the read pointer.\n *\n * @return the last byte.\n */\nutil.ByteStringBuffer.prototype.last = function() {\n  return this.data.charCodeAt(this.data.length - 1);\n};\n\n/**\n * Creates a copy of this buffer.\n *\n * @return the copy.\n */\nutil.ByteStringBuffer.prototype.copy = function() {\n  var c = util.createBuffer(this.data);\n  c.read = this.read;\n  return c;\n};\n\n/**\n * Compacts this buffer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.compact = function() {\n  if(this.read > 0) {\n    this.data = this.data.slice(this.read);\n    this.read = 0;\n  }\n  return this;\n};\n\n/**\n * Clears this buffer.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.clear = function() {\n  this.data = '';\n  this.read = 0;\n  return this;\n};\n\n/**\n * Shortens this buffer by triming bytes off of the end of this buffer.\n *\n * @param count the number of bytes to trim off.\n *\n * @return this buffer.\n */\nutil.ByteStringBuffer.prototype.truncate = function(count) {\n  var len = Math.max(0, this.length() - count);\n  this.data = this.data.substr(this.read, len);\n  this.read = 0;\n  return this;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nutil.ByteStringBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.length; ++i) {\n    var b = this.data.charCodeAt(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n/**\n * Converts this buffer to a UTF-16 string (standard JavaScript string).\n *\n * @return a UTF-16 string.\n */\nutil.ByteStringBuffer.prototype.toString = function() {\n  return util.decodeUtf8(this.bytes());\n};\n\n/** End Buffer w/BinaryString backing */\n\n/** Buffer w/UInt8Array backing */\n\n/**\n * FIXME: Experimental. Do not use yet.\n *\n * Constructor for an ArrayBuffer-backed byte buffer.\n *\n * The buffer may be constructed from a string, an ArrayBuffer, DataView, or a\n * TypedArray.\n *\n * If a string is given, its encoding should be provided as an option,\n * otherwise it will default to 'binary'. A 'binary' string is encoded such\n * that each character is one byte in length and size.\n *\n * If an ArrayBuffer, DataView, or TypedArray is given, it will be used\n * *directly* without any copying. Note that, if a write to the buffer requires\n * more space, the buffer will allocate a new backing ArrayBuffer to\n * accommodate. The starting read and write offsets for the buffer may be\n * given as options.\n *\n * @param [b] the initial bytes for this buffer.\n * @param options the options to use:\n *          [readOffset] the starting read offset to use (default: 0).\n *          [writeOffset] the starting write offset to use (default: the\n *            length of the first parameter).\n *          [growSize] the minimum amount, in bytes, to grow the buffer by to\n *            accommodate writes (default: 1024).\n *          [encoding] the encoding ('binary', 'utf8', 'utf16', 'hex') for the\n *            first parameter, if it is a string (default: 'binary').\n */\nfunction DataBuffer(b, options) {\n  // default options\n  options = options || {};\n\n  // pointers for read from/write to buffer\n  this.read = options.readOffset || 0;\n  this.growSize = options.growSize || 1024;\n\n  var isArrayBuffer = util.isArrayBuffer(b);\n  var isArrayBufferView = util.isArrayBufferView(b);\n  if(isArrayBuffer || isArrayBufferView) {\n    // use ArrayBuffer directly\n    if(isArrayBuffer) {\n      this.data = new DataView(b);\n    } else {\n      // TODO: adjust read/write offset based on the type of view\n      // or specify that this must be done in the options ... that the\n      // offsets are byte-based\n      this.data = new DataView(b.buffer, b.byteOffset, b.byteLength);\n    }\n    this.write = ('writeOffset' in options ?\n      options.writeOffset : this.data.byteLength);\n    return;\n  }\n\n  // initialize to empty array buffer and add any given bytes using putBytes\n  this.data = new DataView(new ArrayBuffer(0));\n  this.write = 0;\n\n  if(b !== null && b !== undefined) {\n    this.putBytes(b);\n  }\n\n  if('writeOffset' in options) {\n    this.write = options.writeOffset;\n  }\n}\nutil.DataBuffer = DataBuffer;\n\n/**\n * Gets the number of bytes in this buffer.\n *\n * @return the number of bytes in this buffer.\n */\nutil.DataBuffer.prototype.length = function() {\n  return this.write - this.read;\n};\n\n/**\n * Gets whether or not this buffer is empty.\n *\n * @return true if this buffer is empty, false if not.\n */\nutil.DataBuffer.prototype.isEmpty = function() {\n  return this.length() <= 0;\n};\n\n/**\n * Ensures this buffer has enough empty space to accommodate the given number\n * of bytes. An optional parameter may be given that indicates a minimum\n * amount to grow the buffer if necessary. If the parameter is not given,\n * the buffer will be grown by some previously-specified default amount\n * or heuristic.\n *\n * @param amount the number of bytes to accommodate.\n * @param [growSize] the minimum amount, in bytes, to grow the buffer by if\n *          necessary.\n */\nutil.DataBuffer.prototype.accommodate = function(amount, growSize) {\n  if(this.length() >= amount) {\n    return this;\n  }\n  growSize = Math.max(growSize || this.growSize, amount);\n\n  // grow buffer\n  var src = new Uint8Array(\n    this.data.buffer, this.data.byteOffset, this.data.byteLength);\n  var dst = new Uint8Array(this.length() + growSize);\n  dst.set(src);\n  this.data = new DataView(dst.buffer);\n\n  return this;\n};\n\n/**\n * Puts a byte in this buffer.\n *\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putByte = function(b) {\n  this.accommodate(1);\n  this.data.setUint8(this.write++, b);\n  return this;\n};\n\n/**\n * Puts a byte in this buffer N times.\n *\n * @param b the byte to put.\n * @param n the number of bytes of value b to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.fillWithByte = function(b, n) {\n  this.accommodate(n);\n  for(var i = 0; i < n; ++i) {\n    this.data.setUint8(b);\n  }\n  return this;\n};\n\n/**\n * Puts bytes in this buffer. The bytes may be given as a string, an\n * ArrayBuffer, a DataView, or a TypedArray.\n *\n * @param bytes the bytes to put.\n * @param [encoding] the encoding for the first parameter ('binary', 'utf8',\n *          'utf16', 'hex'), if it is a string (default: 'binary').\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putBytes = function(bytes, encoding) {\n  if(util.isArrayBufferView(bytes)) {\n    var src = new Uint8Array(bytes.buffer, bytes.byteOffset, bytes.byteLength);\n    var len = src.byteLength - src.byteOffset;\n    this.accommodate(len);\n    var dst = new Uint8Array(this.data.buffer, this.write);\n    dst.set(src);\n    this.write += len;\n    return this;\n  }\n\n  if(util.isArrayBuffer(bytes)) {\n    var src = new Uint8Array(bytes);\n    this.accommodate(src.byteLength);\n    var dst = new Uint8Array(this.data.buffer);\n    dst.set(src, this.write);\n    this.write += src.byteLength;\n    return this;\n  }\n\n  // bytes is a util.DataBuffer or equivalent\n  if(bytes instanceof util.DataBuffer ||\n    (typeof bytes === 'object' &&\n    typeof bytes.read === 'number' && typeof bytes.write === 'number' &&\n    util.isArrayBufferView(bytes.data))) {\n    var src = new Uint8Array(bytes.data.byteLength, bytes.read, bytes.length());\n    this.accommodate(src.byteLength);\n    var dst = new Uint8Array(bytes.data.byteLength, this.write);\n    dst.set(src);\n    this.write += src.byteLength;\n    return this;\n  }\n\n  if(bytes instanceof util.ByteStringBuffer) {\n    // copy binary string and process as the same as a string parameter below\n    bytes = bytes.data;\n    encoding = 'binary';\n  }\n\n  // string conversion\n  encoding = encoding || 'binary';\n  if(typeof bytes === 'string') {\n    var view;\n\n    // decode from string\n    if(encoding === 'hex') {\n      this.accommodate(Math.ceil(bytes.length / 2));\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.hex.decode(bytes, view, this.write);\n      return this;\n    }\n    if(encoding === 'base64') {\n      this.accommodate(Math.ceil(bytes.length / 4) * 3);\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.base64.decode(bytes, view, this.write);\n      return this;\n    }\n\n    // encode text as UTF-8 bytes\n    if(encoding === 'utf8') {\n      // encode as UTF-8 then decode string as raw binary\n      bytes = util.encodeUtf8(bytes);\n      encoding = 'binary';\n    }\n\n    // decode string as raw binary\n    if(encoding === 'binary' || encoding === 'raw') {\n      // one byte per character\n      this.accommodate(bytes.length);\n      view = new Uint8Array(this.data.buffer, this.write);\n      this.write += util.binary.raw.decode(view);\n      return this;\n    }\n\n    // encode text as UTF-16 bytes\n    if(encoding === 'utf16') {\n      // two bytes per character\n      this.accommodate(bytes.length * 2);\n      view = new Uint16Array(this.data.buffer, this.write);\n      this.write += util.text.utf16.encode(view);\n      return this;\n    }\n\n    throw new Error('Invalid encoding: ' + encoding);\n  }\n\n  throw Error('Invalid parameter: ' + bytes);\n};\n\n/**\n * Puts the given buffer into this buffer.\n *\n * @param buffer the buffer to put into this one.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putBuffer = function(buffer) {\n  this.putBytes(buffer);\n  buffer.clear();\n  return this;\n};\n\n/**\n * Puts a string into this buffer.\n *\n * @param str the string to put.\n * @param [encoding] the encoding for the string (default: 'utf16').\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putString = function(str) {\n  return this.putBytes(str, 'utf16');\n};\n\n/**\n * Puts a 16-bit integer in this buffer in big-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt16 = function(i) {\n  this.accommodate(2);\n  this.data.setInt16(this.write, i);\n  this.write += 2;\n  return this;\n};\n\n/**\n * Puts a 24-bit integer in this buffer in big-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt24 = function(i) {\n  this.accommodate(3);\n  this.data.setInt16(this.write, i >> 8 & 0xFFFF);\n  this.data.setInt8(this.write, i >> 16 & 0xFF);\n  this.write += 3;\n  return this;\n};\n\n/**\n * Puts a 32-bit integer in this buffer in big-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt32 = function(i) {\n  this.accommodate(4);\n  this.data.setInt32(this.write, i);\n  this.write += 4;\n  return this;\n};\n\n/**\n * Puts a 16-bit integer in this buffer in little-endian order.\n *\n * @param i the 16-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt16Le = function(i) {\n  this.accommodate(2);\n  this.data.setInt16(this.write, i, true);\n  this.write += 2;\n  return this;\n};\n\n/**\n * Puts a 24-bit integer in this buffer in little-endian order.\n *\n * @param i the 24-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt24Le = function(i) {\n  this.accommodate(3);\n  this.data.setInt8(this.write, i >> 16 & 0xFF);\n  this.data.setInt16(this.write, i >> 8 & 0xFFFF, true);\n  this.write += 3;\n  return this;\n};\n\n/**\n * Puts a 32-bit integer in this buffer in little-endian order.\n *\n * @param i the 32-bit integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt32Le = function(i) {\n  this.accommodate(4);\n  this.data.setInt32(this.write, i, true);\n  this.write += 4;\n  return this;\n};\n\n/**\n * Puts an n-bit integer in this buffer in big-endian order.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putInt = function(i, n) {\n  _checkBitsParam(n);\n  this.accommodate(n / 8);\n  do {\n    n -= 8;\n    this.data.setInt8(this.write++, (i >> n) & 0xFF);\n  } while(n > 0);\n  return this;\n};\n\n/**\n * Puts a signed n-bit integer in this buffer in big-endian order. Two's\n * complement representation is used.\n *\n * @param i the n-bit integer.\n * @param n the number of bits in the integer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.putSignedInt = function(i, n) {\n  _checkBitsParam(n);\n  this.accommodate(n / 8);\n  if(i < 0) {\n    i += 2 << (n - 1);\n  }\n  return this.putInt(i, n);\n};\n\n/**\n * Gets a byte from this buffer and advances the read pointer by 1.\n *\n * @return the byte.\n */\nutil.DataBuffer.prototype.getByte = function() {\n  return this.data.getInt8(this.read++);\n};\n\n/**\n * Gets a uint16 from this buffer in big-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.DataBuffer.prototype.getInt16 = function() {\n  var rval = this.data.getInt16(this.read);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in big-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.DataBuffer.prototype.getInt24 = function() {\n  var rval = (\n    this.data.getInt16(this.read) << 8 ^\n    this.data.getInt8(this.read + 2));\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in big-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.DataBuffer.prototype.getInt32 = function() {\n  var rval = this.data.getInt32(this.read);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets a uint16 from this buffer in little-endian order and advances the read\n * pointer by 2.\n *\n * @return the uint16.\n */\nutil.DataBuffer.prototype.getInt16Le = function() {\n  var rval = this.data.getInt16(this.read, true);\n  this.read += 2;\n  return rval;\n};\n\n/**\n * Gets a uint24 from this buffer in little-endian order and advances the read\n * pointer by 3.\n *\n * @return the uint24.\n */\nutil.DataBuffer.prototype.getInt24Le = function() {\n  var rval = (\n    this.data.getInt8(this.read) ^\n    this.data.getInt16(this.read + 1, true) << 8);\n  this.read += 3;\n  return rval;\n};\n\n/**\n * Gets a uint32 from this buffer in little-endian order and advances the read\n * pointer by 4.\n *\n * @return the word.\n */\nutil.DataBuffer.prototype.getInt32Le = function() {\n  var rval = this.data.getInt32(this.read, true);\n  this.read += 4;\n  return rval;\n};\n\n/**\n * Gets an n-bit integer from this buffer in big-endian order and advances the\n * read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.DataBuffer.prototype.getInt = function(n) {\n  _checkBitsParam(n);\n  var rval = 0;\n  do {\n    // TODO: Use (rval * 0x100) if adding support for 33 to 53 bits.\n    rval = (rval << 8) + this.data.getInt8(this.read++);\n    n -= 8;\n  } while(n > 0);\n  return rval;\n};\n\n/**\n * Gets a signed n-bit integer from this buffer in big-endian order, using\n * two's complement, and advances the read pointer by n/8.\n *\n * @param n the number of bits in the integer (8, 16, 24, or 32).\n *\n * @return the integer.\n */\nutil.DataBuffer.prototype.getSignedInt = function(n) {\n  // getInt checks n\n  var x = this.getInt(n);\n  var max = 2 << (n - 2);\n  if(x >= max) {\n    x -= max << 1;\n  }\n  return x;\n};\n\n/**\n * Reads bytes out as a binary encoded string and clears them from the\n * buffer.\n *\n * @param count the number of bytes to read, undefined or null for all.\n *\n * @return a binary encoded string of bytes.\n */\nutil.DataBuffer.prototype.getBytes = function(count) {\n  // TODO: deprecate this method, it is poorly named and\n  // this.toString('binary') replaces it\n  // add a toTypedArray()/toArrayBuffer() function\n  var rval;\n  if(count) {\n    // read count bytes\n    count = Math.min(this.length(), count);\n    rval = this.data.slice(this.read, this.read + count);\n    this.read += count;\n  } else if(count === 0) {\n    rval = '';\n  } else {\n    // read all bytes, optimize to only copy when needed\n    rval = (this.read === 0) ? this.data : this.data.slice(this.read);\n    this.clear();\n  }\n  return rval;\n};\n\n/**\n * Gets a binary encoded string of the bytes from this buffer without\n * modifying the read pointer.\n *\n * @param count the number of bytes to get, omit to get all.\n *\n * @return a string full of binary encoded characters.\n */\nutil.DataBuffer.prototype.bytes = function(count) {\n  // TODO: deprecate this method, it is poorly named, add \"getString()\"\n  return (typeof(count) === 'undefined' ?\n    this.data.slice(this.read) :\n    this.data.slice(this.read, this.read + count));\n};\n\n/**\n * Gets a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n *\n * @return the byte.\n */\nutil.DataBuffer.prototype.at = function(i) {\n  return this.data.getUint8(this.read + i);\n};\n\n/**\n * Puts a byte at the given index without modifying the read pointer.\n *\n * @param i the byte index.\n * @param b the byte to put.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.setAt = function(i, b) {\n  this.data.setUint8(i, b);\n  return this;\n};\n\n/**\n * Gets the last byte without modifying the read pointer.\n *\n * @return the last byte.\n */\nutil.DataBuffer.prototype.last = function() {\n  return this.data.getUint8(this.write - 1);\n};\n\n/**\n * Creates a copy of this buffer.\n *\n * @return the copy.\n */\nutil.DataBuffer.prototype.copy = function() {\n  return new util.DataBuffer(this);\n};\n\n/**\n * Compacts this buffer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.compact = function() {\n  if(this.read > 0) {\n    var src = new Uint8Array(this.data.buffer, this.read);\n    var dst = new Uint8Array(src.byteLength);\n    dst.set(src);\n    this.data = new DataView(dst);\n    this.write -= this.read;\n    this.read = 0;\n  }\n  return this;\n};\n\n/**\n * Clears this buffer.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.clear = function() {\n  this.data = new DataView(new ArrayBuffer(0));\n  this.read = this.write = 0;\n  return this;\n};\n\n/**\n * Shortens this buffer by triming bytes off of the end of this buffer.\n *\n * @param count the number of bytes to trim off.\n *\n * @return this buffer.\n */\nutil.DataBuffer.prototype.truncate = function(count) {\n  this.write = Math.max(0, this.length() - count);\n  this.read = Math.min(this.read, this.write);\n  return this;\n};\n\n/**\n * Converts this buffer to a hexadecimal string.\n *\n * @return a hexadecimal string.\n */\nutil.DataBuffer.prototype.toHex = function() {\n  var rval = '';\n  for(var i = this.read; i < this.data.byteLength; ++i) {\n    var b = this.data.getUint8(i);\n    if(b < 16) {\n      rval += '0';\n    }\n    rval += b.toString(16);\n  }\n  return rval;\n};\n\n/**\n * Converts this buffer to a string, using the given encoding. If no\n * encoding is given, 'utf8' (UTF-8) is used.\n *\n * @param [encoding] the encoding to use: 'binary', 'utf8', 'utf16', 'hex',\n *          'base64' (default: 'utf8').\n *\n * @return a string representation of the bytes in this buffer.\n */\nutil.DataBuffer.prototype.toString = function(encoding) {\n  var view = new Uint8Array(this.data, this.read, this.length());\n  encoding = encoding || 'utf8';\n\n  // encode to string\n  if(encoding === 'binary' || encoding === 'raw') {\n    return util.binary.raw.encode(view);\n  }\n  if(encoding === 'hex') {\n    return util.binary.hex.encode(view);\n  }\n  if(encoding === 'base64') {\n    return util.binary.base64.encode(view);\n  }\n\n  // decode to text\n  if(encoding === 'utf8') {\n    return util.text.utf8.decode(view);\n  }\n  if(encoding === 'utf16') {\n    return util.text.utf16.decode(view);\n  }\n\n  throw new Error('Invalid encoding: ' + encoding);\n};\n\n/** End Buffer w/UInt8Array backing */\n\n/**\n * Creates a buffer that stores bytes. A value may be given to populate the\n * buffer with data. This value can either be string of encoded bytes or a\n * regular string of characters. When passing a string of binary encoded\n * bytes, the encoding `raw` should be given. This is also the default. When\n * passing a string of characters, the encoding `utf8` should be given.\n *\n * @param [input] a string with encoded bytes to store in the buffer.\n * @param [encoding] (default: 'raw', other: 'utf8').\n */\nutil.createBuffer = function(input, encoding) {\n  // TODO: deprecate, use new ByteBuffer() instead\n  encoding = encoding || 'raw';\n  if(input !== undefined && encoding === 'utf8') {\n    input = util.encodeUtf8(input);\n  }\n  return new util.ByteBuffer(input);\n};\n\n/**\n * Fills a string with a particular value. If you want the string to be a byte\n * string, pass in String.fromCharCode(theByte).\n *\n * @param c the character to fill the string with, use String.fromCharCode\n *          to fill the string with a byte value.\n * @param n the number of characters of value c to fill with.\n *\n * @return the filled string.\n */\nutil.fillString = function(c, n) {\n  var s = '';\n  while(n > 0) {\n    if(n & 1) {\n      s += c;\n    }\n    n >>>= 1;\n    if(n > 0) {\n      c += c;\n    }\n  }\n  return s;\n};\n\n/**\n * Performs a per byte XOR between two byte strings and returns the result as a\n * string of bytes.\n *\n * @param s1 first string of bytes.\n * @param s2 second string of bytes.\n * @param n the number of bytes to XOR.\n *\n * @return the XOR'd result.\n */\nutil.xorBytes = function(s1, s2, n) {\n  var s3 = '';\n  var b = '';\n  var t = '';\n  var i = 0;\n  var c = 0;\n  for(; n > 0; --n, ++i) {\n    b = s1.charCodeAt(i) ^ s2.charCodeAt(i);\n    if(c >= 10) {\n      s3 += t;\n      t = '';\n      c = 0;\n    }\n    t += String.fromCharCode(b);\n    ++c;\n  }\n  s3 += t;\n  return s3;\n};\n\n/**\n * Converts a hex string into a 'binary' encoded string of bytes.\n *\n * @param hex the hexadecimal string to convert.\n *\n * @return the binary-encoded string of bytes.\n */\nutil.hexToBytes = function(hex) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.hex.decode instead.\"\n  var rval = '';\n  var i = 0;\n  if(hex.length & 1 == 1) {\n    // odd number of characters, convert first character alone\n    i = 1;\n    rval += String.fromCharCode(parseInt(hex[0], 16));\n  }\n  // convert 2 characters (1 byte) at a time\n  for(; i < hex.length; i += 2) {\n    rval += String.fromCharCode(parseInt(hex.substr(i, 2), 16));\n  }\n  return rval;\n};\n\n/**\n * Converts a 'binary' encoded string of bytes to hex.\n *\n * @param bytes the byte string to convert.\n *\n * @return the string of hexadecimal characters.\n */\nutil.bytesToHex = function(bytes) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.hex.encode instead.\"\n  return util.createBuffer(bytes).toHex();\n};\n\n/**\n * Converts an 32-bit integer to 4-big-endian byte string.\n *\n * @param i the integer.\n *\n * @return the byte string.\n */\nutil.int32ToBytes = function(i) {\n  return (\n    String.fromCharCode(i >> 24 & 0xFF) +\n    String.fromCharCode(i >> 16 & 0xFF) +\n    String.fromCharCode(i >> 8 & 0xFF) +\n    String.fromCharCode(i & 0xFF));\n};\n\n// base64 characters, reverse mapping\nvar _base64 =\n  'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\nvar _base64Idx = [\n/*43 -43 = 0*/\n/*'+',  1,  2,  3,'/' */\n   62, -1, -1, -1, 63,\n\n/*'0','1','2','3','4','5','6','7','8','9' */\n   52, 53, 54, 55, 56, 57, 58, 59, 60, 61,\n\n/*15, 16, 17,'=', 19, 20, 21 */\n  -1, -1, -1, 64, -1, -1, -1,\n\n/*65 - 43 = 22*/\n/*'A','B','C','D','E','F','G','H','I','J','K','L','M', */\n   0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12,\n\n/*'N','O','P','Q','R','S','T','U','V','W','X','Y','Z' */\n   13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,\n\n/*91 - 43 = 48 */\n/*48, 49, 50, 51, 52, 53 */\n  -1, -1, -1, -1, -1, -1,\n\n/*97 - 43 = 54*/\n/*'a','b','c','d','e','f','g','h','i','j','k','l','m' */\n   26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\n\n/*'n','o','p','q','r','s','t','u','v','w','x','y','z' */\n   39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51\n];\n\n// base58 characters (Bitcoin alphabet)\nvar _base58 = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz';\n\n/**\n * Base64 encodes a 'binary' encoded string of bytes.\n *\n * @param input the binary encoded string of bytes to base64-encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the base64-encoded output.\n */\nutil.encode64 = function(input, maxline) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.base64.encode instead.\"\n  var line = '';\n  var output = '';\n  var chr1, chr2, chr3;\n  var i = 0;\n  while(i < input.length) {\n    chr1 = input.charCodeAt(i++);\n    chr2 = input.charCodeAt(i++);\n    chr3 = input.charCodeAt(i++);\n\n    // encode 4 character group\n    line += _base64.charAt(chr1 >> 2);\n    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));\n    if(isNaN(chr2)) {\n      line += '==';\n    } else {\n      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));\n      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);\n    }\n\n    if(maxline && line.length > maxline) {\n      output += line.substr(0, maxline) + '\\r\\n';\n      line = line.substr(maxline);\n    }\n  }\n  output += line;\n  return output;\n};\n\n/**\n * Base64 decodes a string into a 'binary' encoded string of bytes.\n *\n * @param input the base64-encoded input.\n *\n * @return the binary encoded string.\n */\nutil.decode64 = function(input) {\n  // TODO: deprecate: \"Deprecated. Use util.binary.base64.decode instead.\"\n\n  // remove all non-base64 characters\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  var output = '';\n  var enc1, enc2, enc3, enc4;\n  var i = 0;\n\n  while(i < input.length) {\n    enc1 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc2 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc3 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc4 = _base64Idx[input.charCodeAt(i++) - 43];\n\n    output += String.fromCharCode((enc1 << 2) | (enc2 >> 4));\n    if(enc3 !== 64) {\n      // decoded at least 2 bytes\n      output += String.fromCharCode(((enc2 & 15) << 4) | (enc3 >> 2));\n      if(enc4 !== 64) {\n        // decoded 3 bytes\n        output += String.fromCharCode(((enc3 & 3) << 6) | enc4);\n      }\n    }\n  }\n\n  return output;\n};\n\n/**\n * Encodes the given string of characters (a standard JavaScript\n * string) as a binary encoded string where the bytes represent\n * a UTF-8 encoded string of characters. Non-ASCII characters will be\n * encoded as multiple bytes according to UTF-8.\n *\n * @param str a standard string of characters to encode.\n *\n * @return the binary encoded string.\n */\nutil.encodeUtf8 = function(str) {\n  return unescape(encodeURIComponent(str));\n};\n\n/**\n * Decodes a binary encoded string that contains bytes that\n * represent a UTF-8 encoded string of characters -- into a\n * string of characters (a standard JavaScript string).\n *\n * @param str the binary encoded string to decode.\n *\n * @return the resulting standard string of characters.\n */\nutil.decodeUtf8 = function(str) {\n  return decodeURIComponent(escape(str));\n};\n\n// binary encoding/decoding tools\n// FIXME: Experimental. Do not use yet.\nutil.binary = {\n  raw: {},\n  hex: {},\n  base64: {},\n  base58: {},\n  baseN : {\n    encode: baseN.encode,\n    decode: baseN.decode\n  }\n};\n\n/**\n * Encodes a Uint8Array as a binary-encoded string. This encoding uses\n * a value between 0 and 255 for each character.\n *\n * @param bytes the Uint8Array to encode.\n *\n * @return the binary-encoded string.\n */\nutil.binary.raw.encode = function(bytes) {\n  return String.fromCharCode.apply(null, bytes);\n};\n\n/**\n * Decodes a binary-encoded string to a Uint8Array. This encoding uses\n * a value between 0 and 255 for each character.\n *\n * @param str the binary-encoded string to decode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.raw.decode = function(str, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length);\n  }\n  offset = offset || 0;\n  var j = offset;\n  for(var i = 0; i < str.length; ++i) {\n    out[j++] = str.charCodeAt(i);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Encodes a 'binary' string, ArrayBuffer, DataView, TypedArray, or\n * ByteBuffer as a string of hexadecimal characters.\n *\n * @param bytes the bytes to convert.\n *\n * @return the string of hexadecimal characters.\n */\nutil.binary.hex.encode = util.bytesToHex;\n\n/**\n * Decodes a hex-encoded string to a Uint8Array.\n *\n * @param hex the hexadecimal string to convert.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.hex.decode = function(hex, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(Math.ceil(hex.length / 2));\n  }\n  offset = offset || 0;\n  var i = 0, j = offset;\n  if(hex.length & 1) {\n    // odd number of characters, convert first character alone\n    i = 1;\n    out[j++] = parseInt(hex[0], 16);\n  }\n  // convert 2 characters (1 byte) at a time\n  for(; i < hex.length; i += 2) {\n    out[j++] = parseInt(hex.substr(i, 2), 16);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Base64-encodes a Uint8Array.\n *\n * @param input the Uint8Array to encode.\n * @param maxline the maximum number of encoded characters per line to use,\n *          defaults to none.\n *\n * @return the base64-encoded output string.\n */\nutil.binary.base64.encode = function(input, maxline) {\n  var line = '';\n  var output = '';\n  var chr1, chr2, chr3;\n  var i = 0;\n  while(i < input.byteLength) {\n    chr1 = input[i++];\n    chr2 = input[i++];\n    chr3 = input[i++];\n\n    // encode 4 character group\n    line += _base64.charAt(chr1 >> 2);\n    line += _base64.charAt(((chr1 & 3) << 4) | (chr2 >> 4));\n    if(isNaN(chr2)) {\n      line += '==';\n    } else {\n      line += _base64.charAt(((chr2 & 15) << 2) | (chr3 >> 6));\n      line += isNaN(chr3) ? '=' : _base64.charAt(chr3 & 63);\n    }\n\n    if(maxline && line.length > maxline) {\n      output += line.substr(0, maxline) + '\\r\\n';\n      line = line.substr(maxline);\n    }\n  }\n  output += line;\n  return output;\n};\n\n/**\n * Decodes a base64-encoded string to a Uint8Array.\n *\n * @param input the base64-encoded input string.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.binary.base64.decode = function(input, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(Math.ceil(input.length / 4) * 3);\n  }\n\n  // remove all non-base64 characters\n  input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, '');\n\n  offset = offset || 0;\n  var enc1, enc2, enc3, enc4;\n  var i = 0, j = offset;\n\n  while(i < input.length) {\n    enc1 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc2 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc3 = _base64Idx[input.charCodeAt(i++) - 43];\n    enc4 = _base64Idx[input.charCodeAt(i++) - 43];\n\n    out[j++] = (enc1 << 2) | (enc2 >> 4);\n    if(enc3 !== 64) {\n      // decoded at least 2 bytes\n      out[j++] = ((enc2 & 15) << 4) | (enc3 >> 2);\n      if(enc4 !== 64) {\n        // decoded 3 bytes\n        out[j++] = ((enc3 & 3) << 6) | enc4;\n      }\n    }\n  }\n\n  // make sure result is the exact decoded length\n  return output ? (j - offset) : out.subarray(0, j);\n};\n\n// add support for base58 encoding/decoding with Bitcoin alphabet\nutil.binary.base58.encode = function(input, maxline) {\n  return util.binary.baseN.encode(input, _base58, maxline);\n};\nutil.binary.base58.decode = function(input, maxline) {\n  return util.binary.baseN.decode(input, _base58, maxline);\n};\n\n// text encoding/decoding tools\n// FIXME: Experimental. Do not use yet.\nutil.text = {\n  utf8: {},\n  utf16: {}\n};\n\n/**\n * Encodes the given string as UTF-8 in a Uint8Array.\n *\n * @param str the string to encode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.text.utf8.encode = function(str, output, offset) {\n  str = util.encodeUtf8(str);\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length);\n  }\n  offset = offset || 0;\n  var j = offset;\n  for(var i = 0; i < str.length; ++i) {\n    out[j++] = str.charCodeAt(i);\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Decodes the UTF-8 contents from a Uint8Array.\n *\n * @param bytes the Uint8Array to decode.\n *\n * @return the resulting string.\n */\nutil.text.utf8.decode = function(bytes) {\n  return util.decodeUtf8(String.fromCharCode.apply(null, bytes));\n};\n\n/**\n * Encodes the given string as UTF-16 in a Uint8Array.\n *\n * @param str the string to encode.\n * @param [output] an optional Uint8Array to write the output to; if it\n *          is too small, an exception will be thrown.\n * @param [offset] the start offset for writing to the output (default: 0).\n *\n * @return the Uint8Array or the number of bytes written if output was given.\n */\nutil.text.utf16.encode = function(str, output, offset) {\n  var out = output;\n  if(!out) {\n    out = new Uint8Array(str.length * 2);\n  }\n  var view = new Uint16Array(out.buffer);\n  offset = offset || 0;\n  var j = offset;\n  var k = offset;\n  for(var i = 0; i < str.length; ++i) {\n    view[k++] = str.charCodeAt(i);\n    j += 2;\n  }\n  return output ? (j - offset) : out;\n};\n\n/**\n * Decodes the UTF-16 contents from a Uint8Array.\n *\n * @param bytes the Uint8Array to decode.\n *\n * @return the resulting string.\n */\nutil.text.utf16.decode = function(bytes) {\n  return String.fromCharCode.apply(null, new Uint16Array(bytes.buffer));\n};\n\n/**\n * Deflates the given data using a flash interface.\n *\n * @param api the flash interface.\n * @param bytes the data.\n * @param raw true to return only raw deflate data, false to include zlib\n *          header and trailer.\n *\n * @return the deflated data as a string.\n */\nutil.deflate = function(api, bytes, raw) {\n  bytes = util.decode64(api.deflate(util.encode64(bytes)).rval);\n\n  // strip zlib header and trailer if necessary\n  if(raw) {\n    // zlib header is 2 bytes (CMF,FLG) where FLG indicates that\n    // there is a 4-byte DICT (alder-32) block before the data if\n    // its 5th bit is set\n    var start = 2;\n    var flg = bytes.charCodeAt(1);\n    if(flg & 0x20) {\n      start = 6;\n    }\n    // zlib trailer is 4 bytes of adler-32\n    bytes = bytes.substring(start, bytes.length - 4);\n  }\n\n  return bytes;\n};\n\n/**\n * Inflates the given data using a flash interface.\n *\n * @param api the flash interface.\n * @param bytes the data.\n * @param raw true if the incoming data has no zlib header or trailer and is\n *          raw DEFLATE data.\n *\n * @return the inflated data as a string, null on error.\n */\nutil.inflate = function(api, bytes, raw) {\n  // TODO: add zlib header and trailer if necessary/possible\n  var rval = api.inflate(util.encode64(bytes)).rval;\n  return (rval === null) ? null : util.decode64(rval);\n};\n\n/**\n * Sets a storage object.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param obj the storage object, null to remove.\n */\nvar _setStorageObject = function(api, id, obj) {\n  if(!api) {\n    throw new Error('WebStorage not available.');\n  }\n\n  var rval;\n  if(obj === null) {\n    rval = api.removeItem(id);\n  } else {\n    // json-encode and base64-encode object\n    obj = util.encode64(JSON.stringify(obj));\n    rval = api.setItem(id, obj);\n  }\n\n  // handle potential flash error\n  if(typeof(rval) !== 'undefined' && rval.rval !== true) {\n    var error = new Error(rval.error.message);\n    error.id = rval.error.id;\n    error.name = rval.error.name;\n    throw error;\n  }\n};\n\n/**\n * Gets a storage object.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n *\n * @return the storage object entry or null if none exists.\n */\nvar _getStorageObject = function(api, id) {\n  if(!api) {\n    throw new Error('WebStorage not available.');\n  }\n\n  // get the existing entry\n  var rval = api.getItem(id);\n\n  /* Note: We check api.init because we can't do (api == localStorage)\n    on IE because of \"Class doesn't support Automation\" exception. Only\n    the flash api has an init method so this works too, but we need a\n    better solution in the future. */\n\n  // flash returns item wrapped in an object, handle special case\n  if(api.init) {\n    if(rval.rval === null) {\n      if(rval.error) {\n        var error = new Error(rval.error.message);\n        error.id = rval.error.id;\n        error.name = rval.error.name;\n        throw error;\n      }\n      // no error, but also no item\n      rval = null;\n    } else {\n      rval = rval.rval;\n    }\n  }\n\n  // handle decoding\n  if(rval !== null) {\n    // base64-decode and json-decode data\n    rval = JSON.parse(util.decode64(rval));\n  }\n\n  return rval;\n};\n\n/**\n * Stores an item in local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param data the data for the item (any javascript object/primitive).\n */\nvar _setItem = function(api, id, key, data) {\n  // get storage object\n  var obj = _getStorageObject(api, id);\n  if(obj === null) {\n    // create a new storage object\n    obj = {};\n  }\n  // update key\n  obj[key] = data;\n\n  // set storage object\n  _setStorageObject(api, id, obj);\n};\n\n/**\n * Gets an item from local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n *\n * @return the item.\n */\nvar _getItem = function(api, id, key) {\n  // get storage object\n  var rval = _getStorageObject(api, id);\n  if(rval !== null) {\n    // return data at key\n    rval = (key in rval) ? rval[key] : null;\n  }\n\n  return rval;\n};\n\n/**\n * Removes an item from local storage.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n */\nvar _removeItem = function(api, id, key) {\n  // get storage object\n  var obj = _getStorageObject(api, id);\n  if(obj !== null && key in obj) {\n    // remove key\n    delete obj[key];\n\n    // see if entry has no keys remaining\n    var empty = true;\n    for(var prop in obj) {\n      empty = false;\n      break;\n    }\n    if(empty) {\n      // remove entry entirely if no keys are left\n      obj = null;\n    }\n\n    // set storage object\n    _setStorageObject(api, id, obj);\n  }\n};\n\n/**\n * Clears the local disk storage identified by the given ID.\n *\n * @param api the storage interface.\n * @param id the storage ID to use.\n */\nvar _clearItems = function(api, id) {\n  _setStorageObject(api, id, null);\n};\n\n/**\n * Calls a storage function.\n *\n * @param func the function to call.\n * @param args the arguments for the function.\n * @param location the location argument.\n *\n * @return the return value from the function.\n */\nvar _callStorageFunction = function(func, args, location) {\n  var rval = null;\n\n  // default storage types\n  if(typeof(location) === 'undefined') {\n    location = ['web', 'flash'];\n  }\n\n  // apply storage types in order of preference\n  var type;\n  var done = false;\n  var exception = null;\n  for(var idx in location) {\n    type = location[idx];\n    try {\n      if(type === 'flash' || type === 'both') {\n        if(args[0] === null) {\n          throw new Error('Flash local storage not available.');\n        }\n        rval = func.apply(this, args);\n        done = (type === 'flash');\n      }\n      if(type === 'web' || type === 'both') {\n        args[0] = localStorage;\n        rval = func.apply(this, args);\n        done = true;\n      }\n    } catch(ex) {\n      exception = ex;\n    }\n    if(done) {\n      break;\n    }\n  }\n\n  if(!done) {\n    throw exception;\n  }\n\n  return rval;\n};\n\n/**\n * Stores an item on local disk.\n *\n * The available types of local storage include 'flash', 'web', and 'both'.\n *\n * The type 'flash' refers to flash local storage (SharedObject). In order\n * to use flash local storage, the 'api' parameter must be valid. The type\n * 'web' refers to WebStorage, if supported by the browser. The type 'both'\n * refers to storing using both 'flash' and 'web', not just one or the\n * other.\n *\n * The location array should list the storage types to use in order of\n * preference:\n *\n * ['flash']: flash only storage\n * ['web']: web only storage\n * ['both']: try to store in both\n * ['flash','web']: store in flash first, but if not available, 'web'\n * ['web','flash']: store in web first, but if not available, 'flash'\n *\n * The location array defaults to: ['web', 'flash']\n *\n * @param api the flash interface, null to use only WebStorage.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param data the data for the item (any javascript object/primitive).\n * @param location an array with the preferred types of storage to use.\n */\nutil.setItem = function(api, id, key, data, location) {\n  _callStorageFunction(_setItem, arguments, location);\n};\n\n/**\n * Gets an item on local disk.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface, null to use only WebStorage.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param location an array with the preferred types of storage to use.\n *\n * @return the item.\n */\nutil.getItem = function(api, id, key, location) {\n  return _callStorageFunction(_getItem, arguments, location);\n};\n\n/**\n * Removes an item on local disk.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface.\n * @param id the storage ID to use.\n * @param key the key for the item.\n * @param location an array with the preferred types of storage to use.\n */\nutil.removeItem = function(api, id, key, location) {\n  _callStorageFunction(_removeItem, arguments, location);\n};\n\n/**\n * Clears the local disk storage identified by the given ID.\n *\n * Set setItem() for details on storage types.\n *\n * @param api the flash interface if flash is available.\n * @param id the storage ID to use.\n * @param location an array with the preferred types of storage to use.\n */\nutil.clearItems = function(api, id, location) {\n  _callStorageFunction(_clearItems, arguments, location);\n};\n\n/**\n * Check if an object is empty.\n *\n * Taken from:\n * http://stackoverflow.com/questions/679915/how-do-i-test-for-an-empty-javascript-object-from-json/679937#679937\n *\n * @param object the object to check.\n */\nutil.isEmpty = function(obj) {\n  for(var prop in obj) {\n    if(obj.hasOwnProperty(prop)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * Format with simple printf-style interpolation.\n *\n * %%: literal '%'\n * %s,%o: convert next argument into a string.\n *\n * @param format the string to format.\n * @param ... arguments to interpolate into the format string.\n */\nutil.format = function(format) {\n  var re = /%./g;\n  // current match\n  var match;\n  // current part\n  var part;\n  // current arg index\n  var argi = 0;\n  // collected parts to recombine later\n  var parts = [];\n  // last index found\n  var last = 0;\n  // loop while matches remain\n  while((match = re.exec(format))) {\n    part = format.substring(last, re.lastIndex - 2);\n    // don't add empty strings (ie, parts between %s%s)\n    if(part.length > 0) {\n      parts.push(part);\n    }\n    last = re.lastIndex;\n    // switch on % code\n    var code = match[0][1];\n    switch(code) {\n    case 's':\n    case 'o':\n      // check if enough arguments were given\n      if(argi < arguments.length) {\n        parts.push(arguments[argi++ + 1]);\n      } else {\n        parts.push('<?>');\n      }\n      break;\n    // FIXME: do proper formating for numbers, etc\n    //case 'f':\n    //case 'd':\n    case '%':\n      parts.push('%');\n      break;\n    default:\n      parts.push('<%' + code + '?>');\n    }\n  }\n  // add trailing part of format string\n  parts.push(format.substring(last));\n  return parts.join('');\n};\n\n/**\n * Formats a number.\n *\n * http://snipplr.com/view/5945/javascript-numberformat--ported-from-php/\n */\nutil.formatNumber = function(number, decimals, dec_point, thousands_sep) {\n  // http://kevin.vanzonneveld.net\n  // +   original by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // +   improved by: Kevin van Zonneveld (http://kevin.vanzonneveld.net)\n  // +     bugfix by: Michael White (http://crestidg.com)\n  // +     bugfix by: Benjamin Lupton\n  // +     bugfix by: Allan Jensen (http://www.winternet.no)\n  // +    revised by: Jonas Raoni Soares Silva (http://www.jsfromhell.com)\n  // *     example 1: number_format(1234.5678, 2, '.', '');\n  // *     returns 1: 1234.57\n\n  var n = number, c = isNaN(decimals = Math.abs(decimals)) ? 2 : decimals;\n  var d = dec_point === undefined ? ',' : dec_point;\n  var t = thousands_sep === undefined ?\n   '.' : thousands_sep, s = n < 0 ? '-' : '';\n  var i = parseInt((n = Math.abs(+n || 0).toFixed(c)), 10) + '';\n  var j = (i.length > 3) ? i.length % 3 : 0;\n  return s + (j ? i.substr(0, j) + t : '') +\n    i.substr(j).replace(/(\\d{3})(?=\\d)/g, '$1' + t) +\n    (c ? d + Math.abs(n - i).toFixed(c).slice(2) : '');\n};\n\n/**\n * Formats a byte size.\n *\n * http://snipplr.com/view/5949/format-humanize-file-byte-size-presentation-in-javascript/\n */\nutil.formatSize = function(size) {\n  if(size >= 1073741824) {\n    size = util.formatNumber(size / 1073741824, 2, '.', '') + ' GiB';\n  } else if(size >= 1048576) {\n    size = util.formatNumber(size / 1048576, 2, '.', '') + ' MiB';\n  } else if(size >= 1024) {\n    size = util.formatNumber(size / 1024, 0) + ' KiB';\n  } else {\n    size = util.formatNumber(size, 0) + ' bytes';\n  }\n  return size;\n};\n\n/**\n * Converts an IPv4 or IPv6 string representation into bytes (in network order).\n *\n * @param ip the IPv4 or IPv6 address to convert.\n *\n * @return the 4-byte IPv6 or 16-byte IPv6 address or null if the address can't\n *         be parsed.\n */\nutil.bytesFromIP = function(ip) {\n  if(ip.indexOf('.') !== -1) {\n    return util.bytesFromIPv4(ip);\n  }\n  if(ip.indexOf(':') !== -1) {\n    return util.bytesFromIPv6(ip);\n  }\n  return null;\n};\n\n/**\n * Converts an IPv4 string representation into bytes (in network order).\n *\n * @param ip the IPv4 address to convert.\n *\n * @return the 4-byte address or null if the address can't be parsed.\n */\nutil.bytesFromIPv4 = function(ip) {\n  ip = ip.split('.');\n  if(ip.length !== 4) {\n    return null;\n  }\n  var b = util.createBuffer();\n  for(var i = 0; i < ip.length; ++i) {\n    var num = parseInt(ip[i], 10);\n    if(isNaN(num)) {\n      return null;\n    }\n    b.putByte(num);\n  }\n  return b.getBytes();\n};\n\n/**\n * Converts an IPv6 string representation into bytes (in network order).\n *\n * @param ip the IPv6 address to convert.\n *\n * @return the 16-byte address or null if the address can't be parsed.\n */\nutil.bytesFromIPv6 = function(ip) {\n  var blanks = 0;\n  ip = ip.split(':').filter(function(e) {\n    if(e.length === 0) ++blanks;\n    return true;\n  });\n  var zeros = (8 - ip.length + blanks) * 2;\n  var b = util.createBuffer();\n  for(var i = 0; i < 8; ++i) {\n    if(!ip[i] || ip[i].length === 0) {\n      b.fillWithByte(0, zeros);\n      zeros = 0;\n      continue;\n    }\n    var bytes = util.hexToBytes(ip[i]);\n    if(bytes.length < 2) {\n      b.putByte(0);\n    }\n    b.putBytes(bytes);\n  }\n  return b.getBytes();\n};\n\n/**\n * Converts 4-bytes into an IPv4 string representation or 16-bytes into\n * an IPv6 string representation. The bytes must be in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv4 or IPv6 string representation if 4 or 16 bytes,\n *         respectively, are given, otherwise null.\n */\nutil.bytesToIP = function(bytes) {\n  if(bytes.length === 4) {\n    return util.bytesToIPv4(bytes);\n  }\n  if(bytes.length === 16) {\n    return util.bytesToIPv6(bytes);\n  }\n  return null;\n};\n\n/**\n * Converts 4-bytes into an IPv4 string representation. The bytes must be\n * in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv4 string representation or null for an invalid # of bytes.\n */\nutil.bytesToIPv4 = function(bytes) {\n  if(bytes.length !== 4) {\n    return null;\n  }\n  var ip = [];\n  for(var i = 0; i < bytes.length; ++i) {\n    ip.push(bytes.charCodeAt(i));\n  }\n  return ip.join('.');\n};\n\n/**\n * Converts 16-bytes into an IPv16 string representation. The bytes must be\n * in network order.\n *\n * @param bytes the bytes to convert.\n *\n * @return the IPv16 string representation or null for an invalid # of bytes.\n */\nutil.bytesToIPv6 = function(bytes) {\n  if(bytes.length !== 16) {\n    return null;\n  }\n  var ip = [];\n  var zeroGroups = [];\n  var zeroMaxGroup = 0;\n  for(var i = 0; i < bytes.length; i += 2) {\n    var hex = util.bytesToHex(bytes[i] + bytes[i + 1]);\n    // canonicalize zero representation\n    while(hex[0] === '0' && hex !== '0') {\n      hex = hex.substr(1);\n    }\n    if(hex === '0') {\n      var last = zeroGroups[zeroGroups.length - 1];\n      var idx = ip.length;\n      if(!last || idx !== last.end + 1) {\n        zeroGroups.push({start: idx, end: idx});\n      } else {\n        last.end = idx;\n        if((last.end - last.start) >\n          (zeroGroups[zeroMaxGroup].end - zeroGroups[zeroMaxGroup].start)) {\n          zeroMaxGroup = zeroGroups.length - 1;\n        }\n      }\n    }\n    ip.push(hex);\n  }\n  if(zeroGroups.length > 0) {\n    var group = zeroGroups[zeroMaxGroup];\n    // only shorten group of length > 0\n    if(group.end - group.start > 0) {\n      ip.splice(group.start, group.end - group.start + 1, '');\n      if(group.start === 0) {\n        ip.unshift('');\n      }\n      if(group.end === 7) {\n        ip.push('');\n      }\n    }\n  }\n  return ip.join(':');\n};\n\n/**\n * Estimates the number of processes that can be run concurrently. If\n * creating Web Workers, keep in mind that the main JavaScript process needs\n * its own core.\n *\n * @param options the options to use:\n *          update true to force an update (not use the cached value).\n * @param callback(err, max) called once the operation completes.\n */\nutil.estimateCores = function(options, callback) {\n  if(typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = options || {};\n  if('cores' in util && !options.update) {\n    return callback(null, util.cores);\n  }\n  if(typeof navigator !== 'undefined' &&\n    'hardwareConcurrency' in navigator &&\n    navigator.hardwareConcurrency > 0) {\n    util.cores = navigator.hardwareConcurrency;\n    return callback(null, util.cores);\n  }\n  if(typeof Worker === 'undefined') {\n    // workers not available\n    util.cores = 1;\n    return callback(null, util.cores);\n  }\n  if(typeof Blob === 'undefined') {\n    // can't estimate, default to 2\n    util.cores = 2;\n    return callback(null, util.cores);\n  }\n\n  // create worker concurrency estimation code as blob\n  var blobUrl = URL.createObjectURL(new Blob(['(',\n    function() {\n      self.addEventListener('message', function(e) {\n        // run worker for 4 ms\n        var st = Date.now();\n        var et = st + 4;\n        while(Date.now() < et);\n        self.postMessage({st: st, et: et});\n      });\n    }.toString(),\n  ')()'], {type: 'application/javascript'}));\n\n  // take 5 samples using 16 workers\n  sample([], 5, 16);\n\n  function sample(max, samples, numWorkers) {\n    if(samples === 0) {\n      // get overlap average\n      var avg = Math.floor(max.reduce(function(avg, x) {\n        return avg + x;\n      }, 0) / max.length);\n      util.cores = Math.max(1, avg);\n      URL.revokeObjectURL(blobUrl);\n      return callback(null, util.cores);\n    }\n    map(numWorkers, function(err, results) {\n      max.push(reduce(numWorkers, results));\n      sample(max, samples - 1, numWorkers);\n    });\n  }\n\n  function map(numWorkers, callback) {\n    var workers = [];\n    var results = [];\n    for(var i = 0; i < numWorkers; ++i) {\n      var worker = new Worker(blobUrl);\n      worker.addEventListener('message', function(e) {\n        results.push(e.data);\n        if(results.length === numWorkers) {\n          for(var i = 0; i < numWorkers; ++i) {\n            workers[i].terminate();\n          }\n          callback(null, results);\n        }\n      });\n      workers.push(worker);\n    }\n    for(var i = 0; i < numWorkers; ++i) {\n      workers[i].postMessage(i);\n    }\n  }\n\n  function reduce(numWorkers, results) {\n    // find overlapping time windows\n    var overlaps = [];\n    for(var n = 0; n < numWorkers; ++n) {\n      var r1 = results[n];\n      var overlap = overlaps[n] = [];\n      for(var i = 0; i < numWorkers; ++i) {\n        if(n === i) {\n          continue;\n        }\n        var r2 = results[i];\n        if((r1.st > r2.st && r1.st < r2.et) ||\n          (r2.st > r1.st && r2.st < r1.et)) {\n          overlap.push(i);\n        }\n      }\n    }\n    // get maximum overlaps ... don't include overlapping worker itself\n    // as the main JS process was also being scheduled during the work and\n    // would have to be subtracted from the estimate anyway\n    return overlaps.reduce(function(max, overlap) {\n      return Math.max(max, overlap.length);\n    }, 0);\n  }\n};\n","/**\n * Javascript implementation of X.509 and related components (such as\n * Certification Signing Requests) of a Public Key Infrastructure.\n *\n * @author Dave Longley\n *\n * Copyright (c) 2010-2014 Digital Bazaar, Inc.\n *\n * The ASN.1 representation of an X.509v3 certificate is as follows\n * (see RFC 2459):\n *\n * Certificate ::= SEQUENCE {\n *   tbsCertificate       TBSCertificate,\n *   signatureAlgorithm   AlgorithmIdentifier,\n *   signatureValue       BIT STRING\n * }\n *\n * TBSCertificate ::= SEQUENCE {\n *   version         [0]  EXPLICIT Version DEFAULT v1,\n *   serialNumber         CertificateSerialNumber,\n *   signature            AlgorithmIdentifier,\n *   issuer               Name,\n *   validity             Validity,\n *   subject              Name,\n *   subjectPublicKeyInfo SubjectPublicKeyInfo,\n *   issuerUniqueID  [1]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   subjectUniqueID [2]  IMPLICIT UniqueIdentifier OPTIONAL,\n *                        -- If present, version shall be v2 or v3\n *   extensions      [3]  EXPLICIT Extensions OPTIONAL\n *                        -- If present, version shall be v3\n * }\n *\n * Version ::= INTEGER  { v1(0), v2(1), v3(2) }\n *\n * CertificateSerialNumber ::= INTEGER\n *\n * Name ::= CHOICE {\n *   // only one possible choice for now\n *   RDNSequence\n * }\n *\n * RDNSequence ::= SEQUENCE OF RelativeDistinguishedName\n *\n * RelativeDistinguishedName ::= SET OF AttributeTypeAndValue\n *\n * AttributeTypeAndValue ::= SEQUENCE {\n *   type     AttributeType,\n *   value    AttributeValue\n * }\n * AttributeType ::= OBJECT IDENTIFIER\n * AttributeValue ::= ANY DEFINED BY AttributeType\n *\n * Validity ::= SEQUENCE {\n *   notBefore      Time,\n *   notAfter       Time\n * }\n *\n * Time ::= CHOICE {\n *   utcTime        UTCTime,\n *   generalTime    GeneralizedTime\n * }\n *\n * UniqueIdentifier ::= BIT STRING\n *\n * SubjectPublicKeyInfo ::= SEQUENCE {\n *   algorithm            AlgorithmIdentifier,\n *   subjectPublicKey     BIT STRING\n * }\n *\n * Extensions ::= SEQUENCE SIZE (1..MAX) OF Extension\n *\n * Extension ::= SEQUENCE {\n *   extnID      OBJECT IDENTIFIER,\n *   critical    BOOLEAN DEFAULT FALSE,\n *   extnValue   OCTET STRING\n * }\n *\n * The only key algorithm currently supported for PKI is RSA.\n *\n * RSASSA-PSS signatures are described in RFC 3447 and RFC 4055.\n *\n * PKCS#10 v1.7 describes certificate signing requests:\n *\n * CertificationRequestInfo:\n *\n * CertificationRequestInfo ::= SEQUENCE {\n *   version       INTEGER { v1(0) } (v1,...),\n *   subject       Name,\n *   subjectPKInfo SubjectPublicKeyInfo{{ PKInfoAlgorithms }},\n *   attributes    [0] Attributes{{ CRIAttributes }}\n * }\n *\n * Attributes { ATTRIBUTE:IOSet } ::= SET OF Attribute{{ IOSet }}\n *\n * CRIAttributes  ATTRIBUTE  ::= {\n *   ... -- add any locally defined attributes here -- }\n *\n * Attribute { ATTRIBUTE:IOSet } ::= SEQUENCE {\n *   type   ATTRIBUTE.&id({IOSet}),\n *   values SET SIZE(1..MAX) OF ATTRIBUTE.&Type({IOSet}{@type})\n * }\n *\n * CertificationRequest ::= SEQUENCE {\n *   certificationRequestInfo CertificationRequestInfo,\n *   signatureAlgorithm AlgorithmIdentifier{{ SignatureAlgorithms }},\n *   signature          BIT STRING\n * }\n */\nvar forge = require('./forge');\nrequire('./aes');\nrequire('./asn1');\nrequire('./des');\nrequire('./md');\nrequire('./mgf');\nrequire('./oids');\nrequire('./pem');\nrequire('./pss');\nrequire('./rsa');\nrequire('./util');\n\n// shortcut for asn.1 API\nvar asn1 = forge.asn1;\n\n/* Public Key Infrastructure (PKI) implementation. */\nvar pki = module.exports = forge.pki = forge.pki || {};\nvar oids = pki.oids;\n\n// short name OID mappings\nvar _shortNames = {};\n_shortNames['CN'] = oids['commonName'];\n_shortNames['commonName'] = 'CN';\n_shortNames['C'] = oids['countryName'];\n_shortNames['countryName'] = 'C';\n_shortNames['L'] = oids['localityName'];\n_shortNames['localityName'] = 'L';\n_shortNames['ST'] = oids['stateOrProvinceName'];\n_shortNames['stateOrProvinceName'] = 'ST';\n_shortNames['O'] = oids['organizationName'];\n_shortNames['organizationName'] = 'O';\n_shortNames['OU'] = oids['organizationalUnitName'];\n_shortNames['organizationalUnitName'] = 'OU';\n_shortNames['E'] = oids['emailAddress'];\n_shortNames['emailAddress'] = 'E';\n\n// validator for an SubjectPublicKeyInfo structure\n// Note: Currently only works with an RSA public key\nvar publicKeyValidator = forge.pki.rsa.publicKeyValidator;\n\n// validator for an X.509v3 certificate\nvar x509CertificateValidator = {\n  name: 'Certificate',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'Certificate.TBSCertificate',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'tbsCertificate',\n    value: [{\n      name: 'Certificate.TBSCertificate.version',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 0,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.version.integer',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.INTEGER,\n        constructed: false,\n        capture: 'certVersion'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.serialNumber',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.INTEGER,\n      constructed: false,\n      capture: 'certSerialNumber'\n    }, {\n      name: 'Certificate.TBSCertificate.signature',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.signature.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'certinfoSignatureOid'\n      }, {\n        name: 'Certificate.TBSCertificate.signature.parameters',\n        tagClass: asn1.Class.UNIVERSAL,\n        optional: true,\n        captureAsn1: 'certinfoSignatureParams'\n      }]\n    }, {\n      name: 'Certificate.TBSCertificate.issuer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certIssuer'\n    }, {\n      name: 'Certificate.TBSCertificate.validity',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      // Note: UTC and generalized times may both appear so the capture\n      // names are based on their detected order, the names used below\n      // are only for the common case, which validity time really means\n      // \"notBefore\" and which means \"notAfter\" will be determined by order\n      value: [{\n        // notBefore (Time) (UTC time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity1UTCTime'\n      }, {\n        // notBefore (Time) (generalized time case)\n        name: 'Certificate.TBSCertificate.validity.notBefore (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity2GeneralizedTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (utc)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.UTCTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity3UTCTime'\n      }, {\n        // notAfter (Time) (only UTC time is supported)\n        name: 'Certificate.TBSCertificate.validity.notAfter (generalized)',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.GENERALIZEDTIME,\n        constructed: false,\n        optional: true,\n        capture: 'certValidity4GeneralizedTime'\n      }]\n    }, {\n      // Name (subject) (RDNSequence)\n      name: 'Certificate.TBSCertificate.subject',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      captureAsn1: 'certSubject'\n    },\n    // SubjectPublicKeyInfo\n    publicKeyValidator,\n    {\n      // issuerUniqueID (optional)\n      name: 'Certificate.TBSCertificate.issuerUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 1,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.issuerUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        // TODO: support arbitrary bit length ids\n        captureBitStringValue: 'certIssuerUniqueId'\n      }]\n    }, {\n      // subjectUniqueID (optional)\n      name: 'Certificate.TBSCertificate.subjectUniqueID',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 2,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'Certificate.TBSCertificate.subjectUniqueID.id',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.BITSTRING,\n        constructed: false,\n        // TODO: support arbitrary bit length ids\n        captureBitStringValue: 'certSubjectUniqueId'\n      }]\n    }, {\n      // Extensions (optional)\n      name: 'Certificate.TBSCertificate.extensions',\n      tagClass: asn1.Class.CONTEXT_SPECIFIC,\n      type: 3,\n      constructed: true,\n      captureAsn1: 'certExtensions',\n      optional: true\n    }]\n  }, {\n    // AlgorithmIdentifier (signature algorithm)\n    name: 'Certificate.signatureAlgorithm',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    value: [{\n      // algorithm\n      name: 'Certificate.signatureAlgorithm.algorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.OID,\n      constructed: false,\n      capture: 'certSignatureOid'\n    }, {\n      name: 'Certificate.TBSCertificate.signature.parameters',\n      tagClass: asn1.Class.UNIVERSAL,\n      optional: true,\n      captureAsn1: 'certSignatureParams'\n    }]\n  }, {\n    // SignatureValue\n    name: 'Certificate.signatureValue',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.BITSTRING,\n    constructed: false,\n    captureBitStringValue: 'certSignature'\n  }]\n};\n\nvar rsassaPssParameterValidator = {\n  name: 'rsapss',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  value: [{\n    name: 'rsapss.hashAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    value: [{\n      name: 'rsapss.hashAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.hashAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'hashOid'\n        /* parameter block omitted, for SHA1 NULL anyhow. */\n      }]\n    }]\n  }, {\n    name: 'rsapss.maskGenAlgorithm',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 1,\n    constructed: true,\n    value: [{\n      name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.SEQUENCE,\n      constructed: true,\n      optional: true,\n      value: [{\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'maskGenOid'\n      }, {\n        name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SEQUENCE,\n        constructed: true,\n        value: [{\n          name: 'rsapss.maskGenAlgorithm.AlgorithmIdentifier.params.algorithm',\n          tagClass: asn1.Class.UNIVERSAL,\n          type: asn1.Type.OID,\n          constructed: false,\n          capture: 'maskGenHashOid'\n          /* parameter block omitted, for SHA1 NULL anyhow. */\n        }]\n      }]\n    }]\n  }, {\n    name: 'rsapss.saltLength',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 2,\n    optional: true,\n    value: [{\n      name: 'rsapss.saltLength.saltLength',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'saltLength'\n    }]\n  }, {\n    name: 'rsapss.trailerField',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 3,\n    optional: true,\n    value: [{\n      name: 'rsapss.trailer.trailer',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Class.INTEGER,\n      constructed: false,\n      capture: 'trailer'\n    }]\n  }]\n};\n\n// validator for a CertificationRequestInfo structure\nvar certificationRequestInfoValidator = {\n  name: 'CertificationRequestInfo',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'certificationRequestInfo',\n  value: [{\n    name: 'CertificationRequestInfo.integer',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.INTEGER,\n    constructed: false,\n    capture: 'certificationRequestInfoVersion'\n  }, {\n    // Name (subject) (RDNSequence)\n    name: 'CertificationRequestInfo.subject',\n    tagClass: asn1.Class.UNIVERSAL,\n    type: asn1.Type.SEQUENCE,\n    constructed: true,\n    captureAsn1: 'certificationRequestInfoSubject'\n  },\n  // SubjectPublicKeyInfo\n  publicKeyValidator,\n  {\n    name: 'CertificationRequestInfo.attributes',\n    tagClass: asn1.Class.CONTEXT_SPECIFIC,\n    type: 0,\n    constructed: true,\n    optional: true,\n    capture: 'certificationRequestInfoAttributes',\n    value: [{\n      name: 'CertificationRequestInfo.attributes',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        name: 'CertificationRequestInfo.attributes.type',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false\n      }, {\n        name: 'CertificationRequestInfo.attributes.value',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.SET,\n        constructed: true\n      }]\n    }]\n  }]\n};\n\n// validator for a CertificationRequest structure\nvar certificationRequestValidator = {\n  name: 'CertificationRequest',\n  tagClass: asn1.Class.UNIVERSAL,\n  type: asn1.Type.SEQUENCE,\n  constructed: true,\n  captureAsn1: 'csr',\n  value: [\n    certificationRequestInfoValidator, {\n      // AlgorithmIdentifier (signature algorithm)\n      name: 'CertificationRequest.signatureAlgorithm',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.SEQUENCE,\n      constructed: true,\n      value: [{\n        // algorithm\n        name: 'CertificationRequest.signatureAlgorithm.algorithm',\n        tagClass: asn1.Class.UNIVERSAL,\n        type: asn1.Type.OID,\n        constructed: false,\n        capture: 'csrSignatureOid'\n      }, {\n        name: 'CertificationRequest.signatureAlgorithm.parameters',\n        tagClass: asn1.Class.UNIVERSAL,\n        optional: true,\n        captureAsn1: 'csrSignatureParams'\n      }]\n    }, {\n      // signature\n      name: 'CertificationRequest.signature',\n      tagClass: asn1.Class.UNIVERSAL,\n      type: asn1.Type.BITSTRING,\n      constructed: false,\n      captureBitStringValue: 'csrSignature'\n    }\n  ]\n};\n\n/**\n * Converts an RDNSequence of ASN.1 DER-encoded RelativeDistinguishedName\n * sets into an array with objects that have type and value properties.\n *\n * @param rdn the RDNSequence to convert.\n * @param md a message digest to append type and value to if provided.\n */\npki.RDNAttributesAsArray = function(rdn, md) {\n  var rval = [];\n\n  // each value in 'rdn' in is a SET of RelativeDistinguishedName\n  var set, attr, obj;\n  for(var si = 0; si < rdn.value.length; ++si) {\n    // get the RelativeDistinguishedName set\n    set = rdn.value[si];\n\n    // each value in the SET is an AttributeTypeAndValue sequence\n    // containing first a type (an OID) and second a value (defined by\n    // the OID)\n    for(var i = 0; i < set.value.length; ++i) {\n      obj = {};\n      attr = set.value[i];\n      obj.type = asn1.derToOid(attr.value[0].value);\n      obj.value = attr.value[1].value;\n      obj.valueTagClass = attr.value[1].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      if(md) {\n        md.update(obj.type);\n        md.update(obj.value);\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Converts ASN.1 CRIAttributes into an array with objects that have type and\n * value properties.\n *\n * @param attributes the CRIAttributes to convert.\n */\npki.CRIAttributesAsArray = function(attributes) {\n  var rval = [];\n\n  // each value in 'attributes' in is a SEQUENCE with an OID and a SET\n  for(var si = 0; si < attributes.length; ++si) {\n    // get the attribute sequence\n    var seq = attributes[si];\n\n    // each value in the SEQUENCE containing first a type (an OID) and\n    // second a set of values (defined by the OID)\n    var type = asn1.derToOid(seq.value[0].value);\n    var values = seq.value[1].value;\n    for(var vi = 0; vi < values.length; ++vi) {\n      var obj = {};\n      obj.type = type;\n      obj.value = values[vi].value;\n      obj.valueTagClass = values[vi].type;\n      // if the OID is known, get its name and short name\n      if(obj.type in oids) {\n        obj.name = oids[obj.type];\n        if(obj.name in _shortNames) {\n          obj.shortName = _shortNames[obj.name];\n        }\n      }\n      // parse extensions\n      if(obj.type === oids.extensionRequest) {\n        obj.extensions = [];\n        for(var ei = 0; ei < obj.value.length; ++ei) {\n          obj.extensions.push(pki.certificateExtensionFromAsn1(obj.value[ei]));\n        }\n      }\n      rval.push(obj);\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Gets an issuer or subject attribute from its name, type, or short name.\n *\n * @param obj the issuer or subject object.\n * @param options a short name string or an object with:\n *          shortName the short name for the attribute.\n *          name the name for the attribute.\n *          type the type for the attribute.\n *\n * @return the attribute.\n */\nfunction _getAttribute(obj, options) {\n  if(typeof options === 'string') {\n    options = {shortName: options};\n  }\n\n  var rval = null;\n  var attr;\n  for(var i = 0; rval === null && i < obj.attributes.length; ++i) {\n    attr = obj.attributes[i];\n    if(options.type && options.type === attr.type) {\n      rval = attr;\n    } else if(options.name && options.name === attr.name) {\n      rval = attr;\n    } else if(options.shortName && options.shortName === attr.shortName) {\n      rval = attr;\n    }\n  }\n  return rval;\n}\n\n/**\n * Converts signature parameters from ASN.1 structure.\n *\n * Currently only RSASSA-PSS supported.  The PKCS#1 v1.5 signature scheme had\n * no parameters.\n *\n * RSASSA-PSS-params  ::=  SEQUENCE  {\n *   hashAlgorithm      [0] HashAlgorithm DEFAULT\n *                             sha1Identifier,\n *   maskGenAlgorithm   [1] MaskGenAlgorithm DEFAULT\n *                             mgf1SHA1Identifier,\n *   saltLength         [2] INTEGER DEFAULT 20,\n *   trailerField       [3] INTEGER DEFAULT 1\n * }\n *\n * HashAlgorithm  ::=  AlgorithmIdentifier\n *\n * MaskGenAlgorithm  ::=  AlgorithmIdentifier\n *\n * AlgorithmIdentifer ::= SEQUENCE {\n *   algorithm OBJECT IDENTIFIER,\n *   parameters ANY DEFINED BY algorithm OPTIONAL\n * }\n *\n * @param oid The OID specifying the signature algorithm\n * @param obj The ASN.1 structure holding the parameters\n * @param fillDefaults Whether to use return default values where omitted\n * @return signature parameter object\n */\nvar _readSignatureParameters = function(oid, obj, fillDefaults) {\n  var params = {};\n\n  if(oid !== oids['RSASSA-PSS']) {\n    return params;\n  }\n\n  if(fillDefaults) {\n    params = {\n      hash: {\n        algorithmOid: oids['sha1']\n      },\n      mgf: {\n        algorithmOid: oids['mgf1'],\n        hash: {\n          algorithmOid: oids['sha1']\n        }\n      },\n      saltLength: 20\n    };\n  }\n\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, rsassaPssParameterValidator, capture, errors)) {\n    var error = new Error('Cannot read RSASSA-PSS parameter block.');\n    error.errors = errors;\n    throw error;\n  }\n\n  if(capture.hashOid !== undefined) {\n    params.hash = params.hash || {};\n    params.hash.algorithmOid = asn1.derToOid(capture.hashOid);\n  }\n\n  if(capture.maskGenOid !== undefined) {\n    params.mgf = params.mgf || {};\n    params.mgf.algorithmOid = asn1.derToOid(capture.maskGenOid);\n    params.mgf.hash = params.mgf.hash || {};\n    params.mgf.hash.algorithmOid = asn1.derToOid(capture.maskGenHashOid);\n  }\n\n  if(capture.saltLength !== undefined) {\n    params.saltLength = capture.saltLength.charCodeAt(0);\n  }\n\n  return params;\n};\n\n/**\n * Create signature digest for OID.\n *\n * @param options\n *   signatureOid: the OID specifying the signature algorithm.\n *   type: a human readable type for error messages\n * @return a created md instance. throws if unknown oid.\n */\nvar _createSignatureDigest = function(options) {\n  switch(oids[options.signatureOid]) {\n    case 'sha1WithRSAEncryption':\n    // deprecated alias\n    case 'sha1WithRSASignature':\n      return forge.md.sha1.create();\n    case 'md5WithRSAEncryption':\n      return forge.md.md5.create();\n    case 'sha256WithRSAEncryption':\n      return forge.md.sha256.create();\n    case 'sha384WithRSAEncryption':\n      return forge.md.sha384.create();\n    case 'sha512WithRSAEncryption':\n      return forge.md.sha512.create();\n    case 'RSASSA-PSS':\n      return forge.md.sha256.create();\n    default:\n      var error = new Error(\n        'Could not compute ' + options.type + ' digest. ' +\n        'Unknown signature OID.');\n      error.signatureOid = options.signatureOid;\n      throw error;\n  }\n};\n\n/**\n * Verify signature on certificate or CSR.\n *\n * @param options:\n *   certificate the certificate or CSR to verify.\n *   md the signature digest.\n *   signature the signature\n * @return a created md instance. throws if unknown oid.\n */\nvar _verifySignature = function(options) {\n  var cert = options.certificate;\n  var scheme;\n\n  switch(cert.signatureOid) {\n    case oids.sha1WithRSAEncryption:\n    // deprecated alias\n    case oids.sha1WithRSASignature:\n      /* use PKCS#1 v1.5 padding scheme */\n      break;\n    case oids['RSASSA-PSS']:\n      var hash, mgf;\n\n      /* initialize mgf */\n      hash = oids[cert.signatureParameters.mgf.hash.algorithmOid];\n      if(hash === undefined || forge.md[hash] === undefined) {\n        var error = new Error('Unsupported MGF hash function.');\n        error.oid = cert.signatureParameters.mgf.hash.algorithmOid;\n        error.name = hash;\n        throw error;\n      }\n\n      mgf = oids[cert.signatureParameters.mgf.algorithmOid];\n      if(mgf === undefined || forge.mgf[mgf] === undefined) {\n        var error = new Error('Unsupported MGF function.');\n        error.oid = cert.signatureParameters.mgf.algorithmOid;\n        error.name = mgf;\n        throw error;\n      }\n\n      mgf = forge.mgf[mgf].create(forge.md[hash].create());\n\n      /* initialize hash function */\n      hash = oids[cert.signatureParameters.hash.algorithmOid];\n      if(hash === undefined || forge.md[hash] === undefined) {\n        var error = new Error('Unsupported RSASSA-PSS hash function.');\n        error.oid = cert.signatureParameters.hash.algorithmOid;\n        error.name = hash;\n        throw error;\n      }\n\n      scheme = forge.pss.create(\n        forge.md[hash].create(), mgf, cert.signatureParameters.saltLength\n      );\n      break;\n  }\n\n  // verify signature on cert using public key\n  return cert.publicKey.verify(\n    options.md.digest().getBytes(), options.signature, scheme\n  );\n};\n\n/**\n * Converts an X.509 certificate from PEM format.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. This will scan the TBSCertificate part of the ASN.1\n * object while it is converted so it doesn't need to be converted back\n * to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certificate.\n */\npki.certificateFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE' &&\n    msg.type !== 'X509 CERTIFICATE' &&\n    msg.type !== 'TRUSTED CERTIFICATE') {\n    var error = new Error(\n      'Could not convert certificate from PEM; PEM header type ' +\n      'is not \"CERTIFICATE\", \"X509 CERTIFICATE\", or \"TRUSTED CERTIFICATE\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error(\n      'Could not convert certificate from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificateFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts an X.509 certificate to PEM format.\n *\n * @param cert the certificate.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certificate.\n */\npki.certificateToPem = function(cert, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE',\n    body: asn1.toDer(pki.certificateToAsn1(cert)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key from PEM format.\n *\n * @param pem the PEM-formatted public key.\n *\n * @return the public key.\n */\npki.publicKeyFromPem = function(pem) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'PUBLIC KEY' && msg.type !== 'RSA PUBLIC KEY') {\n    var error = new Error('Could not convert public key from PEM; PEM header ' +\n      'type is not \"PUBLIC KEY\" or \"RSA PUBLIC KEY\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert public key from PEM; PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body);\n\n  return pki.publicKeyFromAsn1(obj);\n};\n\n/**\n * Converts an RSA public key to PEM format (using a SubjectPublicKeyInfo).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToAsn1(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Converts an RSA public key to PEM format (using an RSAPublicKey).\n *\n * @param key the public key.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted public key.\n */\npki.publicKeyToRSAPublicKeyPem = function(key, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'RSA PUBLIC KEY',\n    body: asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Gets a fingerprint for the given public key.\n *\n * @param options the options to use.\n *          [md] the message digest object to use (defaults to forge.md.sha1).\n *          [type] the type of fingerprint, such as 'RSAPublicKey',\n *            'SubjectPublicKeyInfo' (defaults to 'RSAPublicKey').\n *          [encoding] an alternative output encoding, such as 'hex'\n *            (defaults to none, outputs a byte buffer).\n *          [delimiter] the delimiter to use between bytes for 'hex' encoded\n *            output, eg: ':' (defaults to none).\n *\n * @return the fingerprint as a byte buffer or other encoding based on options.\n */\npki.getPublicKeyFingerprint = function(key, options) {\n  options = options || {};\n  var md = options.md || forge.md.sha1.create();\n  var type = options.type || 'RSAPublicKey';\n\n  var bytes;\n  switch(type) {\n    case 'RSAPublicKey':\n      bytes = asn1.toDer(pki.publicKeyToRSAPublicKey(key)).getBytes();\n      break;\n    case 'SubjectPublicKeyInfo':\n      bytes = asn1.toDer(pki.publicKeyToAsn1(key)).getBytes();\n      break;\n    default:\n      throw new Error('Unknown fingerprint type \"' + options.type + '\".');\n  }\n\n  // hash public key bytes\n  md.start();\n  md.update(bytes);\n  var digest = md.digest();\n  if(options.encoding === 'hex') {\n    var hex = digest.toHex();\n    if(options.delimiter) {\n      return hex.match(/.{2}/g).join(options.delimiter);\n    }\n    return hex;\n  } else if(options.encoding === 'binary') {\n    return digest.getBytes();\n  } else if(options.encoding) {\n    throw new Error('Unknown encoding \"' + options.encoding + '\".');\n  }\n  return digest;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from PEM format.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. This will scan the CertificationRequestInfo part of\n * the ASN.1 object while it is converted so it doesn't need to be converted\n * back to ASN.1-DER-encoding later.\n *\n * @param pem the PEM-formatted certificate.\n * @param computeHash true to compute the hash for verification.\n * @param strict true to be strict when checking ASN.1 value lengths, false to\n *          allow truncated values (default: true).\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromPem = function(pem, computeHash, strict) {\n  var msg = forge.pem.decode(pem)[0];\n\n  if(msg.type !== 'CERTIFICATE REQUEST') {\n    var error = new Error('Could not convert certification request from PEM; ' +\n      'PEM header type is not \"CERTIFICATE REQUEST\".');\n    error.headerType = msg.type;\n    throw error;\n  }\n  if(msg.procType && msg.procType.type === 'ENCRYPTED') {\n    throw new Error('Could not convert certification request from PEM; ' +\n      'PEM is encrypted.');\n  }\n\n  // convert DER to ASN.1 object\n  var obj = asn1.fromDer(msg.body, strict);\n\n  return pki.certificationRequestFromAsn1(obj, computeHash);\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) to PEM format.\n *\n * @param csr the certification request.\n * @param maxline the maximum characters per line, defaults to 64.\n *\n * @return the PEM-formatted certification request.\n */\npki.certificationRequestToPem = function(csr, maxline) {\n  // convert to ASN.1, then DER, then PEM-encode\n  var msg = {\n    type: 'CERTIFICATE REQUEST',\n    body: asn1.toDer(pki.certificationRequestToAsn1(csr)).getBytes()\n  };\n  return forge.pem.encode(msg, {maxline: maxline});\n};\n\n/**\n * Creates an empty X.509v3 RSA certificate.\n *\n * @return the certificate.\n */\npki.createCertificate = function() {\n  var cert = {};\n  cert.version = 0x02;\n  cert.serialNumber = '00';\n  cert.signatureOid = null;\n  cert.signature = null;\n  cert.siginfo = {};\n  cert.siginfo.algorithmOid = null;\n  cert.validity = {};\n  cert.validity.notBefore = new Date();\n  cert.validity.notAfter = new Date();\n\n  cert.issuer = {};\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = [];\n  cert.issuer.hash = null;\n\n  cert.subject = {};\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = [];\n  cert.subject.hash = null;\n\n  cert.extensions = [];\n  cert.publicKey = null;\n  cert.md = null;\n\n  /**\n   * Sets the subject of this certificate.\n   *\n   * @param attrs the array of subject attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setSubject = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.subject.attributes = attrs;\n    delete cert.subject.uniqueId;\n    if(uniqueId) {\n      // TODO: support arbitrary bit length ids\n      cert.subject.uniqueId = uniqueId;\n    }\n    cert.subject.hash = null;\n  };\n\n  /**\n   * Sets the issuer of this certificate.\n   *\n   * @param attrs the array of issuer attributes to use.\n   * @param uniqueId an optional a unique ID to use.\n   */\n  cert.setIssuer = function(attrs, uniqueId) {\n    // set new attributes, clear hash\n    _fillMissingFields(attrs);\n    cert.issuer.attributes = attrs;\n    delete cert.issuer.uniqueId;\n    if(uniqueId) {\n      // TODO: support arbitrary bit length ids\n      cert.issuer.uniqueId = uniqueId;\n    }\n    cert.issuer.hash = null;\n  };\n\n  /**\n   * Sets the extensions of this certificate.\n   *\n   * @param exts the array of extensions to use.\n   */\n  cert.setExtensions = function(exts) {\n    for(var i = 0; i < exts.length; ++i) {\n      _fillMissingExtensionFields(exts[i], {cert: cert});\n    }\n    // set new extensions\n    cert.extensions = exts;\n  };\n\n  /**\n   * Gets an extension by its name or id.\n   *\n   * @param options the name to use or an object with:\n   *          name the name to use.\n   *          id the id to use.\n   *\n   * @return the extension or null if not found.\n   */\n  cert.getExtension = function(options) {\n    if(typeof options === 'string') {\n      options = {name: options};\n    }\n\n    var rval = null;\n    var ext;\n    for(var i = 0; rval === null && i < cert.extensions.length; ++i) {\n      ext = cert.extensions[i];\n      if(options.id && ext.id === options.id) {\n        rval = ext;\n      } else if(options.name && ext.name === options.name) {\n        rval = ext;\n      }\n    }\n    return rval;\n  };\n\n  /**\n   * Signs this certificate using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  cert.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    cert.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[cert.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certificate digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = cert.md.algorithm;\n      throw error;\n    }\n    cert.signatureOid = cert.siginfo.algorithmOid = algorithmOid;\n\n    // get TBSCertificate, convert to DER\n    cert.tbsCertificate = pki.getTBSCertificate(cert);\n    var bytes = asn1.toDer(cert.tbsCertificate);\n\n    // digest and sign\n    cert.md.update(bytes.getBytes());\n    cert.signature = key.sign(cert.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certificate using this\n   * certificate's public key.\n   *\n   * @param child the certificate to verify.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verify = function(child) {\n    var rval = false;\n\n    if(!cert.issued(child)) {\n      var issuer = child.issuer;\n      var subject = cert.subject;\n      var error = new Error(\n        'The parent certificate did not issue the given child ' +\n        'certificate; the child certificate\\'s issuer does not match the ' +\n        'parent\\'s subject.');\n      error.expectedIssuer = subject.attributes;\n      error.actualIssuer = issuer.attributes;\n      throw error;\n    }\n\n    var md = child.md;\n    if(md === null) {\n      // create digest for OID signature types\n      md = _createSignatureDigest({\n        signatureOid: child.signatureOid,\n        type: 'certificate'\n      });\n\n      // produce DER formatted TBSCertificate and digest it\n      var tbsCertificate = child.tbsCertificate || pki.getTBSCertificate(child);\n      var bytes = asn1.toDer(tbsCertificate);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      rval = _verifySignature({\n        certificate: cert, md: md, signature: child.signature\n      });\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's issuer matches the passed\n   * certificate's subject. Note that no signature check is performed.\n   *\n   * @param parent the certificate to check.\n   *\n   * @return true if this certificate's issuer matches the passed certificate's\n   *         subject.\n   */\n  cert.isIssuer = function(parent) {\n    var rval = false;\n\n    var i = cert.issuer;\n    var s = parent.subject;\n\n    // compare hashes if present\n    if(i.hash && s.hash) {\n      rval = (i.hash === s.hash);\n    } else if(i.attributes.length === s.attributes.length) {\n      // all attributes are the same so issuer matches subject\n      rval = true;\n      var iattr, sattr;\n      for(var n = 0; rval && n < i.attributes.length; ++n) {\n        iattr = i.attributes[n];\n        sattr = s.attributes[n];\n        if(iattr.type !== sattr.type || iattr.value !== sattr.value) {\n          // attribute mismatch\n          rval = false;\n        }\n      }\n    }\n\n    return rval;\n  };\n\n  /**\n   * Returns true if this certificate's subject matches the issuer of the\n   * given certificate). Note that not signature check is performed.\n   *\n   * @param child the certificate to check.\n   *\n   * @return true if this certificate's subject matches the passed\n   *         certificate's issuer.\n   */\n  cert.issued = function(child) {\n    return child.isIssuer(cert);\n  };\n\n  /**\n   * Generates the subjectKeyIdentifier for this certificate as byte buffer.\n   *\n   * @return the subjectKeyIdentifier for this certificate as byte buffer.\n   */\n  cert.generateSubjectKeyIdentifier = function() {\n    /* See: 4.2.1.2 section of the the RFC3280, keyIdentifier is either:\n\n      (1) The keyIdentifier is composed of the 160-bit SHA-1 hash of the\n        value of the BIT STRING subjectPublicKey (excluding the tag,\n        length, and number of unused bits).\n\n      (2) The keyIdentifier is composed of a four bit type field with\n        the value 0100 followed by the least significant 60 bits of the\n        SHA-1 hash of the value of the BIT STRING subjectPublicKey\n        (excluding the tag, length, and number of unused bit string bits).\n    */\n\n    // skipping the tag, length, and number of unused bits is the same\n    // as just using the RSAPublicKey (for RSA keys, which are the\n    // only ones supported)\n    return pki.getPublicKeyFingerprint(cert.publicKey, {type: 'RSAPublicKey'});\n  };\n\n  /**\n   * Verifies the subjectKeyIdentifier extension value for this certificate\n   * against its public key. If no extension is found, false will be\n   * returned.\n   *\n   * @return true if verified, false if not.\n   */\n  cert.verifySubjectKeyIdentifier = function() {\n    var oid = oids['subjectKeyIdentifier'];\n    for(var i = 0; i < cert.extensions.length; ++i) {\n      var ext = cert.extensions[i];\n      if(ext.id === oid) {\n        var ski = cert.generateSubjectKeyIdentifier().getBytes();\n        return (forge.util.hexToBytes(ext.subjectKeyIdentifier) === ski);\n      }\n    }\n    return false;\n  };\n\n  return cert;\n};\n\n/**\n * Converts an X.509v3 RSA certificate from an ASN.1 object.\n *\n * Note: If the certificate is to be verified then compute hash should\n * be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the TBSCertificate part of the ASN.1\n * object needs to be scanned before the cert object is created.\n *\n * @param obj the asn1 representation of an X.509v3 RSA certificate.\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certificate.\n */\npki.certificateFromAsn1 = function(obj, computeHash) {\n  // validate certificate and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, x509CertificateValidator, capture, errors)) {\n    var error = new Error('Cannot read X.509 certificate. ' +\n      'ASN.1 object is not an X509v3 Certificate.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids.rsaEncryption) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certificate\n  var cert = pki.createCertificate();\n  cert.version = capture.certVersion ?\n    capture.certVersion.charCodeAt(0) : 0;\n  var serial = forge.util.createBuffer(capture.certSerialNumber);\n  cert.serialNumber = serial.toHex();\n  cert.signatureOid = forge.asn1.derToOid(capture.certSignatureOid);\n  cert.signatureParameters = _readSignatureParameters(\n    cert.signatureOid, capture.certSignatureParams, true);\n  cert.siginfo.algorithmOid = forge.asn1.derToOid(capture.certinfoSignatureOid);\n  cert.siginfo.parameters = _readSignatureParameters(cert.siginfo.algorithmOid,\n    capture.certinfoSignatureParams, false);\n  cert.signature = capture.certSignature;\n\n  var validity = [];\n  if(capture.certValidity1UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity1UTCTime));\n  }\n  if(capture.certValidity2GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity2GeneralizedTime));\n  }\n  if(capture.certValidity3UTCTime !== undefined) {\n    validity.push(asn1.utcTimeToDate(capture.certValidity3UTCTime));\n  }\n  if(capture.certValidity4GeneralizedTime !== undefined) {\n    validity.push(asn1.generalizedTimeToDate(\n      capture.certValidity4GeneralizedTime));\n  }\n  if(validity.length > 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; more ' +\n      'than two times were provided in the certificate.');\n  }\n  if(validity.length < 2) {\n    throw new Error('Cannot read notBefore/notAfter validity times; they ' +\n      'were not provided as either UTCTime or GeneralizedTime.');\n  }\n  cert.validity.notBefore = validity[0];\n  cert.validity.notAfter = validity[1];\n\n  // keep TBSCertificate to preserve signature when exporting\n  cert.tbsCertificate = capture.tbsCertificate;\n\n  if(computeHash) {\n    // create digest for OID signature type\n    cert.md = _createSignatureDigest({\n      signatureOid: cert.signatureOid,\n      type: 'certificate'\n    });\n\n    // produce DER formatted TBSCertificate and digest it\n    var bytes = asn1.toDer(cert.tbsCertificate);\n    cert.md.update(bytes.getBytes());\n  }\n\n  // handle issuer, build issuer message digest\n  var imd = forge.md.sha1.create();\n  var ibytes = asn1.toDer(capture.certIssuer);\n  imd.update(ibytes.getBytes());\n  cert.issuer.getField = function(sn) {\n    return _getAttribute(cert.issuer, sn);\n  };\n  cert.issuer.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.issuer.attributes.push(attr);\n  };\n  cert.issuer.attributes = pki.RDNAttributesAsArray(capture.certIssuer);\n  if(capture.certIssuerUniqueId) {\n    cert.issuer.uniqueId = capture.certIssuerUniqueId;\n  }\n  cert.issuer.hash = imd.digest().toHex();\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  var sbytes = asn1.toDer(capture.certSubject);\n  smd.update(sbytes.getBytes());\n  cert.subject.getField = function(sn) {\n    return _getAttribute(cert.subject, sn);\n  };\n  cert.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    cert.subject.attributes.push(attr);\n  };\n  cert.subject.attributes = pki.RDNAttributesAsArray(capture.certSubject);\n  if(capture.certSubjectUniqueId) {\n    cert.subject.uniqueId = capture.certSubjectUniqueId;\n  }\n  cert.subject.hash = smd.digest().toHex();\n\n  // handle extensions\n  if(capture.certExtensions) {\n    cert.extensions = pki.certificateExtensionsFromAsn1(capture.certExtensions);\n  } else {\n    cert.extensions = [];\n  }\n\n  // convert RSA public key from ASN.1\n  cert.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  return cert;\n};\n\n/**\n * Converts an ASN.1 extensions object (with extension sequences as its\n * values) into an array of extension objects with types and values.\n *\n * Supported extensions:\n *\n * id-ce-keyUsage OBJECT IDENTIFIER ::=  { id-ce 15 }\n * KeyUsage ::= BIT STRING {\n *   digitalSignature        (0),\n *   nonRepudiation          (1),\n *   keyEncipherment         (2),\n *   dataEncipherment        (3),\n *   keyAgreement            (4),\n *   keyCertSign             (5),\n *   cRLSign                 (6),\n *   encipherOnly            (7),\n *   decipherOnly            (8)\n * }\n *\n * id-ce-basicConstraints OBJECT IDENTIFIER ::=  { id-ce 19 }\n * BasicConstraints ::= SEQUENCE {\n *   cA                      BOOLEAN DEFAULT FALSE,\n *   pathLenConstraint       INTEGER (0..MAX) OPTIONAL\n * }\n *\n * subjectAltName EXTENSION ::= {\n *   SYNTAX GeneralNames\n *   IDENTIFIED BY id-ce-subjectAltName\n * }\n *\n * GeneralNames ::= SEQUENCE SIZE (1..MAX) OF GeneralName\n *\n * GeneralName ::= CHOICE {\n *   otherName      [0] INSTANCE OF OTHER-NAME,\n *   rfc822Name     [1] IA5String,\n *   dNSName        [2] IA5String,\n *   x400Address    [3] ORAddress,\n *   directoryName  [4] Name,\n *   ediPartyName   [5] EDIPartyName,\n *   uniformResourceIdentifier [6] IA5String,\n *   IPAddress      [7] OCTET STRING,\n *   registeredID   [8] OBJECT IDENTIFIER\n * }\n *\n * OTHER-NAME ::= TYPE-IDENTIFIER\n *\n * EDIPartyName ::= SEQUENCE {\n *   nameAssigner [0] DirectoryString {ub-name} OPTIONAL,\n *   partyName    [1] DirectoryString {ub-name}\n * }\n *\n * @param exts the extensions ASN.1 with extension sequences to parse.\n *\n * @return the array.\n */\npki.certificateExtensionsFromAsn1 = function(exts) {\n  var rval = [];\n  for(var i = 0; i < exts.value.length; ++i) {\n    // get extension sequence\n    var extseq = exts.value[i];\n    for(var ei = 0; ei < extseq.value.length; ++ei) {\n      rval.push(pki.certificateExtensionFromAsn1(extseq.value[ei]));\n    }\n  }\n\n  return rval;\n};\n\n/**\n * Parses a single certificate extension from ASN.1.\n *\n * @param ext the extension in ASN.1 format.\n *\n * @return the parsed extension as an object.\n */\npki.certificateExtensionFromAsn1 = function(ext) {\n  // an extension has:\n  // [0] extnID      OBJECT IDENTIFIER\n  // [1] critical    BOOLEAN DEFAULT FALSE\n  // [2] extnValue   OCTET STRING\n  var e = {};\n  e.id = asn1.derToOid(ext.value[0].value);\n  e.critical = false;\n  if(ext.value[1].type === asn1.Type.BOOLEAN) {\n    e.critical = (ext.value[1].value.charCodeAt(0) !== 0x00);\n    e.value = ext.value[2].value;\n  } else {\n    e.value = ext.value[1].value;\n  }\n  // if the oid is known, get its name\n  if(e.id in oids) {\n    e.name = oids[e.id];\n\n    // handle key usage\n    if(e.name === 'keyUsage') {\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      var b3 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n        b3 = ev.value.length > 2 ? ev.value.charCodeAt(2) : 0;\n      }\n      // set flags\n      e.digitalSignature = (b2 & 0x80) === 0x80;\n      e.nonRepudiation = (b2 & 0x40) === 0x40;\n      e.keyEncipherment = (b2 & 0x20) === 0x20;\n      e.dataEncipherment = (b2 & 0x10) === 0x10;\n      e.keyAgreement = (b2 & 0x08) === 0x08;\n      e.keyCertSign = (b2 & 0x04) === 0x04;\n      e.cRLSign = (b2 & 0x02) === 0x02;\n      e.encipherOnly = (b2 & 0x01) === 0x01;\n      e.decipherOnly = (b3 & 0x80) === 0x80;\n    } else if(e.name === 'basicConstraints') {\n      // handle basic constraints\n      // get value as SEQUENCE\n      var ev = asn1.fromDer(e.value);\n      // get cA BOOLEAN flag (defaults to false)\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.BOOLEAN) {\n        e.cA = (ev.value[0].value.charCodeAt(0) !== 0x00);\n      } else {\n        e.cA = false;\n      }\n      // get path length constraint\n      var value = null;\n      if(ev.value.length > 0 && ev.value[0].type === asn1.Type.INTEGER) {\n        value = ev.value[0].value;\n      } else if(ev.value.length > 1) {\n        value = ev.value[1].value;\n      }\n      if(value !== null) {\n        e.pathLenConstraint = asn1.derToInteger(value);\n      }\n    } else if(e.name === 'extKeyUsage') {\n      // handle extKeyUsage\n      // value is a SEQUENCE of OIDs\n      var ev = asn1.fromDer(e.value);\n      for(var vi = 0; vi < ev.value.length; ++vi) {\n        var oid = asn1.derToOid(ev.value[vi].value);\n        if(oid in oids) {\n          e[oids[oid]] = true;\n        } else {\n          e[oid] = true;\n        }\n      }\n    } else if(e.name === 'nsCertType') {\n      // handle nsCertType\n      // get value as BIT STRING\n      var ev = asn1.fromDer(e.value);\n      var b2 = 0x00;\n      if(ev.value.length > 1) {\n        // skip first byte, just indicates unused bits which\n        // will be padded with 0s anyway\n        // get bytes with flag bits\n        b2 = ev.value.charCodeAt(1);\n      }\n      // set flags\n      e.client = (b2 & 0x80) === 0x80;\n      e.server = (b2 & 0x40) === 0x40;\n      e.email = (b2 & 0x20) === 0x20;\n      e.objsign = (b2 & 0x10) === 0x10;\n      e.reserved = (b2 & 0x08) === 0x08;\n      e.sslCA = (b2 & 0x04) === 0x04;\n      e.emailCA = (b2 & 0x02) === 0x02;\n      e.objCA = (b2 & 0x01) === 0x01;\n    } else if(\n      e.name === 'subjectAltName' ||\n      e.name === 'issuerAltName') {\n      // handle subjectAltName/issuerAltName\n      e.altNames = [];\n\n      // ev is a SYNTAX SEQUENCE\n      var gn;\n      var ev = asn1.fromDer(e.value);\n      for(var n = 0; n < ev.value.length; ++n) {\n        // get GeneralName\n        gn = ev.value[n];\n\n        var altName = {\n          type: gn.type,\n          value: gn.value\n        };\n        e.altNames.push(altName);\n\n        // Note: Support for types 1,2,6,7,8\n        switch(gn.type) {\n          // rfc822Name\n          case 1:\n          // dNSName\n          case 2:\n          // uniformResourceIdentifier (URI)\n          case 6:\n            break;\n          // IPAddress\n          case 7:\n            // convert to IPv4/IPv6 string representation\n            altName.ip = forge.util.bytesToIP(gn.value);\n            break;\n          // registeredID\n          case 8:\n            altName.oid = asn1.derToOid(gn.value);\n            break;\n          default:\n            // unsupported\n        }\n      }\n    } else if(e.name === 'subjectKeyIdentifier') {\n      // value is an OCTETSTRING w/the hash of the key-type specific\n      // public key structure (eg: RSAPublicKey)\n      var ev = asn1.fromDer(e.value);\n      e.subjectKeyIdentifier = forge.util.bytesToHex(ev.value);\n    }\n  }\n  return e;\n};\n\n/**\n * Converts a PKCS#10 certification request (CSR) from an ASN.1 object.\n *\n * Note: If the certification request is to be verified then compute hash\n * should be set to true. There is currently no implementation for converting\n * a certificate back to ASN.1 so the CertificationRequestInfo part of the\n * ASN.1 object needs to be scanned before the csr object is created.\n *\n * @param obj the asn1 representation of a PKCS#10 certification request (CSR).\n * @param computeHash true to compute the hash for verification.\n *\n * @return the certification request (CSR).\n */\npki.certificationRequestFromAsn1 = function(obj, computeHash) {\n  // validate certification request and capture data\n  var capture = {};\n  var errors = [];\n  if(!asn1.validate(obj, certificationRequestValidator, capture, errors)) {\n    var error = new Error('Cannot read PKCS#10 certificate request. ' +\n      'ASN.1 object is not a PKCS#10 CertificationRequest.');\n    error.errors = errors;\n    throw error;\n  }\n\n  // get oid\n  var oid = asn1.derToOid(capture.publicKeyOid);\n  if(oid !== pki.oids.rsaEncryption) {\n    throw new Error('Cannot read public key. OID is not RSA.');\n  }\n\n  // create certification request\n  var csr = pki.createCertificationRequest();\n  csr.version = capture.csrVersion ? capture.csrVersion.charCodeAt(0) : 0;\n  csr.signatureOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.signatureParameters = _readSignatureParameters(\n    csr.signatureOid, capture.csrSignatureParams, true);\n  csr.siginfo.algorithmOid = forge.asn1.derToOid(capture.csrSignatureOid);\n  csr.siginfo.parameters = _readSignatureParameters(\n    csr.siginfo.algorithmOid, capture.csrSignatureParams, false);\n  csr.signature = capture.csrSignature;\n\n  // keep CertificationRequestInfo to preserve signature when exporting\n  csr.certificationRequestInfo = capture.certificationRequestInfo;\n\n  if(computeHash) {\n    // create digest for OID signature type\n    csr.md = _createSignatureDigest({\n      signatureOid: csr.signatureOid,\n      type: 'certification request'\n    });\n\n    // produce DER formatted CertificationRequestInfo and digest it\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n    csr.md.update(bytes.getBytes());\n  }\n\n  // handle subject, build subject message digest\n  var smd = forge.md.sha1.create();\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = pki.RDNAttributesAsArray(\n    capture.certificationRequestInfoSubject, smd);\n  csr.subject.hash = smd.digest().toHex();\n\n  // convert RSA public key from ASN.1\n  csr.publicKey = pki.publicKeyFromAsn1(capture.subjectPublicKeyInfo);\n\n  // convert attributes from ASN.1\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.attributes = pki.CRIAttributesAsArray(\n    capture.certificationRequestInfoAttributes || []);\n\n  return csr;\n};\n\n/**\n * Creates an empty certification request (a CSR or certificate signing\n * request). Once created, its public key and attributes can be set and then\n * it can be signed.\n *\n * @return the empty certification request.\n */\npki.createCertificationRequest = function() {\n  var csr = {};\n  csr.version = 0x00;\n  csr.signatureOid = null;\n  csr.signature = null;\n  csr.siginfo = {};\n  csr.siginfo.algorithmOid = null;\n\n  csr.subject = {};\n  csr.subject.getField = function(sn) {\n    return _getAttribute(csr.subject, sn);\n  };\n  csr.subject.addField = function(attr) {\n    _fillMissingFields([attr]);\n    csr.subject.attributes.push(attr);\n  };\n  csr.subject.attributes = [];\n  csr.subject.hash = null;\n\n  csr.publicKey = null;\n  csr.attributes = [];\n  csr.getAttribute = function(sn) {\n    return _getAttribute(csr, sn);\n  };\n  csr.addAttribute = function(attr) {\n    _fillMissingFields([attr]);\n    csr.attributes.push(attr);\n  };\n  csr.md = null;\n\n  /**\n   * Sets the subject of this certification request.\n   *\n   * @param attrs the array of subject attributes to use.\n   */\n  csr.setSubject = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.subject.attributes = attrs;\n    csr.subject.hash = null;\n  };\n\n  /**\n   * Sets the attributes of this certification request.\n   *\n   * @param attrs the array of attributes to use.\n   */\n  csr.setAttributes = function(attrs) {\n    // set new attributes\n    _fillMissingFields(attrs);\n    csr.attributes = attrs;\n  };\n\n  /**\n   * Signs this certification request using the given private key.\n   *\n   * @param key the private key to sign with.\n   * @param md the message digest object to use (defaults to forge.md.sha1).\n   */\n  csr.sign = function(key, md) {\n    // TODO: get signature OID from private key\n    csr.md = md || forge.md.sha1.create();\n    var algorithmOid = oids[csr.md.algorithm + 'WithRSAEncryption'];\n    if(!algorithmOid) {\n      var error = new Error('Could not compute certification request digest. ' +\n        'Unknown message digest algorithm OID.');\n      error.algorithm = csr.md.algorithm;\n      throw error;\n    }\n    csr.signatureOid = csr.siginfo.algorithmOid = algorithmOid;\n\n    // get CertificationRequestInfo, convert to DER\n    csr.certificationRequestInfo = pki.getCertificationRequestInfo(csr);\n    var bytes = asn1.toDer(csr.certificationRequestInfo);\n\n    // digest and sign\n    csr.md.update(bytes.getBytes());\n    csr.signature = key.sign(csr.md);\n  };\n\n  /**\n   * Attempts verify the signature on the passed certification request using\n   * its public key.\n   *\n   * A CSR that has been exported to a file in PEM format can be verified using\n   * OpenSSL using this command:\n   *\n   * openssl req -in <the-csr-pem-file> -verify -noout -text\n   *\n   * @return true if verified, false if not.\n   */\n  csr.verify = function() {\n    var rval = false;\n\n    var md = csr.md;\n    if(md === null) {\n      md = _createSignatureDigest({\n        signatureOid: csr.signatureOid,\n        type: 'certification request'\n      });\n\n      // produce DER formatted CertificationRequestInfo and digest it\n      var cri = csr.certificationRequestInfo ||\n        pki.getCertificationRequestInfo(csr);\n      var bytes = asn1.toDer(cri);\n      md.update(bytes.getBytes());\n    }\n\n    if(md !== null) {\n      rval = _verifySignature({\n        certificate: csr, md: md, signature: csr.signature\n      });\n    }\n\n    return rval;\n  };\n\n  return csr;\n};\n\n/**\n * Converts an X.509 subject or issuer to an ASN.1 RDNSequence.\n *\n * @param obj the subject or issuer (distinguished name).\n *\n * @return the ASN.1 RDNSequence.\n */\nfunction _dnToAsn1(obj) {\n  // create an empty RDNSequence\n  var rval = asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // iterate over attributes\n  var attr, set;\n  var attrs = obj.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.PRINTABLESTRING;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n\n      if(valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(value);\n      }\n      // FIXME: handle more encodings\n    }\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    set = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n        // AttributeType\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n          asn1.oidToDer(attr.type).getBytes()),\n        // AttributeValue\n        asn1.create(asn1.Class.UNIVERSAL, valueTagClass, false, value)\n      ])\n    ]);\n    rval.value.push(set);\n  }\n\n  return rval;\n}\n\n/**\n * Gets all printable attributes (typically of an issuer or subject) in a\n * simplified JSON format for display.\n *\n * @param attrs the attributes.\n *\n * @return the JSON for display.\n */\nfunction _getAttributesAsJson(attrs) {\n  var rval = {};\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    if(attr.shortName && (\n      attr.valueTagClass === asn1.Type.UTF8 ||\n      attr.valueTagClass === asn1.Type.PRINTABLESTRING ||\n      attr.valueTagClass === asn1.Type.IA5STRING)) {\n      var value = attr.value;\n      if(attr.valueTagClass === asn1.Type.UTF8) {\n        value = forge.util.encodeUtf8(attr.value);\n      }\n      if(!(attr.shortName in rval)) {\n        rval[attr.shortName] = value;\n      } else if(forge.util.isArray(rval[attr.shortName])) {\n        rval[attr.shortName].push(value);\n      } else {\n        rval[attr.shortName] = [rval[attr.shortName], value];\n      }\n    }\n  }\n  return rval;\n}\n\n/**\n * Fills in missing fields in attributes.\n *\n * @param attrs the attributes to fill missing fields in.\n */\nfunction _fillMissingFields(attrs) {\n  var attr;\n  for(var i = 0; i < attrs.length; ++i) {\n    attr = attrs[i];\n\n    // populate missing name\n    if(typeof attr.name === 'undefined') {\n      if(attr.type && attr.type in pki.oids) {\n        attr.name = pki.oids[attr.type];\n      } else if(attr.shortName && attr.shortName in _shortNames) {\n        attr.name = pki.oids[_shortNames[attr.shortName]];\n      }\n    }\n\n    // populate missing type (OID)\n    if(typeof attr.type === 'undefined') {\n      if(attr.name && attr.name in pki.oids) {\n        attr.type = pki.oids[attr.name];\n      } else {\n        var error = new Error('Attribute type not specified.');\n        error.attribute = attr;\n        throw error;\n      }\n    }\n\n    // populate missing shortname\n    if(typeof attr.shortName === 'undefined') {\n      if(attr.name && attr.name in _shortNames) {\n        attr.shortName = _shortNames[attr.name];\n      }\n    }\n\n    // convert extensions to value\n    if(attr.type === oids.extensionRequest) {\n      attr.valueConstructed = true;\n      attr.valueTagClass = asn1.Type.SEQUENCE;\n      if(!attr.value && attr.extensions) {\n        attr.value = [];\n        for(var ei = 0; ei < attr.extensions.length; ++ei) {\n          attr.value.push(pki.certificateExtensionToAsn1(\n            _fillMissingExtensionFields(attr.extensions[ei])));\n        }\n      }\n    }\n\n    if(typeof attr.value === 'undefined') {\n      var error = new Error('Attribute value not specified.');\n      error.attribute = attr;\n      throw error;\n    }\n  }\n}\n\n/**\n * Fills in missing fields in certificate extensions.\n *\n * @param e the extension.\n * @param [options] the options to use.\n *          [cert] the certificate the extensions are for.\n *\n * @return the extension.\n */\nfunction _fillMissingExtensionFields(e, options) {\n  options = options || {};\n\n  // populate missing name\n  if(typeof e.name === 'undefined') {\n    if(e.id && e.id in pki.oids) {\n      e.name = pki.oids[e.id];\n    }\n  }\n\n  // populate missing id\n  if(typeof e.id === 'undefined') {\n    if(e.name && e.name in pki.oids) {\n      e.id = pki.oids[e.name];\n    } else {\n      var error = new Error('Extension ID not specified.');\n      error.extension = e;\n      throw error;\n    }\n  }\n\n  if(typeof e.value !== 'undefined') {\n    return e;\n  }\n\n  // handle missing value:\n\n  // value is a BIT STRING\n  if(e.name === 'keyUsage') {\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n    var b3 = 0x00;\n    if(e.digitalSignature) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.nonRepudiation) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.keyEncipherment) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.dataEncipherment) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.keyAgreement) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.keyCertSign) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.cRLSign) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.encipherOnly) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n    if(e.decipherOnly) {\n      b3 |= 0x80;\n      unused = 7;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b3 !== 0) {\n      value += String.fromCharCode(b2) + String.fromCharCode(b3);\n    } else if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'basicConstraints') {\n    // basicConstraints is a SEQUENCE\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    // cA BOOLEAN flag defaults to false\n    if(e.cA) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n        String.fromCharCode(0xFF)));\n    }\n    if('pathLenConstraint' in e) {\n      e.value.value.push(asn1.create(\n        asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(e.pathLenConstraint).getBytes()));\n    }\n  } else if(e.name === 'extKeyUsage') {\n    // extKeyUsage is a SEQUENCE of OIDs\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n    for(var key in e) {\n      if(e[key] !== true) {\n        continue;\n      }\n      // key is name in OID map\n      if(key in oids) {\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(oids[key]).getBytes()));\n      } else if(key.indexOf('.') !== -1) {\n        // assume key is an OID\n        seq.push(asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID,\n          false, asn1.oidToDer(key).getBytes()));\n      }\n    }\n  } else if(e.name === 'nsCertType') {\n    // nsCertType is a BIT STRING\n    // build flags\n    var unused = 0;\n    var b2 = 0x00;\n\n    if(e.client) {\n      b2 |= 0x80;\n      unused = 7;\n    }\n    if(e.server) {\n      b2 |= 0x40;\n      unused = 6;\n    }\n    if(e.email) {\n      b2 |= 0x20;\n      unused = 5;\n    }\n    if(e.objsign) {\n      b2 |= 0x10;\n      unused = 4;\n    }\n    if(e.reserved) {\n      b2 |= 0x08;\n      unused = 3;\n    }\n    if(e.sslCA) {\n      b2 |= 0x04;\n      unused = 2;\n    }\n    if(e.emailCA) {\n      b2 |= 0x02;\n      unused = 1;\n    }\n    if(e.objCA) {\n      b2 |= 0x01;\n      unused = 0;\n    }\n\n    // create bit string\n    var value = String.fromCharCode(unused);\n    if(b2 !== 0) {\n      value += String.fromCharCode(b2);\n    }\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false, value);\n  } else if(e.name === 'subjectAltName' || e.name === 'issuerAltName') {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      e.value.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n  } else if(e.name === 'nsComment' && options.cert) {\n    // sanity check value is ASCII (req'd) and not too big\n    if(!(/^[\\x00-\\x7F]*$/.test(e.comment)) ||\n      (e.comment.length < 1) || (e.comment.length > 128)) {\n      throw new Error('Invalid \"nsComment\" content.');\n    }\n    // IA5STRING opaque comment\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.IA5STRING, false, e.comment);\n  } else if(e.name === 'subjectKeyIdentifier' && options.cert) {\n    var ski = options.cert.generateSubjectKeyIdentifier();\n    e.subjectKeyIdentifier = ski.toHex();\n    // OCTETSTRING w/digest\n    e.value = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, ski.getBytes());\n  } else if(e.name === 'authorityKeyIdentifier' && options.cert) {\n    // SYNTAX SEQUENCE\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    if(e.keyIdentifier) {\n      var keyIdentifier = (e.keyIdentifier === true ?\n        options.cert.generateSubjectKeyIdentifier().getBytes() :\n        e.keyIdentifier);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, false, keyIdentifier));\n    }\n\n    if(e.authorityCertIssuer) {\n      var authorityCertIssuer = [\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 4, true, [\n          _dnToAsn1(e.authorityCertIssuer === true ?\n            options.cert.issuer : e.authorityCertIssuer)\n        ])\n      ];\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, authorityCertIssuer));\n    }\n\n    if(e.serialNumber) {\n      var serialNumber = forge.util.hexToBytes(e.serialNumber === true ?\n        options.cert.serialNumber : e.serialNumber);\n      seq.push(\n        asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, false, serialNumber));\n    }\n  } else if(e.name === 'cRLDistributionPoints') {\n    e.value = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n    var seq = e.value.value;\n\n    // Create sub SEQUENCE of DistributionPointName\n    var subSeq = asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n    // Create fullName CHOICE\n    var fullNameGeneralNames = asn1.create(\n      asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n    var altName;\n    for(var n = 0; n < e.altNames.length; ++n) {\n      altName = e.altNames[n];\n      var value = altName.value;\n      // handle IP\n      if(altName.type === 7 && altName.ip) {\n        value = forge.util.bytesFromIP(altName.ip);\n        if(value === null) {\n          var error = new Error(\n            'Extension \"ip\" value is not a valid IPv4 or IPv6 address.');\n          error.extension = e;\n          throw error;\n        }\n      } else if(altName.type === 8) {\n        // handle OID\n        if(altName.oid) {\n          value = asn1.oidToDer(asn1.oidToDer(altName.oid));\n        } else {\n          // deprecated ... convert value to OID\n          value = asn1.oidToDer(value);\n        }\n      }\n      fullNameGeneralNames.value.push(asn1.create(\n        asn1.Class.CONTEXT_SPECIFIC, altName.type, false,\n        value));\n    }\n\n    // Add to the parent SEQUENCE\n    subSeq.value.push(asn1.create(\n      asn1.Class.CONTEXT_SPECIFIC, 0, true, [fullNameGeneralNames]));\n    seq.push(subSeq);\n  }\n\n  // ensure value has been defined by now\n  if(typeof e.value === 'undefined') {\n    var error = new Error('Extension value not specified.');\n    error.extension = e;\n    throw error;\n  }\n\n  return e;\n}\n\n/**\n * Convert signature parameters object to ASN.1\n *\n * @param {String} oid Signature algorithm OID\n * @param params The signature parametrs object\n * @return ASN.1 object representing signature parameters\n */\nfunction _signatureParametersToAsn1(oid, params) {\n  switch(oid) {\n    case oids['RSASSA-PSS']:\n      var parts = [];\n\n      if(params.hash.algorithmOid !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(params.hash.algorithmOid).getBytes()),\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n          ])\n        ]));\n      }\n\n      if(params.mgf.algorithmOid !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n              asn1.oidToDer(params.mgf.algorithmOid).getBytes()),\n            asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n              asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n                asn1.oidToDer(params.mgf.hash.algorithmOid).getBytes()),\n              asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '')\n            ])\n          ])\n        ]));\n      }\n\n      if(params.saltLength !== undefined) {\n        parts.push(asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n          asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n            asn1.integerToDer(params.saltLength).getBytes())\n        ]));\n      }\n\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, parts);\n\n    default:\n      return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.NULL, false, '');\n  }\n}\n\n/**\n * Converts a certification request's attributes to an ASN.1 set of\n * CRIAttributes.\n *\n * @param csr certification request.\n *\n * @return the ASN.1 set of CRIAttributes.\n */\nfunction _CRIAttributesToAsn1(csr) {\n  // create an empty context-specific container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, []);\n\n  // no attributes, return empty container\n  if(csr.attributes.length === 0) {\n    return rval;\n  }\n\n  // each attribute has a sequence with a type and a set of values\n  var attrs = csr.attributes;\n  for(var i = 0; i < attrs.length; ++i) {\n    var attr = attrs[i];\n    var value = attr.value;\n\n    // reuse tag class for attribute value if available\n    var valueTagClass = asn1.Type.UTF8;\n    if('valueTagClass' in attr) {\n      valueTagClass = attr.valueTagClass;\n    }\n    if(valueTagClass === asn1.Type.UTF8) {\n      value = forge.util.encodeUtf8(value);\n    }\n    var valueConstructed = false;\n    if('valueConstructed' in attr) {\n      valueConstructed = attr.valueConstructed;\n    }\n    // FIXME: handle more encodings\n\n    // create a RelativeDistinguishedName set\n    // each value in the set is an AttributeTypeAndValue first\n    // containing the type (an OID) and second the value\n    var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // AttributeType\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(attr.type).getBytes()),\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SET, true, [\n        // AttributeValue\n        asn1.create(\n          asn1.Class.UNIVERSAL, valueTagClass, valueConstructed, value)\n      ])\n    ]);\n    rval.value.push(seq);\n  }\n\n  return rval;\n}\n\nvar jan_1_1950 = new Date('1950-01-01T00:00:00Z');\nvar jan_1_2050 = new Date('2050-01-01T00:00:00Z');\n\n/**\n * Converts a Date object to ASN.1\n * Handles the different format before and after 1st January 2050\n *\n * @param date date object.\n *\n * @return the ASN.1 object representing the date.\n */\nfunction _dateToAsn1(date) {\n  if(date >= jan_1_1950 && date < jan_1_2050) {\n    return asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.UTCTIME, false,\n      asn1.dateToUtcTime(date));\n  } else {\n    return asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.GENERALIZEDTIME, false,\n      asn1.dateToGeneralizedTime(date));\n  }\n}\n\n/**\n * Gets the ASN.1 TBSCertificate part of an X.509v3 certificate.\n *\n * @param cert the certificate.\n *\n * @return the asn1 TBSCertificate.\n */\npki.getTBSCertificate = function(cert) {\n  // TBSCertificate\n  var notBefore = _dateToAsn1(cert.validity.notBefore);\n  var notAfter = _dateToAsn1(cert.validity.notAfter);\n  var tbs = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.CONTEXT_SPECIFIC, 0, true, [\n      // integer\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n        asn1.integerToDer(cert.version).getBytes())\n    ]),\n    // serialNumber\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      forge.util.hexToBytes(cert.serialNumber)),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.siginfo.algorithmOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(\n        cert.siginfo.algorithmOid, cert.siginfo.parameters)\n    ]),\n    // issuer\n    _dnToAsn1(cert.issuer),\n    // validity\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      notBefore,\n      notAfter\n    ]),\n    // subject\n    _dnToAsn1(cert.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(cert.publicKey)\n  ]);\n\n  if(cert.issuer.uniqueId) {\n    // issuerUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 1, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          // TODO: support arbitrary bit length ids\n          String.fromCharCode(0x00) +\n          cert.issuer.uniqueId\n        )\n      ])\n    );\n  }\n  if(cert.subject.uniqueId) {\n    // subjectUniqueID (optional)\n    tbs.value.push(\n      asn1.create(asn1.Class.CONTEXT_SPECIFIC, 2, true, [\n        asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n          // TODO: support arbitrary bit length ids\n          String.fromCharCode(0x00) +\n          cert.subject.uniqueId\n        )\n      ])\n    );\n  }\n\n  if(cert.extensions.length > 0) {\n    // extensions (optional)\n    tbs.value.push(pki.certificateExtensionsToAsn1(cert.extensions));\n  }\n\n  return tbs;\n};\n\n/**\n * Gets the ASN.1 CertificationRequestInfo part of a\n * PKCS#10 CertificationRequest.\n *\n * @param csr the certification request.\n *\n * @return the asn1 CertificationRequestInfo.\n */\npki.getCertificationRequestInfo = function(csr) {\n  // CertificationRequestInfo\n  var cri = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // version\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.INTEGER, false,\n      asn1.integerToDer(csr.version).getBytes()),\n    // subject\n    _dnToAsn1(csr.subject),\n    // SubjectPublicKeyInfo\n    pki.publicKeyToAsn1(csr.publicKey),\n    // attributes\n    _CRIAttributesToAsn1(csr)\n  ]);\n\n  return cri;\n};\n\n/**\n * Converts a DistinguishedName (subject or issuer) to an ASN.1 object.\n *\n * @param dn the DistinguishedName.\n *\n * @return the asn1 representation of a DistinguishedName.\n */\npki.distinguishedNameToAsn1 = function(dn) {\n  return _dnToAsn1(dn);\n};\n\n/**\n * Converts an X.509v3 RSA certificate to an ASN.1 object.\n *\n * @param cert the certificate.\n *\n * @return the asn1 representation of an X.509v3 RSA certificate.\n */\npki.certificateToAsn1 = function(cert) {\n  // prefer cached TBSCertificate over generating one\n  var tbsCertificate = cert.tbsCertificate || pki.getTBSCertificate(cert);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // TBSCertificate\n    tbsCertificate,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(cert.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(cert.signatureOid, cert.signatureParameters)\n    ]),\n    // SignatureValue\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + cert.signature)\n  ]);\n};\n\n/**\n * Converts X.509v3 certificate extensions to ASN.1.\n *\n * @param exts the extensions to convert.\n *\n * @return the extensions in ASN.1 format.\n */\npki.certificateExtensionsToAsn1 = function(exts) {\n  // create top-level extension container\n  var rval = asn1.create(asn1.Class.CONTEXT_SPECIFIC, 3, true, []);\n\n  // create extension sequence (stores a sequence for each extension)\n  var seq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n  rval.value.push(seq);\n\n  for(var i = 0; i < exts.length; ++i) {\n    seq.value.push(pki.certificateExtensionToAsn1(exts[i]));\n  }\n\n  return rval;\n};\n\n/**\n * Converts a single certificate extension to ASN.1.\n *\n * @param ext the extension to convert.\n *\n * @return the extension in ASN.1 format.\n */\npki.certificateExtensionToAsn1 = function(ext) {\n  // create a sequence for each extension\n  var extseq = asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, []);\n\n  // extnID (OID)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n    asn1.oidToDer(ext.id).getBytes()));\n\n  // critical defaults to false\n  if(ext.critical) {\n    // critical BOOLEAN DEFAULT FALSE\n    extseq.value.push(asn1.create(\n      asn1.Class.UNIVERSAL, asn1.Type.BOOLEAN, false,\n      String.fromCharCode(0xFF)));\n  }\n\n  var value = ext.value;\n  if(typeof ext.value !== 'string') {\n    // value is asn.1\n    value = asn1.toDer(value).getBytes();\n  }\n\n  // extnValue (OCTET STRING)\n  extseq.value.push(asn1.create(\n    asn1.Class.UNIVERSAL, asn1.Type.OCTETSTRING, false, value));\n\n  return extseq;\n};\n\n/**\n * Converts a PKCS#10 certification request to an ASN.1 object.\n *\n * @param csr the certification request.\n *\n * @return the asn1 representation of a certification request.\n */\npki.certificationRequestToAsn1 = function(csr) {\n  // prefer cached CertificationRequestInfo over generating one\n  var cri = csr.certificationRequestInfo ||\n    pki.getCertificationRequestInfo(csr);\n\n  // Certificate\n  return asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n    // CertificationRequestInfo\n    cri,\n    // AlgorithmIdentifier (signature algorithm)\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.SEQUENCE, true, [\n      // algorithm\n      asn1.create(asn1.Class.UNIVERSAL, asn1.Type.OID, false,\n        asn1.oidToDer(csr.signatureOid).getBytes()),\n      // parameters\n      _signatureParametersToAsn1(csr.signatureOid, csr.signatureParameters)\n    ]),\n    // signature\n    asn1.create(asn1.Class.UNIVERSAL, asn1.Type.BITSTRING, false,\n      String.fromCharCode(0x00) + csr.signature)\n  ]);\n};\n\n/**\n * Creates a CA store.\n *\n * @param certs an optional array of certificate objects or PEM-formatted\n *          certificate strings to add to the CA store.\n *\n * @return the CA store.\n */\npki.createCaStore = function(certs) {\n  // create CA store\n  var caStore = {\n    // stored certificates\n    certs: {}\n  };\n\n  /**\n   * Gets the certificate that issued the passed certificate or its\n   * 'parent'.\n   *\n   * @param cert the certificate to get the parent for.\n   *\n   * @return the parent certificate or null if none was found.\n   */\n  caStore.getIssuer = function(cert) {\n    var rval = getBySubject(cert.issuer);\n\n    // see if there are multiple matches\n    /*if(forge.util.isArray(rval)) {\n      // TODO: resolve multiple matches by checking\n      // authorityKey/subjectKey/issuerUniqueID/other identifiers, etc.\n      // FIXME: or alternatively do authority key mapping\n      // if possible (X.509v1 certs can't work?)\n      throw new Error('Resolving multiple issuer matches not implemented yet.');\n    }*/\n\n    return rval;\n  };\n\n  /**\n   * Adds a trusted certificate to the store.\n   *\n   * @param cert the certificate to add as a trusted certificate (either a\n   *          pki.certificate object or a PEM-formatted certificate).\n   */\n  caStore.addCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    ensureSubjectHasHash(cert.subject);\n\n    if(!caStore.hasCertificate(cert)) { // avoid duplicate certificates in store\n      if(cert.subject.hash in caStore.certs) {\n        // subject hash already exists, append to array\n        var tmp = caStore.certs[cert.subject.hash];\n        if(!forge.util.isArray(tmp)) {\n          tmp = [tmp];\n        }\n        tmp.push(cert);\n        caStore.certs[cert.subject.hash] = tmp;\n      } else {\n        caStore.certs[cert.subject.hash] = cert;\n      }\n    }\n  };\n\n  /**\n   * Checks to see if the given certificate is in the store.\n   *\n   * @param cert the certificate to check (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return true if the certificate is in the store, false if not.\n   */\n  caStore.hasCertificate = function(cert) {\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n\n    var match = getBySubject(cert.subject);\n    if(!match) {\n      return false;\n    }\n    if(!forge.util.isArray(match)) {\n      match = [match];\n    }\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Lists all of the certificates kept in the store.\n   *\n   * @return an array of all of the pki.certificate objects in the store.\n   */\n  caStore.listAllCertificates = function() {\n    var certList = [];\n\n    for(var hash in caStore.certs) {\n      if(caStore.certs.hasOwnProperty(hash)) {\n        var value = caStore.certs[hash];\n        if(!forge.util.isArray(value)) {\n          certList.push(value);\n        } else {\n          for(var i = 0; i < value.length; ++i) {\n            certList.push(value[i]);\n          }\n        }\n      }\n    }\n\n    return certList;\n  };\n\n  /**\n   * Removes a certificate from the store.\n   *\n   * @param cert the certificate to remove (either a pki.certificate or a\n   *          PEM-formatted certificate).\n   *\n   * @return the certificate that was removed or null if the certificate\n   *           wasn't in store.\n   */\n  caStore.removeCertificate = function(cert) {\n    var result;\n\n    // convert from pem if necessary\n    if(typeof cert === 'string') {\n      cert = forge.pki.certificateFromPem(cert);\n    }\n    ensureSubjectHasHash(cert.subject);\n    if(!caStore.hasCertificate(cert)) {\n      return null;\n    }\n\n    var match = getBySubject(cert.subject);\n\n    if(!forge.util.isArray(match)) {\n      result = caStore.certs[cert.subject.hash];\n      delete caStore.certs[cert.subject.hash];\n      return result;\n    }\n\n    // compare DER-encoding of certificates\n    var der1 = asn1.toDer(pki.certificateToAsn1(cert)).getBytes();\n    for(var i = 0; i < match.length; ++i) {\n      var der2 = asn1.toDer(pki.certificateToAsn1(match[i])).getBytes();\n      if(der1 === der2) {\n        result = match[i];\n        match.splice(i, 1);\n      }\n    }\n    if(match.length === 0) {\n      delete caStore.certs[cert.subject.hash];\n    }\n\n    return result;\n  };\n\n  function getBySubject(subject) {\n    ensureSubjectHasHash(subject);\n    return caStore.certs[subject.hash] || null;\n  }\n\n  function ensureSubjectHasHash(subject) {\n    // produce subject hash if it doesn't exist\n    if(!subject.hash) {\n      var md = forge.md.sha1.create();\n      subject.attributes = pki.RDNAttributesAsArray(_dnToAsn1(subject), md);\n      subject.hash = md.digest().toHex();\n    }\n  }\n\n  // auto-add passed in certs\n  if(certs) {\n    // parse PEM-formatted certificates as necessary\n    for(var i = 0; i < certs.length; ++i) {\n      var cert = certs[i];\n      caStore.addCertificate(cert);\n    }\n  }\n\n  return caStore;\n};\n\n/**\n * Certificate verification errors, based on TLS.\n */\npki.certificateError = {\n  bad_certificate: 'forge.pki.BadCertificate',\n  unsupported_certificate: 'forge.pki.UnsupportedCertificate',\n  certificate_revoked: 'forge.pki.CertificateRevoked',\n  certificate_expired: 'forge.pki.CertificateExpired',\n  certificate_unknown: 'forge.pki.CertificateUnknown',\n  unknown_ca: 'forge.pki.UnknownCertificateAuthority'\n};\n\n/**\n * Verifies a certificate chain against the given Certificate Authority store\n * with an optional custom verify callback.\n *\n * @param caStore a certificate store to verify against.\n * @param chain the certificate chain to verify, with the root or highest\n *          authority at the end (an array of certificates).\n * @param options a callback to be called for every certificate in the chain or\n *                  an object with:\n *                  verify a callback to be called for every certificate in the\n *                    chain\n *                  validityCheckDate the date against which the certificate\n *                    validity period should be checked. Pass null to not check\n *                    the validity period. By default, the current date is used.\n *\n * The verify callback has the following signature:\n *\n * verified - Set to true if certificate was verified, otherwise the\n *   pki.certificateError for why the certificate failed.\n * depth - The current index in the chain, where 0 is the end point's cert.\n * certs - The certificate chain, *NOTE* an empty chain indicates an anonymous\n *   end point.\n *\n * The function returns true on success and on failure either the appropriate\n * pki.certificateError or an object with 'error' set to the appropriate\n * pki.certificateError and 'message' set to a custom error message.\n *\n * @return true if successful, error thrown if not.\n */\npki.verifyCertificateChain = function(caStore, chain, options) {\n  /* From: RFC3280 - Internet X.509 Public Key Infrastructure Certificate\n    Section 6: Certification Path Validation\n    See inline parentheticals related to this particular implementation.\n\n    The primary goal of path validation is to verify the binding between\n    a subject distinguished name or a subject alternative name and subject\n    public key, as represented in the end entity certificate, based on the\n    public key of the trust anchor. This requires obtaining a sequence of\n    certificates that support that binding. That sequence should be provided\n    in the passed 'chain'. The trust anchor should be in the given CA\n    store. The 'end entity' certificate is the certificate provided by the\n    end point (typically a server) and is the first in the chain.\n\n    To meet this goal, the path validation process verifies, among other\n    things, that a prospective certification path (a sequence of n\n    certificates or a 'chain') satisfies the following conditions:\n\n    (a) for all x in {1, ..., n-1}, the subject of certificate x is\n          the issuer of certificate x+1;\n\n    (b) certificate 1 is issued by the trust anchor;\n\n    (c) certificate n is the certificate to be validated; and\n\n    (d) for all x in {1, ..., n}, the certificate was valid at the\n          time in question.\n\n    Note that here 'n' is index 0 in the chain and 1 is the last certificate\n    in the chain and it must be signed by a certificate in the connection's\n    CA store.\n\n    The path validation process also determines the set of certificate\n    policies that are valid for this path, based on the certificate policies\n    extension, policy mapping extension, policy constraints extension, and\n    inhibit any-policy extension.\n\n    Note: Policy mapping extension not supported (Not Required).\n\n    Note: If the certificate has an unsupported critical extension, then it\n    must be rejected.\n\n    Note: A certificate is self-issued if the DNs that appear in the subject\n    and issuer fields are identical and are not empty.\n\n    The path validation algorithm assumes the following seven inputs are\n    provided to the path processing logic. What this specific implementation\n    will use is provided parenthetically:\n\n    (a) a prospective certification path of length n (the 'chain')\n    (b) the current date/time: ('now').\n    (c) user-initial-policy-set: A set of certificate policy identifiers\n          naming the policies that are acceptable to the certificate user.\n          The user-initial-policy-set contains the special value any-policy\n          if the user is not concerned about certificate policy\n          (Not implemented. Any policy is accepted).\n    (d) trust anchor information, describing a CA that serves as a trust\n          anchor for the certification path. The trust anchor information\n          includes:\n\n      (1)  the trusted issuer name,\n      (2)  the trusted public key algorithm,\n      (3)  the trusted public key, and\n      (4)  optionally, the trusted public key parameters associated\n             with the public key.\n\n      (Trust anchors are provided via certificates in the CA store).\n\n      The trust anchor information may be provided to the path processing\n      procedure in the form of a self-signed certificate. The trusted anchor\n      information is trusted because it was delivered to the path processing\n      procedure by some trustworthy out-of-band procedure. If the trusted\n      public key algorithm requires parameters, then the parameters are\n      provided along with the trusted public key (No parameters used in this\n      implementation).\n\n    (e) initial-policy-mapping-inhibit, which indicates if policy mapping is\n          allowed in the certification path.\n          (Not implemented, no policy checking)\n\n    (f) initial-explicit-policy, which indicates if the path must be valid\n          for at least one of the certificate policies in the user-initial-\n          policy-set.\n          (Not implemented, no policy checking)\n\n    (g) initial-any-policy-inhibit, which indicates whether the\n          anyPolicy OID should be processed if it is included in a\n          certificate.\n          (Not implemented, so any policy is valid provided that it is\n          not marked as critical) */\n\n  /* Basic Path Processing:\n\n    For each certificate in the 'chain', the following is checked:\n\n    1. The certificate validity period includes the current time.\n    2. The certificate was signed by its parent (where the parent is either\n       the next in the chain or from the CA store). Allow processing to\n       continue to the next step if no parent is found but the certificate is\n       in the CA store.\n    3. TODO: The certificate has not been revoked.\n    4. The certificate issuer name matches the parent's subject name.\n    5. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is within one of the permitted subtrees of X.500 distinguished names\n       and that each of the alternative names in the subjectAltName extension\n       (critical or non-critical) is within one of the permitted subtrees for\n       that name type.\n    6. TODO: If the certificate is self-issued and not the final certificate\n       in the chain, skip this step, otherwise verify that the subject name\n       is not within one of the excluded subtrees for X.500 distinguished\n       names and none of the subjectAltName extension names are excluded for\n       that name type.\n    7. The other steps in the algorithm for basic path processing involve\n       handling the policy extension which is not presently supported in this\n       implementation. Instead, if a critical policy extension is found, the\n       certificate is rejected as not supported.\n    8. If the certificate is not the first or if its the only certificate in\n       the chain (having no parent from the CA store or is self-signed) and it\n       has a critical key usage extension, verify that the keyCertSign bit is\n       set. If the key usage extension exists, verify that the basic\n       constraints extension exists. If the basic constraints extension exists,\n       verify that the cA flag is set. If pathLenConstraint is set, ensure that\n       the number of certificates that precede in the chain (come earlier\n       in the chain as implemented below), excluding the very first in the\n       chain (typically the end-entity one), isn't greater than the\n       pathLenConstraint. This constraint limits the number of intermediate\n       CAs that may appear below a CA before only end-entity certificates\n       may be issued. */\n\n  // if a verify callback is passed as the third parameter, package it within\n  // the options object. This is to support a legacy function signature that\n  // expected the verify callback as the third parameter.\n  if(typeof options === 'function') {\n    options = {verify: options};\n  }\n  options = options || {};\n\n  // copy cert chain references to another array to protect against changes\n  // in verify callback\n  chain = chain.slice(0);\n  var certs = chain.slice(0);\n\n  var validityCheckDate = options.validityCheckDate;\n  // if no validityCheckDate is specified, default to the current date. Make\n  // sure to maintain the value null because it indicates that the validity\n  // period should not be checked.\n  if(typeof validityCheckDate === 'undefined') {\n    validityCheckDate = new Date();\n  }\n\n  // verify each cert in the chain using its parent, where the parent\n  // is either the next in the chain or from the CA store\n  var first = true;\n  var error = null;\n  var depth = 0;\n  do {\n    var cert = chain.shift();\n    var parent = null;\n    var selfSigned = false;\n\n    if(validityCheckDate) {\n      // 1. check valid time\n      if(validityCheckDate < cert.validity.notBefore ||\n         validityCheckDate > cert.validity.notAfter) {\n        error = {\n          message: 'Certificate is not valid yet or has expired.',\n          error: pki.certificateError.certificate_expired,\n          notBefore: cert.validity.notBefore,\n          notAfter: cert.validity.notAfter,\n          // TODO: we might want to reconsider renaming 'now' to\n          // 'validityCheckDate' should this API be changed in the future.\n          now: validityCheckDate\n        };\n      }\n    }\n\n    // 2. verify with parent from chain or CA store\n    if(error === null) {\n      parent = chain[0] || caStore.getIssuer(cert);\n      if(parent === null) {\n        // check for self-signed cert\n        if(cert.isIssuer(cert)) {\n          selfSigned = true;\n          parent = cert;\n        }\n      }\n\n      if(parent) {\n        // FIXME: current CA store implementation might have multiple\n        // certificates where the issuer can't be determined from the\n        // certificate (happens rarely with, eg: old certificates) so normalize\n        // by always putting parents into an array\n        // TODO: there's may be an extreme degenerate case currently uncovered\n        // where an old intermediate certificate seems to have a matching parent\n        // but none of the parents actually verify ... but the intermediate\n        // is in the CA and it should pass this check; needs investigation\n        var parents = parent;\n        if(!forge.util.isArray(parents)) {\n          parents = [parents];\n        }\n\n        // try to verify with each possible parent (typically only one)\n        var verified = false;\n        while(!verified && parents.length > 0) {\n          parent = parents.shift();\n          try {\n            verified = parent.verify(cert);\n          } catch(ex) {\n            // failure to verify, don't care why, try next one\n          }\n        }\n\n        if(!verified) {\n          error = {\n            message: 'Certificate signature is invalid.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n\n      if(error === null && (!parent || selfSigned) &&\n        !caStore.hasCertificate(cert)) {\n        // no parent issuer and certificate itself is not trusted\n        error = {\n          message: 'Certificate is not trusted.',\n          error: pki.certificateError.unknown_ca\n        };\n      }\n    }\n\n    // TODO: 3. check revoked\n\n    // 4. check for matching issuer/subject\n    if(error === null && parent && !cert.isIssuer(parent)) {\n      // parent is not issuer\n      error = {\n        message: 'Certificate issuer is invalid.',\n        error: pki.certificateError.bad_certificate\n      };\n    }\n\n    // 5. TODO: check names with permitted names tree\n\n    // 6. TODO: check names against excluded names tree\n\n    // 7. check for unsupported critical extensions\n    if(error === null) {\n      // supported extensions\n      var se = {\n        keyUsage: true,\n        basicConstraints: true\n      };\n      for(var i = 0; error === null && i < cert.extensions.length; ++i) {\n        var ext = cert.extensions[i];\n        if(ext.critical && !(ext.name in se)) {\n          error = {\n            message:\n              'Certificate has an unsupported critical extension.',\n            error: pki.certificateError.unsupported_certificate\n          };\n        }\n      }\n    }\n\n    // 8. check for CA if cert is not first or is the only certificate\n    // remaining in chain with no parent or is self-signed\n    if(error === null &&\n      (!first || (chain.length === 0 && (!parent || selfSigned)))) {\n      // first check keyUsage extension and then basic constraints\n      var bcExt = cert.getExtension('basicConstraints');\n      var keyUsageExt = cert.getExtension('keyUsage');\n      if(keyUsageExt !== null) {\n        // keyCertSign must be true and there must be a basic\n        // constraints extension\n        if(!keyUsageExt.keyCertSign || bcExt === null) {\n          // bad certificate\n          error = {\n            message:\n              'Certificate keyUsage or basicConstraints conflict ' +\n              'or indicate that the certificate is not a CA. ' +\n              'If the certificate is the only one in the chain or ' +\n              'isn\\'t the first then the certificate must be a ' +\n              'valid CA.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n      // basic constraints cA flag must be set\n      if(error === null && bcExt !== null && !bcExt.cA) {\n        // bad certificate\n        error = {\n          message:\n            'Certificate basicConstraints indicates the certificate ' +\n            'is not a CA.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n      // if error is not null and keyUsage is available, then we know it\n      // has keyCertSign and there is a basic constraints extension too,\n      // which means we can check pathLenConstraint (if it exists)\n      if(error === null && keyUsageExt !== null &&\n        'pathLenConstraint' in bcExt) {\n        // pathLen is the maximum # of intermediate CA certs that can be\n        // found between the current certificate and the end-entity (depth 0)\n        // certificate; this number does not include the end-entity (depth 0,\n        // last in the chain) even if it happens to be a CA certificate itself\n        var pathLen = depth - 1;\n        if(pathLen > bcExt.pathLenConstraint) {\n          // pathLenConstraint violated, bad certificate\n          error = {\n            message:\n              'Certificate basicConstraints pathLenConstraint violated.',\n            error: pki.certificateError.bad_certificate\n          };\n        }\n      }\n    }\n\n    // call application callback\n    var vfd = (error === null) ? true : error.error;\n    var ret = options.verify ? options.verify(vfd, depth, certs) : vfd;\n    if(ret === true) {\n      // clear any set error\n      error = null;\n    } else {\n      // if passed basic tests, set default message and alert\n      if(vfd === true) {\n        error = {\n          message: 'The application rejected the certificate.',\n          error: pki.certificateError.bad_certificate\n        };\n      }\n\n      // check for custom error info\n      if(ret || ret === 0) {\n        // set custom message and error\n        if(typeof ret === 'object' && !forge.util.isArray(ret)) {\n          if(ret.message) {\n            error.message = ret.message;\n          }\n          if(ret.error) {\n            error.error = ret.error;\n          }\n        } else if(typeof ret === 'string') {\n          // set custom error\n          error.error = ret;\n        }\n      }\n\n      // throw error\n      throw error;\n    }\n\n    // no longer first cert in chain\n    first = false;\n    ++depth;\n  } while(chain.length > 0);\n\n  return true;\n};\n","var hasMap = typeof Map === 'function' && Map.prototype;\nvar mapSizeDescriptor = Object.getOwnPropertyDescriptor && hasMap ? Object.getOwnPropertyDescriptor(Map.prototype, 'size') : null;\nvar mapSize = hasMap && mapSizeDescriptor && typeof mapSizeDescriptor.get === 'function' ? mapSizeDescriptor.get : null;\nvar mapForEach = hasMap && Map.prototype.forEach;\nvar hasSet = typeof Set === 'function' && Set.prototype;\nvar setSizeDescriptor = Object.getOwnPropertyDescriptor && hasSet ? Object.getOwnPropertyDescriptor(Set.prototype, 'size') : null;\nvar setSize = hasSet && setSizeDescriptor && typeof setSizeDescriptor.get === 'function' ? setSizeDescriptor.get : null;\nvar setForEach = hasSet && Set.prototype.forEach;\nvar hasWeakMap = typeof WeakMap === 'function' && WeakMap.prototype;\nvar weakMapHas = hasWeakMap ? WeakMap.prototype.has : null;\nvar hasWeakSet = typeof WeakSet === 'function' && WeakSet.prototype;\nvar weakSetHas = hasWeakSet ? WeakSet.prototype.has : null;\nvar hasWeakRef = typeof WeakRef === 'function' && WeakRef.prototype;\nvar weakRefDeref = hasWeakRef ? WeakRef.prototype.deref : null;\nvar booleanValueOf = Boolean.prototype.valueOf;\nvar objectToString = Object.prototype.toString;\nvar functionToString = Function.prototype.toString;\nvar $match = String.prototype.match;\nvar $slice = String.prototype.slice;\nvar $replace = String.prototype.replace;\nvar $toUpperCase = String.prototype.toUpperCase;\nvar $toLowerCase = String.prototype.toLowerCase;\nvar $test = RegExp.prototype.test;\nvar $concat = Array.prototype.concat;\nvar $join = Array.prototype.join;\nvar $arrSlice = Array.prototype.slice;\nvar $floor = Math.floor;\nvar bigIntValueOf = typeof BigInt === 'function' ? BigInt.prototype.valueOf : null;\nvar gOPS = Object.getOwnPropertySymbols;\nvar symToString = typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol' ? Symbol.prototype.toString : null;\nvar hasShammedSymbols = typeof Symbol === 'function' && typeof Symbol.iterator === 'object';\n// ie, `has-tostringtag/shams\nvar toStringTag = typeof Symbol === 'function' && Symbol.toStringTag && (typeof Symbol.toStringTag === hasShammedSymbols ? 'object' : 'symbol')\n    ? Symbol.toStringTag\n    : null;\nvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\nvar gPO = (typeof Reflect === 'function' ? Reflect.getPrototypeOf : Object.getPrototypeOf) || (\n    [].__proto__ === Array.prototype // eslint-disable-line no-proto\n        ? function (O) {\n            return O.__proto__; // eslint-disable-line no-proto\n        }\n        : null\n);\n\nfunction addNumericSeparator(num, str) {\n    if (\n        num === Infinity\n        || num === -Infinity\n        || num !== num\n        || (num && num > -1000 && num < 1000)\n        || $test.call(/e/, str)\n    ) {\n        return str;\n    }\n    var sepRegex = /[0-9](?=(?:[0-9]{3})+(?![0-9]))/g;\n    if (typeof num === 'number') {\n        var int = num < 0 ? -$floor(-num) : $floor(num); // trunc(num)\n        if (int !== num) {\n            var intStr = String(int);\n            var dec = $slice.call(str, intStr.length + 1);\n            return $replace.call(intStr, sepRegex, '$&_') + '.' + $replace.call($replace.call(dec, /([0-9]{3})/g, '$&_'), /_$/, '');\n        }\n    }\n    return $replace.call(str, sepRegex, '$&_');\n}\n\nvar utilInspect = require('./util.inspect');\nvar inspectCustom = utilInspect.custom;\nvar inspectSymbol = isSymbol(inspectCustom) ? inspectCustom : null;\n\nvar quotes = {\n    __proto__: null,\n    'double': '\"',\n    single: \"'\"\n};\nvar quoteREs = {\n    __proto__: null,\n    'double': /([\"\\\\])/g,\n    single: /(['\\\\])/g\n};\n\nmodule.exports = function inspect_(obj, options, depth, seen) {\n    var opts = options || {};\n\n    if (has(opts, 'quoteStyle') && !has(quotes, opts.quoteStyle)) {\n        throw new TypeError('option \"quoteStyle\" must be \"single\" or \"double\"');\n    }\n    if (\n        has(opts, 'maxStringLength') && (typeof opts.maxStringLength === 'number'\n            ? opts.maxStringLength < 0 && opts.maxStringLength !== Infinity\n            : opts.maxStringLength !== null\n        )\n    ) {\n        throw new TypeError('option \"maxStringLength\", if provided, must be a positive integer, Infinity, or `null`');\n    }\n    var customInspect = has(opts, 'customInspect') ? opts.customInspect : true;\n    if (typeof customInspect !== 'boolean' && customInspect !== 'symbol') {\n        throw new TypeError('option \"customInspect\", if provided, must be `true`, `false`, or `\\'symbol\\'`');\n    }\n\n    if (\n        has(opts, 'indent')\n        && opts.indent !== null\n        && opts.indent !== '\\t'\n        && !(parseInt(opts.indent, 10) === opts.indent && opts.indent > 0)\n    ) {\n        throw new TypeError('option \"indent\" must be \"\\\\t\", an integer > 0, or `null`');\n    }\n    if (has(opts, 'numericSeparator') && typeof opts.numericSeparator !== 'boolean') {\n        throw new TypeError('option \"numericSeparator\", if provided, must be `true` or `false`');\n    }\n    var numericSeparator = opts.numericSeparator;\n\n    if (typeof obj === 'undefined') {\n        return 'undefined';\n    }\n    if (obj === null) {\n        return 'null';\n    }\n    if (typeof obj === 'boolean') {\n        return obj ? 'true' : 'false';\n    }\n\n    if (typeof obj === 'string') {\n        return inspectString(obj, opts);\n    }\n    if (typeof obj === 'number') {\n        if (obj === 0) {\n            return Infinity / obj > 0 ? '0' : '-0';\n        }\n        var str = String(obj);\n        return numericSeparator ? addNumericSeparator(obj, str) : str;\n    }\n    if (typeof obj === 'bigint') {\n        var bigIntStr = String(obj) + 'n';\n        return numericSeparator ? addNumericSeparator(obj, bigIntStr) : bigIntStr;\n    }\n\n    var maxDepth = typeof opts.depth === 'undefined' ? 5 : opts.depth;\n    if (typeof depth === 'undefined') { depth = 0; }\n    if (depth >= maxDepth && maxDepth > 0 && typeof obj === 'object') {\n        return isArray(obj) ? '[Array]' : '[Object]';\n    }\n\n    var indent = getIndent(opts, depth);\n\n    if (typeof seen === 'undefined') {\n        seen = [];\n    } else if (indexOf(seen, obj) >= 0) {\n        return '[Circular]';\n    }\n\n    function inspect(value, from, noIndent) {\n        if (from) {\n            seen = $arrSlice.call(seen);\n            seen.push(from);\n        }\n        if (noIndent) {\n            var newOpts = {\n                depth: opts.depth\n            };\n            if (has(opts, 'quoteStyle')) {\n                newOpts.quoteStyle = opts.quoteStyle;\n            }\n            return inspect_(value, newOpts, depth + 1, seen);\n        }\n        return inspect_(value, opts, depth + 1, seen);\n    }\n\n    if (typeof obj === 'function' && !isRegExp(obj)) { // in older engines, regexes are callable\n        var name = nameOf(obj);\n        var keys = arrObjKeys(obj, inspect);\n        return '[Function' + (name ? ': ' + name : ' (anonymous)') + ']' + (keys.length > 0 ? ' { ' + $join.call(keys, ', ') + ' }' : '');\n    }\n    if (isSymbol(obj)) {\n        var symString = hasShammedSymbols ? $replace.call(String(obj), /^(Symbol\\(.*\\))_[^)]*$/, '$1') : symToString.call(obj);\n        return typeof obj === 'object' && !hasShammedSymbols ? markBoxed(symString) : symString;\n    }\n    if (isElement(obj)) {\n        var s = '<' + $toLowerCase.call(String(obj.nodeName));\n        var attrs = obj.attributes || [];\n        for (var i = 0; i < attrs.length; i++) {\n            s += ' ' + attrs[i].name + '=' + wrapQuotes(quote(attrs[i].value), 'double', opts);\n        }\n        s += '>';\n        if (obj.childNodes && obj.childNodes.length) { s += '...'; }\n        s += '</' + $toLowerCase.call(String(obj.nodeName)) + '>';\n        return s;\n    }\n    if (isArray(obj)) {\n        if (obj.length === 0) { return '[]'; }\n        var xs = arrObjKeys(obj, inspect);\n        if (indent && !singleLineValues(xs)) {\n            return '[' + indentedJoin(xs, indent) + ']';\n        }\n        return '[ ' + $join.call(xs, ', ') + ' ]';\n    }\n    if (isError(obj)) {\n        var parts = arrObjKeys(obj, inspect);\n        if (!('cause' in Error.prototype) && 'cause' in obj && !isEnumerable.call(obj, 'cause')) {\n            return '{ [' + String(obj) + '] ' + $join.call($concat.call('[cause]: ' + inspect(obj.cause), parts), ', ') + ' }';\n        }\n        if (parts.length === 0) { return '[' + String(obj) + ']'; }\n        return '{ [' + String(obj) + '] ' + $join.call(parts, ', ') + ' }';\n    }\n    if (typeof obj === 'object' && customInspect) {\n        if (inspectSymbol && typeof obj[inspectSymbol] === 'function' && utilInspect) {\n            return utilInspect(obj, { depth: maxDepth - depth });\n        } else if (customInspect !== 'symbol' && typeof obj.inspect === 'function') {\n            return obj.inspect();\n        }\n    }\n    if (isMap(obj)) {\n        var mapParts = [];\n        if (mapForEach) {\n            mapForEach.call(obj, function (value, key) {\n                mapParts.push(inspect(key, obj, true) + ' => ' + inspect(value, obj));\n            });\n        }\n        return collectionOf('Map', mapSize.call(obj), mapParts, indent);\n    }\n    if (isSet(obj)) {\n        var setParts = [];\n        if (setForEach) {\n            setForEach.call(obj, function (value) {\n                setParts.push(inspect(value, obj));\n            });\n        }\n        return collectionOf('Set', setSize.call(obj), setParts, indent);\n    }\n    if (isWeakMap(obj)) {\n        return weakCollectionOf('WeakMap');\n    }\n    if (isWeakSet(obj)) {\n        return weakCollectionOf('WeakSet');\n    }\n    if (isWeakRef(obj)) {\n        return weakCollectionOf('WeakRef');\n    }\n    if (isNumber(obj)) {\n        return markBoxed(inspect(Number(obj)));\n    }\n    if (isBigInt(obj)) {\n        return markBoxed(inspect(bigIntValueOf.call(obj)));\n    }\n    if (isBoolean(obj)) {\n        return markBoxed(booleanValueOf.call(obj));\n    }\n    if (isString(obj)) {\n        return markBoxed(inspect(String(obj)));\n    }\n    // note: in IE 8, sometimes `global !== window` but both are the prototypes of each other\n    /* eslint-env browser */\n    if (typeof window !== 'undefined' && obj === window) {\n        return '{ [object Window] }';\n    }\n    if (\n        (typeof globalThis !== 'undefined' && obj === globalThis)\n        || (typeof global !== 'undefined' && obj === global)\n    ) {\n        return '{ [object globalThis] }';\n    }\n    if (!isDate(obj) && !isRegExp(obj)) {\n        var ys = arrObjKeys(obj, inspect);\n        var isPlainObject = gPO ? gPO(obj) === Object.prototype : obj instanceof Object || obj.constructor === Object;\n        var protoTag = obj instanceof Object ? '' : 'null prototype';\n        var stringTag = !isPlainObject && toStringTag && Object(obj) === obj && toStringTag in obj ? $slice.call(toStr(obj), 8, -1) : protoTag ? 'Object' : '';\n        var constructorTag = isPlainObject || typeof obj.constructor !== 'function' ? '' : obj.constructor.name ? obj.constructor.name + ' ' : '';\n        var tag = constructorTag + (stringTag || protoTag ? '[' + $join.call($concat.call([], stringTag || [], protoTag || []), ': ') + '] ' : '');\n        if (ys.length === 0) { return tag + '{}'; }\n        if (indent) {\n            return tag + '{' + indentedJoin(ys, indent) + '}';\n        }\n        return tag + '{ ' + $join.call(ys, ', ') + ' }';\n    }\n    return String(obj);\n};\n\nfunction wrapQuotes(s, defaultStyle, opts) {\n    var style = opts.quoteStyle || defaultStyle;\n    var quoteChar = quotes[style];\n    return quoteChar + s + quoteChar;\n}\n\nfunction quote(s) {\n    return $replace.call(String(s), /\"/g, '&quot;');\n}\n\nfunction isArray(obj) { return toStr(obj) === '[object Array]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isDate(obj) { return toStr(obj) === '[object Date]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isRegExp(obj) { return toStr(obj) === '[object RegExp]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isError(obj) { return toStr(obj) === '[object Error]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isString(obj) { return toStr(obj) === '[object String]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isNumber(obj) { return toStr(obj) === '[object Number]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\nfunction isBoolean(obj) { return toStr(obj) === '[object Boolean]' && (!toStringTag || !(typeof obj === 'object' && toStringTag in obj)); }\n\n// Symbol and BigInt do have Symbol.toStringTag by spec, so that can't be used to eliminate false positives\nfunction isSymbol(obj) {\n    if (hasShammedSymbols) {\n        return obj && typeof obj === 'object' && obj instanceof Symbol;\n    }\n    if (typeof obj === 'symbol') {\n        return true;\n    }\n    if (!obj || typeof obj !== 'object' || !symToString) {\n        return false;\n    }\n    try {\n        symToString.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isBigInt(obj) {\n    if (!obj || typeof obj !== 'object' || !bigIntValueOf) {\n        return false;\n    }\n    try {\n        bigIntValueOf.call(obj);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty || function (key) { return key in this; };\nfunction has(obj, key) {\n    return hasOwn.call(obj, key);\n}\n\nfunction toStr(obj) {\n    return objectToString.call(obj);\n}\n\nfunction nameOf(f) {\n    if (f.name) { return f.name; }\n    var m = $match.call(functionToString.call(f), /^function\\s*([\\w$]+)/);\n    if (m) { return m[1]; }\n    return null;\n}\n\nfunction indexOf(xs, x) {\n    if (xs.indexOf) { return xs.indexOf(x); }\n    for (var i = 0, l = xs.length; i < l; i++) {\n        if (xs[i] === x) { return i; }\n    }\n    return -1;\n}\n\nfunction isMap(x) {\n    if (!mapSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        mapSize.call(x);\n        try {\n            setSize.call(x);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof Map; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakMap(x) {\n    if (!weakMapHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakMapHas.call(x, weakMapHas);\n        try {\n            weakSetHas.call(x, weakSetHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakMap; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakRef(x) {\n    if (!weakRefDeref || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakRefDeref.call(x);\n        return true;\n    } catch (e) {}\n    return false;\n}\n\nfunction isSet(x) {\n    if (!setSize || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        setSize.call(x);\n        try {\n            mapSize.call(x);\n        } catch (m) {\n            return true;\n        }\n        return x instanceof Set; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isWeakSet(x) {\n    if (!weakSetHas || !x || typeof x !== 'object') {\n        return false;\n    }\n    try {\n        weakSetHas.call(x, weakSetHas);\n        try {\n            weakMapHas.call(x, weakMapHas);\n        } catch (s) {\n            return true;\n        }\n        return x instanceof WeakSet; // core-js workaround, pre-v2.5.0\n    } catch (e) {}\n    return false;\n}\n\nfunction isElement(x) {\n    if (!x || typeof x !== 'object') { return false; }\n    if (typeof HTMLElement !== 'undefined' && x instanceof HTMLElement) {\n        return true;\n    }\n    return typeof x.nodeName === 'string' && typeof x.getAttribute === 'function';\n}\n\nfunction inspectString(str, opts) {\n    if (str.length > opts.maxStringLength) {\n        var remaining = str.length - opts.maxStringLength;\n        var trailer = '... ' + remaining + ' more character' + (remaining > 1 ? 's' : '');\n        return inspectString($slice.call(str, 0, opts.maxStringLength), opts) + trailer;\n    }\n    var quoteRE = quoteREs[opts.quoteStyle || 'single'];\n    quoteRE.lastIndex = 0;\n    // eslint-disable-next-line no-control-regex\n    var s = $replace.call($replace.call(str, quoteRE, '\\\\$1'), /[\\x00-\\x1f]/g, lowbyte);\n    return wrapQuotes(s, 'single', opts);\n}\n\nfunction lowbyte(c) {\n    var n = c.charCodeAt(0);\n    var x = {\n        8: 'b',\n        9: 't',\n        10: 'n',\n        12: 'f',\n        13: 'r'\n    }[n];\n    if (x) { return '\\\\' + x; }\n    return '\\\\x' + (n < 0x10 ? '0' : '') + $toUpperCase.call(n.toString(16));\n}\n\nfunction markBoxed(str) {\n    return 'Object(' + str + ')';\n}\n\nfunction weakCollectionOf(type) {\n    return type + ' { ? }';\n}\n\nfunction collectionOf(type, size, entries, indent) {\n    var joinedEntries = indent ? indentedJoin(entries, indent) : $join.call(entries, ', ');\n    return type + ' (' + size + ') {' + joinedEntries + '}';\n}\n\nfunction singleLineValues(xs) {\n    for (var i = 0; i < xs.length; i++) {\n        if (indexOf(xs[i], '\\n') >= 0) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction getIndent(opts, depth) {\n    var baseIndent;\n    if (opts.indent === '\\t') {\n        baseIndent = '\\t';\n    } else if (typeof opts.indent === 'number' && opts.indent > 0) {\n        baseIndent = $join.call(Array(opts.indent + 1), ' ');\n    } else {\n        return null;\n    }\n    return {\n        base: baseIndent,\n        prev: $join.call(Array(depth + 1), baseIndent)\n    };\n}\n\nfunction indentedJoin(xs, indent) {\n    if (xs.length === 0) { return ''; }\n    var lineJoiner = '\\n' + indent.prev + indent.base;\n    return lineJoiner + $join.call(xs, ',' + lineJoiner) + '\\n' + indent.prev;\n}\n\nfunction arrObjKeys(obj, inspect) {\n    var isArr = isArray(obj);\n    var xs = [];\n    if (isArr) {\n        xs.length = obj.length;\n        for (var i = 0; i < obj.length; i++) {\n            xs[i] = has(obj, i) ? inspect(obj[i], obj) : '';\n        }\n    }\n    var syms = typeof gOPS === 'function' ? gOPS(obj) : [];\n    var symMap;\n    if (hasShammedSymbols) {\n        symMap = {};\n        for (var k = 0; k < syms.length; k++) {\n            symMap['$' + syms[k]] = syms[k];\n        }\n    }\n\n    for (var key in obj) { // eslint-disable-line no-restricted-syntax\n        if (!has(obj, key)) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (isArr && String(Number(key)) === key && key < obj.length) { continue; } // eslint-disable-line no-restricted-syntax, no-continue\n        if (hasShammedSymbols && symMap['$' + key] instanceof Symbol) {\n            // this is to prevent shammed Symbols, which are stored as strings, from being included in the string key section\n            continue; // eslint-disable-line no-restricted-syntax, no-continue\n        } else if ($test.call(/[^\\w$]/, key)) {\n            xs.push(inspect(key, obj) + ': ' + inspect(obj[key], obj));\n        } else {\n            xs.push(key + ': ' + inspect(obj[key], obj));\n        }\n    }\n    if (typeof gOPS === 'function') {\n        for (var j = 0; j < syms.length; j++) {\n            if (isEnumerable.call(obj, syms[j])) {\n                xs.push('[' + inspect(syms[j]) + ']: ' + inspect(obj[syms[j]], obj));\n            }\n        }\n    }\n    return xs;\n}\n","'use strict';\n\nvar numberIsNaN = function (value) {\n\treturn value !== value;\n};\n\nmodule.exports = function is(a, b) {\n\tif (a === 0 && b === 0) {\n\t\treturn 1 / a === 1 / b;\n\t}\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (numberIsNaN(a) && numberIsNaN(b)) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n","'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Object);\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Object.is === 'function' ? Object.is : implementation;\n};\n","'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimObjectIs() {\n\tvar polyfill = getPolyfill();\n\tdefine(Object, { is: polyfill }, {\n\t\tis: function testObjectIs() {\n\t\t\treturn Object.is !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","'use strict';\n\n// modified from https://github.com/es-shims/es6-shim\nvar objectKeys = require('object-keys');\nvar hasSymbols = require('has-symbols/shams')();\nvar callBound = require('call-bind/callBound');\nvar toObject = Object;\nvar $push = callBound('Array.prototype.push');\nvar $propIsEnumerable = callBound('Object.prototype.propertyIsEnumerable');\nvar originalGetSymbols = hasSymbols ? Object.getOwnPropertySymbols : null;\n\n// eslint-disable-next-line no-unused-vars\nmodule.exports = function assign(target, source1) {\n\tif (target == null) { throw new TypeError('target must be an object'); }\n\tvar to = toObject(target); // step 1\n\tif (arguments.length === 1) {\n\t\treturn to; // step 2\n\t}\n\tfor (var s = 1; s < arguments.length; ++s) {\n\t\tvar from = toObject(arguments[s]); // step 3.a.i\n\n\t\t// step 3.a.ii:\n\t\tvar keys = objectKeys(from);\n\t\tvar getSymbols = hasSymbols && (Object.getOwnPropertySymbols || originalGetSymbols);\n\t\tif (getSymbols) {\n\t\t\tvar syms = getSymbols(from);\n\t\t\tfor (var j = 0; j < syms.length; ++j) {\n\t\t\t\tvar key = syms[j];\n\t\t\t\tif ($propIsEnumerable(from, key)) {\n\t\t\t\t\t$push(keys, key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// step 3.a.iii:\n\t\tfor (var i = 0; i < keys.length; ++i) {\n\t\t\tvar nextKey = keys[i];\n\t\t\tif ($propIsEnumerable(from, nextKey)) { // step 3.a.iii.2\n\t\t\t\tvar propValue = from[nextKey]; // step 3.a.iii.2.a\n\t\t\t\tto[nextKey] = propValue; // step 3.a.iii.2.b\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to; // step 4\n};\n","'use strict';\n\nvar implementation = require('./implementation');\n\nvar lacksProperEnumerationOrder = function () {\n\tif (!Object.assign) {\n\t\treturn false;\n\t}\n\t/*\n\t * v8, specifically in node 4.x, has a bug with incorrect property enumeration order\n\t * note: this does not detect the bug unless there's 20 characters\n\t */\n\tvar str = 'abcdefghijklmnopqrst';\n\tvar letters = str.split('');\n\tvar map = {};\n\tfor (var i = 0; i < letters.length; ++i) {\n\t\tmap[letters[i]] = letters[i];\n\t}\n\tvar obj = Object.assign({}, map);\n\tvar actual = '';\n\tfor (var k in obj) {\n\t\tactual += k;\n\t}\n\treturn str !== actual;\n};\n\nvar assignHasPendingExceptions = function () {\n\tif (!Object.assign || !Object.preventExtensions) {\n\t\treturn false;\n\t}\n\t/*\n\t * Firefox 37 still has \"pending exception\" logic in its Object.assign implementation,\n\t * which is 72% slower than our shim, and Firefox 40's native implementation.\n\t */\n\tvar thrower = Object.preventExtensions({ 1: 2 });\n\ttry {\n\t\tObject.assign(thrower, 'xy');\n\t} catch (e) {\n\t\treturn thrower[1] === 'y';\n\t}\n\treturn false;\n};\n\nmodule.exports = function getPolyfill() {\n\tif (!Object.assign) {\n\t\treturn implementation;\n\t}\n\tif (lacksProperEnumerationOrder()) {\n\t\treturn implementation;\n\t}\n\tif (assignHasPendingExceptions()) {\n\t\treturn implementation;\n\t}\n\treturn Object.assign;\n};\n","'use strict';\n\n/** @type {import('.')} */\nmodule.exports = [\n\t'Float32Array',\n\t'Float64Array',\n\t'Int8Array',\n\t'Int16Array',\n\t'Int32Array',\n\t'Uint8Array',\n\t'Uint8ClampedArray',\n\t'Uint16Array',\n\t'Uint32Array',\n\t'BigInt64Array',\n\t'BigUint64Array'\n];\n","'use strict';\n\nvar replace = String.prototype.replace;\nvar percentTwenties = /%20/g;\n\nvar Format = {\n    RFC1738: 'RFC1738',\n    RFC3986: 'RFC3986'\n};\n\nmodule.exports = {\n    'default': Format.RFC3986,\n    formatters: {\n        RFC1738: function (value) {\n            return replace.call(value, percentTwenties, '+');\n        },\n        RFC3986: function (value) {\n            return String(value);\n        }\n    },\n    RFC1738: Format.RFC1738,\n    RFC3986: Format.RFC3986\n};\n","'use strict';\n\nvar stringify = require('./stringify');\nvar parse = require('./parse');\nvar formats = require('./formats');\n\nmodule.exports = {\n    formats: formats,\n    parse: parse,\n    stringify: stringify\n};\n","'use strict';\n\nvar utils = require('./utils');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar defaults = {\n    allowDots: false,\n    allowEmptyArrays: false,\n    allowPrototypes: false,\n    allowSparse: false,\n    arrayLimit: 20,\n    charset: 'utf-8',\n    charsetSentinel: false,\n    comma: false,\n    decodeDotInKeys: false,\n    decoder: utils.decode,\n    delimiter: '&',\n    depth: 5,\n    duplicates: 'combine',\n    ignoreQueryPrefix: false,\n    interpretNumericEntities: false,\n    parameterLimit: 1000,\n    parseArrays: true,\n    plainObjects: false,\n    strictDepth: false,\n    strictNullHandling: false\n};\n\nvar interpretNumericEntities = function (str) {\n    return str.replace(/&#(\\d+);/g, function ($0, numberStr) {\n        return String.fromCharCode(parseInt(numberStr, 10));\n    });\n};\n\nvar parseArrayValue = function (val, options) {\n    if (val && typeof val === 'string' && options.comma && val.indexOf(',') > -1) {\n        return val.split(',');\n    }\n\n    return val;\n};\n\n// This is what browsers will submit when the ✓ character occurs in an\n// application/x-www-form-urlencoded body and the encoding of the page containing\n// the form is iso-8859-1, or when the submitted form has an accept-charset\n// attribute of iso-8859-1. Presumably also with other charsets that do not contain\n// the ✓ character, such as us-ascii.\nvar isoSentinel = 'utf8=%26%2310003%3B'; // encodeURIComponent('&#10003;')\n\n// These are the percent-encoded utf-8 octets representing a checkmark, indicating that the request actually is utf-8 encoded.\nvar charsetSentinel = 'utf8=%E2%9C%93'; // encodeURIComponent('✓')\n\nvar parseValues = function parseQueryStringValues(str, options) {\n    var obj = { __proto__: null };\n\n    var cleanStr = options.ignoreQueryPrefix ? str.replace(/^\\?/, '') : str;\n    cleanStr = cleanStr.replace(/%5B/gi, '[').replace(/%5D/gi, ']');\n    var limit = options.parameterLimit === Infinity ? undefined : options.parameterLimit;\n    var parts = cleanStr.split(options.delimiter, limit);\n    var skipIndex = -1; // Keep track of where the utf8 sentinel was found\n    var i;\n\n    var charset = options.charset;\n    if (options.charsetSentinel) {\n        for (i = 0; i < parts.length; ++i) {\n            if (parts[i].indexOf('utf8=') === 0) {\n                if (parts[i] === charsetSentinel) {\n                    charset = 'utf-8';\n                } else if (parts[i] === isoSentinel) {\n                    charset = 'iso-8859-1';\n                }\n                skipIndex = i;\n                i = parts.length; // The eslint settings do not allow break;\n            }\n        }\n    }\n\n    for (i = 0; i < parts.length; ++i) {\n        if (i === skipIndex) {\n            continue;\n        }\n        var part = parts[i];\n\n        var bracketEqualsPos = part.indexOf(']=');\n        var pos = bracketEqualsPos === -1 ? part.indexOf('=') : bracketEqualsPos + 1;\n\n        var key, val;\n        if (pos === -1) {\n            key = options.decoder(part, defaults.decoder, charset, 'key');\n            val = options.strictNullHandling ? null : '';\n        } else {\n            key = options.decoder(part.slice(0, pos), defaults.decoder, charset, 'key');\n            val = utils.maybeMap(\n                parseArrayValue(part.slice(pos + 1), options),\n                function (encodedVal) {\n                    return options.decoder(encodedVal, defaults.decoder, charset, 'value');\n                }\n            );\n        }\n\n        if (val && options.interpretNumericEntities && charset === 'iso-8859-1') {\n            val = interpretNumericEntities(val);\n        }\n\n        if (part.indexOf('[]=') > -1) {\n            val = isArray(val) ? [val] : val;\n        }\n\n        var existing = has.call(obj, key);\n        if (existing && options.duplicates === 'combine') {\n            obj[key] = utils.combine(obj[key], val);\n        } else if (!existing || options.duplicates === 'last') {\n            obj[key] = val;\n        }\n    }\n\n    return obj;\n};\n\nvar parseObject = function (chain, val, options, valuesParsed) {\n    var leaf = valuesParsed ? val : parseArrayValue(val, options);\n\n    for (var i = chain.length - 1; i >= 0; --i) {\n        var obj;\n        var root = chain[i];\n\n        if (root === '[]' && options.parseArrays) {\n            obj = options.allowEmptyArrays && (leaf === '' || (options.strictNullHandling && leaf === null))\n                ? []\n                : [].concat(leaf);\n        } else {\n            obj = options.plainObjects ? Object.create(null) : {};\n            var cleanRoot = root.charAt(0) === '[' && root.charAt(root.length - 1) === ']' ? root.slice(1, -1) : root;\n            var decodedRoot = options.decodeDotInKeys ? cleanRoot.replace(/%2E/g, '.') : cleanRoot;\n            var index = parseInt(decodedRoot, 10);\n            if (!options.parseArrays && decodedRoot === '') {\n                obj = { 0: leaf };\n            } else if (\n                !isNaN(index)\n                && root !== decodedRoot\n                && String(index) === decodedRoot\n                && index >= 0\n                && (options.parseArrays && index <= options.arrayLimit)\n            ) {\n                obj = [];\n                obj[index] = leaf;\n            } else if (decodedRoot !== '__proto__') {\n                obj[decodedRoot] = leaf;\n            }\n        }\n\n        leaf = obj;\n    }\n\n    return leaf;\n};\n\nvar parseKeys = function parseQueryStringKeys(givenKey, val, options, valuesParsed) {\n    if (!givenKey) {\n        return;\n    }\n\n    // Transform dot notation to bracket notation\n    var key = options.allowDots ? givenKey.replace(/\\.([^.[]+)/g, '[$1]') : givenKey;\n\n    // The regex chunks\n\n    var brackets = /(\\[[^[\\]]*])/;\n    var child = /(\\[[^[\\]]*])/g;\n\n    // Get the parent\n\n    var segment = options.depth > 0 && brackets.exec(key);\n    var parent = segment ? key.slice(0, segment.index) : key;\n\n    // Stash the parent if it exists\n\n    var keys = [];\n    if (parent) {\n        // If we aren't using plain objects, optionally prefix keys that would overwrite object prototype properties\n        if (!options.plainObjects && has.call(Object.prototype, parent)) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n\n        keys.push(parent);\n    }\n\n    // Loop through children appending to the array until we hit depth\n\n    var i = 0;\n    while (options.depth > 0 && (segment = child.exec(key)) !== null && i < options.depth) {\n        i += 1;\n        if (!options.plainObjects && has.call(Object.prototype, segment[1].slice(1, -1))) {\n            if (!options.allowPrototypes) {\n                return;\n            }\n        }\n        keys.push(segment[1]);\n    }\n\n    // If there's a remainder, check strictDepth option for throw, else just add whatever is left\n\n    if (segment) {\n        if (options.strictDepth === true) {\n            throw new RangeError('Input depth exceeded depth option of ' + options.depth + ' and strictDepth is true');\n        }\n        keys.push('[' + key.slice(segment.index) + ']');\n    }\n\n    return parseObject(keys, val, options, valuesParsed);\n};\n\nvar normalizeParseOptions = function normalizeParseOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.decodeDotInKeys !== 'undefined' && typeof opts.decodeDotInKeys !== 'boolean') {\n        throw new TypeError('`decodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.decoder !== null && typeof opts.decoder !== 'undefined' && typeof opts.decoder !== 'function') {\n        throw new TypeError('Decoder has to be a function.');\n    }\n\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    var charset = typeof opts.charset === 'undefined' ? defaults.charset : opts.charset;\n\n    var duplicates = typeof opts.duplicates === 'undefined' ? defaults.duplicates : opts.duplicates;\n\n    if (duplicates !== 'combine' && duplicates !== 'first' && duplicates !== 'last') {\n        throw new TypeError('The duplicates option must be either combine, first, or last');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.decodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        allowPrototypes: typeof opts.allowPrototypes === 'boolean' ? opts.allowPrototypes : defaults.allowPrototypes,\n        allowSparse: typeof opts.allowSparse === 'boolean' ? opts.allowSparse : defaults.allowSparse,\n        arrayLimit: typeof opts.arrayLimit === 'number' ? opts.arrayLimit : defaults.arrayLimit,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        comma: typeof opts.comma === 'boolean' ? opts.comma : defaults.comma,\n        decodeDotInKeys: typeof opts.decodeDotInKeys === 'boolean' ? opts.decodeDotInKeys : defaults.decodeDotInKeys,\n        decoder: typeof opts.decoder === 'function' ? opts.decoder : defaults.decoder,\n        delimiter: typeof opts.delimiter === 'string' || utils.isRegExp(opts.delimiter) ? opts.delimiter : defaults.delimiter,\n        // eslint-disable-next-line no-implicit-coercion, no-extra-parens\n        depth: (typeof opts.depth === 'number' || opts.depth === false) ? +opts.depth : defaults.depth,\n        duplicates: duplicates,\n        ignoreQueryPrefix: opts.ignoreQueryPrefix === true,\n        interpretNumericEntities: typeof opts.interpretNumericEntities === 'boolean' ? opts.interpretNumericEntities : defaults.interpretNumericEntities,\n        parameterLimit: typeof opts.parameterLimit === 'number' ? opts.parameterLimit : defaults.parameterLimit,\n        parseArrays: opts.parseArrays !== false,\n        plainObjects: typeof opts.plainObjects === 'boolean' ? opts.plainObjects : defaults.plainObjects,\n        strictDepth: typeof opts.strictDepth === 'boolean' ? !!opts.strictDepth : defaults.strictDepth,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (str, opts) {\n    var options = normalizeParseOptions(opts);\n\n    if (str === '' || str === null || typeof str === 'undefined') {\n        return options.plainObjects ? Object.create(null) : {};\n    }\n\n    var tempObj = typeof str === 'string' ? parseValues(str, options) : str;\n    var obj = options.plainObjects ? Object.create(null) : {};\n\n    // Iterate over the keys and setup the new object\n\n    var keys = Object.keys(tempObj);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var newObj = parseKeys(key, tempObj[key], options, typeof str === 'string');\n        obj = utils.merge(obj, newObj, options);\n    }\n\n    if (options.allowSparse === true) {\n        return obj;\n    }\n\n    return utils.compact(obj);\n};\n","'use strict';\n\nvar getSideChannel = require('side-channel');\nvar utils = require('./utils');\nvar formats = require('./formats');\nvar has = Object.prototype.hasOwnProperty;\n\nvar arrayPrefixGenerators = {\n    brackets: function brackets(prefix) {\n        return prefix + '[]';\n    },\n    comma: 'comma',\n    indices: function indices(prefix, key) {\n        return prefix + '[' + key + ']';\n    },\n    repeat: function repeat(prefix) {\n        return prefix;\n    }\n};\n\nvar isArray = Array.isArray;\nvar push = Array.prototype.push;\nvar pushToArray = function (arr, valueOrArray) {\n    push.apply(arr, isArray(valueOrArray) ? valueOrArray : [valueOrArray]);\n};\n\nvar toISO = Date.prototype.toISOString;\n\nvar defaultFormat = formats['default'];\nvar defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: utils.encode,\n    encodeValuesOnly: false,\n    format: defaultFormat,\n    formatter: formats.formatters[defaultFormat],\n    // deprecated\n    indices: false,\n    serializeDate: function serializeDate(date) {\n        return toISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false\n};\n\nvar isNonNullishPrimitive = function isNonNullishPrimitive(v) {\n    return typeof v === 'string'\n        || typeof v === 'number'\n        || typeof v === 'boolean'\n        || typeof v === 'symbol'\n        || typeof v === 'bigint';\n};\n\nvar sentinel = {};\n\nvar stringify = function stringify(\n    object,\n    prefix,\n    generateArrayPrefix,\n    commaRoundTrip,\n    allowEmptyArrays,\n    strictNullHandling,\n    skipNulls,\n    encodeDotInKeys,\n    encoder,\n    filter,\n    sort,\n    allowDots,\n    serializeDate,\n    format,\n    formatter,\n    encodeValuesOnly,\n    charset,\n    sideChannel\n) {\n    var obj = object;\n\n    var tmpSc = sideChannel;\n    var step = 0;\n    var findFlag = false;\n    while ((tmpSc = tmpSc.get(sentinel)) !== void undefined && !findFlag) {\n        // Where object last appeared in the ref tree\n        var pos = tmpSc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            } else {\n                findFlag = true; // Break while\n            }\n        }\n        if (typeof tmpSc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    } else if (obj instanceof Date) {\n        obj = serializeDate(obj);\n    } else if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        obj = utils.maybeMap(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate(value);\n            }\n            return value;\n        });\n    }\n\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ? encoder(prefix, defaults.encoder, charset, 'key', format) : prefix;\n        }\n\n        obj = '';\n    }\n\n    if (isNonNullishPrimitive(obj) || utils.isBuffer(obj)) {\n        if (encoder) {\n            var keyValue = encodeValuesOnly ? prefix : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [formatter(keyValue) + '=' + formatter(encoder(obj, defaults.encoder, charset, 'value', format))];\n        }\n        return [formatter(prefix) + '=' + formatter(String(obj))];\n    }\n\n    var values = [];\n\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n\n    var objKeys;\n    if (generateArrayPrefix === 'comma' && isArray(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            obj = utils.maybeMap(obj, encoder);\n        }\n        objKeys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    } else if (isArray(filter)) {\n        objKeys = filter;\n    } else {\n        var keys = Object.keys(obj);\n        objKeys = sort ? keys.sort(sort) : keys;\n    }\n\n    var encodedPrefix = encodeDotInKeys ? prefix.replace(/\\./g, '%2E') : prefix;\n\n    var adjustedPrefix = commaRoundTrip && isArray(obj) && obj.length === 1 ? encodedPrefix + '[]' : encodedPrefix;\n\n    if (allowEmptyArrays && isArray(obj) && obj.length === 0) {\n        return adjustedPrefix + '[]';\n    }\n\n    for (var j = 0; j < objKeys.length; ++j) {\n        var key = objKeys[j];\n        var value = typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n\n        if (skipNulls && value === null) {\n            continue;\n        }\n\n        var encodedKey = allowDots && encodeDotInKeys ? key.replace(/\\./g, '%2E') : key;\n        var keyPrefix = isArray(obj)\n            ? typeof generateArrayPrefix === 'function' ? generateArrayPrefix(adjustedPrefix, encodedKey) : adjustedPrefix\n            : adjustedPrefix + (allowDots ? '.' + encodedKey : '[' + encodedKey + ']');\n\n        sideChannel.set(object, step);\n        var valueSideChannel = getSideChannel();\n        valueSideChannel.set(sentinel, sideChannel);\n        pushToArray(values, stringify(\n            value,\n            keyPrefix,\n            generateArrayPrefix,\n            commaRoundTrip,\n            allowEmptyArrays,\n            strictNullHandling,\n            skipNulls,\n            encodeDotInKeys,\n            generateArrayPrefix === 'comma' && encodeValuesOnly && isArray(obj) ? null : encoder,\n            filter,\n            sort,\n            allowDots,\n            serializeDate,\n            format,\n            formatter,\n            encodeValuesOnly,\n            charset,\n            valueSideChannel\n        ));\n    }\n\n    return values;\n};\n\nvar normalizeStringifyOptions = function normalizeStringifyOptions(opts) {\n    if (!opts) {\n        return defaults;\n    }\n\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n\n    var charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n\n    var format = formats['default'];\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formats.formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    var formatter = formats.formatters[format];\n\n    var filter = defaults.filter;\n    if (typeof opts.filter === 'function' || isArray(opts.filter)) {\n        filter = opts.filter;\n    }\n\n    var arrayFormat;\n    if (opts.arrayFormat in arrayPrefixGenerators) {\n        arrayFormat = opts.arrayFormat;\n    } else if ('indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    } else {\n        arrayFormat = defaults.arrayFormat;\n    }\n\n    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n\n    var allowDots = typeof opts.allowDots === 'undefined' ? opts.encodeDotInKeys === true ? true : defaults.allowDots : !!opts.allowDots;\n\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling\n    };\n};\n\nmodule.exports = function (object, opts) {\n    var obj = object;\n    var options = normalizeStringifyOptions(opts);\n\n    var objKeys;\n    var filter;\n\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    } else if (isArray(options.filter)) {\n        filter = options.filter;\n        objKeys = filter;\n    }\n\n    var keys = [];\n\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n\n    var generateArrayPrefix = arrayPrefixGenerators[options.arrayFormat];\n    var commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n\n    if (!objKeys) {\n        objKeys = Object.keys(obj);\n    }\n\n    if (options.sort) {\n        objKeys.sort(options.sort);\n    }\n\n    var sideChannel = getSideChannel();\n    for (var i = 0; i < objKeys.length; ++i) {\n        var key = objKeys[i];\n\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        pushToArray(keys, stringify(\n            obj[key],\n            key,\n            generateArrayPrefix,\n            commaRoundTrip,\n            options.allowEmptyArrays,\n            options.strictNullHandling,\n            options.skipNulls,\n            options.encodeDotInKeys,\n            options.encode ? options.encoder : null,\n            options.filter,\n            options.sort,\n            options.allowDots,\n            options.serializeDate,\n            options.format,\n            options.formatter,\n            options.encodeValuesOnly,\n            options.charset,\n            sideChannel\n        ));\n    }\n\n    var joined = keys.join(options.delimiter);\n    var prefix = options.addQueryPrefix === true ? '?' : '';\n\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        } else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n\n    return joined.length > 0 ? prefix + joined : '';\n};\n","'use strict';\n\nvar formats = require('./formats');\n\nvar has = Object.prototype.hasOwnProperty;\nvar isArray = Array.isArray;\n\nvar hexTable = (function () {\n    var array = [];\n    for (var i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n\n    return array;\n}());\n\nvar compactQueue = function compactQueue(queue) {\n    while (queue.length > 1) {\n        var item = queue.pop();\n        var obj = item.obj[item.prop];\n\n        if (isArray(obj)) {\n            var compacted = [];\n\n            for (var j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n\n            item.obj[item.prop] = compacted;\n        }\n    }\n};\n\nvar arrayToObject = function arrayToObject(source, options) {\n    var obj = options && options.plainObjects ? Object.create(null) : {};\n    for (var i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n\n    return obj;\n};\n\nvar merge = function merge(target, source, options) {\n    /* eslint no-param-reassign: 0 */\n    if (!source) {\n        return target;\n    }\n\n    if (typeof source !== 'object') {\n        if (isArray(target)) {\n            target.push(source);\n        } else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) || !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        } else {\n            return [target, source];\n        }\n\n        return target;\n    }\n\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n\n    var mergeTarget = target;\n    if (isArray(target) && !isArray(source)) {\n        mergeTarget = arrayToObject(target, options);\n    }\n\n    if (isArray(target) && isArray(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                var targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                } else {\n                    target.push(item);\n                }\n            } else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n\n    return Object.keys(source).reduce(function (acc, key) {\n        var value = source[key];\n\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        } else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n};\n\nvar assign = function assignSingleSource(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n};\n\nvar decode = function (str, decoder, charset) {\n    var strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    } catch (e) {\n        return strWithoutPlus;\n    }\n};\n\nvar limit = 1024;\n\n/* eslint operator-linebreak: [2, \"before\"] */\n\nvar encode = function encode(str, defaultEncoder, charset, kind, format) {\n    // This code was originally written by Brian White (mscdex) for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n\n    var string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    } else if (typeof str !== 'string') {\n        string = String(str);\n    }\n\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n\n    var out = '';\n    for (var j = 0; j < string.length; j += limit) {\n        var segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        var arr = [];\n\n        for (var i = 0; i < segment.length; ++i) {\n            var c = segment.charCodeAt(i);\n            if (\n                c === 0x2D // -\n                || c === 0x2E // .\n                || c === 0x5F // _\n                || c === 0x7E // ~\n                || (c >= 0x30 && c <= 0x39) // 0-9\n                || (c >= 0x41 && c <= 0x5A) // a-z\n                || (c >= 0x61 && c <= 0x7A) // A-Z\n                || (format === formats.RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n\n            if (c < 0x80) {\n                arr[arr.length] = hexTable[c];\n                continue;\n            }\n\n            if (c < 0x800) {\n                arr[arr.length] = hexTable[0xC0 | (c >> 6)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            if (c < 0xD800 || c >= 0xE000) {\n                arr[arr.length] = hexTable[0xE0 | (c >> 12)]\n                    + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                    + hexTable[0x80 | (c & 0x3F)];\n                continue;\n            }\n\n            i += 1;\n            c = 0x10000 + (((c & 0x3FF) << 10) | (segment.charCodeAt(i) & 0x3FF));\n\n            arr[arr.length] = hexTable[0xF0 | (c >> 18)]\n                + hexTable[0x80 | ((c >> 12) & 0x3F)]\n                + hexTable[0x80 | ((c >> 6) & 0x3F)]\n                + hexTable[0x80 | (c & 0x3F)];\n        }\n\n        out += arr.join('');\n    }\n\n    return out;\n};\n\nvar compact = function compact(value) {\n    var queue = [{ obj: { o: value }, prop: 'o' }];\n    var refs = [];\n\n    for (var i = 0; i < queue.length; ++i) {\n        var item = queue[i];\n        var obj = item.obj[item.prop];\n\n        var keys = Object.keys(obj);\n        for (var j = 0; j < keys.length; ++j) {\n            var key = keys[j];\n            var val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n\n    compactQueue(queue);\n\n    return value;\n};\n\nvar isRegExp = function isRegExp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n};\n\nvar isBuffer = function isBuffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n};\n\nvar combine = function combine(a, b) {\n    return [].concat(a, b);\n};\n\nvar maybeMap = function maybeMap(val, fn) {\n    if (isArray(val)) {\n        var mapped = [];\n        for (var i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n};\n\nmodule.exports = {\n    arrayToObject: arrayToObject,\n    assign: assign,\n    combine: combine,\n    compact: compact,\n    decode: decode,\n    encode: encode,\n    isBuffer: isBuffer,\n    isRegExp: isRegExp,\n    maybeMap: maybeMap,\n    merge: merge\n};\n","import BN from 'bn.js'\n\nimport { Decoded, Input, List } from './types'\n\n// Types exported outside of this package\nexport { Decoded, Input, List }\n\n/**\n * RLP Encoding based on: https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP\n * This function takes in a data, convert it to buffer if not, and a length for recursion\n * @param input - will be converted to buffer\n * @returns returns buffer of encoded data\n **/\nexport function encode(input: Input): Buffer {\n  if (Array.isArray(input)) {\n    const output: Buffer[] = []\n    for (let i = 0; i < input.length; i++) {\n      output.push(encode(input[i]))\n    }\n    const buf = Buffer.concat(output)\n    return Buffer.concat([encodeLength(buf.length, 192), buf])\n  } else {\n    const inputBuf = toBuffer(input)\n    return inputBuf.length === 1 && inputBuf[0] < 128\n      ? inputBuf\n      : Buffer.concat([encodeLength(inputBuf.length, 128), inputBuf])\n  }\n}\n\n/**\n * Parse integers. Check if there is no leading zeros\n * @param v The value to parse\n * @param base The base to parse the integer into\n */\nfunction safeParseInt(v: string, base: number): number {\n  if (v[0] === '0' && v[1] === '0') {\n    throw new Error('invalid RLP: extra zeros')\n  }\n\n  return parseInt(v, base)\n}\n\nfunction encodeLength(len: number, offset: number): Buffer {\n  if (len < 56) {\n    return Buffer.from([len + offset])\n  } else {\n    const hexLength = intToHex(len)\n    const lLength = hexLength.length / 2\n    const firstByte = intToHex(offset + 55 + lLength)\n    return Buffer.from(firstByte + hexLength, 'hex')\n  }\n}\n\n/**\n * RLP Decoding based on: {@link https://github.com/ethereum/wiki/wiki/%5BEnglish%5D-RLP|RLP}\n * @param input - will be converted to buffer\n * @param stream - Is the input a stream (false by default)\n * @returns - returns decode Array of Buffers containg the original message\n **/\nexport function decode(input: Buffer, stream?: boolean): Buffer\nexport function decode(input: Buffer[], stream?: boolean): Buffer[]\nexport function decode(input: Input, stream?: boolean): Buffer[] | Buffer | Decoded\nexport function decode(input: Input, stream: boolean = false): Buffer[] | Buffer | Decoded {\n  if (!input || (input as any).length === 0) {\n    return Buffer.from([])\n  }\n\n  const inputBuffer = toBuffer(input)\n  const decoded = _decode(inputBuffer)\n\n  if (stream) {\n    return decoded\n  }\n  if (decoded.remainder.length !== 0) {\n    throw new Error('invalid remainder')\n  }\n\n  return decoded.data\n}\n\n/**\n * Get the length of the RLP input\n * @param input\n * @returns The length of the input or an empty Buffer if no input\n */\nexport function getLength(input: Input): Buffer | number {\n  if (!input || (input as any).length === 0) {\n    return Buffer.from([])\n  }\n\n  const inputBuffer = toBuffer(input)\n  const firstByte = inputBuffer[0]\n\n  if (firstByte <= 0x7f) {\n    return inputBuffer.length\n  } else if (firstByte <= 0xb7) {\n    return firstByte - 0x7f\n  } else if (firstByte <= 0xbf) {\n    return firstByte - 0xb6\n  } else if (firstByte <= 0xf7) {\n    // a list between  0-55 bytes long\n    return firstByte - 0xbf\n  } else {\n    // a list  over 55 bytes long\n    const llength = firstByte - 0xf6\n    const length = safeParseInt(inputBuffer.slice(1, llength).toString('hex'), 16)\n    return llength + length\n  }\n}\n\n/** Decode an input with RLP */\nfunction _decode(input: Buffer): Decoded {\n  let length, llength, data, innerRemainder, d\n  const decoded = []\n  const firstByte = input[0]\n\n  if (firstByte <= 0x7f) {\n    // a single byte whose value is in the [0x00, 0x7f] range, that byte is its own RLP encoding.\n    return {\n      data: input.slice(0, 1),\n      remainder: input.slice(1),\n    }\n  } else if (firstByte <= 0xb7) {\n    // string is 0-55 bytes long. A single byte with value 0x80 plus the length of the string followed by the string\n    // The range of the first byte is [0x80, 0xb7]\n    length = firstByte - 0x7f\n\n    // set 0x80 null to 0\n    if (firstByte === 0x80) {\n      data = Buffer.from([])\n    } else {\n      data = input.slice(1, length)\n    }\n\n    if (length === 2 && data[0] < 0x80) {\n      throw new Error('invalid rlp encoding: byte must be less 0x80')\n    }\n\n    return {\n      data: data,\n      remainder: input.slice(length),\n    }\n  } else if (firstByte <= 0xbf) {\n    // string is greater than 55 bytes long. A single byte with the value (0xb7 plus the length of the length),\n    // followed by the length, followed by the string\n    llength = firstByte - 0xb6\n    if (input.length - 1 < llength) {\n      throw new Error('invalid RLP: not enough bytes for string length')\n    }\n    length = safeParseInt(input.slice(1, llength).toString('hex'), 16)\n    if (length <= 55) {\n      throw new Error('invalid RLP: expected string length to be greater than 55')\n    }\n    data = input.slice(llength, length + llength)\n    if (data.length < length) {\n      throw new Error('invalid RLP: not enough bytes for string')\n    }\n\n    return {\n      data: data,\n      remainder: input.slice(length + llength),\n    }\n  } else if (firstByte <= 0xf7) {\n    // a list between  0-55 bytes long\n    length = firstByte - 0xbf\n    innerRemainder = input.slice(1, length)\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data as Buffer)\n      innerRemainder = d.remainder\n    }\n\n    return {\n      data: decoded,\n      remainder: input.slice(length),\n    }\n  } else {\n    // a list  over 55 bytes long\n    llength = firstByte - 0xf6\n    length = safeParseInt(input.slice(1, llength).toString('hex'), 16)\n    const totalLength = llength + length\n    if (totalLength > input.length) {\n      throw new Error('invalid rlp: total length is larger than the data')\n    }\n\n    innerRemainder = input.slice(llength, totalLength)\n    if (innerRemainder.length === 0) {\n      throw new Error('invalid rlp, List has a invalid length')\n    }\n\n    while (innerRemainder.length) {\n      d = _decode(innerRemainder)\n      decoded.push(d.data as Buffer)\n      innerRemainder = d.remainder\n    }\n    return {\n      data: decoded,\n      remainder: input.slice(totalLength),\n    }\n  }\n}\n\n/** Check if a string is prefixed by 0x */\nfunction isHexPrefixed(str: string): boolean {\n  return str.slice(0, 2) === '0x'\n}\n\n/** Removes 0x from a given String */\nfunction stripHexPrefix(str: string): string {\n  if (typeof str !== 'string') {\n    return str\n  }\n  return isHexPrefixed(str) ? str.slice(2) : str\n}\n\n/** Transform an integer into its hexadecimal value */\nfunction intToHex(integer: number | bigint): string {\n  if (integer < 0) {\n    throw new Error('Invalid integer as argument, must be unsigned!')\n  }\n  const hex = integer.toString(16)\n  return hex.length % 2 ? `0${hex}` : hex\n}\n\n/** Pad a string to be even */\nfunction padToEven(a: string): string {\n  return a.length % 2 ? `0${a}` : a\n}\n\n/** Transform an integer into a Buffer */\nfunction intToBuffer(integer: number | bigint): Buffer {\n  const hex = intToHex(integer)\n  return Buffer.from(hex, 'hex')\n}\n\n/** Transform anything into a Buffer */\nfunction toBuffer(v: Input): Buffer {\n  if (!Buffer.isBuffer(v)) {\n    if (typeof v === 'string') {\n      if (isHexPrefixed(v)) {\n        return Buffer.from(padToEven(stripHexPrefix(v)), 'hex')\n      } else {\n        return Buffer.from(v)\n      }\n    } else if (typeof v === 'number' || typeof v === 'bigint') {\n      if (!v) {\n        return Buffer.from([])\n      } else {\n        return intToBuffer(v)\n      }\n    } else if (v === null || v === undefined) {\n      return Buffer.from([])\n    } else if (v instanceof Uint8Array) {\n      return Buffer.from(v as any)\n    } else if (BN.isBN(v)) {\n      // converts a BN to a Buffer\n      return Buffer.from(v.toArray())\n    } else {\n      throw new Error('invalid type')\n    }\n  }\n  return v\n}\n","module.exports = require('./lib')(require('./lib/elliptic'))\n","const EC = require('elliptic').ec\n\nconst ec = new EC('secp256k1')\nconst ecparams = ec.curve\n\n// Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\nconst BN = ecparams.n.constructor\n\nfunction loadCompressedPublicKey (first, xbuf) {\n  let x = new BN(xbuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xbuf, ybuf) {\n  let x = new BN(xbuf)\n  let y = new BN(ybuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (pubkey) {\n  // length should be validated in interface\n  const first = pubkey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))\n    default:\n      return null\n  }\n}\n\nfunction savePublicKey (output, point) {\n  const pubkey = point.encode(null, output.length === 33)\n  // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]\n}\n\nmodule.exports = {\n  contextRandomize () {\n    return 0\n  },\n\n  privateKeyVerify (seckey) {\n    const bn = new BN(seckey)\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1\n  },\n\n  privateKeyNegate (seckey) {\n    const bn = new BN(seckey)\n    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(negate)\n    return 0\n  },\n\n  privateKeyTweakAdd (seckey, tweak) {\n    const bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0) return 1\n\n    bn.iadd(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n    if (bn.isZero()) return 1\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  privateKeyTweakMul (seckey, tweak) {\n    let bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    bn.imul(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  publicKeyVerify (pubkey) {\n    const pair = loadPublicKey(pubkey)\n    return pair === null ? 1 : 0\n  },\n\n  publicKeyCreate (output, seckey) {\n    const bn = new BN(seckey)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    const point = ec.keyFromPrivate(seckey).getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyConvert (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyNegate (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    point.y = point.y.redNeg()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyCombine (output, pubkeys) {\n    const pairs = new Array(pubkeys.length)\n    for (let i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i])\n      if (pairs[i] === null) return 1\n    }\n\n    let point = pairs[0].getPublic()\n    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakAdd (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0) return 2\n\n    const point = pair.getPublic().add(ecparams.g.mul(tweak))\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakMul (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2\n\n    const point = pair.getPublic().mul(tweak)\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  signatureNormalize (sig) {\n    const r = new BN(sig.subarray(0, 32))\n    const s = new BN(sig.subarray(32, 64))\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)\n    }\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport (obj, sig) {\n    const sigR = sig.subarray(0, 32)\n    const sigS = sig.subarray(32, 64)\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1\n\n    const { output } = obj\n\n    // Prepare R\n    let r = output.subarray(4, 4 + 33)\n    r[0] = 0x00\n    r.set(sigR, 1)\n\n    let lenR = 33\n    let posR = 0\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n    r = r.subarray(posR)\n    if (r[0] & 0x80) return 1\n    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1\n\n    // Prepare S\n    let s = output.subarray(6 + 33, 6 + 33 + 33)\n    s[0] = 0x00\n    s.set(sigS, 1)\n\n    let lenS = 33\n    let posS = 0\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n    s = s.subarray(posS)\n    if (s[0] & 0x80) return 1\n    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1\n\n    // Set output length for return\n    obj.outputlen = 6 + lenR + lenS\n\n    // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n    output[0] = 0x30\n    output[1] = obj.outputlen - 2\n    output[2] = 0x02\n    output[3] = r.length\n    output.set(r, 4)\n    output[4 + lenR] = 0x02\n    output[5 + lenR] = s.length\n    output.set(s, 6 + lenR)\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport (output, sig) {\n    if (sig.length < 8) return 1\n    if (sig.length > 72) return 1\n    if (sig[0] !== 0x30) return 1\n    if (sig[1] !== sig.length - 2) return 1\n    if (sig[2] !== 0x02) return 1\n\n    const lenR = sig[3]\n    if (lenR === 0) return 1\n    if (5 + lenR >= sig.length) return 1\n    if (sig[4 + lenR] !== 0x02) return 1\n\n    const lenS = sig[5 + lenR]\n    if (lenS === 0) return 1\n    if ((6 + lenR + lenS) !== sig.length) return 1\n\n    if (sig[4] & 0x80) return 1\n    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1\n\n    if (sig[lenR + 6] & 0x80) return 1\n    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1\n\n    let sigR = sig.subarray(4, 4 + lenR)\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)\n    if (sigR.length > 32) return 1\n\n    let sigS = sig.subarray(6 + lenR)\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)\n    if (sigS.length > 32) throw new Error('S length is too long')\n\n    let r = new BN(sigR)\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n    let s = new BN(sig.subarray(6 + lenR))\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)\n\n    return 0\n  },\n\n  ecdsaSign (obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      const _noncefn = noncefn\n      noncefn = (counter) => {\n        const nonce = _noncefn(message, seckey, null, data, counter)\n\n        const isValid = nonce instanceof Uint8Array && nonce.length === 32\n        if (!isValid) throw new Error('This is the way')\n\n        return new BN(nonce)\n      }\n    }\n\n    const d = new BN(seckey)\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1\n\n    let sig\n    try {\n      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })\n    } catch (err) {\n      return 1\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)\n    obj.recid = sig.recoveryParam\n\n    return 0\n  },\n\n  ecdsaVerify (sig, msg32, pubkey) {\n    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3\n\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 2\n\n    const point = pair.getPublic()\n    const isValid = ec.verify(msg32, sigObj, point)\n    return isValid ? 0 : 3\n  },\n\n  ecdsaRecover (output, sig, recid, msg32) {\n    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n\n    if (sigr.isZero() || sigs.isZero()) return 2\n\n    // Can throw `throw new Error('Unable to find sencond key candinate');`\n    let point\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid)\n    } catch (err) {\n      return 2\n    }\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const scalar = new BN(seckey)\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2\n\n    const point = pair.getPublic().mul(scalar)\n\n    if (hashfn === undefined) {\n      const data = point.encode(null, true)\n      const sha256 = ec.hash().update(data).digest()\n      for (let i = 0; i < 32; ++i) output[i] = sha256[i]\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32)\n      const x = point.getX().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]\n\n      if (!ybuf) ybuf = new Uint8Array(32)\n      const y = point.getY().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]\n\n      const hash = hashfn(xbuf, ybuf, data)\n\n      const isValid = hash instanceof Uint8Array && hash.length === output.length\n      if (!isValid) return 2\n\n      output.set(hash)\n    }\n\n    return 0\n  }\n}\n","const errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD:\n    'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n}\n\nfunction assert (cond, msg) {\n  if (!cond) throw new Error(msg)\n}\n\nfunction isUint8Array (name, value, length) {\n  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      const numbers = length.join(', ')\n      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`\n      assert(length.includes(value.length), msg)\n    } else {\n      const msg = `Expected ${name} to be an Uint8Array with length ${length}`\n      assert(value.length === length, msg)\n    }\n  }\n}\n\nfunction isCompressed (value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')\n}\n\nfunction getAssertedOutput (output = (len) => new Uint8Array(len), length) {\n  if (typeof output === 'function') output = output(length)\n  isUint8Array('output', output, length)\n  return output\n}\n\nfunction toTypeString (value) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nmodule.exports = (secp256k1) => {\n  return {\n    contextRandomize (seed) {\n      assert(\n        seed === null || seed instanceof Uint8Array,\n        'Expected seed to be an Uint8Array or null'\n      )\n      if (seed !== null) isUint8Array('seed', seed, 32)\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)\n      }\n    },\n\n    privateKeyVerify (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      return secp256k1.privateKeyVerify(seckey) === 0\n    },\n\n    privateKeyNegate (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    privateKeyTweakAdd (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    privateKeyTweakMul (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    publicKeyVerify (pubkey) {\n      isUint8Array('public key', pubkey, [33, 65])\n\n      return secp256k1.publicKeyVerify(pubkey) === 0\n    },\n\n    publicKeyCreate (seckey, compressed = true, output) {\n      isUint8Array('private key', seckey, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SECKEY_INVALID)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyConvert (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyNegate (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyCombine (pubkeys, compressed = true, output) {\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')\n      for (const pubkey of pubkeys) {\n        isUint8Array('public key', pubkey, [33, 65])\n      }\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    signatureNormalize (sig) {\n      isUint8Array('signature', sig, 64)\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n      }\n    },\n\n    signatureExport (sig, output) {\n      isUint8Array('signature', sig, 64)\n      output = getAssertedOutput(output, 72)\n\n      const obj = { output, outputlen: 72 }\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen)\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    signatureImport (sig, output) {\n      isUint8Array('signature', sig)\n      output = getAssertedOutput(output, 64)\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaSign (msg32, seckey, options = {}, output) {\n      isUint8Array('message', msg32, 32)\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')\n      output = getAssertedOutput(output, 64)\n\n      const obj = { signature: output, recid: null }\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj\n        case 1:\n          throw new Error(errors.SIGN)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaVerify (sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64)\n      isUint8Array('message', msg32, 32)\n      isUint8Array('public key', pubkey, [33, 65])\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true\n        case 3:\n          return false\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE)\n      }\n    },\n\n    ecdsaRecover (sig, recid, msg32, compressed = true, output) {\n      isUint8Array('signature', sig, 64)\n      assert(\n        toTypeString(recid) === 'Number' &&\n          recid >= 0 &&\n          recid <= 3,\n        'Expected recovery id to be a Number within interval [0, 3]'\n      )\n      isUint8Array('message', msg32, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.RECOVER)\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdh (pubkey, seckey, options = {}, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)\n        isUint8Array('output', output)\n      } else {\n        output = getAssertedOutput(output, 32)\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.ECDH)\n      }\n    }\n  }\n}\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar define = require('define-data-property');\nvar hasDescriptors = require('has-property-descriptors')();\nvar gOPD = require('gopd');\n\nvar $TypeError = require('es-errors/type');\nvar $floor = GetIntrinsic('%Math.floor%');\n\n/** @type {import('.')} */\nmodule.exports = function setFunctionLength(fn, length) {\n\tif (typeof fn !== 'function') {\n\t\tthrow new $TypeError('`fn` is not a function');\n\t}\n\tif (typeof length !== 'number' || length < 0 || length > 0xFFFFFFFF || $floor(length) !== length) {\n\t\tthrow new $TypeError('`length` must be a positive 32-bit integer');\n\t}\n\n\tvar loose = arguments.length > 2 && !!arguments[2];\n\n\tvar functionLengthIsConfigurable = true;\n\tvar functionLengthIsWritable = true;\n\tif ('length' in fn && gOPD) {\n\t\tvar desc = gOPD(fn, 'length');\n\t\tif (desc && !desc.configurable) {\n\t\t\tfunctionLengthIsConfigurable = false;\n\t\t}\n\t\tif (desc && !desc.writable) {\n\t\t\tfunctionLengthIsWritable = false;\n\t\t}\n\t}\n\n\tif (functionLengthIsConfigurable || functionLengthIsWritable || !loose) {\n\t\tif (hasDescriptors) {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length, true, true);\n\t\t} else {\n\t\t\tdefine(/** @type {Parameters<define>[0]} */ (fn), 'length', length);\n\t\t}\n\t}\n\treturn fn;\n};\n","'use strict';\n\nvar GetIntrinsic = require('get-intrinsic');\nvar callBound = require('call-bind/callBound');\nvar inspect = require('object-inspect');\n\nvar $TypeError = require('es-errors/type');\nvar $WeakMap = GetIntrinsic('%WeakMap%', true);\nvar $Map = GetIntrinsic('%Map%', true);\n\nvar $weakMapGet = callBound('WeakMap.prototype.get', true);\nvar $weakMapSet = callBound('WeakMap.prototype.set', true);\nvar $weakMapHas = callBound('WeakMap.prototype.has', true);\nvar $mapGet = callBound('Map.prototype.get', true);\nvar $mapSet = callBound('Map.prototype.set', true);\nvar $mapHas = callBound('Map.prototype.has', true);\n\n/*\n* This function traverses the list returning the node corresponding to the given key.\n*\n* That node is also moved to the head of the list, so that if it's accessed again we don't need to traverse the whole list. By doing so, all the recently used nodes can be accessed relatively quickly.\n*/\n/** @type {import('.').listGetNode} */\nvar listGetNode = function (list, key) { // eslint-disable-line consistent-return\n\t/** @type {typeof list | NonNullable<(typeof list)['next']>} */\n\tvar prev = list;\n\t/** @type {(typeof list)['next']} */\n\tvar curr;\n\tfor (; (curr = prev.next) !== null; prev = curr) {\n\t\tif (curr.key === key) {\n\t\t\tprev.next = curr.next;\n\t\t\t// eslint-disable-next-line no-extra-parens\n\t\t\tcurr.next = /** @type {NonNullable<typeof list.next>} */ (list.next);\n\t\t\tlist.next = curr; // eslint-disable-line no-param-reassign\n\t\t\treturn curr;\n\t\t}\n\t}\n};\n\n/** @type {import('.').listGet} */\nvar listGet = function (objects, key) {\n\tvar node = listGetNode(objects, key);\n\treturn node && node.value;\n};\n/** @type {import('.').listSet} */\nvar listSet = function (objects, key, value) {\n\tvar node = listGetNode(objects, key);\n\tif (node) {\n\t\tnode.value = value;\n\t} else {\n\t\t// Prepend the new node to the beginning of the list\n\t\tobjects.next = /** @type {import('.').ListNode<typeof value>} */ ({ // eslint-disable-line no-param-reassign, no-extra-parens\n\t\t\tkey: key,\n\t\t\tnext: objects.next,\n\t\t\tvalue: value\n\t\t});\n\t}\n};\n/** @type {import('.').listHas} */\nvar listHas = function (objects, key) {\n\treturn !!listGetNode(objects, key);\n};\n\n/** @type {import('.')} */\nmodule.exports = function getSideChannel() {\n\t/** @type {WeakMap<object, unknown>} */ var $wm;\n\t/** @type {Map<object, unknown>} */ var $m;\n\t/** @type {import('.').RootNode<unknown>} */ var $o;\n\n\t/** @type {import('.').Channel} */\n\tvar channel = {\n\t\tassert: function (key) {\n\t\t\tif (!channel.has(key)) {\n\t\t\t\tthrow new $TypeError('Side channel does not contain ' + inspect(key));\n\t\t\t}\n\t\t},\n\t\tget: function (key) { // eslint-disable-line consistent-return\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapGet($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapGet($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listGet($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\thas: function (key) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif ($wm) {\n\t\t\t\t\treturn $weakMapHas($wm, key);\n\t\t\t\t}\n\t\t\t} else if ($Map) {\n\t\t\t\tif ($m) {\n\t\t\t\t\treturn $mapHas($m, key);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif ($o) { // eslint-disable-line no-lonely-if\n\t\t\t\t\treturn listHas($o, key);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tset: function (key, value) {\n\t\t\tif ($WeakMap && key && (typeof key === 'object' || typeof key === 'function')) {\n\t\t\t\tif (!$wm) {\n\t\t\t\t\t$wm = new $WeakMap();\n\t\t\t\t}\n\t\t\t\t$weakMapSet($wm, key, value);\n\t\t\t} else if ($Map) {\n\t\t\t\tif (!$m) {\n\t\t\t\t\t$m = new $Map();\n\t\t\t\t}\n\t\t\t\t$mapSet($m, key, value);\n\t\t\t} else {\n\t\t\t\tif (!$o) {\n\t\t\t\t\t// Initialize the linked list as an empty node, so that we don't have to special-case handling of the first node: we can always refer to it as (previous node).next, instead of something like (list).head\n\t\t\t\t\t$o = { key: {}, next: null };\n\t\t\t\t}\n\t\t\t\tlistSet($o, key, value);\n\t\t\t}\n\t\t}\n\t};\n\treturn channel;\n};\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Currently in sync with Node.js lib/internal/util/types.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n\n'use strict';\n\nvar isArgumentsObject = require('is-arguments');\nvar isGeneratorFunction = require('is-generator-function');\nvar whichTypedArray = require('which-typed-array');\nvar isTypedArray = require('is-typed-array');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar BigIntSupported = typeof BigInt !== 'undefined';\nvar SymbolSupported = typeof Symbol !== 'undefined';\n\nvar ObjectToString = uncurryThis(Object.prototype.toString);\n\nvar numberValue = uncurryThis(Number.prototype.valueOf);\nvar stringValue = uncurryThis(String.prototype.valueOf);\nvar booleanValue = uncurryThis(Boolean.prototype.valueOf);\n\nif (BigIntSupported) {\n  var bigIntValue = uncurryThis(BigInt.prototype.valueOf);\n}\n\nif (SymbolSupported) {\n  var symbolValue = uncurryThis(Symbol.prototype.valueOf);\n}\n\nfunction checkBoxedPrimitive(value, prototypeValueOf) {\n  if (typeof value !== 'object') {\n    return false;\n  }\n  try {\n    prototypeValueOf(value);\n    return true;\n  } catch(e) {\n    return false;\n  }\n}\n\nexports.isArgumentsObject = isArgumentsObject;\nexports.isGeneratorFunction = isGeneratorFunction;\nexports.isTypedArray = isTypedArray;\n\n// Taken from here and modified for better browser support\n// https://github.com/sindresorhus/p-is-promise/blob/cda35a513bda03f977ad5cde3a079d237e82d7ef/index.js\nfunction isPromise(input) {\n\treturn (\n\t\t(\n\t\t\ttypeof Promise !== 'undefined' &&\n\t\t\tinput instanceof Promise\n\t\t) ||\n\t\t(\n\t\t\tinput !== null &&\n\t\t\ttypeof input === 'object' &&\n\t\t\ttypeof input.then === 'function' &&\n\t\t\ttypeof input.catch === 'function'\n\t\t)\n\t);\n}\nexports.isPromise = isPromise;\n\nfunction isArrayBufferView(value) {\n  if (typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView) {\n    return ArrayBuffer.isView(value);\n  }\n\n  return (\n    isTypedArray(value) ||\n    isDataView(value)\n  );\n}\nexports.isArrayBufferView = isArrayBufferView;\n\n\nfunction isUint8Array(value) {\n  return whichTypedArray(value) === 'Uint8Array';\n}\nexports.isUint8Array = isUint8Array;\n\nfunction isUint8ClampedArray(value) {\n  return whichTypedArray(value) === 'Uint8ClampedArray';\n}\nexports.isUint8ClampedArray = isUint8ClampedArray;\n\nfunction isUint16Array(value) {\n  return whichTypedArray(value) === 'Uint16Array';\n}\nexports.isUint16Array = isUint16Array;\n\nfunction isUint32Array(value) {\n  return whichTypedArray(value) === 'Uint32Array';\n}\nexports.isUint32Array = isUint32Array;\n\nfunction isInt8Array(value) {\n  return whichTypedArray(value) === 'Int8Array';\n}\nexports.isInt8Array = isInt8Array;\n\nfunction isInt16Array(value) {\n  return whichTypedArray(value) === 'Int16Array';\n}\nexports.isInt16Array = isInt16Array;\n\nfunction isInt32Array(value) {\n  return whichTypedArray(value) === 'Int32Array';\n}\nexports.isInt32Array = isInt32Array;\n\nfunction isFloat32Array(value) {\n  return whichTypedArray(value) === 'Float32Array';\n}\nexports.isFloat32Array = isFloat32Array;\n\nfunction isFloat64Array(value) {\n  return whichTypedArray(value) === 'Float64Array';\n}\nexports.isFloat64Array = isFloat64Array;\n\nfunction isBigInt64Array(value) {\n  return whichTypedArray(value) === 'BigInt64Array';\n}\nexports.isBigInt64Array = isBigInt64Array;\n\nfunction isBigUint64Array(value) {\n  return whichTypedArray(value) === 'BigUint64Array';\n}\nexports.isBigUint64Array = isBigUint64Array;\n\nfunction isMapToString(value) {\n  return ObjectToString(value) === '[object Map]';\n}\nisMapToString.working = (\n  typeof Map !== 'undefined' &&\n  isMapToString(new Map())\n);\n\nfunction isMap(value) {\n  if (typeof Map === 'undefined') {\n    return false;\n  }\n\n  return isMapToString.working\n    ? isMapToString(value)\n    : value instanceof Map;\n}\nexports.isMap = isMap;\n\nfunction isSetToString(value) {\n  return ObjectToString(value) === '[object Set]';\n}\nisSetToString.working = (\n  typeof Set !== 'undefined' &&\n  isSetToString(new Set())\n);\nfunction isSet(value) {\n  if (typeof Set === 'undefined') {\n    return false;\n  }\n\n  return isSetToString.working\n    ? isSetToString(value)\n    : value instanceof Set;\n}\nexports.isSet = isSet;\n\nfunction isWeakMapToString(value) {\n  return ObjectToString(value) === '[object WeakMap]';\n}\nisWeakMapToString.working = (\n  typeof WeakMap !== 'undefined' &&\n  isWeakMapToString(new WeakMap())\n);\nfunction isWeakMap(value) {\n  if (typeof WeakMap === 'undefined') {\n    return false;\n  }\n\n  return isWeakMapToString.working\n    ? isWeakMapToString(value)\n    : value instanceof WeakMap;\n}\nexports.isWeakMap = isWeakMap;\n\nfunction isWeakSetToString(value) {\n  return ObjectToString(value) === '[object WeakSet]';\n}\nisWeakSetToString.working = (\n  typeof WeakSet !== 'undefined' &&\n  isWeakSetToString(new WeakSet())\n);\nfunction isWeakSet(value) {\n  return isWeakSetToString(value);\n}\nexports.isWeakSet = isWeakSet;\n\nfunction isArrayBufferToString(value) {\n  return ObjectToString(value) === '[object ArrayBuffer]';\n}\nisArrayBufferToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  isArrayBufferToString(new ArrayBuffer())\n);\nfunction isArrayBuffer(value) {\n  if (typeof ArrayBuffer === 'undefined') {\n    return false;\n  }\n\n  return isArrayBufferToString.working\n    ? isArrayBufferToString(value)\n    : value instanceof ArrayBuffer;\n}\nexports.isArrayBuffer = isArrayBuffer;\n\nfunction isDataViewToString(value) {\n  return ObjectToString(value) === '[object DataView]';\n}\nisDataViewToString.working = (\n  typeof ArrayBuffer !== 'undefined' &&\n  typeof DataView !== 'undefined' &&\n  isDataViewToString(new DataView(new ArrayBuffer(1), 0, 1))\n);\nfunction isDataView(value) {\n  if (typeof DataView === 'undefined') {\n    return false;\n  }\n\n  return isDataViewToString.working\n    ? isDataViewToString(value)\n    : value instanceof DataView;\n}\nexports.isDataView = isDataView;\n\n// Store a copy of SharedArrayBuffer in case it's deleted elsewhere\nvar SharedArrayBufferCopy = typeof SharedArrayBuffer !== 'undefined' ? SharedArrayBuffer : undefined;\nfunction isSharedArrayBufferToString(value) {\n  return ObjectToString(value) === '[object SharedArrayBuffer]';\n}\nfunction isSharedArrayBuffer(value) {\n  if (typeof SharedArrayBufferCopy === 'undefined') {\n    return false;\n  }\n\n  if (typeof isSharedArrayBufferToString.working === 'undefined') {\n    isSharedArrayBufferToString.working = isSharedArrayBufferToString(new SharedArrayBufferCopy());\n  }\n\n  return isSharedArrayBufferToString.working\n    ? isSharedArrayBufferToString(value)\n    : value instanceof SharedArrayBufferCopy;\n}\nexports.isSharedArrayBuffer = isSharedArrayBuffer;\n\nfunction isAsyncFunction(value) {\n  return ObjectToString(value) === '[object AsyncFunction]';\n}\nexports.isAsyncFunction = isAsyncFunction;\n\nfunction isMapIterator(value) {\n  return ObjectToString(value) === '[object Map Iterator]';\n}\nexports.isMapIterator = isMapIterator;\n\nfunction isSetIterator(value) {\n  return ObjectToString(value) === '[object Set Iterator]';\n}\nexports.isSetIterator = isSetIterator;\n\nfunction isGeneratorObject(value) {\n  return ObjectToString(value) === '[object Generator]';\n}\nexports.isGeneratorObject = isGeneratorObject;\n\nfunction isWebAssemblyCompiledModule(value) {\n  return ObjectToString(value) === '[object WebAssembly.Module]';\n}\nexports.isWebAssemblyCompiledModule = isWebAssemblyCompiledModule;\n\nfunction isNumberObject(value) {\n  return checkBoxedPrimitive(value, numberValue);\n}\nexports.isNumberObject = isNumberObject;\n\nfunction isStringObject(value) {\n  return checkBoxedPrimitive(value, stringValue);\n}\nexports.isStringObject = isStringObject;\n\nfunction isBooleanObject(value) {\n  return checkBoxedPrimitive(value, booleanValue);\n}\nexports.isBooleanObject = isBooleanObject;\n\nfunction isBigIntObject(value) {\n  return BigIntSupported && checkBoxedPrimitive(value, bigIntValue);\n}\nexports.isBigIntObject = isBigIntObject;\n\nfunction isSymbolObject(value) {\n  return SymbolSupported && checkBoxedPrimitive(value, symbolValue);\n}\nexports.isSymbolObject = isSymbolObject;\n\nfunction isBoxedPrimitive(value) {\n  return (\n    isNumberObject(value) ||\n    isStringObject(value) ||\n    isBooleanObject(value) ||\n    isBigIntObject(value) ||\n    isSymbolObject(value)\n  );\n}\nexports.isBoxedPrimitive = isBoxedPrimitive;\n\nfunction isAnyArrayBuffer(value) {\n  return typeof Uint8Array !== 'undefined' && (\n    isArrayBuffer(value) ||\n    isSharedArrayBuffer(value)\n  );\n}\nexports.isAnyArrayBuffer = isAnyArrayBuffer;\n\n['isProxy', 'isExternal', 'isModuleNamespaceObject'].forEach(function(method) {\n  Object.defineProperty(exports, method, {\n    enumerable: false,\n    value: function() {\n      throw new Error(method + ' is not supported in userland');\n    }\n  });\n});\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors ||\n  function getOwnPropertyDescriptors(obj) {\n    var keys = Object.keys(obj);\n    var descriptors = {};\n    for (var i = 0; i < keys.length; i++) {\n      descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n    }\n    return descriptors;\n  };\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  }\n\n  // Allow for deprecating things in the process of starting up.\n  if (typeof process === 'undefined') {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnvRegex = /^$/;\n\nif (process.env.NODE_DEBUG) {\n  var debugEnv = process.env.NODE_DEBUG;\n  debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g, '\\\\$&')\n    .replace(/\\*/g, '.*')\n    .replace(/,/g, '$|^')\n    .toUpperCase();\n  debugEnvRegex = new RegExp('^' + debugEnv + '$', 'i');\n}\nexports.debuglog = function(set) {\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (debugEnvRegex.test(set)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').slice(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.slice(1, -1);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nexports.types = require('./support/types');\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\nexports.types.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\nexports.types.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\nexports.types.isNativeError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function')\n    throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn, enumerable: false, writable: false, configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn, enumerable: false, writable: false, configurable: true\n  });\n  return Object.defineProperties(\n    fn,\n    getOwnPropertyDescriptors(original)\n  );\n}\n\nexports.promisify.custom = kCustomPromisifiedSymbol\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  }\n\n  // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n  function callbackified() {\n    var args = [];\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n    var self = this;\n    var cb = function() {\n      return maybeCb.apply(self, arguments);\n    };\n    // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n    original.apply(this, args)\n      .then(function(ret) { process.nextTick(cb.bind(null, null, ret)) },\n            function(rej) { process.nextTick(callbackifyOnRejected.bind(null, rej, cb)) });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified,\n                          getOwnPropertyDescriptors(original));\n  return callbackified;\n}\nexports.callbackify = callbackify;\n","'use strict';\n\nvar forEach = require('for-each');\nvar availableTypedArrays = require('available-typed-arrays');\nvar callBind = require('call-bind');\nvar callBound = require('call-bind/callBound');\nvar gOPD = require('gopd');\n\n/** @type {(O: object) => string} */\nvar $toString = callBound('Object.prototype.toString');\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\nvar typedArrays = availableTypedArrays();\n\nvar $slice = callBound('String.prototype.slice');\nvar getPrototypeOf = Object.getPrototypeOf; // require('getprototypeof');\n\n/** @type {<T = unknown>(array: readonly T[], value: unknown) => number} */\nvar $indexOf = callBound('Array.prototype.indexOf', true) || function indexOf(array, value) {\n\tfor (var i = 0; i < array.length; i += 1) {\n\t\tif (array[i] === value) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n};\n\n/** @typedef {(receiver: import('.').TypedArray) => string | typeof Uint8Array.prototype.slice.call | typeof Uint8Array.prototype.set.call} Getter */\n/** @type {{ [k in `\\$${import('.').TypedArrayName}`]?: Getter } & { __proto__: null }} */\nvar cache = { __proto__: null };\nif (hasToStringTag && gOPD && getPrototypeOf) {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tif (Symbol.toStringTag in arr) {\n\t\t\tvar proto = getPrototypeOf(arr);\n\t\t\t// @ts-expect-error TS won't narrow inside a closure\n\t\t\tvar descriptor = gOPD(proto, Symbol.toStringTag);\n\t\t\tif (!descriptor) {\n\t\t\t\tvar superProto = getPrototypeOf(proto);\n\t\t\t\t// @ts-expect-error TS won't narrow inside a closure\n\t\t\t\tdescriptor = gOPD(superProto, Symbol.toStringTag);\n\t\t\t}\n\t\t\t// @ts-expect-error TODO: fix\n\t\t\tcache['$' + typedArray] = callBind(descriptor.get);\n\t\t}\n\t});\n} else {\n\tforEach(typedArrays, function (typedArray) {\n\t\tvar arr = new g[typedArray]();\n\t\tvar fn = arr.slice || arr.set;\n\t\tif (fn) {\n\t\t\t// @ts-expect-error TODO: fix\n\t\t\tcache['$' + typedArray] = callBind(fn);\n\t\t}\n\t});\n}\n\n/** @type {(value: object) => false | import('.').TypedArrayName} */\nvar tryTypedArrays = function tryAllTypedArrays(value) {\n\t/** @type {ReturnType<typeof tryAllTypedArrays>} */ var found = false;\n\tforEach(\n\t\t// eslint-disable-next-line no-extra-parens\n\t\t/** @type {Record<`\\$${TypedArrayName}`, Getter>} */ /** @type {any} */ (cache),\n\t\t/** @type {(getter: Getter, name: `\\$${import('.').TypedArrayName}`) => void} */\n\t\tfunction (getter, typedArray) {\n\t\t\tif (!found) {\n\t\t\t\ttry {\n\t\t\t\t// @ts-expect-error TODO: fix\n\t\t\t\t\tif ('$' + getter(value) === typedArray) {\n\t\t\t\t\t\tfound = $slice(typedArray, 1);\n\t\t\t\t\t}\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t}\n\t);\n\treturn found;\n};\n\n/** @type {(value: object) => false | import('.').TypedArrayName} */\nvar trySlices = function tryAllSlices(value) {\n\t/** @type {ReturnType<typeof tryAllSlices>} */ var found = false;\n\tforEach(\n\t\t// eslint-disable-next-line no-extra-parens\n\t\t/** @type {Record<`\\$${TypedArrayName}`, Getter>} */ /** @type {any} */ (cache),\n\t\t/** @type {(getter: typeof cache, name: `\\$${import('.').TypedArrayName}`) => void} */ function (getter, name) {\n\t\t\tif (!found) {\n\t\t\t\ttry {\n\t\t\t\t\t// @ts-expect-error TODO: fix\n\t\t\t\t\tgetter(value);\n\t\t\t\t\tfound = $slice(name, 1);\n\t\t\t\t} catch (e) { /**/ }\n\t\t\t}\n\t\t}\n\t);\n\treturn found;\n};\n\n/** @type {import('.')} */\nmodule.exports = function whichTypedArray(value) {\n\tif (!value || typeof value !== 'object') { return false; }\n\tif (!hasToStringTag) {\n\t\t/** @type {string} */\n\t\tvar tag = $slice($toString(value), 8, -1);\n\t\tif ($indexOf(typedArrays, tag) > -1) {\n\t\t\treturn tag;\n\t\t}\n\t\tif (tag !== 'Object') {\n\t\t\treturn false;\n\t\t}\n\t\t// node < 0.6 hits here on real Typed Arrays\n\t\treturn trySlices(value);\n\t}\n\tif (!gOPD) { return null; } // unknown engine\n\treturn tryTypedArrays(value);\n};\n","'use strict';\n\nvar possibleNames = require('possible-typed-array-names');\n\nvar g = typeof globalThis === 'undefined' ? global : globalThis;\n\n/** @type {import('.')} */\nmodule.exports = function availableTypedArrays() {\n\tvar /** @type {ReturnType<typeof availableTypedArrays>} */ out = [];\n\tfor (var i = 0; i < possibleNames.length; i++) {\n\t\tif (typeof g[possibleNames[i]] === 'function') {\n\t\t\t// @ts-expect-error\n\t\t\tout[out.length] = possibleNames[i];\n\t\t}\n\t}\n\treturn out;\n};\n"],"names":["bind","fn","thisArg","apply","arguments","toString","Object","prototype","getPrototypeOf","kindOf","cache","create","thing","str","call","slice","toLowerCase","kindOfTest","type","typeOfTest","isArray","Array","isUndefined","isArrayBuffer","isString","isFunction","isNumber","isObject","isPlainObject","val","Symbol","toStringTag","iterator","isDate","isFile","isBlob","isFileList","isURLSearchParams","isReadableStream","isRequest","isResponse","isHeaders","map","forEach","obj","i","l","allOwnKeys","length","undefined","keys","getOwnPropertyNames","len","key","findKey","_key","_global","globalThis","self","window","global","isContextDefined","context","isTypedArray","TypedArray","Uint8Array","isHTMLForm","hasOwnProperty","_ref","prop","isRegExp","reduceDescriptors","reducer","descriptors","getOwnPropertyDescriptors","reducedDescriptors","descriptor","name","ret","defineProperties","ALPHA","DIGIT","ALPHABET","ALPHA_DIGIT","toUpperCase","isAsyncFn","_setImmediate","setImmediateSupported","postMessageSupported","setImmediate","token","Math","random","callbacks","addEventListener","_ref2","source","data","shift","cb","push","postMessage","setTimeout","asap","queueMicrotask","process","nextTick","isBuffer","constructor","isFormData","kind","FormData","append","isArrayBufferView","result","ArrayBuffer","isView","buffer","isBoolean","isStream","pipe","merge","caseless","this","assignValue","targetKey","extend","a","b","trim","replace","stripBOM","content","charCodeAt","inherits","superConstructor","props","defineProperty","value","assign","toFlatObject","sourceObj","destObj","filter","propFilter","merged","endsWith","searchString","position","String","lastIndex","indexOf","toArray","arr","forEachEntry","next","done","pair","matchAll","regExp","matches","exec","hasOwnProp","freezeMethods","enumerable","writable","set","Error","toObjectSet","arrayOrString","delimiter","define","split","toCamelCase","m","p1","p2","noop","toFiniteNumber","defaultValue","Number","isFinite","generateString","size","alphabet","isSpecCompliantForm","toJSONObject","stack","visit","target","reducedValue","isThenable","then","catch","AxiosError","message","code","config","request","response","captureStackTrace","status","utils","toJSON","description","number","fileName","lineNumber","columnNumber","from","error","customProps","axiosError","cause","isVisitable","removeBrackets","renderKey","path","dots","concat","join","predicates","test","formData","options","TypeError","metaTokens","indexes","option","visitor","defaultVisitor","useBlob","Blob","convertValue","toISOString","Buffer","JSON","stringify","some","isFlatArray","el","index","exposedHelpers","build","pop","encode","charMap","encodeURIComponent","match","AxiosURLSearchParams","params","_pairs","toFormData","encoder","_encode","buildURL","url","serializeFn","serialize","serializedParams","hashmarkIndex","handlers","use","fulfilled","rejected","synchronous","runWhen","eject","id","clear","h","silentJSONParsing","forcedJSONParsing","clarifyTimeoutError","isBrowser","classes","URLSearchParams","protocols","hasBrowserEnv","document","_navigator","navigator","hasStandardBrowserEnv","product","hasStandardBrowserWebWorkerEnv","WorkerGlobalScope","importScripts","origin","location","href","platform","buildPath","isNumericKey","isLast","arrayToObject","entries","parsePropPath","defaults","transitional","transitionalDefaults","adapter","transformRequest","headers","contentType","getContentType","hasJSONContentType","isObjectPayload","formDataToJSON","setContentType","helpers","isNode","toURLEncodedForm","formSerializer","_FormData","env","rawValue","parser","parse","e","stringifySafely","transformResponse","JSONRequested","responseType","strictJSONParsing","ERR_BAD_RESPONSE","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","common","method","ignoreDuplicateOf","$internals","normalizeHeader","header","normalizeValue","matchHeaderValue","isHeaderNameFilter","AxiosHeaders","valueOrRewrite","rewrite","setHeader","_value","_header","_rewrite","lHeader","setHeaders","rawHeaders","parsed","line","substring","parseHeaders","get","tokens","tokensRE","parseTokens","has","matcher","delete","deleted","deleteHeader","normalize","format","normalized","w","char","formatHeader","_len","targets","asStrings","first","computed","_len2","_key2","accessor","accessors","defineAccessor","accessorName","methodName","arg1","arg2","arg3","configurable","buildAccessors","mapped","headerValue","transformData","fns","isCancel","__CANCEL__","CanceledError","ERR_CANCELED","settle","resolve","reject","ERR_BAD_REQUEST","floor","samplesCount","min","bytes","timestamps","firstSampleTS","head","tail","chunkLength","now","Date","startedAt","bytesCount","passed","round","freq","lastArgs","timer","timestamp","threshold","invoke","args","clearTimeout","flush","progressEventReducer","listener","isDownloadStream","bytesNotified","_speedometer","speedometer","throttle","loaded","total","lengthComputable","progressBytes","rate","progress","estimated","event","progressEventDecorator","throttled","asyncDecorator","msie","userAgent","urlParsingNode","createElement","originURL","resolveURL","setAttribute","protocol","host","search","hash","hostname","port","pathname","charAt","requestURL","write","expires","domain","secure","cookie","toGMTString","read","RegExp","decodeURIComponent","remove","buildFullPath","baseURL","requestedURL","relativeURL","combineURLs","headersToObject","mergeConfig","config1","config2","getMergedValue","mergeDeepProperties","valueFromConfig2","defaultToConfig2","mergeDirectKeys","mergeMap","paramsSerializer","timeoutMessage","withCredentials","withXSRFToken","onUploadProgress","onDownloadProgress","decompress","beforeRedirect","transport","httpAgent","httpsAgent","cancelToken","socketPath","responseEncoding","configValue","newConfig","auth","btoa","username","password","unescape","Boolean","isURLSameOrigin","xsrfValue","cookies","XMLHttpRequest","Promise","_config","resolveConfig","requestData","requestHeaders","onCanceled","uploadThrottled","downloadThrottled","flushUpload","flushDownload","unsubscribe","signal","removeEventListener","onloadend","responseHeaders","getAllResponseHeaders","err","responseText","statusText","open","onreadystatechange","readyState","responseURL","onabort","ECONNABORTED","onerror","ERR_NETWORK","ontimeout","timeoutErrorMessage","ETIMEDOUT","setRequestHeader","upload","cancel","abort","subscribe","aborted","parseProtocol","send","composeSignals","signals","controller","AbortController","reason","streamChunk","chunk","chunkSize","byteLength","end","pos","readStream","async","stream","asyncIterator","reader","getReader","trackStream","onProgress","onFinish","iterable","readBytes","_onFinish","ReadableStream","pull","close","loadedBytes","enqueue","return","highWaterMark","isFetchSupported","fetch","Request","Response","isReadableStreamSupported","encodeText","TextEncoder","arrayBuffer","supportsRequestStream","duplexAccessed","hasContentType","body","duplex","supportsResponseStream","resolvers","res","_","ERR_NOT_SUPPORT","resolveBodyLength","getContentLength","_request","getBodyLength","knownAdapters","http","xhr","xhrAdapter","fetchOptions","composedSignal","toAbortSignal","requestContentLength","contentTypeHeader","isCredentialsSupported","credentials","isStreamResponse","responseContentLength","responseData","renderReason","isResolvedHandle","adapters","nameOrAdapter","rejectedReasons","reasons","state","s","throwIfCancellationRequested","throwIfRequested","dispatchRequest","VERSION","validators","deprecatedWarnings","validator","version","formatMessage","opt","desc","opts","ERR_DEPRECATED","console","warn","assertOptions","schema","allowUnknown","ERR_BAD_OPTION_VALUE","ERR_BAD_OPTION","Axios","instanceConfig","interceptors","InterceptorManager","configOrUrl","dummy","boolean","function","contextHeaders","requestInterceptorChain","synchronousRequestInterceptors","interceptor","unshift","responseInterceptorChain","promise","chain","onFulfilled","onRejected","getUri","generateHTTPMethod","isForm","CancelToken","executor","resolvePromise","_listeners","onfulfilled","_resolve","splice","c","HttpStatusCode","Continue","SwitchingProtocols","Processing","EarlyHints","Ok","Created","Accepted","NonAuthoritativeInformation","NoContent","ResetContent","PartialContent","MultiStatus","AlreadyReported","ImUsed","MultipleChoices","MovedPermanently","Found","SeeOther","NotModified","UseProxy","Unused","TemporaryRedirect","PermanentRedirect","BadRequest","Unauthorized","PaymentRequired","Forbidden","NotFound","MethodNotAllowed","NotAcceptable","ProxyAuthenticationRequired","RequestTimeout","Conflict","Gone","LengthRequired","PreconditionFailed","PayloadTooLarge","UriTooLong","UnsupportedMediaType","RangeNotSatisfiable","ExpectationFailed","ImATeapot","MisdirectedRequest","UnprocessableEntity","Locked","FailedDependency","TooEarly","UpgradeRequired","PreconditionRequired","TooManyRequests","RequestHeaderFieldsTooLarge","UnavailableForLegalReasons","InternalServerError","NotImplemented","BadGateway","ServiceUnavailable","GatewayTimeout","HttpVersionNotSupported","VariantAlsoNegotiates","InsufficientStorage","LoopDetected","NotExtended","NetworkAuthenticationRequired","axios","createInstance","defaultConfig","instance","Cancel","all","promises","spread","callback","isAxiosError","payload","formToJSON","getAdapter","default","__awaiter","_arguments","P","generator","step","__rest","t","p","getOwnPropertySymbols","propertyIsEnumerable","EmailTheme","PublicKeyStatus","PublicKeyType","SignatureScheme","Chain","EncryptorType","KeyType","Network","OnRampProvider","OnRampAsset","OnRampPurchaseStatus","SESSION_COOKIE_HEADER_NAME","userManagementHost","apiKey","retrieveSessionCookie","persistSessionCookie","createUser","baseRequest","post","checkUserExists","email","phone","countryCode","verifyEmail","userId","verifyPhone","addSessionPublicKey","getSessionPublicKeys","getSessionPublicKey","biometricId","patchSessionPublicKey","partnerId","patch","getWebChallenge","farcasterUsername","publicKey","queryParams","query","qs","touchSession","regenerate","verifyWebChallenge","getSessionChallenge","verifySessionChallenge","createWallet","createPregenWallet","getPregenWallets","pregenIdentifier","pregenIdentifierType","claimPregenWallet","sendTransaction","walletId","signTransaction","refreshKeys","updatePregenWallet","getWallets","login","verifyLogin","verificationCode","logout","recoveryVerification","recoveryInit","preSignMessage","scheme","deleteSelf","getCapsuleShare","share","getBackupKit","axiosConfig","defaultTransformRequest","currentSessionCookie","defaultTransformResponse","_status","useFetchAdapter","text","uploadKeyshares","encryptedKeyshares","keyShares","uploadUserKeyShares","getKeyshare","encryptor","getBiometricKeyshares","biometricPublicKey","uploadTransmissionKeyshares","shares","getTransmissionKeyshares","sessionLookupId","resendVerificationCode","_a","rest","resendVerificationCodeByPhone","cancelRecoveryAttempt","check2FAStatus","enable2FA","setup2FA","initializeRecovery","initializeFarcasterLogin","getFarcasterAuthStatus","initializeRecoveryForPhone","finalizeRecovery","recoverUserShares","verifyEmailForRecovery","verifyPhoneForRecovery","verify2FA","verify2FAForPhone","tempTrasmissionInit","tempTrasmission","getPartner","acceptScopes","getPendingTransaction","pendingTransactionid","acceptPendingTransaction","pendingTransactionId","getPolicyPermissions","policyId","createOnRampPurchase","provider","network","asset","testMode","updateOnRampPurchase","purchaseId","updates","getOnRampPurchase","distributeCapsuleShare","keepSessionAlive","persistRecoveryPublicKeys","publicKeys","getRecoveryPublicKeys","uploadEncryptedWalletPrivateKey","encryptedWalletPrivateKey","encryptionKeyHash","getEncryptedWalletPrivateKeys","NodeBuffer","Environment","OAuthMethod","NetworkMap","ethereum","ETHEREUM","arbitrum","ARBITRUM","base","BASE","optimism","OPTIMISM","POLYGON","polygon","OnRampProviderMap","RAMP","STRIPE","USDC","stripe","ramp","OnRampAssetMap","eth","ETH","usdc","matic","MATIC","OnRampMethod","getProvider","getAsset","getNetwork","networkProp","getPortalBaseURL","useLocalIp","DEV","SANDBOX","BETA","PROD","getPortalDomain","rsa","forge","RSA_ENCRYPTION_SCHEME","CONSTANT_IV","getPublicKeyHex","keyPair","pem","publicKeyToRSAPublicKeyPem","getAsymmetricKeyPair","ctx","seedValue","prng","seedFileSync","_n","seedFile","bits","disableWorkers","workLoad","workers","workerRes","workerBlob","workerScript","URL","createObjectURL","generateKeyPair","keypair","decipherEncryptedMessageHex","encryptedMessageHex","decipher","createDecipher","start","iv","update","createBuffer","hexToBytes","finish","output","decryptWithPrivateKey","privateKey","encryptedKeyHex","encryptedKey","decrypt","encryptWithDerivedPublicKey","publicKeyHex","getBytesSync","cipher","createCipher","toHex","symmetricKeyEncryptMessage","publicKeyPem","publicKeyHexToPem","publicKeyFromPem","encrypt","getBaseUrl","getBaseMPCNetworkUrl","useWebsocket","prefix","initClient","Client","useAdapter","client","KeyContainer","keyshare","address","backupDecryptionKey","buildFrom","serializedContainer","parsedObject","container","getPublicEncryptionKey","eutil","getPublicEncryptionKeyHex","encryptForSelf","backup","pubkey","ECIESEncrypt","encryptWithPublicKey","encryptedBackup","buf","ECIESDecrypt","sendRecoveryForShare","otherEncryptedShares","userSigner","ignoreRedistributingBackupEncryptedShare","emailProps","userBackupKeyShareOptsArr","recoveryPrivateKeyContainer","recoveryPublicKeys","capsuleClient","recoveryPublicKey","recoveryPublicKeyId","encryptedUserBackup","encryptedShare","RECOVERY","useDKLS","distributeNewShare","userShare","biometricEncryptedShares","sigDerivedPublicKey","BIOMETRICS","objectConstructor","object","normalizeArguments","metadata","_Array$prototype$slic2","_slicedToArray","arg_1","arg_2","arg_3","arg_4","_objectSpread","defaultCountry","VALID_DIGITS","VALID_PUNCTUATION","ParseError","_this","_classCallCheck","_super","setPrototypeOf","_assertThisInitialized","pa","pb","na","nb","isNaN","DEFAULT_EXT_PREFIX","CALLING_CODE_REG_EXP","Metadata","countries","typeOf","validateMetadata","setVersion","v1","v2","v3","nonGeographic","nonGeographical","country","getCountryMetadata","callingCode","getCountryCodesForCallingCode","countryCodes","countryCallingCodes","selectNumberingPlan","hasCountry","numberingPlan","NumberingPlan","hasCallingCode","getNumberingPlanMetadata","getCountryCodeForCallingCode","IDDPrefix","defaultIDDPrefix","nationalNumberPattern","possibleLengths","formats","nationalPrefixForParsing","nationalPrefixTransformRule","leadingDigits","hasTypes","_type","ext","country_phone_code_to_countries","country_calling_codes","globalMetadataObject","_getFormats","getDefaultCountryMetadataForRegion","Format","_getNationalPrefixFormattingRule","_nationalPrefixForParsing","nationalPrefix","_getNationalPrefixIsOptionalWhenFormatting","types","_type2","getType","Type","_format","nationalPrefixFormattingRule","nationalPrefixIsOptionalWhenFormattingInNationalFormat","usesNationalPrefix","FIRST_GROUP_ONLY_PREFIX_PATTERN","_typeof","getCountryCallingCode","countryCallingCode","v4","compare","getExtensionDigitsPattern","maxLength","createExtensionPattern","purpose","possibleSeparatorsBetweenNumberAndExtLabel","possibleCharsAfterExtLabel","optionalExtnSuffix","possibleSeparatorsNumberExtLabelNoComma","MIN_LENGTH_PHONE_NUMBER_PATTERN","VALID_PHONE_NUMBER","VALID_PHONE_NUMBER_START_REG_EXP","VALID_PHONE_NUMBER_WITH_EXTENSION","VALID_PHONE_NUMBER_PATTERN","EXTN_PATTERN","DIGITS","parseDigit","character","parseIncompletePhoneNumber","string","_step","_iterator","_createForOfIteratorHelperLoose","parsePhoneNumberCharacter","prevParsedCharacters","emitEvent","checkNumberLength","nationalNumber","checkNumberLengthForType","type_info","possible_lengths","mobile_type","element","sort","mergeArrays","actual_length","minimum_length","isPossibleNumber","matchesEntirely","regular_expression","NON_FIXED_LINE_PHONE_TYPES","getNumberType","input","isNumberTypeEqualTo","pattern","getPossibleCountriesForNumber","possibleCountries","_metadata","couldNationalNumberBelongToCountry","FIRST_GROUP_PATTERN","formatNationalNumberUsingFormat","useInternationalFormat","withNationalPrefix","formattedNumber","carrierCode","internationalFormat","applyInternationalSeparatorStyle","SINGLE_IDD_PREFIX_REG_EXP","DEFAULT_OPTIONS","formatExtension","extension","formatNumber","addExtension","formatNationalNumber","formatRFC3966","fromCountry","fromCountryCallingCode","iddPrefix","countryMetadata","getIddPrefix","formatIDD","formatAs","availableFormats","nationalNnumber","leadingDigitsPatterns","lastLeadingDigitsPattern","chooseFormatForNumber","PhoneNumber","countryOrCountryCallingCode","_getCountryAndCountry","metadataJson","isCountryCode","getCountryAndCountryCallingCode","getMetadata","isNonGeographicCallingCode","phoneNumber","CAPTURING_DIGIT_PATTERN","extractNationalNumber","_extractNationalNumbe","prefixPattern","prefixMatch","capturedGroupsCount","hasCapturedGroups","prefixBeforeNationalNumber","possiblePositionOfTheFirstCapturedGroup","extractNationalNumberFromPossiblyIncompleteNumber","nationalNumberBefore","nationalNumberAfter","shouldHaveExtractedNationalPrefix","isPossibleIncompleteNationalNumber","extractCountryCallingCode","isNumberWithIddPrefix","numberWithoutIDD","IDDPrefixPattern","matchedGroups","stripIddPrefix","_extractCountryCallin","possibleShorterNumber","possibleShorterNationalNumber","extractCountryCallingCodeFromInternationalNumberWithoutPlusSign","shorterNumber","countryCallingCodeSource","_countryCallingCode","getCountryByCallingCode","nationalPhoneNumber","matchingCountries","getCountryByNationalNumber","RFC3966_PHONE_DIGIT_","RFC3966_GLOBAL_NUMBER_DIGITS_PATTERN_","RFC3966_DOMAINNAME_PATTERN_","RFC3966_PREFIX_","RFC3966_PHONE_CONTEXT_","extractFormattedPhoneNumberFromPossibleRfc3966NumberUri","numberToParse","phoneNumberString","extractFormattedPhoneNumber","phoneContext","numberToExtractFrom","indexOfPhoneContext","phoneContextStart","phoneContextEnd","extractPhoneContext","isPhoneContextValid","indexOfNationalNumber","indexOfRfc3966Prefix","indexOfIsdn","PHONE_NUMBER_START_PATTERN","AFTER_PHONE_NUMBER_END_PATTERN","_parseInput","extract","throwOnError","startsAt","_extractFormattedPhoneNumber","isViablePhoneNumber","isViablePhoneNumberStart","withExtensionStripped","numberWithoutExtension","extractExtension","parseInput","formattedPhoneNumber","_parsePhoneNumber","defaultCallingCode","exactCountry","parsePhoneNumber","hasSelectedNumberingPlan","__countryCallingCodeSource","valid","extended","possible","isSupportedCountry","parsePhoneNumberWithError","_normalizeArguments","parsePhoneNumber_","func","withMetadataArgument","WalletScheme","WalletType","RecoveryStatus","PregenIdentifierType","PREFIX","LOCAL_STORAGE_EMAIL","LOCAL_STORAGE_PHONE","LOCAL_STORAGE_COUNTRY_CODE","LOCAL_STORAGE_FARCASTER_USERNAME","LOCAL_STORAGE_USER_ID","LOCAL_STORAGE_WALLETS","LOCAL_STORAGE_ED25519_WALLETS","LOCAL_STORAGE_SESSION_COOKIE","SESSION_STORAGE_LOGIN_ENCRYPTION_KEY_PAIR","POLLING_INTERVAL_MS","convertBigInt","bigInt","convertedBigInt","jsbn","BigInteger","convertEncryptionKeyPair","jsonKeyPair","pki","setRsaPrivateKey","n","d","q","dP","dQ","qInv","setRsaPublicKey","requireApiKey","localStorageGetItem","platformUtils","localStorage","localStorageSetItem","sessionStorageGetItem","sessionStorage","sessionStorageSetItem","sessionStorageRemoveItem","removeItem","sessionCookie","clearStorage","secureStorage","emailPrimaryColor","emailTheme","homepageUrl","supportUrl","xUrl","githubUrl","linkedinUrl","portalBackgroundColor","portalPrimaryButtonColor","portalTextColor","portalPrimaryButtonTextColor","portalTheme","getPlatformUtils","disableProviderModal","supportedWalletTypes","EVM","useStorageOverrides","localStorageGetItemOverride","localStorageSetItemOverride","sessionStorageGetItemOverride","sessionStorageSetItemOverride","sessionStorageRemoveItemOverride","clearStorageOverride","offloadMPCComputationURL","useLocalFiles","useDKLSForCreation","disableWebSockets","wasmOverride","mpcComputationClient","isSyncStorage","stringWallets","wallets","stringED25519Wallets","ed25519Wallets","loginEncryptionKey","loginEncryptionKeyPair","getVerificationEmailProps","brandColor","theme","getBackupKitEmailProps","init","setEmail","setPhoneNumber","setFarcasterUsername","setUserId","setWallets","setEd25519Wallets","setLoginEncryptionKeyPair","deleteLoginEncryptionKeyPair","getUserId","getEmail","getED25519Wallets","getAddress","_b","values","getPartnerURL","partner","portalUrl","getPortalURL","getCommonLoginQueryParams","newDeviceSessionId","newDeviceEncryptionKey","getCommonQueryParams","isForNewDevice","_c","_d","_e","_f","font","borderRadius","foregroundColor","backgroundColor","getWebAuthURLForCreate","webAuthId","commonQueryParams","userSpecificParams","farcaster","getShortUrl","compressedUrl","shortenLoginLink","link","userManagementClient","secret","publicKeyUint8Array","randomBytes","transmissionUtils","getWebAuthURLForLogin","sessionId","loginEncryptionPublicKey","commonLoginQueryParams","getWebAuthURLForLoginForPhone","getPrivateKey","wallet","DKLS","signer","fetchWallets","populateWalletAddresses","ED25519","populatePregenWalletAddresses","checkIfUserExists","exists","checkIfUserExistsByPhone","createUserByPhone","getSetUpBiometricsURL","getSetUpBiometricsURLForPhone","initiatedAt","uri","isSetup","PENDING","WEB","isSessionActive","biometricVerifiedAt","verifiedAt","isFullyLoggedIn","evmWalletAddress","solanaAddress","initiateUserLogin","identifier","useShortURL","webAuthLoginURL","initiateUserLoginForPhone","waitForAccountCreation","waitForPasskeyAndCreateWallet","EMAIL","parsePhoneNumberFromString","formatInternational","PHONE","claimPregenWallets","recoverySecret","createWalletPerMissingType","getFarcasterConnectURL","connect_uri","waitForFarcasterStatus","userExists","getOAuthURL","oAuthMethod","waitForOAuth","waitForLoginAndSetup","skipSessionRefresh","userSetupAfterLogin","fetchedWallets","tempSharesRes","getTransmissionKeyShares","temporaryShares","setupAfterLogin","needsEvm","includes","needsSolana","SOLANA","needsWallet","refreshSession","shouldOpenPopup","openPopup","distributeNewWalletShare","skipBiometricShareCreation","_userShare","waitForWalletAddress","maxPolls","find","waitForPregenWalletAddress","skipDistribute","evmWallet","evmSecret","ed25519Wallet","ed25519Secret","useED25519","keygenRes","ed25519Keygen","keygen","recoveryShare","createWalletPreGen","useSolana","newWalletId","ed25519PreKeygen","preKeygen","formatNational","updateWalletIdentifierPreGen","newIdentifier","currentWalletId","hasPregenWallet","encodeWalletBase64","walletJson","getUserShare","setUserShare","base64Wallets","base64WalletsSplit","base64Wallet","getTransactionReviewUrl","transactionId","signMessage","messageBase64","signerId","ed25519Sign","transactionReviewUrl","rlpEncodedTxBase64","chainId","isProviderModalDisabled","exportSession","sessionInfo","importSession","serializedInstanceBase64","serializedInstance","preservePregenWallets","allWallets","PREGEN","redactedWallets","reduce","acc","LocalStorage","getItem","setItem","startsWith","SessionStorage","enosys","fs","outputBuf","constants","O_WRONLY","O_RDWR","O_CREAT","O_TRUNC","O_APPEND","O_EXCL","writeSync","fd","decoder","decode","nl","lastIndexOf","log","offset","chmod","mode","chown","uid","gid","fchmod","fchown","fstat","fsync","ftruncate","lchown","lstat","mkdir","perm","flags","readdir","readlink","rename","to","rmdir","stat","symlink","truncate","unlink","utimes","atime","mtime","getuid","getgid","geteuid","getegid","getgroups","pid","ppid","umask","cwd","chdir","crypto","performance","TextDecoder","Go","argv","exit","_exitPromise","_resolveExitPromise","_pendingEvent","_scheduledTimeouts","Map","_nextCallbackTimeoutID","setInt64","addr","v","mem","setUint32","getInt64","getUint32","getInt32","loadValue","f","getFloat64","_values","storeValue","nanHead","setFloat64","_ids","_idPool","_goRefCounts","typeFlag","loadSlice","array","_inst","exports","loadSliceOfValues","loadString","saddr","DataView","timeOrigin","importObject","_gotest","add","gojs","sp","exited","msec","getTime","setInt32","_resume","getRandomValues","Reflect","getsp","deleteProperty","setUint8","construct","parseInt","dst","src","Uint8ClampedArray","toCopy","subarray","run","WebAssembly","Instance","NaN","fill","Infinity","strPtr","ptr","argc","argvPtrs","arg","resume","_makeFuncWrapper","go","configDKLSBase","keygenRequest","protocolId","sendTransactionRequest","transaction","signMessageRequest","serverUrl","signMessageFn","dklsSignMessage","parsedShare","signature","executeMessage","functionType","secretKey","useTwoSigners","CGGMP","signerConfigUser","configCGGMPBase","createAccountFn","dklsCreateAccount","createAccountV2","newSigner","walletUtils","tx","signTransactionFn","dklsSendTransaction","sendTransactionFn","refreshFn","dklsRefresh","refresh","_partnerId","capsuleShare","ed25519CreateAccount","base64Bytes","base64Sig","handleMessage","goWasm","wasmArrayBuffer","DISABLE_WASM_FETCH","fetchedWasm","newRes","instantiate","loadWasm","setupWorker","resFunction","onmessage","terminate","worker","workerScriptURL","Worker","waitUntilTrue","condition","timeoutMs","intervalMs","isKeygenComplete","isPreKeygenComplete","WebUtils","isDKLS","signMessageRes","sendTransactionRes","signHash","_address","_hash","popupUrl","CoreCapsule","NON_ED25519","lengths","checkFinished","destroyed","finished","out","outputLen","createView","byteOffset","rotr","word","rotl","Uint32Array","toBytes","utf8ToBytes","abytes","Hash","clone","_cloneInto","wrapConstructor","hashCons","hashC","msg","digest","tmp","blockLen","Maj","HashMD","padOffset","isLE","super","view","take","dataView","roundClean","digestInto","setBigUint64","_32n","BigInt","_u32_max","wh","wl","oview","outLen","destroy","SHA256_K","SHA256_IV","SHA256_W","SHA256","A","B","C","D","E","F","G","H","W15","W2","s0","s1","T1","T2","Chi","sha256","Rho","Id","idxL","idxR","j","k","shifts","shiftsL","idx","shiftsR","Kl","Kr","group","x","y","z","R_BUF","RIPEMD160","h0","h1","h2","h3","h4","al","ar","bl","br","cl","cr","dl","dr","er","rGroup","hbl","hbr","rl","rr","sl","sr","tl","tr","ripemd160","secp256k1","ec","hexToSignature","hexSig","r","hexToUint8Array","hex","getCosmosAddress","compressedPublicKey","keyFromPublic","getPublic","compressPubkey","toBech32","pubkeyData","rawSecp256k1PubkeyToRawAddress","CapsuleCosmosSigner","capsule","findWalletId","currentWallet","uncompressedPublicKey","Secp256k1","getAccounts","algo","CapsuleProtoSigner","signDirect","signDoc","signBytes","makeSignBytes","hashedMessage","extendedSignature","ExtendedSecp256k1Signature","signatureBytes","signed","encodeSecp256k1Signature","CapsuleAminoSigner","signAmino","signerAddress","Sha256","serializeSignDoc","chainIdtoAddressPrefix","darchub","nyx","celestia","gitopia","connectCapsule","successFromCapsuleModal","failureFromCapsuleModal","openCapsuleModal","requestAminoSignature","successFromTransactionSigningModal","walletSigner","modifiedSignature","failureFromTransactionSigningModal","openTransactionSigningModal","isAmino","requestSignature","getKey","accountData","cosmjsOfflineSigner","accounts","account","LeapCapsuleInfo","prettyName","logo","mobileDisabled","rejectMessage","downloads","device","browser","connectEventNamesOnWindow","CapsuleProvider","capsuleEnv","Capsule","getClient","enable","handleConnect","disconnect","capsuleLogout","getSimpleAccount","getAccount","namespace","connect","getOfflineSigner","preferredSignType","getOfflineSignerAmino","getOfflineSignerDirect","signOptions","signArbitrary","isADR36WithString","getDataForADR36","getADR36SignDoc","isSignArbitrary","chain_id","account_number","sequence","fee","gas","amount","msgs","memo","charCode","listOfNumbers","fromCharCode","base64js","__importStar","require","fromByteArray","base64String","toByteArray","bech32","limit","toWords","fromBech32","decodedAddress","fromWords","words","byte","hexstring","hexByteAsString","ascii_1","base64_1","bech32_1","hex_1","rfc3339_1","utf8_1","rfc3339Matcher","padded","integer","padStart","year","month","day","hour","minute","second","milliSeconds","tzOffsetSign","tzOffsetHours","tzOffsetMinutes","tzOffset","date","setUTCFullYear","setUTCHours","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","fatal","ALPHABET_MAP","polymodStep","pre","prefixChk","chk","__decode","LIMIT","lowered","uppered","wordChars","convert","inBits","outBits","pad","maxV","module","decodeUnsafe","toWordsUnsafe","fromWordsUnsafe","crypto_1","IncCounter","ctr","ConcatKDF","px","kdLen","reps","counter","createHash","AES128Encrypt","encryptionKey","plaintext","createCipheriv","firstChunk","secondChunk","final","AES128EncryptAndHMAC","macKey","dataToMac","mac","createHmac","AES128Decrypt","ciphertext","createDecipheriv","AES128DecryptAndHMAC","computedMac","equals","Encrypt","pubKeyTo","EC","ephemPrivKey","keyFromPrivate","ephemPubKey","ephemPubKeyEncoded","derive","toArrayLike","Decrypt","privKey","encrypted","symmetricEncrypted","toBuffer","o","_defineProperties","_toPropertyKey","_createClass","Constructor","protoProps","staticProps","hint","prim","toPrimitive","_toPrimitive","isDeepEqual","isDeepStrictEqual","_require$codes","codes","ERR_AMBIGUOUS_ARGUMENT","ERR_INVALID_ARG_TYPE","ERR_INVALID_ARG_VALUE","ERR_INVALID_RETURN_VALUE","ERR_MISSING_ARGS","AssertionError","inspect","_require$types","isPromise","objectAssign","objectIs","RegExpPrototypeTest","lazyLoadComparison","comparison","warned","assert","ok","NO_EXCEPTION_SENTINEL","innerFail","innerOk","argLen","generatedMessage","actual","expected","operator","stackStartFn","fail","internalMessage","argsLen","emitWarning","errArgs","equal","notEqual","deepEqual","notDeepEqual","deepStrictEqual","notDeepStrictEqual","strictEqual","notStrictEqual","Comparison","expectedException","compareExceptionKey","isPrototypeOf","getActual","checkIsPromise","waitForActual","promiseFn","resultPromise","expectsError","details","fnType","expectsNoError","internalMatch","regexp","fnName","strict","_len6","_key6","throws","rejects","_len3","_key3","doesNotThrow","_len4","_key4","doesNotReject","_len5","_key5","ifError","newErr","origStack","tmp2","tmp1","doesNotMatch","ownKeys","getOwnPropertyDescriptor","_defineProperty","_possibleConstructorReturn","ReferenceError","_wrapNativeSuper","Class","_cache","Function","Wrapper","_construct","_getPrototypeOf","_setPrototypeOf","Parent","_isNativeReflectConstruct","sham","Proxy","valueOf","__proto__","this_len","blue","green","red","white","kReadableOperator","strictEqualObject","notStrictEqualObject","notIdentical","copyError","inspectValue","compact","customInspect","depth","maxArrayLength","showHidden","breakLength","showProxy","sorted","getters","createErrDiff","other","lastPos","skipped","actualInspected","actualLines","expectedLines","indicator","inputLength","stderr","isTTY","columns","count","maxCount","repeat","maxLines","max","_actualLines","printedLines","skippedMsg","cur","expectedLine","actualLine","divergingLines","_Error","_inspect$custom","subClass","superClass","_inherits","Derived","hasNativeReflectConstruct","Super","NewTarget","_createSuper","stackTraceLimit","getColorDepth","_res","knownOperators","recurseTimes","custom","util","createErrorType","Base","NodeError","_Base","getMessage","oneOf","determiner","substr","inspected","RangeError","_arrayWithHoles","u","_iterableToArrayLimit","minLen","_arrayLikeToArray","_unsupportedIterableToArray","_nonIterableRest","arr2","regexFlagsSupported","arrayFromSet","arrayFromMap","is","objectGetOwnPropertySymbols","numberIsNaN","uncurryThis","objectToString","isAnyArrayBuffer","isMap","isSet","isNativeError","isBoxedPrimitive","isNumberObject","isStringObject","isBooleanObject","isBigIntObject","isSymbolObject","isFloat32Array","isFloat64Array","isNonIndex","pow","getOwnNonIndexProperties","innerDeepEqual","val1","val2","memos","buf1","buf2","val1Tag","keys1","keys2","keyCheck","areSimilarTypedArrays","areSimilarFloatArrays","_keys","_keys2","isEqualBoxedPrimitive","getEnumerables","iterationType","aKeys","bKeys","symbolKeysA","symbolKeysB","_symbolKeysB","val2MemoA","val2MemoB","areEq","aValues","Set","setMightHaveLoosePrim","bValues","_i","_val","setHasEqualElement","setEquiv","aEntries","_aEntries$i","item1","item2","mapMightHaveLoosePrim","bEntries","_i2","_bEntries$_i","item","mapHasEqualEntry","mapEquiv","keysA","objEquiv","setValues","findLooseMatchingPrimitives","altValue","curB","key1","key2","pad_string_1","encoding","fromBase64","toBase64","base64url","base64","stringLength","diff","padLength","paddedStringLength","alloc","GetIntrinsic","callBind","$indexOf","allowMissing","intrinsic","setFunctionLength","$TypeError","$apply","$call","$reflectApply","$defineProperty","$max","originalFunction","applyBind","assert_1","__importDefault","externals_1","secp256k1_1","internal_1","constants_1","bytes_1","hash_1","helpers_1","types_1","Account","nonce","balance","stateRoot","codeHash","BN","KECCAK256_RLP","KECCAK256_NULL","_validate","fromAccountData","fromRlpSerializedAccount","serialized","rlp","fromValuesArray","__read","lt","raw","bnToUnpaddedBuffer","isContract","isEmpty","isZero","hexAddress","assertIsString","eip1191ChainId","assertIsHexString","stripHexPrefix","toType","TypeOutput","keccakFromString","isValidAddress","toChecksumAddress","assertIsBuffer","nonceBN","rlphash","salt","initCode","keccak256","privateKeyVerify","sanitize","publicKeyVerify","pubKey","publicKeyConvert","keccak","pubToAddress","publicKeyCreate","publicToAddress","privateToPublic","zeros","bufferToHex","zeroAddress","account_1","Address","zero","fromString","fromPublicKey","fromPrivateKey","privateToAddress","generate","isBN","generateAddress","generate2","generateAddress2","isPrecompileOrSystemAddress","addressBN","rangeMin","rangeMax","gte","lte","isSafeInteger","intToHex","padToEven","allocUnsafe","setLength","right","copy","stripZeros","assertIsArray","isHexString","intToBuffer","isNeg","toNumber","num","fromTwos","toTwos","isHexPrefixed","ba","baToJSON","__values","arrToBufArr","bufArrToArr","buffer_1","KECCAK256_NULL_S","KECCAK256_RLP_ARRAY_S","KECCAK256_RLP_S","bn_js_1","keccak_1","keccak224","keccak384","keccak512","_sha256","_ripemd160","setLengthLeft","__exportStar","getBinarySize","arrayContainsArray","toAscii","fromUtf8","fromAscii","getKeys","superset","subset","stringValue","allowEmpty","fields","_fields","label","obj_1","field","getter","setter","allowZero","allowLess","unpadBuffer","alias","keys_1","calculateSigRecovery","vBN","eqn","subn","chainIdBN","sub","muln","addn","isValidSigRecovery","recovery","rec","msgHash","ecdsaSign","recid","senderPubKey","ecdsaRecover","vn","ss","sig","bufferToInt","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","gt","cmp","outputType","bn","MAX_SAFE_INTEGER","hashConstructor","hash_utils_1","createKeccakHash","createHashFunction","randombytes","resp","random_1","getRandomBytes","pk","sent","getRandomBytesSync","__export","isCallable","toStr","list","receiver","forEachArray","forEachString","forEachObject","hasSymbols","hasToStringTag","$toString","callBound","isStandardArguments","isLegacyArguments","callee","supportsStandardArguments","badArrayLike","isCallableMarker","fnToStr","reflectApply","constructorRegex","isES6ClassFn","fnStr","tryFunctionObject","isIE68","isDDA","strClass","GeneratorFunction","isFnRegex","getProto","generatorFunc","getGeneratorFunc","implementation","getPolyfill","shim","polyfill","whichTypedArray","createKeccak","createShake","KeccakState","Keccak","Shake","algorithm","Transform","capacity","delimitedSuffix","hashBitLength","_rate","_capacity","_delimitedSuffix","_hashBitLength","_options","_state","initialize","_finalized","_transform","_flush","absorb","absorbLastFewBits","squeeze","_resetState","_clone","_read","dataByteLength","P1600_ROUND_CONSTANTS","p1600","lo0","hi0","lo1","hi1","lo2","hi2","lo3","hi3","lo4","hi4","lo","hi","t1slo0","t1shi0","t1slo5","t1shi5","t1slo10","t1shi10","t1slo15","t1shi15","t1slo20","t1shi20","t1slo1","t1shi1","t1slo6","t1shi6","t1slo11","t1shi11","t1slo16","t1shi16","t1slo21","t1shi21","t1slo2","t1shi2","t1slo7","t1shi7","t1slo12","t1shi12","t1slo17","t1shi17","t1slo22","t1shi22","t1slo3","t1shi3","t1slo8","t1shi8","t1slo13","t1shi13","t1slo18","t1shi18","t1slo23","t1shi23","t1slo4","t1shi4","t1slo9","t1shi9","t1slo14","t1shi14","t1slo19","t1shi19","t1slo24","t1shi24","t2slo0","t2shi0","t2slo16","t2shi16","t2slo7","t2shi7","t2slo23","t2shi23","t2slo14","t2shi14","t2slo10","t2shi10","t2slo1","t2shi1","t2slo17","t2shi17","t2slo8","t2shi8","t2slo24","t2shi24","t2slo20","t2shi20","t2slo11","t2shi11","t2slo2","t2shi2","t2slo18","t2shi18","t2slo9","t2shi9","t2slo5","t2shi5","t2slo21","t2shi21","t2slo12","t2shi12","t2slo3","t2shi3","t2slo19","t2shi19","t2slo15","t2shi15","t2slo6","t2shi6","t2slo22","t2shi22","t2slo13","t2shi13","t2slo4","t2shi4","keccakState","blockSize","squeezing","dest","objectKeys","Duplex","Readable","Writable","allowHalfOpen","readable","once","onend","_writableState","ended","onEndNT","getBuffer","_readableState","PassThrough","ReadableState","EElistenerCount","emitter","listeners","Stream","OurUint8Array","debug","debugUtil","debuglog","StringDecoder","createReadableStreamAsyncIterator","BufferList","destroyImpl","getHighWaterMark","ERR_STREAM_PUSH_AFTER_EOF","ERR_METHOD_NOT_IMPLEMENTED","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","errorOrDestroy","kProxyEvents","isDuplex","objectMode","readableObjectMode","pipes","pipesCount","flowing","endEmitted","reading","sync","needReadable","emittedReadable","readableListening","resumeScheduled","paused","emitClose","autoDestroy","defaultEncoding","awaitDrain","readingMore","_destroy","readableAddChunk","addToFront","skipChunkCheck","emitReadable","emitReadable_","onEofChunk","chunkInvalid","_uint8ArrayToBuffer","addChunk","maybeReadMore","emit","_undestroy","undestroy","isPaused","setEncoding","enc","MAX_HWM","howMuchToRead","computeNewHighWaterMark","flow","maybeReadMore_","updateReadableListening","listenerCount","nReadingNextTick","resume_","fromList","consume","endReadable","endReadableNT","wState","xs","nOrig","doRead","pipeOpts","endFn","stdout","unpipe","onunpipe","unpipeInfo","hasUnpiped","removeListener","onclose","onfinish","ondrain","ondata","cleanedUp","needDrain","on","pipeOnDrain","pause","prependListener","_events","dests","ev","addListener","removeAllListeners","wrap","_fromList","ERR_MULTIPLE_CALLBACK","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","ts","_transformState","transforming","writecb","writechunk","rs","needTransform","writeencoding","transform","prefinish","_write","err2","CorkedRequest","entry","corkReq","pendingcb","corkedRequestsFree","onCorkedFinish","WritableState","internalUtil","deprecate","realHasInstance","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","writableObjectMode","finalCalled","ending","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","onwriteStateUpdate","finishMaybe","errorEmitted","onwriteError","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","prefinished","bufferedRequestCount","writev","_writev","_final","doWrite","onwriteDrain","holder","allBuffers","isBuf","callFinal","need","rState","current","hasInstance","writeAfterEnd","validChunk","newChunk","decodeChunk","last","writeOrBuffer","cork","uncork","setDefaultEncoding","endWritable","_Object$setPrototypeO","kLastResolve","kLastReject","kError","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","iter","onReadable","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","lastPromise","wrapForNext","_this2","_Object$create","enumerableOnly","symbols","sym","hasStrings","_getString","_getBuffer","emitErrorAndCloseNT","emitErrorNT","emitCloseNT","readableDestroyed","writableDestroyed","ERR_STREAM_PREMATURE_CLOSE","eos","called","onlegacyfinish","writableEnded","readableEnded","onrequest","req","streams","popCallback","destroys","closed","destroyer","ERR_INVALID_OPT_VALUE","duplexKey","hwm","highWaterMarkFrom","pipeline","registerAlgorithm","aes","Algorithm","startEncrypting","_createCipher","createEncryptionCipher","startDecrypting","createDecryptionCipher","inBlock","outBlock","_updateBlock","_w","_init","putByte","encryptOp","_expandKey","modes","ecb","cbc","cfb","ofb","gcm","sbox","isbox","rcon","mix","imix","Nb","xtime","e2","e4","e8","sx","sx2","me","ime","ei","temp","iNk","Nk","m0","m1","m2","m3","wnew","wi","a2","b2","c2","Nr","ByteBuffer","tls","initConnectionState","entity","ConnectionEnd","cipherState","server_write_key","client_write_key","server_write_IV","client_write_IV","cipherFunction","decrypt_aes_cbc_sha1","encrypt_aes_cbc_sha1","macLength","mac_length","macFunction","hmac_sha1","record","rval","sequenceNumber","fragment","putBytes","updateSequenceNumber","minor","Versions","TLS_1_0","TLS_1_1","encrypt_aes_cbc_sha1_padding","padding","fillWithByte","decrypt_aes_cbc_sha1_padding","paddingLength","at","getBytes","macLen","mac2","mac1","hmac","compareMacs","CipherSuites","initSecurityParameters","bulk_cipher_algorithm","BulkCipherAlgorithm","cipher_type","CipherType","block","enc_key_length","block_length","fixed_iv_length","record_iv_length","mac_algorithm","MACAlgorithm","mac_key_length","asn1","privateKeyValidator","tagClass","UNIVERSAL","SEQUENCE","constructed","INTEGER","capture","OID","OCTETSTRING","publicKeyValidator","captureAsn1","BITSTRING","composed","captureBitStringValue","_checkBufferLength","remaining","available","requested","APPLICATION","CONTEXT_SPECIFIC","PRIVATE","NONE","BOOLEAN","NULL","ODESC","EXTERNAL","REAL","ENUMERATED","EMBEDDED","UTF8","ROID","SET","PRINTABLESTRING","IA5STRING","UTCTIME","GENERALIZEDTIME","BMPSTRING","bitStringContents","original","excludeBitStringContents","obj1","obj2","includeBitStringContents","getBerValueLength","getByte","getInt","_fromDer","b1","longFormBytes","_getValueLength","decodeBitStrings","savedRead","savedRemaining","unused","used","tc","ex","getInt16","asn1Options","fromDer","parseAllBytes","byteCount","toDer","useBitStringContents","putBuffer","putInt16","lenBytes","oidToDer","oid","valueBytes","derToOid","utcTimeToDate","utc","MM","DD","hh","mm","setTime","generalizedTimeToDate","gentime","YYYY","fff","isUTC","parseFloat","setFullYear","setHours","dateToUtcTime","dateToGeneralizedTime","integerToDer","putSignedInt","derToInteger","getSignedInt","validate","errors","optional","captureBitStringContents","_nonLatinRegex","prettyPrint","level","indentation","indent","IA5String","subvalues","oids","bytesToHex","decodeUtf8","api","_reverseAlphabets","maxline","digits","carry","_encodeWithByteBuffer","regex","table","reverse","algorithms","getAlgorithm","BlockCipher","_finish","_input","_op","_decrypt","unpad","overflow","afterFinish","transformIV","ints","blocks","inc32","from64To32","_ints","_inBlock","_outBlock","putInt32","_prev","_iv","_partialBlock","_partialOutput","_partialBytes","partialBytes","_R","additionalData","_cipherLength","_tagLength","tagLength","_tag","tag","_hashBlock","_hashSubkey","componentBits","_m","generateHashTable","ivLength","_j0","ghash","_aDataLength","_s","multiply","z_i","v_i","lsb","tableMultiply","x_i","ah","multiplier","perInt","shft","generateSubHashTable","mid","half","m_i","m_j","des","pc2bytes0","pc2bytes1","pc2bytes2","pc2bytes3","pc2bytes4","pc2bytes5","pc2bytes6","pc2bytes7","pc2bytes8","pc2bytes9","pc2bytes10","pc2bytes11","pc2bytes12","pc2bytes13","iterations","left","lefttmp","righttmp","_createKeys","spfunction1","spfunction2","spfunction3","spfunction4","spfunction5","spfunction6","spfunction7","spfunction8","looping","endloop","loopinc","right1","right2","asn1Validator","NativeBuffer","ed25519","messageToNativeBuffer","md","PUBLIC_KEY_BYTE_LENGTH","PRIVATE_KEY_BYTE_LENGTH","SEED_BYTE_LENGTH","SIGN_BYTE_LENGTH","HASH_BYTE_LENGTH","seed","sk","gf","sha512","scalarbase","pack","crypto_sign_keypair","privateKeyFromAsn1","privateKeyOid","ed25519Oid","EdDSA25519","privateKeyBytes","publicKeyFromAsn1","publicKeyOid","publicKeyBytes","ed25519PublicKey","publicKeyFromPrivateKey","sign","signedMsg","sm","Float64Array","smlen","modL","crypto_sign","verify","den","den2","den4","den6","set25519","gf1","unpack25519","S","M","Z","pow2523","neq25519","I","par25519","gf0","unpackneg","scalarmult","crypto_verify_32","crypto_sign_open","D2","X","Y","L","msgLen","g","cswap","sel25519","ty","zi","inv25519","pack25519","car25519","xi","yi","t0","t1","t2","t3","t4","t5","t6","t7","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","usePureJavaScript","_md","_ipadding","_opadding","keylen","blockLength","inner","getMac","dbits","fromNumber","nbi","am3","xl","xh","am","appName","DB","DM","DV","FV","F1","F2","vv","BI_RC","int2char","intAt","nbv","fromInt","nbits","Classic","Montgomery","mp","invDigit","mpl","mph","um","mt2","op_and","op_or","op_xor","op_andnot","lbit","cbit","NullExp","nNop","Barrett","r2","q3","ONE","dlShiftTo","mu","divide","compareTo","mod","revert","divRemTo","mulTo","multiplyTo","sqrTo","squareTo","abs","ZERO","subTo","copyTo","u0","clamp","drShiftTo","fromRadix","mi","sh","lShiftTo","bs","cbs","bm","ds","rShiftTo","pm","pt","ms","nsh","ys","y0","yt","d1","d2","qd","isEven","exp","negate","toRadix","km","bitLength","modPowInt","multiplyUpperTo","multiplyLowerTo","dAddOffset","lowprimes","lplim","LN2","signum","cs","intValue","dMultiply","testBit","bitwiseTo","shiftLeft","isProbablePrime","nextBytes","op","changeBit","addTo","modInt","millerRabin","n1","subtract","getLowestSetBit","shiftRight","modPow","byteValue","shortValue","and","or","xor","andNot","not","bitCount","setBit","clearBit","flipBit","remainder","divideAndRemainder","k1","g2","is1","modInverse","ac","gcd","kem","_createKDF","kdf","counterStart","digestLength","ceil","keyLength","fillString","encapsulation","kdf1","kdf2","levels","sLevelInfo","sLoggers","sConsoleLogger","LEVEL_LOCKED","NO_LEVEL_CHECK","INTERPOLATE","logMessage","messageLevelIndex","logger","prepareStandard","standard","category","prepareFull","full","prepareStandardFull","standardFull","makeLogger","logFunction","setLevel","lock","addLogger","info","levelHandlers","warning","verbose","handler","searchParams","consoleLogger","md5","_initialized","_padding","_g","_r","_k","sin","messageLength","fullMessageLength","messageLengthSize","messageLength64","int32s","encodeUtf8","_update","finalBlock","putInt32Le","s2","getInt32Le","mgf","mgf1","maskLen","_IN","_I_","pbe","encryptedPrivateKeyValidator","PBES2AlgorithmsValidator","pkcs12PbeParamsValidator","prfOidToMessageDigest","prfOid","prfAlgorithm","supported","prfAlgorithmToMessageDigest","factory","encryptPrivateKeyInfo","saltSize","dkLen","encryptionAlgorithm","encryptedData","countBytes","ivLen","encOid","cipherFn","dk","pkcs5","pbkdf2","createPbkdf2Params","saltBytes","generatePkcs12Key","decryptPrivateKeyInfo","encryptionOid","getCipher","encryptionParams","encryptedPrivateKeyToPem","epki","encryptedPrivateKeyFromPem","headerType","procType","encryptRsaPrivateKey","rsaKey","legacy","wrapRsaPrivateKey","privateKeyToAsn1","opensslDeriveBytes","dekInfo","parameters","decryptRsaPrivateKey","rc2","sha1","passBuf","Slen","Plen","Inew","setAt","getCipherForPBES2","getCipherForPKCS12PBE","supportedOids","kdfOid","kdfSalt","kdfIterationCount","encIv","dIvLen","digests","isNodejs","pbkdf2Sync","hLen","prf","u_c","u_c1","int32ToBytes","xorBytes","outer","foldHeader","insertSpace","$1","candidate","insert","ltrim","contentDomain","encode64","rMessage","rHeader","rCRLF","decode64","lines","li","vi","pkcs1","rsa_mgf1","maskLength","encode_rsa_oaep","mgf1Md","lHash","PS","PS_length","seedLength","dbMask","maskedDB","seedMask","decode_rsa_oaep","em","expectedLength","maskedSeed","db","lHashPrime","in_ps","p12","pkcs12","contentInfoValidator","pfxValidator","safeBagValidator","attributeValidator","certBagValidator","_getBagsByAttribute","safeContents","attrName","attrValue","bagType","safeBags","bag","attributes","_decodePkcs7Data","_decryptSafeContents","pkcs7","encryptedDataValidator","encAlgorithm","encParameter","encryptedContentAsn1","_decodeSafeContents","safeBag","bagId","_decodeBagAttributes","bagAttributes","bagAsn1","bagValue","pkcs8ShroudedKeyBag","keyBag","certBag","certId","x509Certificate","certAsn1","cert","certificateFromAsn1","decodedAttrs","pkcs12FromAsn1","pfx","getBags","localKeyId","localKeyIdHex","friendlyName","getBagsByFriendlyName","getBagsByLocalKeyId","macKeyBytes","macAlgorithm","sha384","macSalt","macIterations","generateKey","macDigest","authSafe","contentInfo","_decodeAuthenticatedSafe","toPkcs12Asn1","useMac","generateLocalKeyId","bagAttrs","pairedCert","certificateFromPem","certificateToAsn1","attrs","contents","certSafeBags","certBagAttrs","certSafeBag","certSafeContents","certCI","pkAsn1","keySafeContents","keyCI","macData","safe","macValue","p7","_recipientFromAsn1","recipientInfoValidator","issuer","RDNAttributesAsArray","serialNumber","serial","encryptedContent","parameter","encKey","_recipientsToAsn1","recipients","distinguishedNameToAsn1","_signerToAsn1","digestAlgorithm","authenticatedAttributesAsn1","signatureAlgorithm","unauthenticatedAttributes","attrsAsn1","attr","_attributeToAsn1","messageDigest","signingTime","jan_1_1950","jan_1_2050","_fromAsn1","rawCapture","_decryptContent","ciph","messageFromPem","messageFromAsn1","messageToPem","pemObj","toAsn1","envelopedData","createEnvelopedData","createEncryptedData","signedData","createSignedData","fromAsn1","certificates","crls","signers","digestAlgorithmIdentifiers","signerInfos","signedDataValidator","certs","addSigner","certificate","privateKeyFromPem","authenticatedAttributes","rsaEncryption","detached","detachedContent","mds","ai","_signersToAsn1","addSignerInfos","addDigestAlgorithmIds","addCertificate","addCertificateRevokationList","crl","envelopedDataValidator","infos","_recipientsFromAsn1","recipientInfos","findRecipient","sAttr","rAttr","recipient","desCBC","addRecipient","keyLen","ciphFn","p7v","pkcs7asn1","encryptedContentInfoValidator","signerValidator","pemToDer","privateKeyToPem","privateKeyInfoToPem","prime","GCD_30_DELTA","THIRTY","generateProbablePrime","rng","primeincFindPrimeWithoutWorkers","generateRandom","numWorkers","range","estimateCores","cores","workerMessage","found","primeincFindPrimeWithWorkers","primeincFindPrime","mrTests","getMillerRabinTests","millerRabinTests","maxBlockTime","_primeinc","deltaIdx","bits1","_crypto","versions","plugin","time","reseeds","generated","keyBytes","pools","_reseedSync","_seed","needed","collect","_2powK","seedBytes","formatKey","formatSeed","defaultSeedFile","globalScope","msCrypto","entropy","QuotaExceededError","pool","generateSync","increment","_reseed","collectInt","registerWorker","pss","saltLength","sLen","salt_","pssobj","modBits","emBits","emLen","mHash","m_","ps","mask","checkLen","jQuery","prng_aes","_prng_aes_output","_prng_aes_buffer","spawnPrng","_ctx","_navBytes","mousemove","clientX","clientY","keypress","piTable","rol","ror","expandKey","effKeyBits","T","T8","TM","mixRound","mashRound","_output","K","getInt16Le","R","runPlan","plan","putInt16Le","rsaPrivateKeyValidator","rsaPublicKeyValidator","digestInfoValidator","emsaPkcs1v15encode","oidBytes","digestInfo","_modPow","pub","xp","xq","_encodePkcs1_v1_5","bt","eb","padByte","padNum","numZeros","padBytes","_decodePkcs1_v1_5","ml","_bnToBytes","_getMillerRabinTests","_detectNodeCrypto","_detectSubtleCrypto","subtle","_detectSubtleMsCrypto","_intToUint8Array","yhex","ed","xhex","createKeyPairGenerationState","eInt","qBits","pBits","pqState","stepKeyPairGenerationState","q1","phi","setPrivateKey","setPublicKey","modulusLength","publicExponent","publicKeyEncoding","privateKeyEncoding","priv","exportKey","pkcs8","genOp","oncomplete","exportOp","generateKeyPairSync","getPrime","_generateKeyPair","schemeOptions","_parseAllDigestBytes","algorithmIdentifier","md2","sha224","privateKeyModulus","privateKeyPublicExponent","privateKeyPrivateExponent","privateKeyPrime1","privateKeyPrime2","privateKeyExponent1","privateKeyExponent2","privateKeyCoefficient","privateKeyToRSAPrivateKey","rsaPublicKey","publicKeyModulus","publicKeyExponent","publicKeyToAsn1","publicKeyToSubjectPublicKeyInfo","publicKeyToRSAPublicKey","h5","h6","h7","maj","_states","_h","messageLength128","hlen","t1_hi","t1_lo","t2_hi","t2_lo","s0_hi","s0_lo","s1_hi","ch_hi","maj_hi","maj_lo","a_hi","a_lo","b_hi","b_lo","c_hi","c_lo","d_hi","d_lo","e_hi","e_lo","f_hi","f_lo","g_hi","g_lo","h_hi","h_lo","w2","w7","w15","w16","ssh","_addBigIntegerToBuffer","hexVal","_addStringToBuffer","putString","_sha1","sha","privateKeyToPutty","passphrase","comment","ppk","pubbuffer","privbuffer","encLen","aeskey","mackey","macbuffer","publicKeyToOpenSSH","privateKeyToOpenSSH","getPublicKeyFingerprint","prf_TLS1","slen","md5itr","sha1itr","md5bytes","sha1bytes","deflate","inflate","readVector","getInt24","writeVector","putInt","major","TLS_1_2","SupportedVersions","Version","MaxFragment","server","PRFAlgorithm","tls_prf_sha256","none","rc4","des3","aead","hmac_md5","hmac_sha256","hmac_sha384","hmac_sha512","CompressionMethod","ContentType","change_cipher_spec","alert","handshake","application_data","heartbeat","HandshakeType","hello_request","client_hello","server_hello","server_key_exchange","certificate_request","server_hello_done","certificate_verify","client_key_exchange","Alert","Level","Description","close_notify","unexpected_message","bad_record_mac","decryption_failed","record_overflow","decompression_failure","handshake_failure","bad_certificate","unsupported_certificate","certificate_revoked","certificate_expired","certificate_unknown","illegal_parameter","unknown_ca","access_denied","decode_error","decrypt_error","export_restriction","protocol_version","insufficient_security","internal_error","user_canceled","no_renegotiation","HeartbeatMessageType","heartbeat_request","heartbeat_response","getCipherSuite","twoBytes","handleUnexpected","handleHelloRequest","handshaking","handshakes","queue","createAlert","parseHelloMessage","session_id","extensions","cipher_suite","compression_method","cipher_suites","compression_methods","exts","snl","session","server_name","serverNameList","cipherSuite","compressionMethod","createSecurityParameters","msgRandom","cRandom","client_random","sRandom","createRandom","prf_algorithm","compression_algorithm","pre_master_secret","master_secret","server_random","handleServerHello","expect","SCC","resuming","SCE","handleClientHello","sessionCache","getSession","clientHelloVersion","CCC","verifyClient","CCE","CKE","createRecord","createServerHello","createChangeCipherSpec","pending","createConnectionState","createFinished","createCertificate","createServerKeyExchange","createCertificateRequest","createServerHelloDone","handleCertificate","certificate_list","SKE","serverCertificate","clientCertificate","verifyCertificateChain","handleServerKeyExchange","SCR","handleClientKeyExchange","enc_pre_master_secret","CCV","handleCertificateRequest","certificate_types","certificate_authorities","certificateRequest","SHD","handleCertificateVerify","msgBytes","handleServerHelloDone","createClientKeyExchange","SER","createCertificateVerify","getClientSignature","handleChangeCipherSpec","SFI","CFI","handleFinished","vd","SAD","CAD","peerCertificate","isConnected","connected","handleAlert","handleHandshake","fragmented","hsTable","handleApplicationData","dataReady","handleHeartbeat","createHeartbeat","expectedHeartbeatPayload","heartbeatReceived","__","R0","R1","R2","R3","R4","ctTable","H0","H1","H2","H3","H4","H5","H6","H7","H8","H9","generateKeys","tls10","client_write_MAC_key","server_write_MAC_key","createMode","compressionState","compressFunction","getTimezoneOffset","createClientHello","cipherSuites","cSuites","compressionMethods","cMethods","virtualHost","serverName","snList","extLength","putInt24","getCertificate","certList","der","certBuffer","getSignature","certTypes","cAs","caStore","dn","subject","byteBuffer","payloadLength","plaintextLength","records","tlsData","tlsDataReady","_certErrorToAlertDesc","certificateError","verifyOptions","vfd","_alertDescToCertError","createSessionCache","setSession","order","createConnection","createCaStore","cn","dpth","cts","clearFail","reset","ready","compatibleVersion","_readRecordHeader","_readRecord","aligned","prepare","prepareHeartbeatRequest","prf_tls1","seqNum","baseN","_checkBitsParam","ByteStringBuffer","_constructedStringLength","stopPropagation","MutationObserver","div","observe","oldSetImmediate","node","_optimizeConstructedString","putInt24Le","getInt24Le","DataBuffer","readOffset","growSize","writeOffset","accommodate","binary","Uint16Array","utf16","setInt16","setInt8","getInt8","getUint8","utf8","s3","_base64","_base64Idx","_base58","chr1","chr2","chr3","enc1","enc2","enc3","enc4","escape","base58","_setStorageObject","_getStorageObject","_setItem","_getItem","_removeItem","empty","_clearItems","_callStorageFunction","exception","clearItems","part","re","argi","parts","decimals","dec_point","thousands_sep","toFixed","formatSize","bytesFromIP","ip","bytesFromIPv4","bytesFromIPv6","blanks","bytesToIP","bytesToIPv4","bytesToIPv6","zeroGroups","zeroMaxGroup","hardwareConcurrency","blobUrl","st","et","sample","samples","avg","revokeObjectURL","results","overlaps","r1","overlap","_shortNames","x509CertificateValidator","rsassaPssParameterValidator","certificationRequestInfoValidator","certificationRequestValidator","_getAttribute","shortName","rdn","si","valueTagClass","CRIAttributesAsArray","seq","extensionRequest","certificateExtensionFromAsn1","_readSignatureParameters","fillDefaults","algorithmOid","hashOid","maskGenOid","maskGenHashOid","_createSignatureDigest","signatureOid","_verifySignature","sha1WithRSAEncryption","sha1WithRSASignature","signatureParameters","_dnToAsn1","_fillMissingFields","attribute","valueConstructed","certificateExtensionToAsn1","_fillMissingExtensionFields","digitalSignature","nonRepudiation","keyEncipherment","dataEncipherment","keyAgreement","keyCertSign","cRLSign","encipherOnly","decipherOnly","cA","pathLenConstraint","objsign","reserved","sslCA","emailCA","objCA","altNames","altName","ski","generateSubjectKeyIdentifier","subjectKeyIdentifier","keyIdentifier","authorityCertIssuer","subSeq","fullNameGeneralNames","_signatureParametersToAsn1","_CRIAttributesToAsn1","csr","computeHash","certificateToPem","publicKeyToPem","certificationRequestFromPem","certificationRequestFromAsn1","certificationRequestToPem","certificationRequestToAsn1","siginfo","validity","notBefore","notAfter","getField","sn","addField","setSubject","uniqueId","setIssuer","setExtensions","getExtension","tbsCertificate","getTBSCertificate","child","issued","expectedIssuer","actualIssuer","isIssuer","parent","iattr","sattr","verifySubjectKeyIdentifier","certVersion","certSerialNumber","certSignatureOid","certSignatureParams","certinfoSignatureOid","certinfoSignatureParams","certSignature","certValidity1UTCTime","certValidity2GeneralizedTime","certValidity3UTCTime","certValidity4GeneralizedTime","imd","ibytes","certIssuer","certIssuerUniqueId","smd","sbytes","certSubject","certSubjectUniqueId","certExtensions","certificateExtensionsFromAsn1","subjectPublicKeyInfo","extseq","critical","gn","createCertificationRequest","csrVersion","csrSignatureOid","csrSignatureParams","csrSignature","certificationRequestInfo","certificationRequestInfoSubject","getAttribute","addAttribute","certificationRequestInfoAttributes","setAttributes","getCertificationRequestInfo","cri","_dateToAsn1","tbs","certificateExtensionsToAsn1","getBySubject","ensureSubjectHasHash","getIssuer","hasCertificate","der1","listAllCertificates","removeCertificate","validityCheckDate","selfSigned","parents","verified","se","keyUsage","basicConstraints","bcExt","keyUsageExt","hasMap","mapSizeDescriptor","mapSize","mapForEach","hasSet","setSizeDescriptor","setSize","setForEach","weakMapHas","WeakMap","weakSetHas","WeakSet","weakRefDeref","WeakRef","deref","booleanValueOf","functionToString","$match","$slice","$replace","$toUpperCase","$toLowerCase","$test","$concat","$join","$arrSlice","$floor","bigIntValueOf","gOPS","symToString","hasShammedSymbols","isEnumerable","gPO","O","addNumericSeparator","sepRegex","int","intStr","dec","utilInspect","inspectCustom","inspectSymbol","isSymbol","quotes","single","quoteREs","wrapQuotes","defaultStyle","style","quoteStyle","quoteChar","quote","inspect_","seen","maxStringLength","numericSeparator","inspectString","bigIntStr","maxDepth","baseIndent","prev","getIndent","noIndent","newOpts","nameOf","arrObjKeys","symString","markBoxed","HTMLElement","nodeName","isElement","childNodes","singleLineValues","indentedJoin","isError","mapParts","collectionOf","setParts","isWeakMap","weakCollectionOf","isWeakSet","isWeakRef","isBigInt","protoTag","stringTag","hasOwn","trailer","quoteRE","lowbyte","lineJoiner","isArr","symMap","syms","toObject","$push","$propIsEnumerable","originalGetSymbols","source1","getSymbols","nextKey","propValue","letters","lacksProperEnumerationOrder","preventExtensions","thrower","assignHasPendingExceptions","percentTwenties","formatters","RFC1738","RFC3986","allowDots","allowEmptyArrays","allowPrototypes","allowSparse","arrayLimit","charset","charsetSentinel","comma","decodeDotInKeys","duplicates","ignoreQueryPrefix","interpretNumericEntities","parameterLimit","parseArrays","plainObjects","strictDepth","strictNullHandling","$0","numberStr","parseArrayValue","parseKeys","givenKey","valuesParsed","segment","leaf","root","cleanRoot","decodedRoot","parseObject","normalizeParseOptions","tempObj","cleanStr","skipIndex","bracketEqualsPos","maybeMap","encodedVal","existing","combine","parseValues","newObj","getSideChannel","arrayPrefixGenerators","brackets","indices","pushToArray","valueOrArray","toISO","defaultFormat","addQueryPrefix","arrayFormat","encodeDotInKeys","encodeValuesOnly","formatter","serializeDate","skipNulls","sentinel","generateArrayPrefix","commaRoundTrip","sideChannel","tmpSc","findFlag","objKeys","encodedPrefix","adjustedPrefix","encodedKey","keyPrefix","valueSideChannel","normalizeStringifyOptions","joined","hexTable","refs","compacted","compactQueue","strWithoutPlus","defaultEncoder","mergeTarget","targetItem","safeParseInt","encodeLength","hexLength","firstByte","_decode","llength","innerRemainder","decoded","totalLength","inputBuf","inputBuffer","ecparams","curve","loadPublicKey","xbuf","toRed","redSqr","redIMul","redIAdd","redSqrt","isOdd","redNeg","x3","redISub","loadCompressedPublicKey","ybuf","loadUncompressedPublicKey","savePublicKey","point","contextRandomize","seckey","privateKeyNegate","umod","privateKeyTweakAdd","tweak","iadd","isub","tweaked","privateKeyTweakMul","imul","publicKeyNegate","publicKeyCombine","pubkeys","pairs","isInfinity","publicKeyTweakAdd","mul","publicKeyTweakMul","signatureNormalize","nh","signatureExport","sigR","sigS","lenR","posR","lenS","posS","outputlen","signatureImport","noncefn","_noncefn","canonical","pers","recoveryParam","ecdsaVerify","msg32","sigObj","sigr","sigs","recoverPubKey","ecdh","hashfn","scalar","getX","getY","cond","isUint8Array","isCompressed","toTypeString","getAssertedOutput","compressed","hasDescriptors","gOPD","loose","functionLengthIsConfigurable","functionLengthIsWritable","$WeakMap","$Map","$weakMapGet","$weakMapSet","$weakMapHas","$mapGet","$mapSet","$mapHas","listGetNode","curr","$wm","$m","$o","channel","objects","listGet","listHas","listSet","readUInt8","isArgumentsObject","isGeneratorFunction","BigIntSupported","SymbolSupported","ObjectToString","numberValue","booleanValue","bigIntValue","symbolValue","checkBoxedPrimitive","prototypeValueOf","isMapToString","isSetToString","isWeakMapToString","isWeakSetToString","isArrayBufferToString","working","isDataViewToString","isDataView","isUint8ClampedArray","isUint16Array","isUint32Array","isInt8Array","isInt16Array","isInt32Array","isBigInt64Array","isBigUint64Array","SharedArrayBufferCopy","SharedArrayBuffer","isSharedArrayBufferToString","isSharedArrayBuffer","isAsyncFunction","isMapIterator","isSetIterator","isGeneratorObject","isWebAssemblyCompiledModule","formatRegExp","isNull","noDeprecation","throwDeprecation","traceDeprecation","trace","debugs","debugEnvRegex","NODE_DEBUG","debugEnv","stylize","stylizeNoColor","colors","_extend","stylizeWithColor","formatValue","styleType","styles","primitive","simple","formatPrimitive","visibleKeys","arrayToHash","formatError","braces","toUTCString","formatProperty","formatArray","numLinesEst","reduceToSingleString","isNullOrUndefined","isPrimitive","months","getHours","getMinutes","getSeconds","getDate","getMonth","kCustomPromisifiedSymbol","callbackifyOnRejected","newReason","promisify","promiseResolve","promiseReject","callbackify","callbackified","maybeCb","rej","availableTypedArrays","typedArrays","typedArray","proto","superProto","trySlices","tryTypedArrays","possibleNames"],"sourceRoot":""}